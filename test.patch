diff --git a/build.sh b/build.sh
index 6a49fa0..7a8024a 100755
--- a/build.sh
+++ b/build.sh
@@ -5,7 +5,7 @@ set -e
 do_python() {
   echo "Building Python ..."
   rm -rf out/manticoresearch-python 
-  docker run --rm -v ${PWD}:/local  -u "$(id -u):$(id -g)"  -e JAVA_OPTS="-Dlog.level=warn"  "openapitools/openapi-generator-cli$version" generate -i /local/manticore.yml -g python -o /local/out/manticoresearch-python -t /local/templates/python --git-repo-id manticoresearch-python --git-user-id manticoresoftware  --additional-properties projectName=manticoresearch --additional-properties packageName=manticoresearch --additional-properties packageVersion=`cat versions/python` $build_to_branch
+  docker run --rm -v ${PWD}:/local  -u "$(id -u):$(id -g)"  -e JAVA_OPTS="-Dlog.level=warn"  "openapitools/openapi-generator-cli$version" generate -i /local/manticore_new.yml -g python -o /local/out/manticoresearch-python -t /local/templates/python --git-repo-id manticoresearch-python --git-user-id manticoresoftware  --additional-properties projectName=manticoresearch --additional-properties packageName=manticoresearch --additional-properties packageVersion=`cat versions/python` $build_to_branch
   rm -rf out/manticoresearch-python/test/* 
   cp LICENSE.txt out/manticoresearch-python/LICENSE.txt
   # replace test with our test
diff --git a/manticore.yml b/manticore.yml
index 6f827f7..dcc062b 100755
--- a/manticore.yml
+++ b/manticore.yml
@@ -46,11 +46,11 @@ components:
           properties:
             field:
               type: string
-              description: Attribute Name to Aggregate
+              description: Name of attribute to aggregate by
               example: field1
             size:
               type: integer
-              description: Maximum Number of Buckets in the Result
+              description: Maximum number of buckets in the result
               example: 1000
         sort:
           type: array
@@ -61,6 +61,29 @@ components:
               properties:
                 order:
                   type: string
+        composite:
+          type: object
+          description: Composite aggregation
+          properties:
+            size:
+              type: integer
+              description: Maximum number of composite buckets in the result
+              example: 1000
+            sources:
+              type: array
+              items:
+                type: object
+                additionalProperties:
+                  type: object
+                  properties:
+                    terms:
+                     type: object
+                     properties:
+                       field:
+                         type: string
+                         description: Name of attribute to aggregate by
+                         example: field1
+ 
     equalsFilter:
       type: object
       description: Equals attribute filter
@@ -89,6 +112,11 @@ components:
           items:
             type: object
       example: {'field1': ['a','b']}
+    rangeFilterValue:
+      nullable: true
+      oneOf:
+        - type: number
+        - type: string
     rangeFilter:
       type: object
       description: Range attribute filter
@@ -98,18 +126,33 @@ components:
       properties:
         field:
           type: string
-        lte:
-          type: number
-          nullable: true
+        ltx:
+          oneOf:
+           - type: integer
+             format: int64
+           - type: number
+           - type: string
         gte:
-          type: number
           nullable: true
+          oneOf:
+           - type: integer
+             format: int64
+           - type: number
+           - type: string
         lt:
-          type: number
           nullable: true
+          oneOf:
+           - type: integer
+             format: int64
+           - type: number
+           - type: string
         gt:
-          type: number
           nullable: true
+          oneOf:
+           - type: integer
+             format: int64
+           - type: number
+           - type: string
       example: {'field1': {'gte': 10, 'lte': 20} }
     geoDistanceFilter:
       type: object
@@ -649,7 +692,7 @@ components:
             title_len: "crc32(title)"
         highlight:
           $ref: '#/components/schemas/highlight'
-        source:
+        _source:
           x-is_req_source: true
           type: object
           example: {}
@@ -761,6 +804,22 @@ components:
         doc:
           title: This is some title
           gid: 100
+    replaceDocumentRequest:
+      type: object
+      description: |
+        Object with document data.
+      required:
+        - doc
+      properties:
+        doc:
+          type: object
+          additionalProperties: true
+          description: |
+            Object with document data
+      example:
+        doc:
+          title: This is some title
+          gid: 100
     percolateRequest:
       type: object
       description: Object with documents to percolate
@@ -1291,6 +1350,60 @@ paths:
             application/json:
               schema:
                 $ref: '#/components/schemas/errorResponse'
+  /{index}/_update/{id}:
+    post:
+      summary: Partially replaces a document in an index
+      x-is_indexapi: true
+      x-is_update: true
+      x-is_modify: true
+      operationId: _update
+      description: >
+        Partially replaces a document with given id in an index
+
+        Responds with an object of the following format: 
+        
+          ```
+          {'_index':'products','updated':1}
+          ```
+      tags:
+        - Index
+      externalDocs:
+        url: 'https://manual.manticoresearch.com/Updating_documents/REPLACE#JSON-REPLACE'
+      parameters:
+        - in: path
+          name: index
+          schema:
+            type: string
+          required: true
+          description: Name of the percolate index
+        - in: path
+          name: id
+          schema:
+            type: number
+          required: true
+          description: Id of the document to replace
+      requestBody:
+        required: true
+        content:
+          application/json:
+            schema:
+              $ref: '#/components/schemas/replaceDocumentRequest'
+            example:
+              doc:
+                price: 20
+      responses:
+        '200':
+          description: item updated
+          content:
+            application/json:
+              schema:
+                $ref: '#/components/schemas/updateResponse'
+        default:
+          description: error
+          content:
+            application/json:
+              schema:
+                $ref: '#/components/schemas/errorResponse'
   /delete:
     post:
       summary: Delete a document in an index
diff --git a/out/manticoresearch-csharp-actual/.github/workflows/publish.yml b/out/manticoresearch-csharp-actual/.github/workflows/publish.yml
deleted file mode 100644
index aecef2c..0000000
--- a/out/manticoresearch-csharp-actual/.github/workflows/publish.yml
+++ /dev/null
@@ -1,17 +0,0 @@
-name: Publishing
-
-on:
-  push:
-    branches-ignore: [ master ]
-
-jobs:
-  publish:
-    name: Publish the client to the public registry
-    runs-on: ubuntu-latest
-
-    steps:
-    - uses: actions/checkout@v4
-    - run: |
-        echo "Ok"
-
-
diff --git a/out/manticoresearch-csharp-actual/.github/workflows/test.yml b/out/manticoresearch-csharp-actual/.github/workflows/test.yml
deleted file mode 100755
index 840766a..0000000
--- a/out/manticoresearch-csharp-actual/.github/workflows/test.yml
+++ /dev/null
@@ -1,33 +0,0 @@
-name: tests
-
-on:
-  push:
-    branches: [ master ]
-  pull_request:
-    branches: [ master ]
-
-jobs:
-  test:
-
-    name: unit tests
-    runs-on: ubuntu-latest
-    strategy:
-      matrix:
-        dotnet-version: [ '3.1.x' ]
-
-    services:
-      manticoresearch-manticore:
-        image: manticoresearch/manticore:dev
-        ports:
-          - 9408:9308
-
-    steps:
-      - uses: actions/checkout@v3
-      - name: Setup dotnet
-        uses: actions/setup-dotnet@v2
-        with:
-          dotnet-version: ${{ matrix.dotnet-version }}
-      - name: Install dependencies
-        run: dotnet restore
-      - name: Test with dotnet
-        run: dotnet test 
diff --git a/out/manticoresearch-csharp-actual/.gitignore b/out/manticoresearch-csharp-actual/.gitignore
deleted file mode 100755
index 1ee5385..0000000
--- a/out/manticoresearch-csharp-actual/.gitignore
+++ /dev/null
@@ -1,362 +0,0 @@
-## Ignore Visual Studio temporary files, build results, and
-## files generated by popular Visual Studio add-ons.
-##
-## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore
-
-# User-specific files
-*.rsuser
-*.suo
-*.user
-*.userosscache
-*.sln.docstates
-
-# User-specific files (MonoDevelop/Xamarin Studio)
-*.userprefs
-
-# Mono auto generated files
-mono_crash.*
-
-# Build results
-[Dd]ebug/
-[Dd]ebugPublic/
-[Rr]elease/
-[Rr]eleases/
-x64/
-x86/
-[Ww][Ii][Nn]32/
-[Aa][Rr][Mm]/
-[Aa][Rr][Mm]64/
-bld/
-[Bb]in/
-[Oo]bj/
-[Ll]og/
-[Ll]ogs/
-
-# Visual Studio 2015/2017 cache/options directory
-.vs/
-# Uncomment if you have tasks that create the project's static files in wwwroot
-#wwwroot/
-
-# Visual Studio 2017 auto generated files
-Generated\ Files/
-
-# MSTest test Results
-[Tt]est[Rr]esult*/
-[Bb]uild[Ll]og.*
-
-# NUnit
-*.VisualState.xml
-TestResult.xml
-nunit-*.xml
-
-# Build Results of an ATL Project
-[Dd]ebugPS/
-[Rr]eleasePS/
-dlldata.c
-
-# Benchmark Results
-BenchmarkDotNet.Artifacts/
-
-# .NET Core
-project.lock.json
-project.fragment.lock.json
-artifacts/
-
-# ASP.NET Scaffolding
-ScaffoldingReadMe.txt
-
-# StyleCop
-StyleCopReport.xml
-
-# Files built by Visual Studio
-*_i.c
-*_p.c
-*_h.h
-*.ilk
-*.meta
-*.obj
-*.iobj
-*.pch
-*.pdb
-*.ipdb
-*.pgc
-*.pgd
-*.rsp
-*.sbr
-*.tlb
-*.tli
-*.tlh
-*.tmp
-*.tmp_proj
-*_wpftmp.csproj
-*.log
-*.vspscc
-*.vssscc
-.builds
-*.pidb
-*.svclog
-*.scc
-
-# Chutzpah Test files
-_Chutzpah*
-
-# Visual C++ cache files
-ipch/
-*.aps
-*.ncb
-*.opendb
-*.opensdf
-*.sdf
-*.cachefile
-*.VC.db
-*.VC.VC.opendb
-
-# Visual Studio profiler
-*.psess
-*.vsp
-*.vspx
-*.sap
-
-# Visual Studio Trace Files
-*.e2e
-
-# TFS 2012 Local Workspace
-$tf/
-
-# Guidance Automation Toolkit
-*.gpState
-
-# ReSharper is a .NET coding add-in
-_ReSharper*/
-*.[Rr]e[Ss]harper
-*.DotSettings.user
-
-# TeamCity is a build add-in
-_TeamCity*
-
-# DotCover is a Code Coverage Tool
-*.dotCover
-
-# AxoCover is a Code Coverage Tool
-.axoCover/*
-!.axoCover/settings.json
-
-# Coverlet is a free, cross platform Code Coverage Tool
-coverage*.json
-coverage*.xml
-coverage*.info
-
-# Visual Studio code coverage results
-*.coverage
-*.coveragexml
-
-# NCrunch
-_NCrunch_*
-.*crunch*.local.xml
-nCrunchTemp_*
-
-# MightyMoose
-*.mm.*
-AutoTest.Net/
-
-# Web workbench (sass)
-.sass-cache/
-
-# Installshield output folder
-[Ee]xpress/
-
-# DocProject is a documentation generator add-in
-DocProject/buildhelp/
-DocProject/Help/*.HxT
-DocProject/Help/*.HxC
-DocProject/Help/*.hhc
-DocProject/Help/*.hhk
-DocProject/Help/*.hhp
-DocProject/Help/Html2
-DocProject/Help/html
-
-# Click-Once directory
-publish/
-
-# Publish Web Output
-*.[Pp]ublish.xml
-*.azurePubxml
-# Note: Comment the next line if you want to checkin your web deploy settings,
-# but database connection strings (with potential passwords) will be unencrypted
-*.pubxml
-*.publishproj
-
-# Microsoft Azure Web App publish settings. Comment the next line if you want to
-# checkin your Azure Web App publish settings, but sensitive information contained
-# in these scripts will be unencrypted
-PublishScripts/
-
-# NuGet Packages
-*.nupkg
-# NuGet Symbol Packages
-*.snupkg
-# The packages folder can be ignored because of Package Restore
-**/[Pp]ackages/*
-# except build/, which is used as an MSBuild target.
-!**/[Pp]ackages/build/
-# Uncomment if necessary however generally it will be regenerated when needed
-#!**/[Pp]ackages/repositories.config
-# NuGet v3's project.json files produces more ignorable files
-*.nuget.props
-*.nuget.targets
-
-# Microsoft Azure Build Output
-csx/
-*.build.csdef
-
-# Microsoft Azure Emulator
-ecf/
-rcf/
-
-# Windows Store app package directories and files
-AppPackages/
-BundleArtifacts/
-Package.StoreAssociation.xml
-_pkginfo.txt
-*.appx
-*.appxbundle
-*.appxupload
-
-# Visual Studio cache files
-# files ending in .cache can be ignored
-*.[Cc]ache
-# but keep track of directories ending in .cache
-!?*.[Cc]ache/
-
-# Others
-ClientBin/
-~$*
-*~
-*.dbmdl
-*.dbproj.schemaview
-*.jfm
-*.pfx
-*.publishsettings
-orleans.codegen.cs
-
-# Including strong name files can present a security risk
-# (https://github.com/github/gitignore/pull/2483#issue-259490424)
-#*.snk
-
-# Since there are multiple workflows, uncomment next line to ignore bower_components
-# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
-#bower_components/
-
-# RIA/Silverlight projects
-Generated_Code/
-
-# Backup & report files from converting an old project file
-# to a newer Visual Studio version. Backup files are not needed,
-# because we have git ;-)
-_UpgradeReport_Files/
-Backup*/
-UpgradeLog*.XML
-UpgradeLog*.htm
-ServiceFabricBackup/
-*.rptproj.bak
-
-# SQL Server files
-*.mdf
-*.ldf
-*.ndf
-
-# Business Intelligence projects
-*.rdl.data
-*.bim.layout
-*.bim_*.settings
-*.rptproj.rsuser
-*- [Bb]ackup.rdl
-*- [Bb]ackup ([0-9]).rdl
-*- [Bb]ackup ([0-9][0-9]).rdl
-
-# Microsoft Fakes
-FakesAssemblies/
-
-# GhostDoc plugin setting file
-*.GhostDoc.xml
-
-# Node.js Tools for Visual Studio
-.ntvs_analysis.dat
-node_modules/
-
-# Visual Studio 6 build log
-*.plg
-
-# Visual Studio 6 workspace options file
-*.opt
-
-# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
-*.vbw
-
-# Visual Studio LightSwitch build output
-**/*.HTMLClient/GeneratedArtifacts
-**/*.DesktopClient/GeneratedArtifacts
-**/*.DesktopClient/ModelManifest.xml
-**/*.Server/GeneratedArtifacts
-**/*.Server/ModelManifest.xml
-_Pvt_Extensions
-
-# Paket dependency manager
-.paket/paket.exe
-paket-files/
-
-# FAKE - F# Make
-.fake/
-
-# CodeRush personal settings
-.cr/personal
-
-# Python Tools for Visual Studio (PTVS)
-__pycache__/
-*.pyc
-
-# Cake - Uncomment if you are using it
-# tools/**
-# !tools/packages.config
-
-# Tabs Studio
-*.tss
-
-# Telerik's JustMock configuration file
-*.jmconfig
-
-# BizTalk build output
-*.btp.cs
-*.btm.cs
-*.odx.cs
-*.xsd.cs
-
-# OpenCover UI analysis results
-OpenCover/
-
-# Azure Stream Analytics local run output
-ASALocalRun/
-
-# MSBuild Binary and Structured Log
-*.binlog
-
-# NVidia Nsight GPU debugger configuration file
-*.nvuser
-
-# MFractors (Xamarin productivity tool) working folder
-.mfractor/
-
-# Local History for Visual Studio
-.localhistory/
-
-# BeatPulse healthcheck temp database
-healthchecksdb
-
-# Backup folder for Package Reference Convert tool in Visual Studio 2017
-MigrationBackup/
-
-# Ionide (cross platform F# VS Code tools) working folder
-.ionide/
-
-# Fody - auto-generated XML schema
-FodyWeavers.xsd
diff --git a/out/manticoresearch-csharp-actual/.openapi-generator-ignore b/out/manticoresearch-csharp-actual/.openapi-generator-ignore
deleted file mode 100755
index 7484ee5..0000000
--- a/out/manticoresearch-csharp-actual/.openapi-generator-ignore
+++ /dev/null
@@ -1,23 +0,0 @@
-# OpenAPI Generator Ignore
-# Generated by openapi-generator https://github.com/openapitools/openapi-generator
-
-# Use this file to prevent files from being overwritten by the generator.
-# The patterns follow closely to .gitignore or .dockerignore.
-
-# As an example, the C# client generator defines ApiClient.cs.
-# You can make changes and tell OpenAPI Generator to ignore just this file by uncommenting the following line:
-#ApiClient.cs
-
-# You can match any string of characters against a directory, file or extension with a single asterisk (*):
-#foo/*/qux
-# The above matches foo/bar/qux and foo/baz/qux, but not foo/bar/baz/qux
-
-# You can recursively match patterns against a directory, file or extension with a double asterisk (**):
-#foo/**/qux
-# This matches foo/bar/qux, foo/baz/qux, and foo/bar/baz/qux
-
-# You can also negate patterns with an exclamation (!).
-# For example, you can ignore all files in a docs folder with the file extension .md:
-#docs/*.md
-# Then explicitly reverse the ignore rule for a single file:
-#!docs/README.md
diff --git a/out/manticoresearch-csharp-actual/.openapi-generator/FILES b/out/manticoresearch-csharp-actual/.openapi-generator/FILES
deleted file mode 100755
index 320de59..0000000
--- a/out/manticoresearch-csharp-actual/.openapi-generator/FILES
+++ /dev/null
@@ -1,155 +0,0 @@
-.gitignore
-.openapi-generator-ignore
-ManticoreSearch.sln
-README.md
-appveyor.yml
-docs/Aggregation.md
-docs/AggregationSortInnerValue.md
-docs/AggregationTerms.md
-docs/BoolFilter.md
-docs/BulkResponse.md
-docs/DeleteDocumentRequest.md
-docs/DeleteResponse.md
-docs/EqualsFilter.md
-docs/ErrorResponse.md
-docs/Facet.md
-docs/FilterBoolean.md
-docs/FilterNumber.md
-docs/FilterString.md
-docs/GeoDistanceFilter.md
-docs/GeoDistanceFilterLocationAnchor.md
-docs/Highlight.md
-docs/HighlightField.md
-docs/InFilter.md
-docs/IndexApi.md
-docs/InsertDocumentRequest.md
-docs/MatchFilter.md
-docs/MatchOp.md
-docs/MatchOpFilter.md
-docs/MatchPhraseFilter.md
-docs/NotFilterBoolean.md
-docs/NotFilterNumber.md
-docs/NotFilterString.md
-docs/PercolateRequest.md
-docs/PercolateRequestQuery.md
-docs/QueryFilter.md
-docs/RangeFilter.md
-docs/SearchApi.md
-docs/SearchRequest.md
-docs/SearchResponse.md
-docs/SearchResponseHits.md
-docs/SortMVA.md
-docs/SortMultiple.md
-docs/SortOrder.md
-docs/SourceByRules.md
-docs/SuccessResponse.md
-docs/UpdateDocumentRequest.md
-docs/UpdateResponse.md
-docs/UtilsApi.md
-git_push.sh
-src/ManticoreSearch.Test/Api/IndexApiTests.cs
-src/ManticoreSearch.Test/Api/SearchApiTests.cs
-src/ManticoreSearch.Test/Api/UtilsApiTests.cs
-src/ManticoreSearch.Test/ManticoreSearch.Test.csproj
-src/ManticoreSearch.Test/Model/AggregationSortInnerValueTests.cs
-src/ManticoreSearch.Test/Model/AggregationTermsTests.cs
-src/ManticoreSearch.Test/Model/AggregationTests.cs
-src/ManticoreSearch.Test/Model/BoolFilterTests.cs
-src/ManticoreSearch.Test/Model/BulkResponseTests.cs
-src/ManticoreSearch.Test/Model/DeleteDocumentRequestTests.cs
-src/ManticoreSearch.Test/Model/DeleteResponseTests.cs
-src/ManticoreSearch.Test/Model/EqualsFilterTests.cs
-src/ManticoreSearch.Test/Model/ErrorResponseTests.cs
-src/ManticoreSearch.Test/Model/FacetTests.cs
-src/ManticoreSearch.Test/Model/FilterBooleanTests.cs
-src/ManticoreSearch.Test/Model/FilterNumberTests.cs
-src/ManticoreSearch.Test/Model/FilterStringTests.cs
-src/ManticoreSearch.Test/Model/GeoDistanceFilterLocationAnchorTests.cs
-src/ManticoreSearch.Test/Model/GeoDistanceFilterTests.cs
-src/ManticoreSearch.Test/Model/HighlightFieldTests.cs
-src/ManticoreSearch.Test/Model/HighlightTests.cs
-src/ManticoreSearch.Test/Model/InFilterTests.cs
-src/ManticoreSearch.Test/Model/InsertDocumentRequestTests.cs
-src/ManticoreSearch.Test/Model/MatchFilterTests.cs
-src/ManticoreSearch.Test/Model/MatchOpFilterTests.cs
-src/ManticoreSearch.Test/Model/MatchOpTests.cs
-src/ManticoreSearch.Test/Model/MatchPhraseFilterTests.cs
-src/ManticoreSearch.Test/Model/NotFilterBooleanTests.cs
-src/ManticoreSearch.Test/Model/NotFilterNumberTests.cs
-src/ManticoreSearch.Test/Model/NotFilterStringTests.cs
-src/ManticoreSearch.Test/Model/PercolateRequestQueryTests.cs
-src/ManticoreSearch.Test/Model/PercolateRequestTests.cs
-src/ManticoreSearch.Test/Model/QueryFilterTests.cs
-src/ManticoreSearch.Test/Model/RangeFilterTests.cs
-src/ManticoreSearch.Test/Model/SearchRequestTests.cs
-src/ManticoreSearch.Test/Model/SearchResponseHitsTests.cs
-src/ManticoreSearch.Test/Model/SearchResponseTests.cs
-src/ManticoreSearch.Test/Model/SortMVATests.cs
-src/ManticoreSearch.Test/Model/SortMultipleTests.cs
-src/ManticoreSearch.Test/Model/SortOrderTests.cs
-src/ManticoreSearch.Test/Model/SourceByRulesTests.cs
-src/ManticoreSearch.Test/Model/SuccessResponseTests.cs
-src/ManticoreSearch.Test/Model/UpdateDocumentRequestTests.cs
-src/ManticoreSearch.Test/Model/UpdateResponseTests.cs
-src/ManticoreSearch/Api/IndexApi.cs
-src/ManticoreSearch/Api/SearchApi.cs
-src/ManticoreSearch/Api/UtilsApi.cs
-src/ManticoreSearch/Client/ApiClient.cs
-src/ManticoreSearch/Client/ApiException.cs
-src/ManticoreSearch/Client/ApiResponse.cs
-src/ManticoreSearch/Client/ClientUtils.cs
-src/ManticoreSearch/Client/Configuration.cs
-src/ManticoreSearch/Client/ExceptionFactory.cs
-src/ManticoreSearch/Client/FileParameter.cs
-src/ManticoreSearch/Client/GlobalConfiguration.cs
-src/ManticoreSearch/Client/IApiAccessor.cs
-src/ManticoreSearch/Client/IAsynchronousClient.cs
-src/ManticoreSearch/Client/IReadableConfiguration.cs
-src/ManticoreSearch/Client/ISynchronousClient.cs
-src/ManticoreSearch/Client/Multimap.cs
-src/ManticoreSearch/Client/OpenAPIDateConverter.cs
-src/ManticoreSearch/Client/RequestOptions.cs
-src/ManticoreSearch/Client/RetryConfiguration.cs
-src/ManticoreSearch/Client/WebRequestPathBuilder.cs
-src/ManticoreSearch/ManticoreSearch.csproj
-src/ManticoreSearch/Model/AbstractOpenAPISchema.cs
-src/ManticoreSearch/Model/Aggregation.cs
-src/ManticoreSearch/Model/AggregationSortInnerValue.cs
-src/ManticoreSearch/Model/AggregationTerms.cs
-src/ManticoreSearch/Model/BoolFilter.cs
-src/ManticoreSearch/Model/BulkResponse.cs
-src/ManticoreSearch/Model/DeleteDocumentRequest.cs
-src/ManticoreSearch/Model/DeleteResponse.cs
-src/ManticoreSearch/Model/EqualsFilter.cs
-src/ManticoreSearch/Model/ErrorResponse.cs
-src/ManticoreSearch/Model/Facet.cs
-src/ManticoreSearch/Model/FilterBoolean.cs
-src/ManticoreSearch/Model/FilterNumber.cs
-src/ManticoreSearch/Model/FilterString.cs
-src/ManticoreSearch/Model/GeoDistanceFilter.cs
-src/ManticoreSearch/Model/GeoDistanceFilterLocationAnchor.cs
-src/ManticoreSearch/Model/Highlight.cs
-src/ManticoreSearch/Model/HighlightField.cs
-src/ManticoreSearch/Model/InFilter.cs
-src/ManticoreSearch/Model/InsertDocumentRequest.cs
-src/ManticoreSearch/Model/MatchFilter.cs
-src/ManticoreSearch/Model/MatchOp.cs
-src/ManticoreSearch/Model/MatchOpFilter.cs
-src/ManticoreSearch/Model/MatchPhraseFilter.cs
-src/ManticoreSearch/Model/NotFilterBoolean.cs
-src/ManticoreSearch/Model/NotFilterNumber.cs
-src/ManticoreSearch/Model/NotFilterString.cs
-src/ManticoreSearch/Model/PercolateRequest.cs
-src/ManticoreSearch/Model/PercolateRequestQuery.cs
-src/ManticoreSearch/Model/QueryFilter.cs
-src/ManticoreSearch/Model/RangeFilter.cs
-src/ManticoreSearch/Model/SearchRequest.cs
-src/ManticoreSearch/Model/SearchResponse.cs
-src/ManticoreSearch/Model/SearchResponseHits.cs
-src/ManticoreSearch/Model/SortMVA.cs
-src/ManticoreSearch/Model/SortMultiple.cs
-src/ManticoreSearch/Model/SortOrder.cs
-src/ManticoreSearch/Model/SourceByRules.cs
-src/ManticoreSearch/Model/SuccessResponse.cs
-src/ManticoreSearch/Model/UpdateDocumentRequest.cs
-src/ManticoreSearch/Model/UpdateResponse.cs
diff --git a/out/manticoresearch-csharp-actual/.openapi-generator/VERSION b/out/manticoresearch-csharp-actual/.openapi-generator/VERSION
deleted file mode 100755
index 358e78e..0000000
--- a/out/manticoresearch-csharp-actual/.openapi-generator/VERSION
+++ /dev/null
@@ -1 +0,0 @@
-6.1.0
\ No newline at end of file
diff --git a/out/manticoresearch-csharp-actual/ManticoreSearch.sln b/out/manticoresearch-csharp-actual/ManticoreSearch.sln
deleted file mode 100755
index b6c5e15..0000000
--- a/out/manticoresearch-csharp-actual/ManticoreSearch.sln
+++ /dev/null
@@ -1,27 +0,0 @@
-Microsoft Visual Studio Solution File, Format Version 12.00
-# Visual Studio 14
-VisualStudioVersion = 14.0.25420.1
-MinimumVisualStudioVersion = 10.0.40219.1
-Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "ManticoreSearch", "src\ManticoreSearch\ManticoreSearch.csproj", "{8437C01C-ECAC-4995-B73A-2D728007AD71}"
-EndProject
-Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "ManticoreSearch.Test", "src\ManticoreSearch.Test\ManticoreSearch.Test.csproj", "{19F1DEBC-DE5E-4517-8062-F000CD499087}"
-EndProject
-Global
-	GlobalSection(SolutionConfigurationPlatforms) = preSolution
-		Debug|Any CPU = Debug|Any CPU
-		Release|Any CPU = Release|Any CPU
-	EndGlobalSection
-	GlobalSection(ProjectConfigurationPlatforms) = postSolution
-		{8437C01C-ECAC-4995-B73A-2D728007AD71}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
-		{8437C01C-ECAC-4995-B73A-2D728007AD71}.Debug|Any CPU.Build.0 = Debug|Any CPU
-		{8437C01C-ECAC-4995-B73A-2D728007AD71}.Release|Any CPU.ActiveCfg = Release|Any CPU
-		{8437C01C-ECAC-4995-B73A-2D728007AD71}.Release|Any CPU.Build.0 = Release|Any CPU
-		{19F1DEBC-DE5E-4517-8062-F000CD499087}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
-		{19F1DEBC-DE5E-4517-8062-F000CD499087}.Debug|Any CPU.Build.0 = Debug|Any CPU
-		{19F1DEBC-DE5E-4517-8062-F000CD499087}.Release|Any CPU.ActiveCfg = Release|Any CPU
-		{19F1DEBC-DE5E-4517-8062-F000CD499087}.Release|Any CPU.Build.0 = Release|Any CPU
-	EndGlobalSection
-	GlobalSection(SolutionProperties) = preSolution
-		HideSolutionNode = FALSE
-	EndGlobalSection
-EndGlobal
\ No newline at end of file
diff --git a/out/manticoresearch-csharp-actual/README.md b/out/manticoresearch-csharp-actual/README.md
deleted file mode 100755
index f995a8b..0000000
--- a/out/manticoresearch-csharp-actual/README.md
+++ /dev/null
@@ -1,206 +0,0 @@
-# Manticore .Net client
-
-Сlient for Manticore Search.
-
-
-❗ WARNING: this is a development version of the client. The latest release's readme is https://github.com/manticoresoftware/manticoresearch-typescript/tree/4.0.0
-
-## Frameworks supported
-- .NET Core >=1.0
-- .NET Framework >=4.6
-- Mono/Xamarin >=vNext
-
-
-## Dependencies
-
-- [Json.NET](https://www.nuget.org/packages/Newtonsoft.Json/) - 13.0.1 or later
-- [JsonSubTypes](https://www.nuget.org/packages/JsonSubTypes/) - 1.8.0 or later
-- [System.ComponentModel.Annotations](https://www.nuget.org/packages/System.ComponentModel.Annotations) - 5.0.0 or later
-
-The DLLs included in the package may not be the latest version. We recommend using [NuGet](https://docs.nuget.org/consume/installing-nuget) to obtain the latest version of the packages:
-
-| Manticore Search  | manticoresearch-net     |
-| ----------------- | ----------------------- |
-| >= 6.2.0          | 4.0.0                   |
-| >= 6.2.0          | 3.3.1                   |
-| >= 2.5.1          | 1.0.x                   |
-
-```
-Install-Package Newtonsoft.Json
-Install-Package JsonSubTypes
-Install-Package System.ComponentModel.Annotations
-```
-
-## Installation
-Generate the DLL using your preferred tool (e.g. `dotnet build`)
-
-Then include the DLL (under the `bin` folder) in the C# project, and use the namespaces:
-```csharp
-using ManticoreSearch.Api;
-using ManticoreSearch.Client;
-using ManticoreSearch.Model;
-```
-
-## Usage
-
-To use the API client with a HTTP proxy, setup a `System.Net.WebProxy`
-```csharp
-Configuration c = new Configuration();
-System.Net.WebProxy webProxy = new System.Net.WebProxy("http://myProxyUrl:80/");
-webProxy.Credentials = System.Net.CredentialCache.DefaultCredentials;
-c.Proxy = webProxy;
-```
-
-### Connections
-Each ApiClass (properly the ApiClient inside it) will create an instance of HttpClient. It will use that for the entire lifecycle and dispose it when called the Dispose method.
-
-To better manager the connections it's a common practice to reuse the HttpClient and HttpClientHandler (see [here](https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests#issues-with-the-original-httpclient-class-available-in-net) for details). To use your own HttpClient instance just pass it to the ApiClass constructor.
-
-```csharp
-HttpClientHandler yourHandler = new HttpClientHandler();
-HttpClient yourHttpClient = new HttpClient(yourHandler);
-var api = new YourApiClass(yourHttpClient, yourHandler);
-```
-
-If you want to use an HttpClient and don't have access to the handler, for example in a DI context in Asp.net Core when using IHttpClientFactory.
-
-```csharp
-HttpClient yourHttpClient = new HttpClient();
-var api = new YourApiClass(yourHttpClient);
-```
-You'll loose some configuration settings, the features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings. You need to either manually handle those in your setup of the HttpClient or they won't be available.
-
-Here an example of DI setup in a sample web project:
-
-```csharp
-services.AddHttpClient<YourApiClass>(httpClient =>
-   new PetApi(httpClient));
-```
-
-
-## Getting Started
-
-```csharp
-using System.Collections.Generic;
-using System.Diagnostics;
-using System.Net.Http;
-using ManticoreSearch.Api;
-using ManticoreSearch.Client;
-using ManticoreSearch.Model;
-
-namespace Example
-{
-    public class Example
-    {
-        public static void Main()
-        {
-
-            Configuration config = new Configuration();
-            config.BasePath = "http://localhost:9408";
-            // create instances of HttpClient, HttpClientHandler to be reused later with different Api classes
-            HttpClient httpClient = new HttpClient();
-            HttpClientHandler httpClientHandler = new HttpClientHandler();
-            var apiInstance = new IndexApi(httpClient, config, httpClientHandler);
-            var body = ["'{\"insert\": {\"index\": \"test\", \"id\": 1, \"doc\": {\"title\": \"Title 1\"}}},\\n{\"insert\": {\"index\": \"test\", \"id\": 2, \"doc\": {\"title\": \"Title 2\"}}}'"];  // string | 
-
-            try
-            {
-                // Bulk index operations
-                BulkResponse result = apiInstance.Bulk(body);
-                Debug.WriteLine(result);
-            }
-            catch (ApiException e)
-            {
-                Debug.Print("Exception when calling IndexApi.Bulk: " + e.Message );
-                Debug.Print("Status Code: "+ e.ErrorCode);
-                Debug.Print(e.StackTrace);
-            }
-            
-            apiInstance = new SearchApi(httpClient, config, httpClientHandler);
-            
-            // Create SearchRequest
-            var searchRequest = new SearchRequest("test");
-            searchRequest.FulltextFilter = new QueryFilter("Title 1"); 
-
-            try
-            {
-                // Perform a search
-                SearchResponse result = apiInstance.Search(searchRequest);
-                Debug.WriteLine(result);
-            }
-            catch (ApiException  e)
-            {
-                Debug.Print("Exception when calling SearchApi.Search: " + e.Message);
-                Debug.Print("Status Code: " + e.ErrorCode);
-                Debug.Print(e.StackTrace);
-            }
-
-        }
-    }
-}
-```
-
-## Documentation for API Endpoints
-
-All URIs are relative to *http://localhost:9408*
-
-Class | Method | HTTP request | Description
------------- | ------------- | ------------- | -------------
-*IndexApi* | [**Bulk**](docs/IndexApi.md#bulk) | **POST** /bulk | Bulk index operations
-*IndexApi* | [**Delete**](docs/IndexApi.md#delete) | **POST** /delete | Delete a document in an index
-*IndexApi* | [**Insert**](docs/IndexApi.md#insert) | **POST** /insert | Create a new document in an index
-*IndexApi* | [**Replace**](docs/IndexApi.md#replace) | **POST** /replace | Replace new document in an index
-*IndexApi* | [**Update**](docs/IndexApi.md#update) | **POST** /update | Update a document in an index
-*SearchApi* | [**Percolate**](docs/SearchApi.md#percolate) | **POST** /pq/{index}/search | Perform reverse search on a percolate index
-*SearchApi* | [**Search**](docs/SearchApi.md#search) | **POST** /search | Performs a search on an index
-*UtilsApi* | [**Sql**](docs/UtilsApi.md#sql) | **POST** /sql | Perform SQL requests
-
-
-## Documentation for Models
-
- - [Model.Aggregation](docs/Aggregation.md)
- - [Model.AggregationSortInnerValue](docs/AggregationSortInnerValue.md)
- - [Model.AggregationTerms](docs/AggregationTerms.md)
- - [Model.BoolFilter](docs/BoolFilter.md)
- - [Model.BulkResponse](docs/BulkResponse.md)
- - [Model.DeleteDocumentRequest](docs/DeleteDocumentRequest.md)
- - [Model.DeleteResponse](docs/DeleteResponse.md)
- - [Model.EqualsFilter](docs/EqualsFilter.md)
- - [Model.ErrorResponse](docs/ErrorResponse.md)
- - [Model.Facet](docs/Facet.md)
- - [Model.FilterBoolean](docs/FilterBoolean.md)
- - [Model.FilterNumber](docs/FilterNumber.md)
- - [Model.FilterString](docs/FilterString.md)
- - [Model.GeoDistanceFilter](docs/GeoDistanceFilter.md)
- - [Model.GeoDistanceFilterLocationAnchor](docs/GeoDistanceFilterLocationAnchor.md)
- - [Model.Highlight](docs/Highlight.md)
- - [Model.HighlightField](docs/HighlightField.md)
- - [Model.InFilter](docs/InFilter.md)
- - [Model.InsertDocumentRequest](docs/InsertDocumentRequest.md)
- - [Model.MatchFilter](docs/MatchFilter.md)
- - [Model.MatchOp](docs/MatchOp.md)
- - [Model.MatchOpFilter](docs/MatchOpFilter.md)
- - [Model.MatchPhraseFilter](docs/MatchPhraseFilter.md)
- - [Model.NotFilterBoolean](docs/NotFilterBoolean.md)
- - [Model.NotFilterNumber](docs/NotFilterNumber.md)
- - [Model.NotFilterString](docs/NotFilterString.md)
- - [Model.PercolateRequest](docs/PercolateRequest.md)
- - [Model.PercolateRequestQuery](docs/PercolateRequestQuery.md)
- - [Model.QueryFilter](docs/QueryFilter.md)
- - [Model.RangeFilter](docs/RangeFilter.md)
- - [Model.SearchRequest](docs/SearchRequest.md)
- - [Model.SearchResponse](docs/SearchResponse.md)
- - [Model.SearchResponseHits](docs/SearchResponseHits.md)
- - [Model.SortMVA](docs/SortMVA.md)
- - [Model.SortMultiple](docs/SortMultiple.md)
- - [Model.SortOrder](docs/SortOrder.md)
- - [Model.SourceByRules](docs/SourceByRules.md)
- - [Model.SuccessResponse](docs/SuccessResponse.md)
- - [Model.UpdateDocumentRequest](docs/UpdateDocumentRequest.md)
- - [Model.UpdateResponse](docs/UpdateResponse.md)
-
-
-<a name="documentation-for-authorization"></a>
-## Documentation for Authorization
-
-All endpoints do not require authorization.
diff --git a/out/manticoresearch-csharp-actual/appveyor.yml b/out/manticoresearch-csharp-actual/appveyor.yml
deleted file mode 100755
index 9b381e7..0000000
--- a/out/manticoresearch-csharp-actual/appveyor.yml
+++ /dev/null
@@ -1,9 +0,0 @@
-# auto-generated by OpenAPI Generator (https://github.com/OpenAPITools/openapi-generator)
-#
-image: Visual Studio 2019
-clone_depth: 1
-build_script:
-- dotnet build -c Release
-- dotnet test -c Release
-after_build:
-- dotnet pack .\src\ManticoreSearch\ManticoreSearch.csproj -o ../../output -c Release --no-build
diff --git a/out/manticoresearch-csharp-actual/docs/Aggregation.md b/out/manticoresearch-csharp-actual/docs/Aggregation.md
deleted file mode 100755
index f55fabc..0000000
--- a/out/manticoresearch-csharp-actual/docs/Aggregation.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# ManticoreSearch.Model.Aggregation
-Aggregation Alias
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Terms** | [**AggregationTerms**](AggregationTerms.md) |  | [optional] 
-**Sort** | **List&lt;Dictionary&lt;string, AggregationSortInnerValue&gt;&gt;** |  | [optional] 
-
-[[Using in search requests]](SearchRequest.md#Aggregation)
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/AggregationSortInnerValue.md b/out/manticoresearch-csharp-actual/docs/AggregationSortInnerValue.md
deleted file mode 100755
index f4958be..0000000
--- a/out/manticoresearch-csharp-actual/docs/AggregationSortInnerValue.md
+++ /dev/null
@@ -1,12 +0,0 @@
-# ManticoreSearch.Model.AggregationSortInnerValue
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Order** | **string** |  | [optional] 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/AggregationTerms.md b/out/manticoresearch-csharp-actual/docs/AggregationTerms.md
deleted file mode 100755
index 1ea94bf..0000000
--- a/out/manticoresearch-csharp-actual/docs/AggregationTerms.md
+++ /dev/null
@@ -1,13 +0,0 @@
-# ManticoreSearch.Model.AggregationTerms
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Field** | **string** | Attribute Name to Aggregate | [optional] 
-**Size** | **int** | Maximum Number of Buckets in the Result | [optional] 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/BoolFilter.md b/out/manticoresearch-csharp-actual/docs/BoolFilter.md
deleted file mode 100755
index 2fedc7b..0000000
--- a/out/manticoresearch-csharp-actual/docs/BoolFilter.md
+++ /dev/null
@@ -1,16 +0,0 @@
-# ManticoreSearch.Model.BoolFilter
-Boolean attribute filter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Should** | **List&lt;Object&gt;** |  | [optional] 
-**Must** | **List&lt;Object&gt;** |  | [optional] 
-**MustNot** | **List&lt;Object&gt;** |  | [optional] 
-
-[[Using in search requests]](SearchRequest.md#BoolFilter)
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/BulkResponse.md b/out/manticoresearch-csharp-actual/docs/BulkResponse.md
deleted file mode 100755
index 0ae3102..0000000
--- a/out/manticoresearch-csharp-actual/docs/BulkResponse.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# ManticoreSearch.Model.BulkResponse
-Success bulk response
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Items** | **Object** |  | [optional] 
-**Errors** | **bool** |  | [optional] 
-**Error** | **string** |  | [optional] 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/DeleteDocumentRequest.md b/out/manticoresearch-csharp-actual/docs/DeleteDocumentRequest.md
deleted file mode 100755
index 337334b..0000000
--- a/out/manticoresearch-csharp-actual/docs/DeleteDocumentRequest.md
+++ /dev/null
@@ -1,16 +0,0 @@
-# ManticoreSearch.Model.DeleteDocumentRequest
-Payload for delete request. Documents can be deleted either one by one by specifying the document id or by providing a query object. For more information see  [Delete API](https://manual.manticoresearch.com/Deleting_documents) 
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Index** | **string** | Index name | 
-**Cluster** | **string** | cluster name | [optional] 
-**Id** | **long** | Document ID | [optional] 
-**Query** | **Object** | Query tree object | [optional] 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/DeleteResponse.md b/out/manticoresearch-csharp-actual/docs/DeleteResponse.md
deleted file mode 100755
index c731dd4..0000000
--- a/out/manticoresearch-csharp-actual/docs/DeleteResponse.md
+++ /dev/null
@@ -1,16 +0,0 @@
-# ManticoreSearch.Model.DeleteResponse
-Success response
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Index** | **string** |  | [optional] 
-**Deleted** | **int** |  | [optional] 
-**Id** | **long** |  | [optional] 
-**Result** | **string** |  | [optional] 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/EqualsFilter.md b/out/manticoresearch-csharp-actual/docs/EqualsFilter.md
deleted file mode 100755
index b77a230..0000000
--- a/out/manticoresearch-csharp-actual/docs/EqualsFilter.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# ManticoreSearch.Model.EqualsFilter
-Equals attribute filter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Field** | **string** |  | 
-**Value** | **Object** |  | 
-
-[[Using in search requests]](SearchRequest.md#EqualsFilter)
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/ErrorResponse.md b/out/manticoresearch-csharp-actual/docs/ErrorResponse.md
deleted file mode 100755
index b38d297..0000000
--- a/out/manticoresearch-csharp-actual/docs/ErrorResponse.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# ManticoreSearch.Model.ErrorResponse
-Error response
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Error** | **Dictionary&lt;string, Object&gt;** |  | 
-**Status** | **int** |  | 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/Facet.md b/out/manticoresearch-csharp-actual/docs/Facet.md
deleted file mode 100755
index 791330e..0000000
--- a/out/manticoresearch-csharp-actual/docs/Facet.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# ManticoreSearch.Model.Facet
-Query FACET expression
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Attr** | **string** | The name of an attribute to facet | 
-**Alias** | **string** | Facet alias | [optional] 
-**Limit** | **int** | The number of facet values to return | [optional] 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/FilterBoolean.md b/out/manticoresearch-csharp-actual/docs/FilterBoolean.md
deleted file mode 100755
index c0c92ba..0000000
--- a/out/manticoresearch-csharp-actual/docs/FilterBoolean.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# ManticoreSearch.Model.FilterBoolean
-Query filter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**FilterField** | **string** |  | 
-**Operation** | **string** |  | 
-**FilterValue** | **bool** |  | 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/FilterNumber.md b/out/manticoresearch-csharp-actual/docs/FilterNumber.md
deleted file mode 100755
index cc0b3fa..0000000
--- a/out/manticoresearch-csharp-actual/docs/FilterNumber.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# ManticoreSearch.Model.FilterNumber
-Query filter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**FilterField** | **string** |  | 
-**Operation** | **string** |  | 
-**FilterValue** | **decimal** |  | 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/FilterString.md b/out/manticoresearch-csharp-actual/docs/FilterString.md
deleted file mode 100755
index 342a856..0000000
--- a/out/manticoresearch-csharp-actual/docs/FilterString.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# ManticoreSearch.Model.FilterString
-Query filter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**FilterField** | **string** |  | 
-**Operation** | **string** |  | 
-**FilterValue** | **string** |  | 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/GeoDistanceFilter.md b/out/manticoresearch-csharp-actual/docs/GeoDistanceFilter.md
deleted file mode 100755
index 28931fc..0000000
--- a/out/manticoresearch-csharp-actual/docs/GeoDistanceFilter.md
+++ /dev/null
@@ -1,17 +0,0 @@
-# ManticoreSearch.Model.GeoDistanceFilter
-Geo distance attribute filter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**LocationAnchor** | [**GeoDistanceFilterLocationAnchor**](GeoDistanceFilterLocationAnchor.md) |  | [optional] 
-**LocationSource** | **string** | Attribute containing latitude and longitude data | [optional] 
-**DistanceType** | **string** |  | [optional] 
-**Distance** | **string** |  | [optional] 
-
-[[Using in search requests]](SearchRequest.md#GeoDistanceFilter)
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/GeoDistanceFilterLocationAnchor.md b/out/manticoresearch-csharp-actual/docs/GeoDistanceFilterLocationAnchor.md
deleted file mode 100755
index e7453d5..0000000
--- a/out/manticoresearch-csharp-actual/docs/GeoDistanceFilterLocationAnchor.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# ManticoreSearch.Model.GeoDistanceFilterLocationAnchor
-Geo pin point object
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Lat** | **decimal** | Geo latitude of pin point in degrees | [optional] 
-**Lon** | **decimal** | Geo longitude pf pin point in degrees | [optional] 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/Highlight.md b/out/manticoresearch-csharp-actual/docs/Highlight.md
deleted file mode 100755
index d13e0a9..0000000
--- a/out/manticoresearch-csharp-actual/docs/Highlight.md
+++ /dev/null
@@ -1,35 +0,0 @@
-# ManticoreSearch.Model.Highlight
-Query HIGHLIGHT expression
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Fieldnames** | **List&lt;string&gt;** |  | [optional] 
-**Fields** | [**List&lt;HighlightField&gt;**](HighlightField.md) |  | [optional] 
-**Encoder** | **string** |  | [optional] 
-**HighlightQuery** | **Dictionary&lt;string, Object&gt;** |  | [optional] 
-**PreTags** | **string** |  | [optional] [default to "<strong>"]
-**PostTags** | **string** |  | [optional] [default to "</strong>"]
-**NoMatchSize** | **int** |  | [optional] 
-**FragmentSize** | **int** |  | [optional] [default to 256]
-**NumberOfFragments** | **int** |  | [optional] [default to 0]
-**Limit** | **int** |  | [optional] [default to 256]
-**LimitWords** | **int** |  | [optional] [default to 0]
-**LimitSnippets** | **int** |  | [optional] [default to 0]
-**LimitsPerField** | **bool** |  | [optional] [default to false]
-**UseBoundaries** | **bool** |  | [optional] [default to false]
-**ForceAllWords** | **bool** |  | [optional] [default to false]
-**AllowEmpty** | **bool** |  | [optional] [default to false]
-**EmitZones** | **bool** |  | [optional] [default to false]
-**ForceSnippets** | **bool** |  | [optional] [default to false]
-**Around** | **int** |  | [optional] [default to 5]
-**StartSnippetId** | **int** |  | [optional] [default to 1]
-**HtmlStripMode** | **string** |  | [optional] 
-**SnippetBoundary** | **string** |  | [optional] 
-
-[[Using in search requests]](SearchRequest.md#Highlight)
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/HighlightField.md b/out/manticoresearch-csharp-actual/docs/HighlightField.md
deleted file mode 100755
index 80eb21a..0000000
--- a/out/manticoresearch-csharp-actual/docs/HighlightField.md
+++ /dev/null
@@ -1,17 +0,0 @@
-# ManticoreSearch.Model.HighlightField
-Query Highlight field with options set
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Name** | **string** |  | 
-**Limit** | **int** |  | [optional] [default to 256]
-**LimitWords** | **int** |  | [optional] [default to 0]
-**LimitSnippets** | **int** |  | [optional] [default to 0]
-
-[[Using in search requests]](SearchRequest.md#HighlightField)
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/InFilter.md b/out/manticoresearch-csharp-actual/docs/InFilter.md
deleted file mode 100755
index e44d578..0000000
--- a/out/manticoresearch-csharp-actual/docs/InFilter.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# ManticoreSearch.Model.InFilter
-In attribute filter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Field** | **string** |  | 
-**Values** | **List&lt;Object&gt;** |  | 
-
-[[Using in search requests]](SearchRequest.md#InFilter)
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/IndexApi.md b/out/manticoresearch-csharp-actual/docs/IndexApi.md
deleted file mode 100755
index 90954f2..0000000
--- a/out/manticoresearch-csharp-actual/docs/IndexApi.md
+++ /dev/null
@@ -1,492 +0,0 @@
-# ManticoreSearch.Api.IndexApi
-
-All URIs are relative to *http://localhost:9408*
-
-| Method | HTTP request | Description |
-|--------|--------------|-------------|
-| [**Bulk**](IndexApi.md#bulk) | **POST** /bulk | Bulk index operations |
-| [**Delete**](IndexApi.md#delete) | **POST** /delete | Delete a document in an index |
-| [**Insert**](IndexApi.md#insert) | **POST** /insert | Create a new document in an index |
-| [**Replace**](IndexApi.md#replace) | **POST** /replace | Replace new document in an index |
-| [**Update**](IndexApi.md#update) | **POST** /update | Update a document in an index |
-
-<a name="bulk"></a>
-# **Bulk**
-> BulkResponse Bulk (string body)
-
-Bulk index operations
-
-Sends multiple operatons like inserts, updates, replaces or deletes.  For each operation it's object must have same format as in their dedicated method.  The method expects a raw string as the batch in NDJSON.  Each operation object needs to be serialized to   JSON and separated by endline (\\n).      An example of raw input:      ```   {\"insert\": {\"index\": \"movies\", \"doc\": {\"plot\": \"A secret team goes to North Pole\", \"rating\": 9.5, \"language\": [2, 3], \"title\": \"This is an older movie\", \"lon\": 51.99, \"meta\": {\"keywords\":[\"travel\",\"ice\"],\"genre\":[\"adventure\"]}, \"year\": 1950, \"lat\": 60.4, \"advise\": \"PG-13\"}}}   \\n   {\"delete\": {\"index\": \"movies\",\"id\":700}}   ```      Responds with an object telling whenever any errors occured and an array with status for each operation:      ```   {     'items':     [       {         'update':{'_index':'products','_id':1,'result':'updated'}       },       {         'update':{'_index':'products','_id':2,'result':'updated'}       }     ],     'errors':false   }   ```   
-
-### Example
-```csharp
-using System.Collections.Generic;
-using System.Diagnostics;
-using System.Net.Http;
-using ManticoreSearch.Api;
-using ManticoreSearch.Client;
-using ManticoreSearch.Model;
-
-namespace Example
-{
-    public class BulkExample
-    {
-        public static void Main()
-        {
-            Configuration config = new Configuration();
-            config.BasePath = "http://localhost:9408";
-            // create instances of HttpClient, HttpClientHandler to be reused later with different Api classes
-            HttpClient httpClient = new HttpClient();
-            HttpClientHandler httpClientHandler = new HttpClientHandler();
-            var apiInstance = new IndexApi(httpClient, config, httpClientHandler);
-            var body = ["'{\"insert\": {\"index\": \"test\", \"id\": 1, \"doc\": {\"title\": \"Title 1\"}}},\\n{\"insert\": {\"index\": \"test\", \"id\": 2, \"doc\": {\"title\": \"Title 2\"}}}'"];  // string | 
-
-            try
-            {
-                // Bulk index operations
-                BulkResponse result = apiInstance.Bulk(body);
-                Debug.WriteLine(result);
-            }
-            catch (ApiException  e)
-            {
-                Debug.Print("Exception when calling IndexApi.Bulk: " + e.Message);
-                Debug.Print("Status Code: " + e.ErrorCode);
-                Debug.Print(e.StackTrace);
-            }
-        }
-    }
-}
-```
-
-#### Using the BulkWithHttpInfo variant
-This returns an ApiResponse object which contains the response data, status code and headers.
-
-```csharp
-try
-{
-    // Bulk index operations
-    ApiResponse<BulkResponse> response = apiInstance.BulkWithHttpInfo(body);
-    Debug.Write("Status Code: " + response.StatusCode);
-    Debug.Write("Response Headers: " + response.Headers);
-    Debug.Write("Response Body: " + response.Data);
-}
-catch (ApiException e)
-{
-    Debug.Print("Exception when calling IndexApi.BulkWithHttpInfo: " + e.Message);
-    Debug.Print("Status Code: " + e.ErrorCode);
-    Debug.Print(e.StackTrace);
-}
-```
-
-### Parameters
-
-| Name | Type | Description | Notes |
-|------|------|-------------|-------|
-| **body** | **string** |  |  |
-
-### Return type
-
-[**BulkResponse**](BulkResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
- - **Content-Type**: application/x-ndjson
- - **Accept**: application/json
-
-
-### HTTP response details
-| Status code | Description | Response headers |
-|-------------|-------------|------------------|
-| **200** | item updated |  -  |
-| **0** | error |  -  |
-
-[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
-
-<a name="delete"></a>
-# **Delete**
-> DeleteResponse Delete (DeleteDocumentRequest deleteDocumentRequest)
-
-Delete a document in an index
-
-Delete one or several documents. The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a  match query, in which case multiple documents can be delete . Example of input to delete by id:    ```   {'index':'movies','id':100}   ```  Example of input to delete using a query:    ```   {     'index':'movies',     'query':     {       'bool':       {         'must':         [           {'query_string':'new movie'}         ]       }     }   }   ```  The match query has same syntax as in for searching. Responds with an object telling how many documents got deleted:     ```   {'_index':'products','updated':1}   ``` 
-
-### Example
-```csharp
-using System.Collections.Generic;
-using System.Diagnostics;
-using System.Net.Http;
-using ManticoreSearch.Api;
-using ManticoreSearch.Client;
-using ManticoreSearch.Model;
-
-namespace Example
-{
-    public class DeleteExample
-    {
-        public static void Main()
-        {
-            Configuration config = new Configuration();
-            config.BasePath = "http://localhost:9408";
-            // create instances of HttpClient, HttpClientHandler to be reused later with different Api classes
-            HttpClient httpClient = new HttpClient();
-            HttpClientHandler httpClientHandler = new HttpClientHandler();
-            var apiInstance = new IndexApi(httpClient, config, httpClientHandler);
-            var deleteDocumentRequest = new DeleteDocumentRequest(); // DeleteDocumentRequest | 
-
-            try
-            {
-                // Delete a document in an index
-                DeleteResponse result = apiInstance.Delete(deleteDocumentRequest);
-                Debug.WriteLine(result);
-            }
-            catch (ApiException  e)
-            {
-                Debug.Print("Exception when calling IndexApi.Delete: " + e.Message);
-                Debug.Print("Status Code: " + e.ErrorCode);
-                Debug.Print(e.StackTrace);
-            }
-        }
-    }
-}
-```
-
-#### Using the DeleteWithHttpInfo variant
-This returns an ApiResponse object which contains the response data, status code and headers.
-
-```csharp
-try
-{
-    // Delete a document in an index
-    ApiResponse<DeleteResponse> response = apiInstance.DeleteWithHttpInfo(deleteDocumentRequest);
-    Debug.Write("Status Code: " + response.StatusCode);
-    Debug.Write("Response Headers: " + response.Headers);
-    Debug.Write("Response Body: " + response.Data);
-}
-catch (ApiException e)
-{
-    Debug.Print("Exception when calling IndexApi.DeleteWithHttpInfo: " + e.Message);
-    Debug.Print("Status Code: " + e.ErrorCode);
-    Debug.Print(e.StackTrace);
-}
-```
-
-### Parameters
-
-| Name | Type | Description | Notes |
-|------|------|-------------|-------|
-| **deleteDocumentRequest** | [**DeleteDocumentRequest**](DeleteDocumentRequest.md) |  |  |
-
-### Return type
-
-[**DeleteResponse**](DeleteResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
- - **Content-Type**: application/json
- - **Accept**: application/json
-
-
-### HTTP response details
-| Status code | Description | Response headers |
-|-------------|-------------|------------------|
-| **200** | item updated |  -  |
-| **0** | error |  -  |
-
-[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
-
-<a name="insert"></a>
-# **Insert**
-> SuccessResponse Insert (InsertDocumentRequest insertDocumentRequest)
-
-Create a new document in an index
-
-Insert a document.  Expects an object like:     ```   {     'index':'movies',     'id':701,     'doc':     {       'title':'This is an old movie',       'plot':'A secret team goes to North Pole',       'year':1950,       'rating':9.5,       'lat':60.4,       'lon':51.99,       'advise':'PG-13',       'meta':'{\"keywords\":{\"travel\",\"ice\"},\"genre\":{\"adventure\"}}',       'language':[2,3]     }   }   ```   The document id can also be missing, in which case an autogenerated one will be used:             ```   {     'index':'movies',     'doc':     {       'title':'This is a new movie',       'plot':'A secret team goes to North Pole',       'year':2020,       'rating':9.5,       'lat':60.4,       'lon':51.99,       'advise':'PG-13',       'meta':'{\"keywords\":{\"travel\",\"ice\"},\"genre\":{\"adventure\"}}',       'language':[2,3]     }   }   ```   It responds with an object in format:      ```   {'_index':'products','_id':701,'created':true,'result':'created','status':201}   ``` 
-
-### Example
-```csharp
-using System.Collections.Generic;
-using System.Diagnostics;
-using System.Net.Http;
-using ManticoreSearch.Api;
-using ManticoreSearch.Client;
-using ManticoreSearch.Model;
-
-namespace Example
-{
-    public class InsertExample
-    {
-        public static void Main()
-        {
-            Configuration config = new Configuration();
-            config.BasePath = "http://localhost:9408";
-            // create instances of HttpClient, HttpClientHandler to be reused later with different Api classes
-            HttpClient httpClient = new HttpClient();
-            HttpClientHandler httpClientHandler = new HttpClientHandler();
-            var apiInstance = new IndexApi(httpClient, config, httpClientHandler);
-            var insertDocumentRequest = new InsertDocumentRequest(); // InsertDocumentRequest | 
-
-            try
-            {
-                // Create a new document in an index
-                SuccessResponse result = apiInstance.Insert(insertDocumentRequest);
-                Debug.WriteLine(result);
-            }
-            catch (ApiException  e)
-            {
-                Debug.Print("Exception when calling IndexApi.Insert: " + e.Message);
-                Debug.Print("Status Code: " + e.ErrorCode);
-                Debug.Print(e.StackTrace);
-            }
-        }
-    }
-}
-```
-
-#### Using the InsertWithHttpInfo variant
-This returns an ApiResponse object which contains the response data, status code and headers.
-
-```csharp
-try
-{
-    // Create a new document in an index
-    ApiResponse<SuccessResponse> response = apiInstance.InsertWithHttpInfo(insertDocumentRequest);
-    Debug.Write("Status Code: " + response.StatusCode);
-    Debug.Write("Response Headers: " + response.Headers);
-    Debug.Write("Response Body: " + response.Data);
-}
-catch (ApiException e)
-{
-    Debug.Print("Exception when calling IndexApi.InsertWithHttpInfo: " + e.Message);
-    Debug.Print("Status Code: " + e.ErrorCode);
-    Debug.Print(e.StackTrace);
-}
-```
-
-### Parameters
-
-| Name | Type | Description | Notes |
-|------|------|-------------|-------|
-| **insertDocumentRequest** | [**InsertDocumentRequest**](InsertDocumentRequest.md) |  |  |
-
-### Return type
-
-[**SuccessResponse**](SuccessResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
- - **Content-Type**: application/json
- - **Accept**: application/json
-
-
-### HTTP response details
-| Status code | Description | Response headers |
-|-------------|-------------|------------------|
-| **200** | OK |  -  |
-| **0** | error |  -  |
-
-[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
-
-<a name="replace"></a>
-# **Replace**
-> SuccessResponse Replace (InsertDocumentRequest insertDocumentRequest)
-
-Replace new document in an index
-
-Replace an existing document. Input has same format as `insert` operation. <br/> Responds with an object in format: <br/>    ```   {'_index':'products','_id':1,'created':false,'result':'updated','status':200}   ``` 
-
-### Example
-```csharp
-using System.Collections.Generic;
-using System.Diagnostics;
-using System.Net.Http;
-using ManticoreSearch.Api;
-using ManticoreSearch.Client;
-using ManticoreSearch.Model;
-
-namespace Example
-{
-    public class ReplaceExample
-    {
-        public static void Main()
-        {
-            Configuration config = new Configuration();
-            config.BasePath = "http://localhost:9408";
-            // create instances of HttpClient, HttpClientHandler to be reused later with different Api classes
-            HttpClient httpClient = new HttpClient();
-            HttpClientHandler httpClientHandler = new HttpClientHandler();
-            var apiInstance = new IndexApi(httpClient, config, httpClientHandler);
-            var insertDocumentRequest = new InsertDocumentRequest(); // InsertDocumentRequest | 
-
-            try
-            {
-                // Replace new document in an index
-                SuccessResponse result = apiInstance.Replace(insertDocumentRequest);
-                Debug.WriteLine(result);
-            }
-            catch (ApiException  e)
-            {
-                Debug.Print("Exception when calling IndexApi.Replace: " + e.Message);
-                Debug.Print("Status Code: " + e.ErrorCode);
-                Debug.Print(e.StackTrace);
-            }
-        }
-    }
-}
-```
-
-#### Using the ReplaceWithHttpInfo variant
-This returns an ApiResponse object which contains the response data, status code and headers.
-
-```csharp
-try
-{
-    // Replace new document in an index
-    ApiResponse<SuccessResponse> response = apiInstance.ReplaceWithHttpInfo(insertDocumentRequest);
-    Debug.Write("Status Code: " + response.StatusCode);
-    Debug.Write("Response Headers: " + response.Headers);
-    Debug.Write("Response Body: " + response.Data);
-}
-catch (ApiException e)
-{
-    Debug.Print("Exception when calling IndexApi.ReplaceWithHttpInfo: " + e.Message);
-    Debug.Print("Status Code: " + e.ErrorCode);
-    Debug.Print(e.StackTrace);
-}
-```
-
-### Parameters
-
-| Name | Type | Description | Notes |
-|------|------|-------------|-------|
-| **insertDocumentRequest** | [**InsertDocumentRequest**](InsertDocumentRequest.md) |  |  |
-
-### Return type
-
-[**SuccessResponse**](SuccessResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
- - **Content-Type**: application/json
- - **Accept**: application/json
-
-
-### HTTP response details
-| Status code | Description | Response headers |
-|-------------|-------------|------------------|
-| **200** | OK |  -  |
-| **0** | error |  -  |
-
-[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
-
-<a name="update"></a>
-# **Update**
-> UpdateResponse Update (UpdateDocumentRequest updateDocumentRequest)
-
-Update a document in an index
-
-Update one or several documents. The update can be made by passing the id or by using a match query in case multiple documents can be updated.  For example update a document using document id:    ```   {'index':'movies','doc':{'rating':9.49},'id':100}   ```  And update by using a match query:    ```   {     'index':'movies',     'doc':{'rating':9.49},     'query':     {       'bool':       {         'must':         [           {'query_string':'new movie'}         ]       }     }   }   ```   The match query has same syntax as for searching. Responds with an object that tells how many documents where updated in format:     ```   {'_index':'products','updated':1}   ``` 
-
-### Example
-```csharp
-using System.Collections.Generic;
-using System.Diagnostics;
-using System.Net.Http;
-using ManticoreSearch.Api;
-using ManticoreSearch.Client;
-using ManticoreSearch.Model;
-
-namespace Example
-{
-    public class UpdateExample
-    {
-        public static void Main()
-        {
-            Configuration config = new Configuration();
-            config.BasePath = "http://localhost:9408";
-            // create instances of HttpClient, HttpClientHandler to be reused later with different Api classes
-            HttpClient httpClient = new HttpClient();
-            HttpClientHandler httpClientHandler = new HttpClientHandler();
-            var apiInstance = new IndexApi(httpClient, config, httpClientHandler);
-            var updateDocumentRequest = new UpdateDocumentRequest(); // UpdateDocumentRequest | 
-
-            try
-            {
-                // Update a document in an index
-                UpdateResponse result = apiInstance.Update(updateDocumentRequest);
-                Debug.WriteLine(result);
-            }
-            catch (ApiException  e)
-            {
-                Debug.Print("Exception when calling IndexApi.Update: " + e.Message);
-                Debug.Print("Status Code: " + e.ErrorCode);
-                Debug.Print(e.StackTrace);
-            }
-        }
-    }
-}
-```
-
-#### Using the UpdateWithHttpInfo variant
-This returns an ApiResponse object which contains the response data, status code and headers.
-
-```csharp
-try
-{
-    // Update a document in an index
-    ApiResponse<UpdateResponse> response = apiInstance.UpdateWithHttpInfo(updateDocumentRequest);
-    Debug.Write("Status Code: " + response.StatusCode);
-    Debug.Write("Response Headers: " + response.Headers);
-    Debug.Write("Response Body: " + response.Data);
-}
-catch (ApiException e)
-{
-    Debug.Print("Exception when calling IndexApi.UpdateWithHttpInfo: " + e.Message);
-    Debug.Print("Status Code: " + e.ErrorCode);
-    Debug.Print(e.StackTrace);
-}
-```
-
-### Parameters
-
-| Name | Type | Description | Notes |
-|------|------|-------------|-------|
-| **updateDocumentRequest** | [**UpdateDocumentRequest**](UpdateDocumentRequest.md) |  |  |
-
-### Return type
-
-[**UpdateResponse**](UpdateResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
- - **Content-Type**: application/json
- - **Accept**: application/json
-
-
-### HTTP response details
-| Status code | Description | Response headers |
-|-------------|-------------|------------------|
-| **200** | item updated |  -  |
-| **0** | error |  -  |
-
-[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/InsertDocumentRequest.md b/out/manticoresearch-csharp-actual/docs/InsertDocumentRequest.md
deleted file mode 100755
index 4b778a7..0000000
--- a/out/manticoresearch-csharp-actual/docs/InsertDocumentRequest.md
+++ /dev/null
@@ -1,16 +0,0 @@
-# ManticoreSearch.Model.InsertDocumentRequest
-Object with document data. 
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Index** | **string** | Name of the index | 
-**Cluster** | **string** | cluster name | [optional] 
-**Id** | **long** | Document ID.  | [optional] 
-**Doc** | **Dictionary&lt;string, Object&gt;** | Object with document data  | 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/MatchFilter.md b/out/manticoresearch-csharp-actual/docs/MatchFilter.md
deleted file mode 100755
index f7c34ad..0000000
--- a/out/manticoresearch-csharp-actual/docs/MatchFilter.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# ManticoreSearch.Model.MatchFilter
-Query match filter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**QueryString** | **string** |  | [default to ""]
-**QueryFields** | **string** |  | [default to "*"]
-
-[[Using in search requests]](SearchRequest.md#MatchFilter)
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/MatchOp.md b/out/manticoresearch-csharp-actual/docs/MatchOp.md
deleted file mode 100755
index 9cf332c..0000000
--- a/out/manticoresearch-csharp-actual/docs/MatchOp.md
+++ /dev/null
@@ -1,13 +0,0 @@
-# ManticoreSearch.Model.MatchOp
-Query match expression with logical operator
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**QueryInfo** | **Object** |  | 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/MatchOpFilter.md b/out/manticoresearch-csharp-actual/docs/MatchOpFilter.md
deleted file mode 100755
index 04812a7..0000000
--- a/out/manticoresearch-csharp-actual/docs/MatchOpFilter.md
+++ /dev/null
@@ -1,16 +0,0 @@
-# ManticoreSearch.Model.MatchOpFilter
-Query match expression
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**QueryString** | **string** |  | 
-**QueryFields** | **string** |  | 
-**Operator** | **string** |  | 
-
-[[Using in search requests]](SearchRequest.md#MatchOpFilter)
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/MatchPhraseFilter.md b/out/manticoresearch-csharp-actual/docs/MatchPhraseFilter.md
deleted file mode 100755
index d6aeaab..0000000
--- a/out/manticoresearch-csharp-actual/docs/MatchPhraseFilter.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# ManticoreSearch.Model.MatchPhraseFilter
-Query match expression
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**QueryPhrase** | **string** |  | 
-**QueryFields** | **string** |  | 
-
-[[Using in search requests]](SearchRequest.md#MatchPhraseFilter)
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/NotFilterBoolean.md b/out/manticoresearch-csharp-actual/docs/NotFilterBoolean.md
deleted file mode 100755
index 1021f23..0000000
--- a/out/manticoresearch-csharp-actual/docs/NotFilterBoolean.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# ManticoreSearch.Model.NotFilterBoolean
-Query filter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**FilterField** | **string** |  | 
-**Operation** | **string** |  | 
-**FilterValue** | **bool** |  | 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/NotFilterNumber.md b/out/manticoresearch-csharp-actual/docs/NotFilterNumber.md
deleted file mode 100755
index 6e84d8a..0000000
--- a/out/manticoresearch-csharp-actual/docs/NotFilterNumber.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# ManticoreSearch.Model.NotFilterNumber
-Query filter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**FilterField** | **string** |  | 
-**Operation** | **string** |  | 
-**FilterValue** | **decimal** |  | 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/NotFilterString.md b/out/manticoresearch-csharp-actual/docs/NotFilterString.md
deleted file mode 100755
index 734192c..0000000
--- a/out/manticoresearch-csharp-actual/docs/NotFilterString.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# ManticoreSearch.Model.NotFilterString
-Query filter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**FilterField** | **string** |  | 
-**Operation** | **string** |  | 
-**FilterValue** | **string** |  | 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/PercolateRequest.md b/out/manticoresearch-csharp-actual/docs/PercolateRequest.md
deleted file mode 100755
index ee0ded6..0000000
--- a/out/manticoresearch-csharp-actual/docs/PercolateRequest.md
+++ /dev/null
@@ -1,13 +0,0 @@
-# ManticoreSearch.Model.PercolateRequest
-Object with documents to percolate
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Query** | [**PercolateRequestQuery**](PercolateRequestQuery.md) |  | 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/PercolateRequestQuery.md b/out/manticoresearch-csharp-actual/docs/PercolateRequestQuery.md
deleted file mode 100755
index f014b2c..0000000
--- a/out/manticoresearch-csharp-actual/docs/PercolateRequestQuery.md
+++ /dev/null
@@ -1,12 +0,0 @@
-# ManticoreSearch.Model.PercolateRequestQuery
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Percolate** | **Object** |  | 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/QueryFilter.md b/out/manticoresearch-csharp-actual/docs/QueryFilter.md
deleted file mode 100755
index 4307405..0000000
--- a/out/manticoresearch-csharp-actual/docs/QueryFilter.md
+++ /dev/null
@@ -1,13 +0,0 @@
-# ManticoreSearch.Model.QueryFilter
-Query string filter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**QueryString** | **string** |  | 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/RangeFilter.md b/out/manticoresearch-csharp-actual/docs/RangeFilter.md
deleted file mode 100755
index e99af1a..0000000
--- a/out/manticoresearch-csharp-actual/docs/RangeFilter.md
+++ /dev/null
@@ -1,18 +0,0 @@
-# ManticoreSearch.Model.RangeFilter
-Range attribute filter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Field** | **string** |  | 
-**Lte** | **decimal?** |  | [optional] 
-**Gte** | **decimal?** |  | [optional] 
-**Lt** | **decimal?** |  | [optional] 
-**Gt** | **decimal?** |  | [optional] 
-
-[[Using in search requests]](SearchRequest.md#RangeFilter)
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/SearchApi.md b/out/manticoresearch-csharp-actual/docs/SearchApi.md
deleted file mode 100755
index 7427c48..0000000
--- a/out/manticoresearch-csharp-actual/docs/SearchApi.md
+++ /dev/null
@@ -1,308 +0,0 @@
-# ManticoreSearch.Api.SearchApi
-
-All URIs are relative to *http://127.0.0.1:9308*
-
-| Method | HTTP request | Description |
-|--------|--------------|-------------|
-| [**Search**](SearchApi.md#search) | **POST** /search | Performs a search |
-| [**Percolate**](SearchApi.md#percolate) | **POST** /pq/{index}/search | Perform a reverse search on a percolate index |
-
-## **Search**
-> SearchResponse Search (SearchRequest searchRequest)
-
-Performs a search on an index. 
-
-The method expects an object with the following mandatory properties:
-        
-* the name of the index to search | string
-        
-For details, see the documentation on [**SearchRequest**](SearchRequest.md)
-
-The method returns an object with the following properties:
-        
-- hits: an object with the following properties:
-  - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:
-    - _id: the ID of the matched document.
-    - _score: the score of the matched document.
-    - _source: the source data of the matched document.
-  - total: the total number of hits found.
-- timed_out: a boolean indicating whether the query timed out.
-- took: the time taken to execute the search query.
-
-In addition, if profiling is enabled, the response will include an additional array with profiling information attached.
-
-Here is an example search response:
-```   
-{
-  'took':10,
-  'timed_out':false,
-  'hits':
-  {
-    'total':2,
-    'hits':
-    [
-      {
-        '_id':'1',
-        '_score':1,
-        _source':{'gid':11}
-      },
-      {
-        '_id':'2',
-        '_score':1,
-        '_source':{'gid':12}
-      }
-    ]
-  }
-}   
-```  
-
-For more information about the match query syntax and additional parameters that can be added to  request and response, please check: https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON. 
-
-### Example
-```csharp
-using System.Collections.Generic;
-using System.Diagnostics;
-using System.Net.Http;
-using ManticoreSearch.Api;
-using ManticoreSearch.Client;
-using ManticoreSearch.Model;
-
-namespace Example
-{
-    public class SearchExample
-    {
-        public static void Main()
-        {
-            Configuration config = new Configuration();
-            config.BasePath = "http://127.0.0.1:9308";
-            // create instances of HttpClient, HttpClientHandler to be reused later with different Api classes
-            HttpClient httpClient = new HttpClient();
-            HttpClientHandler httpClientHandler = new HttpClientHandler();
-            var apiInstance = new SearchApi(httpClient, config, httpClientHandler);
-
-			// Create SearchRequest
-            var searchRequest = new SearchRequest("test");
-            searchRequest.FulltextFilter = new QueryFilter("Title 1"); 
-
-            try
-            {
-                // Perform a search
-                SearchResponse result = apiInstance.Search(searchRequest);
-                Debug.WriteLine(result);
-            }
-            catch (ApiException  e)
-            {
-                Debug.Print("Exception when calling SearchApi.Search: " + e.Message);
-                Debug.Print("Status Code: " + e.ErrorCode);
-                Debug.Print(e.StackTrace);
-            }
-        }
-    }
-}
-```
-
-### Parameters
-
-| Name | Type | Description | Notes |
-|------|------|-------------|-------|
-| **searchRequest** | [**SearchRequest**](SearchRequest.md) |  |  |
-
-### Return type
-
-[**SearchResponse**](SearchResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
- - **Content-Type**: application/json
- - **Accept**: application/json
-
-
-### HTTP response details
-| Status code | Description |
-|-------------|-------------|
-| **200** | Success, query processed |
-| **500** | Server Error |
-
-[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
-
-
-## **Percolate**
-> SearchResponse Percolate (string index, PercolateRequest percolateRequest)
-
-Perform a reverse search on a percolate index
-
-Performs a percolate search. 
-This method must be used only on percolate indexes.
-
-Expects two parameters: the index name and an object with a document or an array of documents to search by.
-Here is an example of the object with a single document:
-
-```
-{
-  "query":
-  {
-    "percolate":
-    {
-      "document":
-      {
-        "content":"sample content"
-      }
-    }
-  }
-}
-```
-
-Responds with an object with matched stored queries:     
-```   
-{
-  'timed_out':false,
-  'hits':
-  {
-    'total':2,
-    'max_score':1,
-    'hits':
-    [
-      {
-        '_index':'idx_pq_1',
-        '_type':'doc',
-        '_id':'2',
-        '_score':'1',
-        '_source':
-        {
-          'query':
-          {
-            'match':{'title':'some'}
-          }
-        }
-      },
-      {
-        '_index':'idx_pq_1',
-        '_type':'doc',
-        '_id':'5',
-        '_score':'1',
-        '_source':
-        {
-          'query':{'ql':'some | none'}
-        }
-      }
-    ]
-  }
-}   
-``` 
-
-And here is an example of the object with multiple documents:
-
-```
-{
-  "query":
-  {
-    "percolate":
-    {
-      "documents": [
-        {
-          "content":"sample content"
-        },
-        {
-          "content":"another sample content"
-        }
-      ]
-    }
-  }
-}
-```
-
-
-### Example
-```csharp
-using System.Collections.Generic;
-using System.Diagnostics;
-using System.Net.Http;
-using ManticoreSearch.Api;
-using ManticoreSearch.Client;
-using ManticoreSearch.Model;
-
-namespace Example
-{
-    public class PercolateExample
-    {
-        public static void Main()
-        {
-            Configuration config = new Configuration();
-            config.BasePath = "http://127.0.0.1:9308";
-            // create instances of HttpClient, HttpClientHandler to be reused later with different Api classes
-            HttpClient httpClient = new HttpClient();
-            HttpClientHandler httpClientHandler = new HttpClientHandler();
-            var apiInstance = new SearchApi(httpClient, config, httpClientHandler);
-            var index = "index_example";  // string | Name of the percolate index
-            var percolateRequest = new PercolateRequest(); // PercolateRequest | 
-
-            try
-            {
-                // Perform reverse search on a percolate index
-                SearchResponse result = apiInstance.Percolate(index, percolateRequest);
-                Debug.WriteLine(result);
-            }
-            catch (ApiException  e)
-            {
-                Debug.Print("Exception when calling SearchApi.Percolate: " + e.Message);
-                Debug.Print("Status Code: " + e.ErrorCode);
-                Debug.Print(e.StackTrace);
-            }
-        }
-    }
-}
-```
-
-#### Using the PercolateWithHttpInfo variant
-This returns an ApiResponse object which contains the response data, status code and headers.
-
-```csharp
-try
-{
-    // Perform reverse search on a percolate index
-    ApiResponse<SearchResponse> response = apiInstance.PercolateWithHttpInfo(index, percolateRequest);
-    Debug.Write("Status Code: " + response.StatusCode);
-    Debug.Write("Response Headers: " + response.Headers);
-    Debug.Write("Response Body: " + response.Data);
-}
-catch (ApiException e)
-{
-    Debug.Print("Exception when calling SearchApi.PercolateWithHttpInfo: " + e.Message);
-    Debug.Print("Status Code: " + e.ErrorCode);
-    Debug.Print(e.StackTrace);
-}
-```
-
-### Parameters
-
-| Name | Type | Description | Notes |
-|------|------|-------------|-------|
-| **index** | **string** | Name of the percolate index |  |
-| **percolateRequest** | [**PercolateRequest**](PercolateRequest.md) |  |  |
-
-### Return type
-
-[**SearchResponse**](SearchResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
- - **Content-Type**: application/json
- - **Accept**: application/json
-
-
-### HTTP response details
-| Status code | Description |
-|-------------|-------------|
-| **200** | Success, query processed |
-| **500** | Server error |
-
-[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/SearchRequest.md b/out/manticoresearch-csharp-actual/docs/SearchRequest.md
deleted file mode 100755
index 6c7414e..0000000
--- a/out/manticoresearch-csharp-actual/docs/SearchRequest.md
+++ /dev/null
@@ -1,373 +0,0 @@
-# ManticoreSearch.Model.SearchRequest
-Request object for search operation
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Index** | **string** |  | [default to ""]
-**Query** | **Object** |  | [optional] 
-**FulltextFilter** | **Object** |  | [optional] 
-**AttrFilter** | **Object** |  | [optional] 
-**Limit** | **int** |  | [optional] 
-**Offset** | **int** |  | [optional] 
-**MaxMatches** | **int** |  | [optional] 
-**Sort** | **List&lt;Object&gt;** |  | [optional] 
-**Aggs** | [**Dictionary&lt;string, Aggregation&gt;**](Aggregation.md) |  | [optional] 
-**Expressions** | **Dictionary&lt;string, string&gt;** |  | [optional] 
-**Highlight** | [**Highlight**](Highlight.md) |  | [optional] 
-**Source** | **Object** |  | [optional] 
-**Options** | **Dictionary&lt;string, Object&gt;** |  | [optional] 
-**Profile** | **bool** |  | [optional] 
-**TrackScores** | **bool** |  | [optional] 
-
-
-## Building a search request
-
-[[Docs on search options in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Options#Search-options)
-```csharp
-object query =  new { query_string="Star" };
-var searchRequest = new SearchRequest("movies", query);
-
-searchRequest.Limit = 10;
-searchRequest.TrackScores = true;
-searchRequest.Options = new Dictionary<string, Object>();
-searchRequest.Options["cutoff"] = 5;
-searchRequest.Options["ranker"] = "bm25";
-searchRequest.Source = "title";
-
-SearchResponse result = apiInstance.Search(searchRequest);
-Debug.WriteLine(result);
-```
-
-### SourceByRules
-
-[[SourceByRules - input parameters]](SourceByRules.md)
-
-[[Docs on the `source` property in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Search_results#Source-selection)
-```csharp
-//Setting the `Source` property with an auxiliary object:
-object query =  new { query_string="Star" };
-var searchRequest = new SearchRequest("movies", query);
-
-var includes = new List<string> {"title", "year"};
-var excludes = new List<string> {"code"};
-searchRequest.Source = new SourceByRules(includes, excludes);
-
-SearchResponse result = apiInstance.Search(searchRequest);
-Debug.WriteLine(result);
-```
-
-### Sort
-```csharp
-//Setting the `Sort` property:
-object query =  new { query_string="Star" };
-var searchRequest = new SearchRequest("movies", query);
-
-searchRequest.Sort = new List<Object> {"year"};
-
-SearchResponse result = apiInstance.Search(searchRequest);
-Debug.WriteLine(result);
-```
-
-### SortOrder
-
-[[SortOrder - input parameters]](SortOrder.md)
-
-### SortMVA
-
-[[SortMVA - input parameters]](SortMVA.md)
-
-[[Docs on sorting in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Sorting_and_ranking#HTTP)
-```csharp
-//Setting the `Sort` property with an auxiliary object:
-object query =  new { query_string="Star" };
-var searchRequest = new SearchRequest("movies", query);
-
-searchRequest.Sort = new List<Object>();
-var sort2 = new SortOrder("rating", SortOrder.OrderEnum.Asc);
-searchRequest.Sort.Add(sort2);
-var sort3 = new SortMVA("code", SortMVA.OrderEnum.Desc, SortMVA.ModeEnum.Max);
-searchRequest.Sort.Add(sort3);
-
-SearchResponse result = apiInstance.Search(searchRequest);
-Debug.WriteLine(result);
-```
-
-### Expressions
-
-[[Docs on expressions in Manticore Search Manual expressions]](https://manual.manticoresearch.com/Searching/Expressions#Expressions-in-HTTP-JSON)
-```csharp    
-//Setting the `expressions` property:
-object query =  new { query_string="Star" };
-var searchRequest = new SearchRequest("movies", query);
-
-searchRequest.Expressions = new Dictionary<string, string> { {"expr", "min(year,2900)"} };
-searchRequest.Expressions["expr2"] = "max(year,2100)";
-
-SearchResponse result = apiInstance.Search(searchRequest);
-Debug.WriteLine(result);
-```
-
-### Aggregation
-
-[[Aggregation - input parameters]](Aggregation.md)
-
-[[Docs on aggregations in Manticore Search Manual](https://manual.manticoresearch.com/Searching/Faceted_search#Aggregations)
-```csharp    
-//Setting the `aggs` property with an auxiliary object:
-object query =  new { query_string="Star" };
-var searchRequest = new SearchRequest("movies", query);
-
-var aggTerms = new AggregationTerms("year", 10);
-var agg1 = new Aggregation(aggTerms);
-searchRequest.Aggs = new Dictionary<string, Aggregation> { {"agg1", agg1} };
-
-aggTerms = new AggregationTerms("rating"); 
-var sortExpr = new AggregationSortInnerValue("asc");
-var sort = new Dictionary<string, AggregationSortInnerValue> { { "rating", sortExpr} };
-var aggSort = new List<Dictionary<string, AggregationSortInnerValue>> {sort};
-searchRequest.Aggs["agg2"] = new Aggregation(aggTerms, aggSort);
-
-SearchResponse result = apiInstance.Search(searchRequest);
-Debug.WriteLine(result);
-```
-
-### Highlight
-
-[[Highlight - input parameters]](Highlight.md)
-
-[[Docs on highlighting in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Highlighting#Highlighting)
-```csharp
-//Settting the `highlight` property with an auxiliary object:
-object query =  new { query_string="Star" };
-var searchRequest = new SearchRequest("movies", query);
-
-var highlight = new Highlight();
-highlight.Fieldnames = new List<string> {"title"};
-highlight.PostTags = "</post_tag>";
-highlight.Encoder = Highlight.EncoderEnum.Default;
-highlight.SnippetBoundary = Highlight.SnippetBoundaryEnum.Sentence;
-searchRequest.Highlight = highlight;
-
-SearchResponse result = apiInstance.Search(searchRequest);
-Debug.WriteLine(result);
-```
-
-#### HighlightField
-
-[[HighlightField - input parameters]](HighlightField.md)
-
-[[Docs on highlight fields in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Highlighting#Highlighting)
-```csharp
-// settting `highlight.fields` property with an auxiliary HighlightField object
-object query =  new { query_string="Star" };
-var searchRequest = new SearchRequest("movies", query);
-
-var highlight = new Highlight();
-var highlightField = new HighlightField("title");
-highlightField.Limit = 5;
-highlight.Fields = new List<HighlightField> {highlightField};
-
-var highlightField2 = new HighlightField("plot");
-highlightField2.LimitWords = 10;
-highlight.Fields.Add(highlightField2);
-searchRequest.Highlight = highlight;
-
-SearchResponse result = apiInstance.Search(searchRequest);
-Debug.WriteLine(result);
-```
-
-### FulltextFilter
-#### QueryFilter
-
-[[Docs on fulltext filters in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON)
-
-[[QueryFilter - input parameters]](QueryFilter.md)
-```csharp    
-//Setting the `FulltextFilter` property using different fulltext filter objects:
-
-//Using a QueryFilter object
-var searchRequest = new SearchRequest("movies");
-
-searchRequest.FulltextFilter = new QueryFilter("Star Trek 2");
-
-SearchResponse result = apiInstance.Search(searchRequest);
-Debug.WriteLine(result);
-```
-
-#### MatchFilter
-
-[[MatchFilter - input parameters]](MatchFilter.md)
-```csharp    
-//Using a MatchFilter object
-var searchRequest = new SearchRequest("movies");
-
-searchRequest.FulltextFilter = new MatchFilter("Nemesis", "title");
-
-SearchResponse result = apiInstance.Search(searchRequest);
-Debug.WriteLine(result);
-```
-
-#### MatchPhraseFilter
-
-[[MatchPhraseFilter - input parameters]](MatchPhraseFilter.md)
-```csharp    
-//Using a MatchPhraseFilter object
-var searchRequest = new SearchRequest("movies");
-
-searchRequest.FulltextFilter = new MatchPhraseFilter("Star Trek 2", "title");
-
-SearchResponse result = apiInstance.Search(searchRequest);
-Debug.WriteLine(result);
-```
-
-#### MatchOpFilter
-
-[[MatchOpFilter - input parameters]](MatchOpFilter.md)
-```csharp
-//Using a MatchOpFilter object
-var searchRequest = new SearchRequest("movies");
-
-searchRequest.FulltextFilter = new MatchOpFilter("Enterprise test", "title,plot", MatchOpFilter.OperatorEnum.Or);
-
-SearchResponse result = apiInstance.Search(searchRequest);
-Debug.WriteLine(result);
-```    
-
-### AttrFilter
-#### EqualsFilter
-
-[[EqualsFilter - input parameters]](EqualsFilter.md)
-
-[[Docs on equality filters in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Filters#Equality-filters)
-```csharp
-//Setting the `AttrFilter` property using different attribute filter objects:
-
-//Using an EqualsFilter object
-var searchRequest = new SearchRequest("movies");
-
-searchRequest.AttrFilter = new EqualsFilter("year", 2003);
-
-SearchResponse result = apiInstance.Search(searchRequest);
-Debug.WriteLine(result);
-```
-
-#### InFilter
-
-[[InFilter - input parameters]](InFilter.md)
-
-[[Docs on set filters in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Filters#Set-filters)
-```csharp
-//Using InFilter object
-var searchRequest = new SearchRequest("movies");
-
-var inFilter = new InFilter("year", new List<Object> {2001, 2002});
-var addValues = new List<Object> {10,11};
-inFilter.Values.AddRange(addValues);
-searchRequest.AttrFilter = inFilter;
-
-SearchResponse result = apiInstance.Search(searchRequest);
-Debug.WriteLine(result);
-```
-
-#### RangeFilter
-
-[[RangeFilter - input parameters]](RangeFilter.md)
-
-[[Docs on range filters in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Filters#Range-filters)
-```csharp
-//Using a RangeFilter object
-var searchRequest = new SearchRequest("movies");
-
-var rangeFilter = new RangeFilter("year");
-rangeFilter.Lte = 2002;
-rangeFilter.Gte = 1000;
-searchRequest.AttrFilter = rangeFilter;
-
-SearchResponse result = apiInstance.Search(searchRequest);
-Debug.WriteLine(result);
-```
-
-#### GeoDistanceFilter
-
-[[GeoDistanceFilter - input parameters]](GeoDistanceFilter.md)
-
-[[Docs on geo distance filters in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Filters#Geo-distance-filters)
-```csharp
-//Using a GeoDistanceFilter object
-var searchRequest = new SearchRequest("geo");
-
-var geoFilter = new GeoDistanceFilter();
-var locAnchor = new GeoDistanceFilterLocationAnchor(10, 20);
-geoFilter.LocationAnchor = locAnchor;
-geoFilter.LocationSource = "field3,field4";
-geoFilter.DistanceType = GeoDistanceFilter.DistanceTypeEnum.Adaptive;
-geoFilter.Distance = "100km";
-searchRequest.AttrFilter = geoFilter;
-
-SearchResponse result = apiInstance.Search(searchRequest);
-Debug.WriteLine(result);
-```
-
-#### BoolFilter
-
-[[BoolFilter - input parameters]](BoolFilter.md)
-
-[[Docs on bool queries in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Filters#bool-query)
-```csharp
-//Setting the `AttrFilter` property using a bool filter object:
-var searchRequest = new SearchRequest("movies");
-
-var boolFilter = new BoolFilter();
-boolFilter.Must = new List<Object> { new EqualsFilter("year", 2001) };
-rangeFilter = new RangeFilter("rating");
-rangeFilter.Lte = 20;
-boolFilter.Must.Add(rangeFilter);
-searchRequest.AttrFilter = boolFilter;
-
-SearchResponse result = apiInstance.Search(searchRequest);
-Debug.WriteLine(result);
-
-boolFilter.MustNot = new List<Object> { new EqualsFilter("year", 2001) };
-searchRequest.AttrFilter = boolFilter;
-
-result = apiInstance.Search(searchRequest);
-Debug.WriteLine(result);
-
-//Using nested bool filters
-boolFilter = new BoolFilter();
-	
-var fulltextFilter = new MatchFilter("Star", "title");
-var nestedBoolFilter = new BoolFilter();
-nestedBoolFilter.Should = new List<Object> { new EqualsFilter("rating", 6.5), fulltextFilter };
-boolFilter.Must = new List<Object> {nestedBoolFilter};
-searchRequest.AttrFilter = boolFilter;
-
-result = apiInstance.Search(searchRequest);
-Debug.WriteLine(result);
-```
-
-## Using the SearchWithHttpInfo variant
-This returns an ApiResponse object which contains the response data, status code and headers.
-
-```csharp
-try
-{
-    // Performs a search
-    ApiResponse<SearchResponse> response = apiInstance.SearchWithHttpInfo(searchRequest);
-    Debug.Write("Status Code: " + response.StatusCode);
-    Debug.Write("Response Headers: " + response.Headers);
-    Debug.Write("Response Body: " + response.Data);
-}
-catch (ApiException e)
-{
-    Debug.Print("Exception when calling SearchApi.SearchWithHttpInfo: " + e.Message);
-    Debug.Print("Status Code: " + e.ErrorCode);
-    Debug.Print(e.StackTrace);
-}
-```
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/SearchResponse.md b/out/manticoresearch-csharp-actual/docs/SearchResponse.md
deleted file mode 100755
index be346d7..0000000
--- a/out/manticoresearch-csharp-actual/docs/SearchResponse.md
+++ /dev/null
@@ -1,18 +0,0 @@
-# ManticoreSearch.Model.SearchResponse
-Response object of a search request
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Took** | **int** |  | [optional] 
-**TimedOut** | **bool** |  | [optional] 
-**Aggregations** | **Dictionary&lt;string, Object&gt;** |  | [optional] 
-**Hits** | [**SearchResponseHits**](SearchResponseHits.md) |  | [optional] 
-**Profile** | **Object** |  | [optional] 
-**Warning** | **Dictionary&lt;string, Object&gt;** |  | [optional] 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/SearchResponseHits.md b/out/manticoresearch-csharp-actual/docs/SearchResponseHits.md
deleted file mode 100755
index fd33634..0000000
--- a/out/manticoresearch-csharp-actual/docs/SearchResponseHits.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# ManticoreSearch.Model.SearchResponseHits
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**MaxScore** | **int** |  | [optional] 
-**Total** | **int** |  | [optional] 
-**TotalRelation** | **string** |  | [optional] 
-**Hits** | **List&lt;Object&gt;** |  | [optional] 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/SortMVA.md b/out/manticoresearch-csharp-actual/docs/SortMVA.md
deleted file mode 100755
index 2e908cd..0000000
--- a/out/manticoresearch-csharp-actual/docs/SortMVA.md
+++ /dev/null
@@ -1,16 +0,0 @@
-# ManticoreSearch.Model.SortMVA
-Query sort expression for MVA attributes
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Attr** | **string** |  | 
-**Order** | **string** |  | 
-**Mode** | **string** |  | 
-
-[[Using in search requests]](SearchRequest.md#SortMVA)
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/SortMultiple.md b/out/manticoresearch-csharp-actual/docs/SortMultiple.md
deleted file mode 100755
index 71ef007..0000000
--- a/out/manticoresearch-csharp-actual/docs/SortMultiple.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# ManticoreSearch.Model.SortMultiple
-Query sort expression for multiple attributes
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Attrs** | **Dictionary&lt;string, Object&gt;** |  | 
-**Replace** | **bool** |  | 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/SortOrder.md b/out/manticoresearch-csharp-actual/docs/SortOrder.md
deleted file mode 100755
index 97c22c9..0000000
--- a/out/manticoresearch-csharp-actual/docs/SortOrder.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# ManticoreSearch.Model.SortOrder
-Query sort expression
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Attr** | **string** |  | 
-**Order** | **string** |  | 
-
-[[Using in search requests]](SearchRequest.md#SortOrder)
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/SourceByRules.md b/out/manticoresearch-csharp-actual/docs/SourceByRules.md
deleted file mode 100755
index e2b87b0..0000000
--- a/out/manticoresearch-csharp-actual/docs/SourceByRules.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# ManticoreSearch.Model.SourceByRules
-Query fields to be included/excluded to/from response
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Includes** | **List&lt;string&gt;** |  | 
-**Excludes** | **List&lt;string&gt;** |  | 
-
-[[Using in search requests]](SearchRequest.md#SourceByRules)
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/SuccessResponse.md b/out/manticoresearch-csharp-actual/docs/SuccessResponse.md
deleted file mode 100755
index 4689671..0000000
--- a/out/manticoresearch-csharp-actual/docs/SuccessResponse.md
+++ /dev/null
@@ -1,17 +0,0 @@
-# ManticoreSearch.Model.SuccessResponse
-Success response
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Index** | **string** |  | [optional] 
-**Id** | **long** |  | [optional] 
-**Created** | **bool** |  | [optional] 
-**Result** | **string** |  | [optional] 
-**Found** | **bool** |  | [optional] 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/UpdateDocumentRequest.md b/out/manticoresearch-csharp-actual/docs/UpdateDocumentRequest.md
deleted file mode 100755
index 35920d1..0000000
--- a/out/manticoresearch-csharp-actual/docs/UpdateDocumentRequest.md
+++ /dev/null
@@ -1,16 +0,0 @@
-# ManticoreSearch.Model.UpdateDocumentRequest
-Payload for update document
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Index** | **string** |  | 
-**Doc** | **Dictionary&lt;string, Object&gt;** | Index name | 
-**Id** | **long** | Document ID | [optional] 
-**Query** | **Dictionary&lt;string, Object&gt;** | Query tree object | [optional] 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/UpdateResponse.md b/out/manticoresearch-csharp-actual/docs/UpdateResponse.md
deleted file mode 100755
index 1ae1895..0000000
--- a/out/manticoresearch-csharp-actual/docs/UpdateResponse.md
+++ /dev/null
@@ -1,16 +0,0 @@
-# ManticoreSearch.Model.UpdateResponse
-Success response
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**Index** | **string** |  | [optional] 
-**Updated** | **int** |  | [optional] 
-**Id** | **long** |  | [optional] 
-**Result** | **string** |  | [optional] 
-
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/docs/UtilsApi.md b/out/manticoresearch-csharp-actual/docs/UtilsApi.md
deleted file mode 100755
index 7d55def..0000000
--- a/out/manticoresearch-csharp-actual/docs/UtilsApi.md
+++ /dev/null
@@ -1,106 +0,0 @@
-# ManticoreSearch.Api.UtilsApi
-
-All URIs are relative to *http://localhost:9408*
-
-| Method | HTTP request | Description |
-|--------|--------------|-------------|
-| [**Sql**](UtilsApi.md#sql) | **POST** /sql | Perform SQL requests |
-
-<a name="sql"></a>
-# **Sql**
-> List&lt;Object&gt; Sql (string body, bool? rawResponse = null)
-
-Perform SQL requests
-
-Run a query in SQL format. Expects a query string passed through `body` parameter and optional `raw_response` parameter that defines a format of response. `raw_response` can be set to `False` for Select queries only, e.g., `SELECT * FROM myindex` The query string must stay as it is, no URL encoding is needed. The response object depends on the query executed. In select mode the response has same format as `/search` operation. 
-
-### Example
-```csharp
-using System.Collections.Generic;
-using System.Diagnostics;
-using System.Net.Http;
-using ManticoreSearch.Api;
-using ManticoreSearch.Client;
-using ManticoreSearch.Model;
-
-namespace Example
-{
-    public class SqlExample
-    {
-        public static void Main()
-        {
-            Configuration config = new Configuration();
-            config.BasePath = "http://localhost:9408";
-            // create instances of HttpClient, HttpClientHandler to be reused later with different Api classes
-            HttpClient httpClient = new HttpClient();
-            HttpClientHandler httpClientHandler = new HttpClientHandler();
-            var apiInstance = new UtilsApi(httpClient, config, httpClientHandler);
-            var body = SHOW TABLES;  // string | A query parameter string. 
-            var rawResponse = true;  // bool? | Optional parameter, defines a format of response. Can be set to `False` for Select only queries and set to `True` or omitted for any type of queries:  (optional)  (default to true)
-
-            try
-            {
-                // Perform SQL requests
-                List<Object> result = apiInstance.Sql(body, rawResponse);
-                Debug.WriteLine(result);
-            }
-            catch (ApiException  e)
-            {
-                Debug.Print("Exception when calling UtilsApi.Sql: " + e.Message);
-                Debug.Print("Status Code: " + e.ErrorCode);
-                Debug.Print(e.StackTrace);
-            }
-        }
-    }
-}
-```
-
-#### Using the SqlWithHttpInfo variant
-This returns an ApiResponse object which contains the response data, status code and headers.
-
-```csharp
-try
-{
-    // Perform SQL requests
-    ApiResponse<List<Object>> response = apiInstance.SqlWithHttpInfo(body, rawResponse);
-    Debug.Write("Status Code: " + response.StatusCode);
-    Debug.Write("Response Headers: " + response.Headers);
-    Debug.Write("Response Body: " + response.Data);
-}
-catch (ApiException e)
-{
-    Debug.Print("Exception when calling UtilsApi.SqlWithHttpInfo: " + e.Message);
-    Debug.Print("Status Code: " + e.ErrorCode);
-    Debug.Print(e.StackTrace);
-}
-```
-
-### Parameters
-
-| Name | Type | Description | Notes |
-|------|------|-------------|-------|
-| **body** | **string** | A query parameter string.  |  |
-| **rawResponse** | **bool?** | Optional parameter, defines a format of response. Can be set to &#x60;False&#x60; for Select only queries and set to &#x60;True&#x60; or omitted for any type of queries:  | [optional] [default to true] |
-
-### Return type
-
-**List<Object>**
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
- - **Content-Type**: text/plain
- - **Accept**: application/json
-
-
-### HTTP response details
-| Status code | Description | Response headers |
-|-------------|-------------|------------------|
-| **200** | In case of SELECT-only in mode none the response schema is the same as of &#x60;search&#x60;. In case of &#x60;mode&#x3D;raw&#x60; the response depends on the query executed.  |  -  |
-| **0** | error |  -  |
-
-[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-csharp-actual/git_push.sh b/out/manticoresearch-csharp-actual/git_push.sh
deleted file mode 100755
index 6340fc1..0000000
--- a/out/manticoresearch-csharp-actual/git_push.sh
+++ /dev/null
@@ -1,57 +0,0 @@
-#!/bin/sh
-# ref: https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/
-#
-# Usage example: /bin/sh ./git_push.sh wing328 openapi-petstore-perl "minor update" "gitlab.com"
-
-git_user_id=$1
-git_repo_id=$2
-release_note=$3
-git_host=$4
-
-if [ "$git_host" = "" ]; then
-    git_host="github.com"
-    echo "[INFO] No command line input provided. Set \$git_host to $git_host"
-fi
-
-if [ "$git_user_id" = "" ]; then
-    git_user_id="manticoresoftware"
-    echo "[INFO] No command line input provided. Set \$git_user_id to $git_user_id"
-fi
-
-if [ "$git_repo_id" = "" ]; then
-    git_repo_id="manticoresearch-csharp"
-    echo "[INFO] No command line input provided. Set \$git_repo_id to $git_repo_id"
-fi
-
-if [ "$release_note" = "" ]; then
-    release_note="Minor update"
-    echo "[INFO] No command line input provided. Set \$release_note to $release_note"
-fi
-
-# Initialize the local directory as a Git repository
-git init
-
-# Adds the files in the local repository and stages them for commit.
-git add .
-
-# Commits the tracked changes and prepares them to be pushed to a remote repository.
-git commit -m "$release_note"
-
-# Sets the new remote
-git_remote=$(git remote)
-if [ "$git_remote" = "" ]; then # git remote not defined
-
-    if [ "$GIT_TOKEN" = "" ]; then
-        echo "[INFO] \$GIT_TOKEN (environment variable) is not set. Using the git credential in your environment."
-        git remote add origin https://${git_host}/${git_user_id}/${git_repo_id}.git
-    else
-        git remote add origin https://${git_user_id}:"${GIT_TOKEN}"@${git_host}/${git_user_id}/${git_repo_id}.git
-    fi
-
-fi
-
-git pull origin master
-
-# Pushes (Forces) the changes in the local repository up to the remote repository
-echo "Git pushing to https://${git_host}/${git_user_id}/${git_repo_id}.git"
-git push origin master 2>&1 | grep -v 'To https'
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Api/IndexApiTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Api/IndexApiTests.cs
deleted file mode 100755
index dca4bb0..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Api/IndexApiTests.cs
+++ /dev/null
@@ -1,395 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-using System;
-using System.IO;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.Reflection;
-using Xunit;
-using System.Net.Http;
-using System.Text.Json;
-
-using ManticoreSearch.Client;
-using ManticoreSearch.Api;
-// uncomment below to import models
-using ManticoreSearch.Model;
-
-namespace ManticoreSearch.Test.Api
-{
-    /// <summary>
-    ///  Class for testing IndexApi
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the API endpoint.
-    /// </remarks>
-    public class IndexApiTests : IDisposable
-    {
-    	private IndexApi instance;
-        private HttpClientHandler httpClientHandler;
-        private HttpClient httpClient;
-        private Configuration config;
-
-        private Dictionary<string, Dictionary<string,Func<Object>>> implementedTests;
-
-        private void InitTests()
-        {
-            config = new Configuration();
-            config.BasePath = "http://localhost:9408";
-            httpClient = new HttpClient();
-            httpClientHandler = new HttpClientHandler();
-            instance = new IndexApi(httpClient, config, httpClientHandler);
-        }
-                
-        private object CheckTest(string testName)
-        {
-            Dictionary<string,Func<Object>> classTests;
-            if (implementedTests.TryGetValue("IndexApi", out classTests))
-            {
-                Func<Object> test;    
-                if (classTests.TryGetValue(testName, out test))
-                {
-                    return test();
-                }
-            }
-            return null;
-        }     
-        
-        public IndexApiTests()
-        {
-            implementedTests = new Dictionary<string, Dictionary<string,Func<Object>>>()
-            {
-                {
-                "SearchApi", 
-                    new Dictionary<string, Func<Object>>()
-                    {
-                    	{ "SearchTest", () => 
-                            {
-                            	var utilsApi = new UtilsApi();
-                        		utilsApi.Sql("DROP TABLE IF EXISTS movies", true);
-					        	utilsApi.Sql("CREATE TABLE IF NOT EXISTS movies (title text, plot text, year integer, rating float, code multi)", true);
-					        	
-					        	string[] docs = {
-									"{\"insert\": {\"index\" : \"movies\", \"id\" : 1, \"doc\" : {\"title\" : \"Star Trek 2: Nemesis\", \"plot\": \"The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.\", \"year\": 2002, \"rating\": 6.4, \"code\": [1,2,3]}}}",
-						            "{\"insert\": {\"index\" : \"movies\", \"id\" : 2, \"doc\" : {\"title\" : \"Star Trek 1: Nemesis\", \"plot\": \"The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.\", \"year\": 2001, \"rating\": 6.5, \"code\": [1,12,3]}}}",
-						            "{\"insert\": {\"index\" : \"movies\", \"id\" : 3, \"doc\" : {\"title\" : \"Star Trek 3: Nemesis\", \"plot\": \"The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.\", \"year\": 2003, \"rating\": 6.6, \"code\": [11,2,3]}}}",
-						            "{\"insert\": {\"index\" : \"movies\", \"id\" : 4, \"doc\" : {\"title\" : \"Star Trek 4: Nemesis\", \"plot\": \"The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.\", \"year\": 2003, \"rating\": 6.5, \"code\": [1,2,4]}}}"					        	
-						        };
-					        						        	
-	                			var indexApi = new IndexApi(httpClient, config, httpClientHandler);
-	            				var res = indexApi.Bulk(string.Join("\n", docs));
-	            				
-	            				var searchApi = new SearchApi();
-
-		            			var searchRequest = new SearchRequest("movies");
-		            			var searchRes = searchApi.Search(searchRequest);
-
-								object query =  new { query_string="Star" };
-								searchRequest.Query = query;
-								searchRequest.Limit = 10;
-
-								searchRes = searchApi.Search(searchRequest);
-								
-								searchRequest.Options = new Dictionary<string, Object>();
-								searchRequest.Options["cutoff"] = 5;
-								searchRequest.Options["ranker"] = "bm25";
-        						searchRequest.Source = "title";
-
-        						searchRes = searchApi.Search(searchRequest);
-        													
-	        					var includes = new List<string> {"title", "year"};
-        						var excludes = new List<string> {"code"};
-        						searchRequest.Source = new SourceByRules(includes, excludes);
-
-        						searchRes = searchApi.Search(searchRequest);
-
-	        					searchRequest.Sort = new List<Object> {"year"};
-	        					var sort2 = new SortOrder("rating", SortOrder.OrderEnum.Asc);
-	        					searchRequest.Sort.Add(sort2);
-	        					var sort3 = new SortMVA("code", SortMVA.OrderEnum.Desc, SortMVA.ModeEnum.Max);
-	        					searchRequest.Sort.Add(sort3);
-
-	        					searchRes = searchApi.Search(searchRequest);
-	        					
-	        					searchRequest.Expressions = new Dictionary<string, string> { {"expr", "min(year,2900)"} };
-	        					includes.Add("expr");
-					        	searchRequest.Expressions["expr2"] = "max(year,2100)";
-					        	includes.Add("expr2");
-					        	searchRequest.Source = new SourceByRules(includes, excludes);
-
-					        	searchRes = searchApi.Search(searchRequest);
-					        	
-					        	var aggTerms = new AggregationTerms("year", 10);
-					        	var agg1 = new Aggregation(aggTerms);
-        						searchRequest.Aggs = new Dictionary<string, Aggregation> { {"agg1", agg1} };
-        						aggTerms = new AggregationTerms("rating"); 
-        						var sortExpr = new AggregationSortInnerValue("asc");
-        						var sort = new Dictionary<string, AggregationSortInnerValue> { { "rating", sortExpr} };
-        						var aggSort = new List<Dictionary<string, AggregationSortInnerValue>> {sort};
-        						searchRequest.Aggs["agg2"] = new Aggregation(aggTerms, aggSort);
-	        					
-        						searchRes = searchApi.Search(searchRequest);
-					        	
-					        	var highlight = new Highlight();
-					        	highlight.Fieldnames = new List<string> {"title"};
- 					        	highlight.PostTags = "</post_tag>";
- 					    	    highlight.Encoder = Highlight.EncoderEnum.Default;
- 						        highlight.SnippetBoundary = Highlight.SnippetBoundaryEnum.Sentence;
- 					        	searchRequest.Highlight = highlight;
-
- 					        	searchRes = searchApi.Search(searchRequest);
-        	
-					        	var highlightField = new HighlightField("title");
-								highlightField.Limit = 5;
-								highlight.Fields = new List<HighlightField> {highlightField};
-
-								searchRes = searchApi.Search(searchRequest);
-								
-								var highlightField2 = new HighlightField("plot");
-								highlightField2.LimitWords = 10;
-					        	highlight.Fields.Add(highlightField2);
-					        	searchRequest.Highlight = highlight;
-
-					        	searchRes = searchApi.Search(searchRequest);
-
-								highlight.HighlightQuery = new Dictionary<string, Object> {{ "match",  new Dictionary<string, Object> { { "*", "Star"} } }};
-
-								searchRes = searchApi.Search(searchRequest);
-
-					        	searchRequest.FulltextFilter = new QueryFilter("Star Trek 2");
-
-					        	searchRes = searchApi.Search(searchRequest);
-
-					        	searchRequest.FulltextFilter = new MatchFilter("Nemesis", "title");
-
-					        	searchRes = searchApi.Search(searchRequest);
-
-					        	searchRequest.FulltextFilter = new MatchPhraseFilter("Star Trek 2", "title");
-
-					        	searchRes = searchApi.Search(searchRequest);
-
-					        	searchRequest.FulltextFilter = new MatchOpFilter("Enterprise test", "title,plot", MatchOpFilter.OperatorEnum.Or);
-
-					        	searchRes = searchApi.Search(searchRequest);
-					        	
-					        	searchRequest.AttrFilter = new EqualsFilter("year", 2003);
-					        	
-								searchRes = searchApi.Search(searchRequest);
-
-					        	var inFilter = new InFilter("year", new List<Object> {2001, 2002});
-					        	var addValues = new List<Object> {10,11};
-					    	    inFilter.Values.AddRange(addValues);
-						        searchRequest.AttrFilter = inFilter;
-	        
-	        					searchRes = searchApi.Search(searchRequest);
-
-	        					var rangeFilter = new RangeFilter("year");
-								rangeFilter.Lte = 2002;
-								rangeFilter.Gte = 0;
-								searchRequest.AttrFilter = rangeFilter;
-
-								searchRes = searchApi.Search(searchRequest);
-
-								var geoFilter = new GeoDistanceFilter();
-								var locAnchor = new GeoDistanceFilterLocationAnchor(10, 20);
-								geoFilter.LocationAnchor = locAnchor;
-								geoFilter.LocationSource = "year,rating";
-								geoFilter.DistanceType = GeoDistanceFilter.DistanceTypeEnum.Adaptive;
-								geoFilter.Distance = "100km";
-        						searchRequest.AttrFilter = geoFilter;
-
-								searchRes = searchApi.Search(searchRequest);
-
-        						var boolFilter = new BoolFilter();
-        						boolFilter.Must = new List<Object> { new EqualsFilter("year", 2001) };
-        						rangeFilter = new RangeFilter("rating");
-								rangeFilter.Lte = 20;
-        						boolFilter.Must.Add(rangeFilter);
-        						searchRequest.AttrFilter = boolFilter;
-
-								searchRes = searchApi.Search(searchRequest);
-        	
-        						boolFilter.MustNot = new List<Object> { new EqualsFilter("year", 2001) };
-								searchRequest.AttrFilter = boolFilter;
-
-								searchRes = searchApi.Search(searchRequest);
-								
-								var fulltextFilter = new MatchFilter("Star", "title");
-        						var nestedBoolFilter = new BoolFilter();
-        						nestedBoolFilter.Should = new List<Object> { new EqualsFilter("rating", 6.5), fulltextFilter };
-        						boolFilter.Must = new List<Object> {nestedBoolFilter};
-            					searchRequest.AttrFilter = boolFilter;
-
-								searchRes = searchApi.Search(searchRequest);
-        	
-                                return searchRes;
-                            }
-                        },
-                    }
-                 },
-                 {
-                 "IndexApi", 
-                    new Dictionary<string, Func<Object>>()
-                    {
-                        { "InsertTest", () => 
-                            {
-                            	string body = "CREATE TABLE IF NOT EXISTS test (body text, title string)";
-            					var utilsApi = new UtilsApi();
-            					utilsApi.Sql(body, true);
-                                Dictionary<string, Object> doc = new Dictionary<string, Object>(); 
-                                doc.Add("body", "test");
-                                doc.Add("title", "test");
-                                InsertDocumentRequest insertDocumentRequest = new InsertDocumentRequest(index: "test", id: 1, doc: doc);
-                                insertDocumentRequest = new InsertDocumentRequest(index: "test", id: 2, doc: doc);
-                                var obj = new IndexApi(httpClient, config, httpClientHandler);
-                                return obj.Insert(insertDocumentRequest);
-                            }
-                        },
-                        { "BulkTest", () => 
-		                	{
-		                		string body = "CREATE TABLE IF NOT EXISTS test (body text, title string)";
-            					var utilsApi = new UtilsApi();
-            					utilsApi.Sql("DROP TABLE IF EXISTS test", true);
-            					utilsApi.Sql(body, true);
-		                		body = "{\"insert\": {\"index\": \"test\", \"id\": 1, \"doc\": {\"body\": \"test\", \"title\": \"test\"}}}" + "\n";
-		                		var obj = new IndexApi(httpClient, config, httpClientHandler);
-		            			return obj.Bulk(body);
-		                	}
-		                },
-		                { "ReplaceTest", () => 
-		                	{
-								Dictionary<string, Object> doc = new Dictionary<string, Object>(); 
-		            			doc.Add("body", "test 2");
-		            			doc.Add("title", "test");
-		            			InsertDocumentRequest insertDocumentRequest = new InsertDocumentRequest(index: "test", id: 1, doc: doc);
-		            			var obj = new IndexApi(httpClient, config, httpClientHandler);
-		            			return obj.Replace(insertDocumentRequest);
-		                	}
-		                },
-		                { "UpdateTest", () => 
-		                	{
-								Dictionary<string, Object> doc = new Dictionary<string, Object>();
-					            doc.Add("title", "test 2");
-					            UpdateDocumentRequest updateDocumentRequest = new UpdateDocumentRequest(index: "test", id: 2, doc: doc);
-					            var obj = new IndexApi(httpClient, config, httpClientHandler);
-					            return obj.Update(updateDocumentRequest);
-		                	}
-		                },
-		                { "DeleteTest", () => 
-		                	{
-								DeleteDocumentRequest deleteDocumentRequest = new DeleteDocumentRequest(index: "test", id: 1);
-								var obj = new IndexApi(httpClient, config, httpClientHandler);
-		            			return obj.Delete(deleteDocumentRequest);
-		                	}
-		                },
-                    }
-                }
-            };
-
-            InitTests();
-            
-        }
-
-        public void Dispose()
-        {
-        }
-
-        /// <summary>
-        /// Test an instance of IndexApi
-        /// </summary>
-        [Fact]
-        public void InstanceTest()
-        {
-            Assert.IsType<IndexApi>(instance);
-        }
-
-        /// <summary>
-        /// Test Bulk
-        /// </summary>
-        [Fact]
-        public void BulkTest()
-        {
-            // TODO uncomment below to test the method and replace null with proper value
-            //string body = null;
-            //var response = instance.Bulk(body);
-			object response = this.CheckTest( System.Reflection.MethodBase.GetCurrentMethod().Name );
-            if (response != null)
-            {
-            	Assert.IsType<BulkResponse>(response);
-            }
-        }
-
-        /// <summary>
-        /// Test Delete
-        /// </summary>
-        [Fact]
-        public void DeleteTest()
-        {
-            // TODO uncomment below to test the method and replace null with proper value
-            //DeleteDocumentRequest deleteDocumentRequest = null;
-            //var response = instance.Delete(deleteDocumentRequest);
-			object response = this.CheckTest( System.Reflection.MethodBase.GetCurrentMethod().Name );
-            if (response != null)
-            {
-            	Assert.IsType<DeleteResponse>(response);
-            }
-        }
-
-        /// <summary>
-        /// Test Insert
-        /// </summary>
-        [Fact]
-        public void InsertTest()
-        {
-            // TODO uncomment below to test the method and replace null with proper value
-            //InsertDocumentRequest insertDocumentRequest = null;
-            //var response = instance.Insert(insertDocumentRequest);
-			object response = this.CheckTest( System.Reflection.MethodBase.GetCurrentMethod().Name );
-            if (response != null)
-            {
-            	Assert.IsType<SuccessResponse>(response);
-            }
-        }
-
-        /// <summary>
-        /// Test Replace
-        /// </summary>
-        [Fact]
-        public void ReplaceTest()
-        {
-            // TODO uncomment below to test the method and replace null with proper value
-            //InsertDocumentRequest insertDocumentRequest = null;
-            //var response = instance.Replace(insertDocumentRequest);
-			object response = this.CheckTest( System.Reflection.MethodBase.GetCurrentMethod().Name );
-            if (response != null)
-            {
-            	Assert.IsType<SuccessResponse>(response);
-            }
-        }
-
-        /// <summary>
-        /// Test Update
-        /// </summary>
-        [Fact]
-        public void UpdateTest()
-        {
-            // TODO uncomment below to test the method and replace null with proper value
-            //UpdateDocumentRequest updateDocumentRequest = null;
-            //var response = instance.Update(updateDocumentRequest);
-			object response = this.CheckTest( System.Reflection.MethodBase.GetCurrentMethod().Name );
-            if (response != null)
-            {
-            	Assert.IsType<UpdateResponse>(response);
-            }
-        }
-    }
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Api/SearchApiTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Api/SearchApiTests.cs
deleted file mode 100755
index 7fe34fc..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Api/SearchApiTests.cs
+++ /dev/null
@@ -1,348 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-using System;
-using System.IO;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.Reflection;
-using Xunit;
-using System.Net.Http;
-using System.Text.Json;
-
-using ManticoreSearch.Client;
-using ManticoreSearch.Api;
-// uncomment below to import models
-using ManticoreSearch.Model;
-
-namespace ManticoreSearch.Test.Api
-{
-    /// <summary>
-    ///  Class for testing SearchApi
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the API endpoint.
-    /// </remarks>
-    public class SearchApiTests : IDisposable
-    {
-    	private SearchApi instance;
-        private HttpClientHandler httpClientHandler;
-        private HttpClient httpClient;
-        private Configuration config;
-
-        private Dictionary<string, Dictionary<string,Func<Object>>> implementedTests;
-
-        private void InitTests()
-        {
-            config = new Configuration();
-            config.BasePath = "http://localhost:9408";
-            httpClient = new HttpClient();
-            httpClientHandler = new HttpClientHandler();
-            instance = new SearchApi(httpClient, config, httpClientHandler);
-        }
-                
-        private object CheckTest(string testName)
-        {
-            Dictionary<string,Func<Object>> classTests;
-            if (implementedTests.TryGetValue("SearchApi", out classTests))
-            {
-                Func<Object> test;    
-                if (classTests.TryGetValue(testName, out test))
-                {
-                    return test();
-                }
-            }
-            return null;
-        }     
-        
-        public SearchApiTests()
-        {
-            implementedTests = new Dictionary<string, Dictionary<string,Func<Object>>>()
-            {
-                {
-                "SearchApi", 
-                    new Dictionary<string, Func<Object>>()
-                    {
-                    	{ "SearchTest", () => 
-                            {
-                            	var utilsApi = new UtilsApi();
-                        		utilsApi.Sql("DROP TABLE IF EXISTS movies", true);
-					        	utilsApi.Sql("CREATE TABLE IF NOT EXISTS movies (title text, plot text, year integer, rating float, code multi)", true);
-					        	
-					        	string[] docs = {
-									"{\"insert\": {\"index\" : \"movies\", \"id\" : 1, \"doc\" : {\"title\" : \"Star Trek 2: Nemesis\", \"plot\": \"The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.\", \"year\": 2002, \"rating\": 6.4, \"code\": [1,2,3]}}}",
-						            "{\"insert\": {\"index\" : \"movies\", \"id\" : 2, \"doc\" : {\"title\" : \"Star Trek 1: Nemesis\", \"plot\": \"The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.\", \"year\": 2001, \"rating\": 6.5, \"code\": [1,12,3]}}}",
-						            "{\"insert\": {\"index\" : \"movies\", \"id\" : 3, \"doc\" : {\"title\" : \"Star Trek 3: Nemesis\", \"plot\": \"The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.\", \"year\": 2003, \"rating\": 6.6, \"code\": [11,2,3]}}}",
-						            "{\"insert\": {\"index\" : \"movies\", \"id\" : 4, \"doc\" : {\"title\" : \"Star Trek 4: Nemesis\", \"plot\": \"The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.\", \"year\": 2003, \"rating\": 6.5, \"code\": [1,2,4]}}}"					        	
-						        };
-					        						        	
-	                			var indexApi = new IndexApi(httpClient, config, httpClientHandler);
-	            				var res = indexApi.Bulk(string.Join("\n", docs));
-	            				
-	            				var searchApi = new SearchApi();
-
-		            			var searchRequest = new SearchRequest("movies");
-		            			var searchRes = searchApi.Search(searchRequest);
-
-								object query =  new { query_string="Star" };
-								searchRequest.Query = query;
-								searchRequest.Limit = 10;
-
-								searchRes = searchApi.Search(searchRequest);
-								
-								searchRequest.Options = new Dictionary<string, Object>();
-								searchRequest.Options["cutoff"] = 5;
-								searchRequest.Options["ranker"] = "bm25";
-        						searchRequest.Source = "title";
-
-        						searchRes = searchApi.Search(searchRequest);
-        													
-	        					var includes = new List<string> {"title", "year"};
-        						var excludes = new List<string> {"code"};
-        						searchRequest.Source = new SourceByRules(includes, excludes);
-
-        						searchRes = searchApi.Search(searchRequest);
-
-	        					searchRequest.Sort = new List<Object> {"year"};
-	        					var sort2 = new SortOrder("rating", SortOrder.OrderEnum.Asc);
-	        					searchRequest.Sort.Add(sort2);
-	        					var sort3 = new SortMVA("code", SortMVA.OrderEnum.Desc, SortMVA.ModeEnum.Max);
-	        					searchRequest.Sort.Add(sort3);
-
-	        					searchRes = searchApi.Search(searchRequest);
-	        					
-	        					searchRequest.Expressions = new Dictionary<string, string> { {"expr", "min(year,2900)"} };
-	        					includes.Add("expr");
-					        	searchRequest.Expressions["expr2"] = "max(year,2100)";
-					        	includes.Add("expr2");
-					        	searchRequest.Source = new SourceByRules(includes, excludes);
-
-					        	searchRes = searchApi.Search(searchRequest);
-					        	
-					        	var aggTerms = new AggregationTerms("year", 10);
-					        	var agg1 = new Aggregation(aggTerms);
-        						searchRequest.Aggs = new Dictionary<string, Aggregation> { {"agg1", agg1} };
-        						aggTerms = new AggregationTerms("rating"); 
-        						var sortExpr = new AggregationSortInnerValue("asc");
-        						var sort = new Dictionary<string, AggregationSortInnerValue> { { "rating", sortExpr} };
-        						var aggSort = new List<Dictionary<string, AggregationSortInnerValue>> {sort};
-        						searchRequest.Aggs["agg2"] = new Aggregation(aggTerms, aggSort);
-	        					
-        						searchRes = searchApi.Search(searchRequest);
-					        	
-					        	var highlight = new Highlight();
-					        	highlight.Fieldnames = new List<string> {"title"};
- 					        	highlight.PostTags = "</post_tag>";
- 					    	    highlight.Encoder = Highlight.EncoderEnum.Default;
- 						        highlight.SnippetBoundary = Highlight.SnippetBoundaryEnum.Sentence;
- 					        	searchRequest.Highlight = highlight;
-
- 					        	searchRes = searchApi.Search(searchRequest);
-        	
-					        	var highlightField = new HighlightField("title");
-								highlightField.Limit = 5;
-								highlight.Fields = new List<HighlightField> {highlightField};
-
-								searchRes = searchApi.Search(searchRequest);
-								
-								var highlightField2 = new HighlightField("plot");
-								highlightField2.LimitWords = 10;
-					        	highlight.Fields.Add(highlightField2);
-					        	searchRequest.Highlight = highlight;
-
-					        	searchRes = searchApi.Search(searchRequest);
-
-								highlight.HighlightQuery = new Dictionary<string, Object> {{ "match",  new Dictionary<string, Object> { { "*", "Star"} } }};
-
-								searchRes = searchApi.Search(searchRequest);
-
-					        	searchRequest.FulltextFilter = new QueryFilter("Star Trek 2");
-
-					        	searchRes = searchApi.Search(searchRequest);
-
-					        	searchRequest.FulltextFilter = new MatchFilter("Nemesis", "title");
-
-					        	searchRes = searchApi.Search(searchRequest);
-
-					        	searchRequest.FulltextFilter = new MatchPhraseFilter("Star Trek 2", "title");
-
-					        	searchRes = searchApi.Search(searchRequest);
-
-					        	searchRequest.FulltextFilter = new MatchOpFilter("Enterprise test", "title,plot", MatchOpFilter.OperatorEnum.Or);
-
-					        	searchRes = searchApi.Search(searchRequest);
-					        	
-					        	searchRequest.AttrFilter = new EqualsFilter("year", 2003);
-					        	
-								searchRes = searchApi.Search(searchRequest);
-
-					        	var inFilter = new InFilter("year", new List<Object> {2001, 2002});
-					        	var addValues = new List<Object> {10,11};
-					    	    inFilter.Values.AddRange(addValues);
-						        searchRequest.AttrFilter = inFilter;
-	        
-	        					searchRes = searchApi.Search(searchRequest);
-
-	        					var rangeFilter = new RangeFilter("year");
-								rangeFilter.Lte = 2002;
-								rangeFilter.Gte = 0;
-								searchRequest.AttrFilter = rangeFilter;
-
-								searchRes = searchApi.Search(searchRequest);
-
-								var geoFilter = new GeoDistanceFilter();
-								var locAnchor = new GeoDistanceFilterLocationAnchor(10, 20);
-								geoFilter.LocationAnchor = locAnchor;
-								geoFilter.LocationSource = "year,rating";
-								geoFilter.DistanceType = GeoDistanceFilter.DistanceTypeEnum.Adaptive;
-								geoFilter.Distance = "100km";
-        						searchRequest.AttrFilter = geoFilter;
-
-								searchRes = searchApi.Search(searchRequest);
-
-        						var boolFilter = new BoolFilter();
-        						boolFilter.Must = new List<Object> { new EqualsFilter("year", 2001) };
-        						rangeFilter = new RangeFilter("rating");
-								rangeFilter.Lte = 20;
-        						boolFilter.Must.Add(rangeFilter);
-        						searchRequest.AttrFilter = boolFilter;
-
-								searchRes = searchApi.Search(searchRequest);
-        	
-        						boolFilter.MustNot = new List<Object> { new EqualsFilter("year", 2001) };
-								searchRequest.AttrFilter = boolFilter;
-
-								searchRes = searchApi.Search(searchRequest);
-								
-								var fulltextFilter = new MatchFilter("Star", "title");
-        						var nestedBoolFilter = new BoolFilter();
-        						nestedBoolFilter.Should = new List<Object> { new EqualsFilter("rating", 6.5), fulltextFilter };
-        						boolFilter.Must = new List<Object> {nestedBoolFilter};
-            					searchRequest.AttrFilter = boolFilter;
-
-								searchRes = searchApi.Search(searchRequest);
-        	
-                                return searchRes;
-                            }
-                        },
-                    }
-                 },
-                 {
-                 "IndexApi", 
-                    new Dictionary<string, Func<Object>>()
-                    {
-                        { "InsertTest", () => 
-                            {
-                            	string body = "CREATE TABLE IF NOT EXISTS test (body text, title string)";
-            					var utilsApi = new UtilsApi();
-            					utilsApi.Sql(body, true);
-                                Dictionary<string, Object> doc = new Dictionary<string, Object>(); 
-                                doc.Add("body", "test");
-                                doc.Add("title", "test");
-                                InsertDocumentRequest insertDocumentRequest = new InsertDocumentRequest(index: "test", id: 1, doc: doc);
-                                insertDocumentRequest = new InsertDocumentRequest(index: "test", id: 2, doc: doc);
-                                var obj = new IndexApi(httpClient, config, httpClientHandler);
-                                return obj.Insert(insertDocumentRequest);
-                            }
-                        },
-                        { "BulkTest", () => 
-		                	{
-		                		string body = "CREATE TABLE IF NOT EXISTS test (body text, title string)";
-            					var utilsApi = new UtilsApi();
-            					utilsApi.Sql("DROP TABLE IF EXISTS test", true);
-            					utilsApi.Sql(body, true);
-		                		body = "{\"insert\": {\"index\": \"test\", \"id\": 1, \"doc\": {\"body\": \"test\", \"title\": \"test\"}}}" + "\n";
-		                		var obj = new IndexApi(httpClient, config, httpClientHandler);
-		            			return obj.Bulk(body);
-		                	}
-		                },
-		                { "ReplaceTest", () => 
-		                	{
-								Dictionary<string, Object> doc = new Dictionary<string, Object>(); 
-		            			doc.Add("body", "test 2");
-		            			doc.Add("title", "test");
-		            			InsertDocumentRequest insertDocumentRequest = new InsertDocumentRequest(index: "test", id: 1, doc: doc);
-		            			var obj = new IndexApi(httpClient, config, httpClientHandler);
-		            			return obj.Replace(insertDocumentRequest);
-		                	}
-		                },
-		                { "UpdateTest", () => 
-		                	{
-								Dictionary<string, Object> doc = new Dictionary<string, Object>();
-					            doc.Add("title", "test 2");
-					            UpdateDocumentRequest updateDocumentRequest = new UpdateDocumentRequest(index: "test", id: 2, doc: doc);
-					            var obj = new IndexApi(httpClient, config, httpClientHandler);
-					            return obj.Update(updateDocumentRequest);
-		                	}
-		                },
-		                { "DeleteTest", () => 
-		                	{
-								DeleteDocumentRequest deleteDocumentRequest = new DeleteDocumentRequest(index: "test", id: 1);
-								var obj = new IndexApi(httpClient, config, httpClientHandler);
-		            			return obj.Delete(deleteDocumentRequest);
-		                	}
-		                },
-                    }
-                }
-            };
-
-            InitTests();
-            
-        }
-
-        public void Dispose()
-        {
-        }
-
-        /// <summary>
-        /// Test an instance of SearchApi
-        /// </summary>
-        [Fact]
-        public void InstanceTest()
-        {
-            Assert.IsType<SearchApi>(instance);
-        }
-
-        /// <summary>
-        /// Test Percolate
-        /// </summary>
-        [Fact]
-        public void PercolateTest()
-        {
-            // TODO uncomment below to test the method and replace null with proper value
-            //string index = null;
-            //PercolateRequest percolateRequest = null;
-            //var response = instance.Percolate(index, percolateRequest);
-			object response = this.CheckTest( System.Reflection.MethodBase.GetCurrentMethod().Name );
-            if (response != null)
-            {
-            	Assert.IsType<SearchResponse>(response);
-            }
-        }
-
-        /// <summary>
-        /// Test Search
-        /// </summary>
-        [Fact]
-        public void SearchTest()
-        {
-            // TODO uncomment below to test the method and replace null with proper value
-            //SearchRequest searchRequest = null;
-            //var response = instance.Search(searchRequest);
-			object response = this.CheckTest( System.Reflection.MethodBase.GetCurrentMethod().Name );
-            if (response != null)
-            {
-            	Assert.IsType<SearchResponse>(response);
-            }
-        }
-    }
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Api/UtilsApiTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Api/UtilsApiTests.cs
deleted file mode 100755
index bb40e81..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Api/UtilsApiTests.cs
+++ /dev/null
@@ -1,332 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-using System;
-using System.IO;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.Reflection;
-using Xunit;
-using System.Net.Http;
-using System.Text.Json;
-
-using ManticoreSearch.Client;
-using ManticoreSearch.Api;
-// uncomment below to import models
-using ManticoreSearch.Model;
-
-namespace ManticoreSearch.Test.Api
-{
-    /// <summary>
-    ///  Class for testing UtilsApi
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the API endpoint.
-    /// </remarks>
-    public class UtilsApiTests : IDisposable
-    {
-    	private UtilsApi instance;
-        private HttpClientHandler httpClientHandler;
-        private HttpClient httpClient;
-        private Configuration config;
-
-        private Dictionary<string, Dictionary<string,Func<Object>>> implementedTests;
-
-        private void InitTests()
-        {
-            config = new Configuration();
-            config.BasePath = "http://localhost:9408";
-            httpClient = new HttpClient();
-            httpClientHandler = new HttpClientHandler();
-            instance = new UtilsApi(httpClient, config, httpClientHandler);
-        }
-                
-        private object CheckTest(string testName)
-        {
-            Dictionary<string,Func<Object>> classTests;
-            if (implementedTests.TryGetValue("UtilsApi", out classTests))
-            {
-                Func<Object> test;    
-                if (classTests.TryGetValue(testName, out test))
-                {
-                    return test();
-                }
-            }
-            return null;
-        }     
-        
-        public UtilsApiTests()
-        {
-            implementedTests = new Dictionary<string, Dictionary<string,Func<Object>>>()
-            {
-                {
-                "SearchApi", 
-                    new Dictionary<string, Func<Object>>()
-                    {
-                    	{ "SearchTest", () => 
-                            {
-                            	var utilsApi = new UtilsApi();
-                        		utilsApi.Sql("DROP TABLE IF EXISTS movies", true);
-					        	utilsApi.Sql("CREATE TABLE IF NOT EXISTS movies (title text, plot text, year integer, rating float, code multi)", true);
-					        	
-					        	string[] docs = {
-									"{\"insert\": {\"index\" : \"movies\", \"id\" : 1, \"doc\" : {\"title\" : \"Star Trek 2: Nemesis\", \"plot\": \"The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.\", \"year\": 2002, \"rating\": 6.4, \"code\": [1,2,3]}}}",
-						            "{\"insert\": {\"index\" : \"movies\", \"id\" : 2, \"doc\" : {\"title\" : \"Star Trek 1: Nemesis\", \"plot\": \"The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.\", \"year\": 2001, \"rating\": 6.5, \"code\": [1,12,3]}}}",
-						            "{\"insert\": {\"index\" : \"movies\", \"id\" : 3, \"doc\" : {\"title\" : \"Star Trek 3: Nemesis\", \"plot\": \"The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.\", \"year\": 2003, \"rating\": 6.6, \"code\": [11,2,3]}}}",
-						            "{\"insert\": {\"index\" : \"movies\", \"id\" : 4, \"doc\" : {\"title\" : \"Star Trek 4: Nemesis\", \"plot\": \"The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.\", \"year\": 2003, \"rating\": 6.5, \"code\": [1,2,4]}}}"					        	
-						        };
-					        						        	
-	                			var indexApi = new IndexApi(httpClient, config, httpClientHandler);
-	            				var res = indexApi.Bulk(string.Join("\n", docs));
-	            				
-	            				var searchApi = new SearchApi();
-
-		            			var searchRequest = new SearchRequest("movies");
-		            			var searchRes = searchApi.Search(searchRequest);
-
-								object query =  new { query_string="Star" };
-								searchRequest.Query = query;
-								searchRequest.Limit = 10;
-
-								searchRes = searchApi.Search(searchRequest);
-								
-								searchRequest.Options = new Dictionary<string, Object>();
-								searchRequest.Options["cutoff"] = 5;
-								searchRequest.Options["ranker"] = "bm25";
-        						searchRequest.Source = "title";
-
-        						searchRes = searchApi.Search(searchRequest);
-        													
-	        					var includes = new List<string> {"title", "year"};
-        						var excludes = new List<string> {"code"};
-        						searchRequest.Source = new SourceByRules(includes, excludes);
-
-        						searchRes = searchApi.Search(searchRequest);
-
-	        					searchRequest.Sort = new List<Object> {"year"};
-	        					var sort2 = new SortOrder("rating", SortOrder.OrderEnum.Asc);
-	        					searchRequest.Sort.Add(sort2);
-	        					var sort3 = new SortMVA("code", SortMVA.OrderEnum.Desc, SortMVA.ModeEnum.Max);
-	        					searchRequest.Sort.Add(sort3);
-
-	        					searchRes = searchApi.Search(searchRequest);
-	        					
-	        					searchRequest.Expressions = new Dictionary<string, string> { {"expr", "min(year,2900)"} };
-	        					includes.Add("expr");
-					        	searchRequest.Expressions["expr2"] = "max(year,2100)";
-					        	includes.Add("expr2");
-					        	searchRequest.Source = new SourceByRules(includes, excludes);
-
-					        	searchRes = searchApi.Search(searchRequest);
-					        	
-					        	var aggTerms = new AggregationTerms("year", 10);
-					        	var agg1 = new Aggregation(aggTerms);
-        						searchRequest.Aggs = new Dictionary<string, Aggregation> { {"agg1", agg1} };
-        						aggTerms = new AggregationTerms("rating"); 
-        						var sortExpr = new AggregationSortInnerValue("asc");
-        						var sort = new Dictionary<string, AggregationSortInnerValue> { { "rating", sortExpr} };
-        						var aggSort = new List<Dictionary<string, AggregationSortInnerValue>> {sort};
-        						searchRequest.Aggs["agg2"] = new Aggregation(aggTerms, aggSort);
-	        					
-        						searchRes = searchApi.Search(searchRequest);
-					        	
-					        	var highlight = new Highlight();
-					        	highlight.Fieldnames = new List<string> {"title"};
- 					        	highlight.PostTags = "</post_tag>";
- 					    	    highlight.Encoder = Highlight.EncoderEnum.Default;
- 						        highlight.SnippetBoundary = Highlight.SnippetBoundaryEnum.Sentence;
- 					        	searchRequest.Highlight = highlight;
-
- 					        	searchRes = searchApi.Search(searchRequest);
-        	
-					        	var highlightField = new HighlightField("title");
-								highlightField.Limit = 5;
-								highlight.Fields = new List<HighlightField> {highlightField};
-
-								searchRes = searchApi.Search(searchRequest);
-								
-								var highlightField2 = new HighlightField("plot");
-								highlightField2.LimitWords = 10;
-					        	highlight.Fields.Add(highlightField2);
-					        	searchRequest.Highlight = highlight;
-
-					        	searchRes = searchApi.Search(searchRequest);
-
-								highlight.HighlightQuery = new Dictionary<string, Object> {{ "match",  new Dictionary<string, Object> { { "*", "Star"} } }};
-
-								searchRes = searchApi.Search(searchRequest);
-
-					        	searchRequest.FulltextFilter = new QueryFilter("Star Trek 2");
-
-					        	searchRes = searchApi.Search(searchRequest);
-
-					        	searchRequest.FulltextFilter = new MatchFilter("Nemesis", "title");
-
-					        	searchRes = searchApi.Search(searchRequest);
-
-					        	searchRequest.FulltextFilter = new MatchPhraseFilter("Star Trek 2", "title");
-
-					        	searchRes = searchApi.Search(searchRequest);
-
-					        	searchRequest.FulltextFilter = new MatchOpFilter("Enterprise test", "title,plot", MatchOpFilter.OperatorEnum.Or);
-
-					        	searchRes = searchApi.Search(searchRequest);
-					        	
-					        	searchRequest.AttrFilter = new EqualsFilter("year", 2003);
-					        	
-								searchRes = searchApi.Search(searchRequest);
-
-					        	var inFilter = new InFilter("year", new List<Object> {2001, 2002});
-					        	var addValues = new List<Object> {10,11};
-					    	    inFilter.Values.AddRange(addValues);
-						        searchRequest.AttrFilter = inFilter;
-	        
-	        					searchRes = searchApi.Search(searchRequest);
-
-	        					var rangeFilter = new RangeFilter("year");
-								rangeFilter.Lte = 2002;
-								rangeFilter.Gte = 0;
-								searchRequest.AttrFilter = rangeFilter;
-
-								searchRes = searchApi.Search(searchRequest);
-
-								var geoFilter = new GeoDistanceFilter();
-								var locAnchor = new GeoDistanceFilterLocationAnchor(10, 20);
-								geoFilter.LocationAnchor = locAnchor;
-								geoFilter.LocationSource = "year,rating";
-								geoFilter.DistanceType = GeoDistanceFilter.DistanceTypeEnum.Adaptive;
-								geoFilter.Distance = "100km";
-        						searchRequest.AttrFilter = geoFilter;
-
-								searchRes = searchApi.Search(searchRequest);
-
-        						var boolFilter = new BoolFilter();
-        						boolFilter.Must = new List<Object> { new EqualsFilter("year", 2001) };
-        						rangeFilter = new RangeFilter("rating");
-								rangeFilter.Lte = 20;
-        						boolFilter.Must.Add(rangeFilter);
-        						searchRequest.AttrFilter = boolFilter;
-
-								searchRes = searchApi.Search(searchRequest);
-        	
-        						boolFilter.MustNot = new List<Object> { new EqualsFilter("year", 2001) };
-								searchRequest.AttrFilter = boolFilter;
-
-								searchRes = searchApi.Search(searchRequest);
-								
-								var fulltextFilter = new MatchFilter("Star", "title");
-        						var nestedBoolFilter = new BoolFilter();
-        						nestedBoolFilter.Should = new List<Object> { new EqualsFilter("rating", 6.5), fulltextFilter };
-        						boolFilter.Must = new List<Object> {nestedBoolFilter};
-            					searchRequest.AttrFilter = boolFilter;
-
-								searchRes = searchApi.Search(searchRequest);
-        	
-                                return searchRes;
-                            }
-                        },
-                    }
-                 },
-                 {
-                 "IndexApi", 
-                    new Dictionary<string, Func<Object>>()
-                    {
-                        { "InsertTest", () => 
-                            {
-                            	string body = "CREATE TABLE IF NOT EXISTS test (body text, title string)";
-            					var utilsApi = new UtilsApi();
-            					utilsApi.Sql(body, true);
-                                Dictionary<string, Object> doc = new Dictionary<string, Object>(); 
-                                doc.Add("body", "test");
-                                doc.Add("title", "test");
-                                InsertDocumentRequest insertDocumentRequest = new InsertDocumentRequest(index: "test", id: 1, doc: doc);
-                                insertDocumentRequest = new InsertDocumentRequest(index: "test", id: 2, doc: doc);
-                                var obj = new IndexApi(httpClient, config, httpClientHandler);
-                                return obj.Insert(insertDocumentRequest);
-                            }
-                        },
-                        { "BulkTest", () => 
-		                	{
-		                		string body = "CREATE TABLE IF NOT EXISTS test (body text, title string)";
-            					var utilsApi = new UtilsApi();
-            					utilsApi.Sql("DROP TABLE IF EXISTS test", true);
-            					utilsApi.Sql(body, true);
-		                		body = "{\"insert\": {\"index\": \"test\", \"id\": 1, \"doc\": {\"body\": \"test\", \"title\": \"test\"}}}" + "\n";
-		                		var obj = new IndexApi(httpClient, config, httpClientHandler);
-		            			return obj.Bulk(body);
-		                	}
-		                },
-		                { "ReplaceTest", () => 
-		                	{
-								Dictionary<string, Object> doc = new Dictionary<string, Object>(); 
-		            			doc.Add("body", "test 2");
-		            			doc.Add("title", "test");
-		            			InsertDocumentRequest insertDocumentRequest = new InsertDocumentRequest(index: "test", id: 1, doc: doc);
-		            			var obj = new IndexApi(httpClient, config, httpClientHandler);
-		            			return obj.Replace(insertDocumentRequest);
-		                	}
-		                },
-		                { "UpdateTest", () => 
-		                	{
-								Dictionary<string, Object> doc = new Dictionary<string, Object>();
-					            doc.Add("title", "test 2");
-					            UpdateDocumentRequest updateDocumentRequest = new UpdateDocumentRequest(index: "test", id: 2, doc: doc);
-					            var obj = new IndexApi(httpClient, config, httpClientHandler);
-					            return obj.Update(updateDocumentRequest);
-		                	}
-		                },
-		                { "DeleteTest", () => 
-		                	{
-								DeleteDocumentRequest deleteDocumentRequest = new DeleteDocumentRequest(index: "test", id: 1);
-								var obj = new IndexApi(httpClient, config, httpClientHandler);
-		            			return obj.Delete(deleteDocumentRequest);
-		                	}
-		                },
-                    }
-                }
-            };
-
-            InitTests();
-            
-        }
-
-        public void Dispose()
-        {
-        }
-
-        /// <summary>
-        /// Test an instance of UtilsApi
-        /// </summary>
-        [Fact]
-        public void InstanceTest()
-        {
-            Assert.IsType<UtilsApi>(instance);
-        }
-
-        /// <summary>
-        /// Test Sql
-        /// </summary>
-        [Fact]
-        public void SqlTest()
-        {
-            // TODO uncomment below to test the method and replace null with proper value
-            //string body = null;
-            //bool? rawResponse = null;
-            //var response = instance.Sql(body, rawResponse);
-			object response = this.CheckTest( System.Reflection.MethodBase.GetCurrentMethod().Name );
-            if (response != null)
-            {
-            	Assert.IsType<List<Object>>(response);
-            }
-        }
-    }
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/ManticoreSearch.Test.csproj b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/ManticoreSearch.Test.csproj
deleted file mode 100755
index f2b182d..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/ManticoreSearch.Test.csproj
+++ /dev/null
@@ -1,20 +0,0 @@
-<Project Sdk="Microsoft.NET.Sdk">
-
-  <PropertyGroup>
-    <AssemblyName>ManticoreSearch.Test</AssemblyName>
-    <RootNamespace>ManticoreSearch.Test</RootNamespace>
-    <TargetFramework>netcoreapp3.1</TargetFramework>
-    <IsPackable>false</IsPackable>
-  </PropertyGroup>
-
-  <ItemGroup>
-    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="15.9.2" />
-    <PackageReference Include="xunit" Version="2.4.1" />
-    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.1" />
-  </ItemGroup>
-
-  <ItemGroup>
-    <ProjectReference Include="..\ManticoreSearch\ManticoreSearch.csproj" />
-  </ItemGroup>
-
-</Project>
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/AggregationSortInnerValueTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/AggregationSortInnerValueTests.cs
deleted file mode 100755
index 4f0bf7a..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/AggregationSortInnerValueTests.cs
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing AggregationSortInnerValue
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class AggregationSortInnerValueTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for AggregationSortInnerValue
-        //private AggregationSortInnerValue instance;
-
-        public AggregationSortInnerValueTests()
-        {
-            // TODO uncomment below to create an instance of AggregationSortInnerValue
-            //instance = new AggregationSortInnerValue();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of AggregationSortInnerValue
-        /// </summary>
-        [Fact]
-        public void AggregationSortInnerValueInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" AggregationSortInnerValue
-            //Assert.IsType<AggregationSortInnerValue>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Order'
-        /// </summary>
-        [Fact]
-        public void OrderTest()
-        {
-            // TODO unit test for the property 'Order'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/AggregationTermsTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/AggregationTermsTests.cs
deleted file mode 100755
index 151c4c5..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/AggregationTermsTests.cs
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing AggregationTerms
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class AggregationTermsTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for AggregationTerms
-        //private AggregationTerms instance;
-
-        public AggregationTermsTests()
-        {
-            // TODO uncomment below to create an instance of AggregationTerms
-            //instance = new AggregationTerms();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of AggregationTerms
-        /// </summary>
-        [Fact]
-        public void AggregationTermsInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" AggregationTerms
-            //Assert.IsType<AggregationTerms>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Field'
-        /// </summary>
-        [Fact]
-        public void FieldTest()
-        {
-            // TODO unit test for the property 'Field'
-        }
-        /// <summary>
-        /// Test the property 'Size'
-        /// </summary>
-        [Fact]
-        public void SizeTest()
-        {
-            // TODO unit test for the property 'Size'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/AggregationTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/AggregationTests.cs
deleted file mode 100755
index 75c3093..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/AggregationTests.cs
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing Aggregation
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class AggregationTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for Aggregation
-        //private Aggregation instance;
-
-        public AggregationTests()
-        {
-            // TODO uncomment below to create an instance of Aggregation
-            //instance = new Aggregation();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of Aggregation
-        /// </summary>
-        [Fact]
-        public void AggregationInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" Aggregation
-            //Assert.IsType<Aggregation>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Terms'
-        /// </summary>
-        [Fact]
-        public void TermsTest()
-        {
-            // TODO unit test for the property 'Terms'
-        }
-        /// <summary>
-        /// Test the property 'Sort'
-        /// </summary>
-        [Fact]
-        public void SortTest()
-        {
-            // TODO unit test for the property 'Sort'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/BoolFilterTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/BoolFilterTests.cs
deleted file mode 100755
index 1c78dcd..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/BoolFilterTests.cs
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing BoolFilter
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class BoolFilterTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for BoolFilter
-        //private BoolFilter instance;
-
-        public BoolFilterTests()
-        {
-            // TODO uncomment below to create an instance of BoolFilter
-            //instance = new BoolFilter();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of BoolFilter
-        /// </summary>
-        [Fact]
-        public void BoolFilterInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" BoolFilter
-            //Assert.IsType<BoolFilter>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Should'
-        /// </summary>
-        [Fact]
-        public void ShouldTest()
-        {
-            // TODO unit test for the property 'Should'
-        }
-        /// <summary>
-        /// Test the property 'Must'
-        /// </summary>
-        [Fact]
-        public void MustTest()
-        {
-            // TODO unit test for the property 'Must'
-        }
-        /// <summary>
-        /// Test the property 'MustNot'
-        /// </summary>
-        [Fact]
-        public void MustNotTest()
-        {
-            // TODO unit test for the property 'MustNot'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/BulkResponseTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/BulkResponseTests.cs
deleted file mode 100755
index 14f6b01..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/BulkResponseTests.cs
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing BulkResponse
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class BulkResponseTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for BulkResponse
-        //private BulkResponse instance;
-
-        public BulkResponseTests()
-        {
-            // TODO uncomment below to create an instance of BulkResponse
-            //instance = new BulkResponse();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of BulkResponse
-        /// </summary>
-        [Fact]
-        public void BulkResponseInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" BulkResponse
-            //Assert.IsType<BulkResponse>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Items'
-        /// </summary>
-        [Fact]
-        public void ItemsTest()
-        {
-            // TODO unit test for the property 'Items'
-        }
-        /// <summary>
-        /// Test the property 'Errors'
-        /// </summary>
-        [Fact]
-        public void ErrorsTest()
-        {
-            // TODO unit test for the property 'Errors'
-        }
-        /// <summary>
-        /// Test the property 'Error'
-        /// </summary>
-        [Fact]
-        public void ErrorTest()
-        {
-            // TODO unit test for the property 'Error'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/DeleteDocumentRequestTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/DeleteDocumentRequestTests.cs
deleted file mode 100755
index 81cb421..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/DeleteDocumentRequestTests.cs
+++ /dev/null
@@ -1,95 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing DeleteDocumentRequest
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class DeleteDocumentRequestTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for DeleteDocumentRequest
-        //private DeleteDocumentRequest instance;
-
-        public DeleteDocumentRequestTests()
-        {
-            // TODO uncomment below to create an instance of DeleteDocumentRequest
-            //instance = new DeleteDocumentRequest();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of DeleteDocumentRequest
-        /// </summary>
-        [Fact]
-        public void DeleteDocumentRequestInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" DeleteDocumentRequest
-            //Assert.IsType<DeleteDocumentRequest>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Index'
-        /// </summary>
-        [Fact]
-        public void IndexTest()
-        {
-            // TODO unit test for the property 'Index'
-        }
-        /// <summary>
-        /// Test the property 'Cluster'
-        /// </summary>
-        [Fact]
-        public void ClusterTest()
-        {
-            // TODO unit test for the property 'Cluster'
-        }
-        /// <summary>
-        /// Test the property 'Id'
-        /// </summary>
-        [Fact]
-        public void IdTest()
-        {
-            // TODO unit test for the property 'Id'
-        }
-        /// <summary>
-        /// Test the property 'Query'
-        /// </summary>
-        [Fact]
-        public void QueryTest()
-        {
-            // TODO unit test for the property 'Query'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/DeleteResponseTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/DeleteResponseTests.cs
deleted file mode 100755
index b6a747f..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/DeleteResponseTests.cs
+++ /dev/null
@@ -1,95 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing DeleteResponse
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class DeleteResponseTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for DeleteResponse
-        //private DeleteResponse instance;
-
-        public DeleteResponseTests()
-        {
-            // TODO uncomment below to create an instance of DeleteResponse
-            //instance = new DeleteResponse();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of DeleteResponse
-        /// </summary>
-        [Fact]
-        public void DeleteResponseInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" DeleteResponse
-            //Assert.IsType<DeleteResponse>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Index'
-        /// </summary>
-        [Fact]
-        public void IndexTest()
-        {
-            // TODO unit test for the property 'Index'
-        }
-        /// <summary>
-        /// Test the property 'Deleted'
-        /// </summary>
-        [Fact]
-        public void DeletedTest()
-        {
-            // TODO unit test for the property 'Deleted'
-        }
-        /// <summary>
-        /// Test the property 'Id'
-        /// </summary>
-        [Fact]
-        public void IdTest()
-        {
-            // TODO unit test for the property 'Id'
-        }
-        /// <summary>
-        /// Test the property 'Result'
-        /// </summary>
-        [Fact]
-        public void ResultTest()
-        {
-            // TODO unit test for the property 'Result'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/EqualsFilterTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/EqualsFilterTests.cs
deleted file mode 100755
index 1c2a938..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/EqualsFilterTests.cs
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing EqualsFilter
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class EqualsFilterTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for EqualsFilter
-        //private EqualsFilter instance;
-
-        public EqualsFilterTests()
-        {
-            // TODO uncomment below to create an instance of EqualsFilter
-            //instance = new EqualsFilter();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of EqualsFilter
-        /// </summary>
-        [Fact]
-        public void EqualsFilterInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" EqualsFilter
-            //Assert.IsType<EqualsFilter>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Field'
-        /// </summary>
-        [Fact]
-        public void FieldTest()
-        {
-            // TODO unit test for the property 'Field'
-        }
-        /// <summary>
-        /// Test the property 'Value'
-        /// </summary>
-        [Fact]
-        public void ValueTest()
-        {
-            // TODO unit test for the property 'Value'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/ErrorResponseTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/ErrorResponseTests.cs
deleted file mode 100755
index 7e89196..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/ErrorResponseTests.cs
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing ErrorResponse
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class ErrorResponseTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for ErrorResponse
-        //private ErrorResponse instance;
-
-        public ErrorResponseTests()
-        {
-            // TODO uncomment below to create an instance of ErrorResponse
-            //instance = new ErrorResponse();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of ErrorResponse
-        /// </summary>
-        [Fact]
-        public void ErrorResponseInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" ErrorResponse
-            //Assert.IsType<ErrorResponse>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Error'
-        /// </summary>
-        [Fact]
-        public void ErrorTest()
-        {
-            // TODO unit test for the property 'Error'
-        }
-        /// <summary>
-        /// Test the property 'Status'
-        /// </summary>
-        [Fact]
-        public void StatusTest()
-        {
-            // TODO unit test for the property 'Status'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/FacetTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/FacetTests.cs
deleted file mode 100755
index c4a1d77..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/FacetTests.cs
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing Facet
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class FacetTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for Facet
-        //private Facet instance;
-
-        public FacetTests()
-        {
-            // TODO uncomment below to create an instance of Facet
-            //instance = new Facet();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of Facet
-        /// </summary>
-        [Fact]
-        public void FacetInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" Facet
-            //Assert.IsType<Facet>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Attr'
-        /// </summary>
-        [Fact]
-        public void AttrTest()
-        {
-            // TODO unit test for the property 'Attr'
-        }
-        /// <summary>
-        /// Test the property 'Alias'
-        /// </summary>
-        [Fact]
-        public void AliasTest()
-        {
-            // TODO unit test for the property 'Alias'
-        }
-        /// <summary>
-        /// Test the property 'Limit'
-        /// </summary>
-        [Fact]
-        public void LimitTest()
-        {
-            // TODO unit test for the property 'Limit'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/FilterBooleanTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/FilterBooleanTests.cs
deleted file mode 100755
index 12d4031..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/FilterBooleanTests.cs
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing FilterBoolean
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class FilterBooleanTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for FilterBoolean
-        //private FilterBoolean instance;
-
-        public FilterBooleanTests()
-        {
-            // TODO uncomment below to create an instance of FilterBoolean
-            //instance = new FilterBoolean();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of FilterBoolean
-        /// </summary>
-        [Fact]
-        public void FilterBooleanInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" FilterBoolean
-            //Assert.IsType<FilterBoolean>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'FilterField'
-        /// </summary>
-        [Fact]
-        public void FilterFieldTest()
-        {
-            // TODO unit test for the property 'FilterField'
-        }
-        /// <summary>
-        /// Test the property 'Operation'
-        /// </summary>
-        [Fact]
-        public void OperationTest()
-        {
-            // TODO unit test for the property 'Operation'
-        }
-        /// <summary>
-        /// Test the property 'FilterValue'
-        /// </summary>
-        [Fact]
-        public void FilterValueTest()
-        {
-            // TODO unit test for the property 'FilterValue'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/FilterNumberTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/FilterNumberTests.cs
deleted file mode 100755
index 3602535..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/FilterNumberTests.cs
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing FilterNumber
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class FilterNumberTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for FilterNumber
-        //private FilterNumber instance;
-
-        public FilterNumberTests()
-        {
-            // TODO uncomment below to create an instance of FilterNumber
-            //instance = new FilterNumber();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of FilterNumber
-        /// </summary>
-        [Fact]
-        public void FilterNumberInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" FilterNumber
-            //Assert.IsType<FilterNumber>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'FilterField'
-        /// </summary>
-        [Fact]
-        public void FilterFieldTest()
-        {
-            // TODO unit test for the property 'FilterField'
-        }
-        /// <summary>
-        /// Test the property 'Operation'
-        /// </summary>
-        [Fact]
-        public void OperationTest()
-        {
-            // TODO unit test for the property 'Operation'
-        }
-        /// <summary>
-        /// Test the property 'FilterValue'
-        /// </summary>
-        [Fact]
-        public void FilterValueTest()
-        {
-            // TODO unit test for the property 'FilterValue'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/FilterStringTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/FilterStringTests.cs
deleted file mode 100755
index 76b5630..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/FilterStringTests.cs
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing FilterString
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class FilterStringTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for FilterString
-        //private FilterString instance;
-
-        public FilterStringTests()
-        {
-            // TODO uncomment below to create an instance of FilterString
-            //instance = new FilterString();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of FilterString
-        /// </summary>
-        [Fact]
-        public void FilterStringInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" FilterString
-            //Assert.IsType<FilterString>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'FilterField'
-        /// </summary>
-        [Fact]
-        public void FilterFieldTest()
-        {
-            // TODO unit test for the property 'FilterField'
-        }
-        /// <summary>
-        /// Test the property 'Operation'
-        /// </summary>
-        [Fact]
-        public void OperationTest()
-        {
-            // TODO unit test for the property 'Operation'
-        }
-        /// <summary>
-        /// Test the property 'FilterValue'
-        /// </summary>
-        [Fact]
-        public void FilterValueTest()
-        {
-            // TODO unit test for the property 'FilterValue'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/GeoDistanceFilterLocationAnchorTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/GeoDistanceFilterLocationAnchorTests.cs
deleted file mode 100755
index f5f27a0..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/GeoDistanceFilterLocationAnchorTests.cs
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing GeoDistanceFilterLocationAnchor
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class GeoDistanceFilterLocationAnchorTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for GeoDistanceFilterLocationAnchor
-        //private GeoDistanceFilterLocationAnchor instance;
-
-        public GeoDistanceFilterLocationAnchorTests()
-        {
-            // TODO uncomment below to create an instance of GeoDistanceFilterLocationAnchor
-            //instance = new GeoDistanceFilterLocationAnchor();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of GeoDistanceFilterLocationAnchor
-        /// </summary>
-        [Fact]
-        public void GeoDistanceFilterLocationAnchorInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" GeoDistanceFilterLocationAnchor
-            //Assert.IsType<GeoDistanceFilterLocationAnchor>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Lat'
-        /// </summary>
-        [Fact]
-        public void LatTest()
-        {
-            // TODO unit test for the property 'Lat'
-        }
-        /// <summary>
-        /// Test the property 'Lon'
-        /// </summary>
-        [Fact]
-        public void LonTest()
-        {
-            // TODO unit test for the property 'Lon'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/GeoDistanceFilterTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/GeoDistanceFilterTests.cs
deleted file mode 100755
index c3a04df..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/GeoDistanceFilterTests.cs
+++ /dev/null
@@ -1,95 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing GeoDistanceFilter
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class GeoDistanceFilterTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for GeoDistanceFilter
-        //private GeoDistanceFilter instance;
-
-        public GeoDistanceFilterTests()
-        {
-            // TODO uncomment below to create an instance of GeoDistanceFilter
-            //instance = new GeoDistanceFilter();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of GeoDistanceFilter
-        /// </summary>
-        [Fact]
-        public void GeoDistanceFilterInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" GeoDistanceFilter
-            //Assert.IsType<GeoDistanceFilter>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'LocationAnchor'
-        /// </summary>
-        [Fact]
-        public void LocationAnchorTest()
-        {
-            // TODO unit test for the property 'LocationAnchor'
-        }
-        /// <summary>
-        /// Test the property 'LocationSource'
-        /// </summary>
-        [Fact]
-        public void LocationSourceTest()
-        {
-            // TODO unit test for the property 'LocationSource'
-        }
-        /// <summary>
-        /// Test the property 'DistanceType'
-        /// </summary>
-        [Fact]
-        public void DistanceTypeTest()
-        {
-            // TODO unit test for the property 'DistanceType'
-        }
-        /// <summary>
-        /// Test the property 'Distance'
-        /// </summary>
-        [Fact]
-        public void DistanceTest()
-        {
-            // TODO unit test for the property 'Distance'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/HighlightFieldTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/HighlightFieldTests.cs
deleted file mode 100755
index f31cc0e..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/HighlightFieldTests.cs
+++ /dev/null
@@ -1,95 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing HighlightField
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class HighlightFieldTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for HighlightField
-        //private HighlightField instance;
-
-        public HighlightFieldTests()
-        {
-            // TODO uncomment below to create an instance of HighlightField
-            //instance = new HighlightField();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of HighlightField
-        /// </summary>
-        [Fact]
-        public void HighlightFieldInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" HighlightField
-            //Assert.IsType<HighlightField>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Name'
-        /// </summary>
-        [Fact]
-        public void NameTest()
-        {
-            // TODO unit test for the property 'Name'
-        }
-        /// <summary>
-        /// Test the property 'Limit'
-        /// </summary>
-        [Fact]
-        public void LimitTest()
-        {
-            // TODO unit test for the property 'Limit'
-        }
-        /// <summary>
-        /// Test the property 'LimitWords'
-        /// </summary>
-        [Fact]
-        public void LimitWordsTest()
-        {
-            // TODO unit test for the property 'LimitWords'
-        }
-        /// <summary>
-        /// Test the property 'LimitSnippets'
-        /// </summary>
-        [Fact]
-        public void LimitSnippetsTest()
-        {
-            // TODO unit test for the property 'LimitSnippets'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/HighlightTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/HighlightTests.cs
deleted file mode 100755
index e4c7a5b..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/HighlightTests.cs
+++ /dev/null
@@ -1,239 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing Highlight
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class HighlightTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for Highlight
-        //private Highlight instance;
-
-        public HighlightTests()
-        {
-            // TODO uncomment below to create an instance of Highlight
-            //instance = new Highlight();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of Highlight
-        /// </summary>
-        [Fact]
-        public void HighlightInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" Highlight
-            //Assert.IsType<Highlight>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Fieldnames'
-        /// </summary>
-        [Fact]
-        public void FieldnamesTest()
-        {
-            // TODO unit test for the property 'Fieldnames'
-        }
-        /// <summary>
-        /// Test the property 'Fields'
-        /// </summary>
-        [Fact]
-        public void FieldsTest()
-        {
-            // TODO unit test for the property 'Fields'
-        }
-        /// <summary>
-        /// Test the property 'Encoder'
-        /// </summary>
-        [Fact]
-        public void EncoderTest()
-        {
-            // TODO unit test for the property 'Encoder'
-        }
-        /// <summary>
-        /// Test the property 'HighlightQuery'
-        /// </summary>
-        [Fact]
-        public void HighlightQueryTest()
-        {
-            // TODO unit test for the property 'HighlightQuery'
-        }
-        /// <summary>
-        /// Test the property 'PreTags'
-        /// </summary>
-        [Fact]
-        public void PreTagsTest()
-        {
-            // TODO unit test for the property 'PreTags'
-        }
-        /// <summary>
-        /// Test the property 'PostTags'
-        /// </summary>
-        [Fact]
-        public void PostTagsTest()
-        {
-            // TODO unit test for the property 'PostTags'
-        }
-        /// <summary>
-        /// Test the property 'NoMatchSize'
-        /// </summary>
-        [Fact]
-        public void NoMatchSizeTest()
-        {
-            // TODO unit test for the property 'NoMatchSize'
-        }
-        /// <summary>
-        /// Test the property 'FragmentSize'
-        /// </summary>
-        [Fact]
-        public void FragmentSizeTest()
-        {
-            // TODO unit test for the property 'FragmentSize'
-        }
-        /// <summary>
-        /// Test the property 'NumberOfFragments'
-        /// </summary>
-        [Fact]
-        public void NumberOfFragmentsTest()
-        {
-            // TODO unit test for the property 'NumberOfFragments'
-        }
-        /// <summary>
-        /// Test the property 'Limit'
-        /// </summary>
-        [Fact]
-        public void LimitTest()
-        {
-            // TODO unit test for the property 'Limit'
-        }
-        /// <summary>
-        /// Test the property 'LimitWords'
-        /// </summary>
-        [Fact]
-        public void LimitWordsTest()
-        {
-            // TODO unit test for the property 'LimitWords'
-        }
-        /// <summary>
-        /// Test the property 'LimitSnippets'
-        /// </summary>
-        [Fact]
-        public void LimitSnippetsTest()
-        {
-            // TODO unit test for the property 'LimitSnippets'
-        }
-        /// <summary>
-        /// Test the property 'LimitsPerField'
-        /// </summary>
-        [Fact]
-        public void LimitsPerFieldTest()
-        {
-            // TODO unit test for the property 'LimitsPerField'
-        }
-        /// <summary>
-        /// Test the property 'UseBoundaries'
-        /// </summary>
-        [Fact]
-        public void UseBoundariesTest()
-        {
-            // TODO unit test for the property 'UseBoundaries'
-        }
-        /// <summary>
-        /// Test the property 'ForceAllWords'
-        /// </summary>
-        [Fact]
-        public void ForceAllWordsTest()
-        {
-            // TODO unit test for the property 'ForceAllWords'
-        }
-        /// <summary>
-        /// Test the property 'AllowEmpty'
-        /// </summary>
-        [Fact]
-        public void AllowEmptyTest()
-        {
-            // TODO unit test for the property 'AllowEmpty'
-        }
-        /// <summary>
-        /// Test the property 'EmitZones'
-        /// </summary>
-        [Fact]
-        public void EmitZonesTest()
-        {
-            // TODO unit test for the property 'EmitZones'
-        }
-        /// <summary>
-        /// Test the property 'ForceSnippets'
-        /// </summary>
-        [Fact]
-        public void ForceSnippetsTest()
-        {
-            // TODO unit test for the property 'ForceSnippets'
-        }
-        /// <summary>
-        /// Test the property 'Around'
-        /// </summary>
-        [Fact]
-        public void AroundTest()
-        {
-            // TODO unit test for the property 'Around'
-        }
-        /// <summary>
-        /// Test the property 'StartSnippetId'
-        /// </summary>
-        [Fact]
-        public void StartSnippetIdTest()
-        {
-            // TODO unit test for the property 'StartSnippetId'
-        }
-        /// <summary>
-        /// Test the property 'HtmlStripMode'
-        /// </summary>
-        [Fact]
-        public void HtmlStripModeTest()
-        {
-            // TODO unit test for the property 'HtmlStripMode'
-        }
-        /// <summary>
-        /// Test the property 'SnippetBoundary'
-        /// </summary>
-        [Fact]
-        public void SnippetBoundaryTest()
-        {
-            // TODO unit test for the property 'SnippetBoundary'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/InFilterTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/InFilterTests.cs
deleted file mode 100755
index 11751e8..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/InFilterTests.cs
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing InFilter
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class InFilterTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for InFilter
-        //private InFilter instance;
-
-        public InFilterTests()
-        {
-            // TODO uncomment below to create an instance of InFilter
-            //instance = new InFilter();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of InFilter
-        /// </summary>
-        [Fact]
-        public void InFilterInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" InFilter
-            //Assert.IsType<InFilter>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Field'
-        /// </summary>
-        [Fact]
-        public void FieldTest()
-        {
-            // TODO unit test for the property 'Field'
-        }
-        /// <summary>
-        /// Test the property 'Values'
-        /// </summary>
-        [Fact]
-        public void ValuesTest()
-        {
-            // TODO unit test for the property 'Values'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/InsertDocumentRequestTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/InsertDocumentRequestTests.cs
deleted file mode 100755
index 64ba990..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/InsertDocumentRequestTests.cs
+++ /dev/null
@@ -1,95 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing InsertDocumentRequest
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class InsertDocumentRequestTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for InsertDocumentRequest
-        //private InsertDocumentRequest instance;
-
-        public InsertDocumentRequestTests()
-        {
-            // TODO uncomment below to create an instance of InsertDocumentRequest
-            //instance = new InsertDocumentRequest();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of InsertDocumentRequest
-        /// </summary>
-        [Fact]
-        public void InsertDocumentRequestInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" InsertDocumentRequest
-            //Assert.IsType<InsertDocumentRequest>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Index'
-        /// </summary>
-        [Fact]
-        public void IndexTest()
-        {
-            // TODO unit test for the property 'Index'
-        }
-        /// <summary>
-        /// Test the property 'Cluster'
-        /// </summary>
-        [Fact]
-        public void ClusterTest()
-        {
-            // TODO unit test for the property 'Cluster'
-        }
-        /// <summary>
-        /// Test the property 'Id'
-        /// </summary>
-        [Fact]
-        public void IdTest()
-        {
-            // TODO unit test for the property 'Id'
-        }
-        /// <summary>
-        /// Test the property 'Doc'
-        /// </summary>
-        [Fact]
-        public void DocTest()
-        {
-            // TODO unit test for the property 'Doc'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/MatchFilterTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/MatchFilterTests.cs
deleted file mode 100755
index 2da1e55..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/MatchFilterTests.cs
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing MatchFilter
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class MatchFilterTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for MatchFilter
-        //private MatchFilter instance;
-
-        public MatchFilterTests()
-        {
-            // TODO uncomment below to create an instance of MatchFilter
-            //instance = new MatchFilter();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of MatchFilter
-        /// </summary>
-        [Fact]
-        public void MatchFilterInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" MatchFilter
-            //Assert.IsType<MatchFilter>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'QueryString'
-        /// </summary>
-        [Fact]
-        public void QueryStringTest()
-        {
-            // TODO unit test for the property 'QueryString'
-        }
-        /// <summary>
-        /// Test the property 'QueryFields'
-        /// </summary>
-        [Fact]
-        public void QueryFieldsTest()
-        {
-            // TODO unit test for the property 'QueryFields'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/MatchOpFilterTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/MatchOpFilterTests.cs
deleted file mode 100755
index 3d95915..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/MatchOpFilterTests.cs
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing MatchOpFilter
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class MatchOpFilterTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for MatchOpFilter
-        //private MatchOpFilter instance;
-
-        public MatchOpFilterTests()
-        {
-            // TODO uncomment below to create an instance of MatchOpFilter
-            //instance = new MatchOpFilter();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of MatchOpFilter
-        /// </summary>
-        [Fact]
-        public void MatchOpFilterInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" MatchOpFilter
-            //Assert.IsType<MatchOpFilter>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'QueryString'
-        /// </summary>
-        [Fact]
-        public void QueryStringTest()
-        {
-            // TODO unit test for the property 'QueryString'
-        }
-        /// <summary>
-        /// Test the property 'QueryFields'
-        /// </summary>
-        [Fact]
-        public void QueryFieldsTest()
-        {
-            // TODO unit test for the property 'QueryFields'
-        }
-        /// <summary>
-        /// Test the property 'Operator'
-        /// </summary>
-        [Fact]
-        public void OperatorTest()
-        {
-            // TODO unit test for the property 'Operator'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/MatchOpTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/MatchOpTests.cs
deleted file mode 100755
index 4ae551d..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/MatchOpTests.cs
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing MatchOp
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class MatchOpTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for MatchOp
-        //private MatchOp instance;
-
-        public MatchOpTests()
-        {
-            // TODO uncomment below to create an instance of MatchOp
-            //instance = new MatchOp();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of MatchOp
-        /// </summary>
-        [Fact]
-        public void MatchOpInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" MatchOp
-            //Assert.IsType<MatchOp>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'QueryInfo'
-        /// </summary>
-        [Fact]
-        public void QueryInfoTest()
-        {
-            // TODO unit test for the property 'QueryInfo'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/MatchPhraseFilterTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/MatchPhraseFilterTests.cs
deleted file mode 100755
index e0a42b3..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/MatchPhraseFilterTests.cs
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing MatchPhraseFilter
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class MatchPhraseFilterTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for MatchPhraseFilter
-        //private MatchPhraseFilter instance;
-
-        public MatchPhraseFilterTests()
-        {
-            // TODO uncomment below to create an instance of MatchPhraseFilter
-            //instance = new MatchPhraseFilter();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of MatchPhraseFilter
-        /// </summary>
-        [Fact]
-        public void MatchPhraseFilterInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" MatchPhraseFilter
-            //Assert.IsType<MatchPhraseFilter>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'QueryPhrase'
-        /// </summary>
-        [Fact]
-        public void QueryPhraseTest()
-        {
-            // TODO unit test for the property 'QueryPhrase'
-        }
-        /// <summary>
-        /// Test the property 'QueryFields'
-        /// </summary>
-        [Fact]
-        public void QueryFieldsTest()
-        {
-            // TODO unit test for the property 'QueryFields'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/NotFilterBooleanTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/NotFilterBooleanTests.cs
deleted file mode 100755
index 2a7751c..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/NotFilterBooleanTests.cs
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing NotFilterBoolean
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class NotFilterBooleanTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for NotFilterBoolean
-        //private NotFilterBoolean instance;
-
-        public NotFilterBooleanTests()
-        {
-            // TODO uncomment below to create an instance of NotFilterBoolean
-            //instance = new NotFilterBoolean();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of NotFilterBoolean
-        /// </summary>
-        [Fact]
-        public void NotFilterBooleanInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" NotFilterBoolean
-            //Assert.IsType<NotFilterBoolean>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'FilterField'
-        /// </summary>
-        [Fact]
-        public void FilterFieldTest()
-        {
-            // TODO unit test for the property 'FilterField'
-        }
-        /// <summary>
-        /// Test the property 'Operation'
-        /// </summary>
-        [Fact]
-        public void OperationTest()
-        {
-            // TODO unit test for the property 'Operation'
-        }
-        /// <summary>
-        /// Test the property 'FilterValue'
-        /// </summary>
-        [Fact]
-        public void FilterValueTest()
-        {
-            // TODO unit test for the property 'FilterValue'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/NotFilterNumberTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/NotFilterNumberTests.cs
deleted file mode 100755
index 2393603..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/NotFilterNumberTests.cs
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing NotFilterNumber
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class NotFilterNumberTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for NotFilterNumber
-        //private NotFilterNumber instance;
-
-        public NotFilterNumberTests()
-        {
-            // TODO uncomment below to create an instance of NotFilterNumber
-            //instance = new NotFilterNumber();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of NotFilterNumber
-        /// </summary>
-        [Fact]
-        public void NotFilterNumberInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" NotFilterNumber
-            //Assert.IsType<NotFilterNumber>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'FilterField'
-        /// </summary>
-        [Fact]
-        public void FilterFieldTest()
-        {
-            // TODO unit test for the property 'FilterField'
-        }
-        /// <summary>
-        /// Test the property 'Operation'
-        /// </summary>
-        [Fact]
-        public void OperationTest()
-        {
-            // TODO unit test for the property 'Operation'
-        }
-        /// <summary>
-        /// Test the property 'FilterValue'
-        /// </summary>
-        [Fact]
-        public void FilterValueTest()
-        {
-            // TODO unit test for the property 'FilterValue'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/NotFilterStringTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/NotFilterStringTests.cs
deleted file mode 100755
index 248bce9..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/NotFilterStringTests.cs
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing NotFilterString
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class NotFilterStringTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for NotFilterString
-        //private NotFilterString instance;
-
-        public NotFilterStringTests()
-        {
-            // TODO uncomment below to create an instance of NotFilterString
-            //instance = new NotFilterString();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of NotFilterString
-        /// </summary>
-        [Fact]
-        public void NotFilterStringInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" NotFilterString
-            //Assert.IsType<NotFilterString>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'FilterField'
-        /// </summary>
-        [Fact]
-        public void FilterFieldTest()
-        {
-            // TODO unit test for the property 'FilterField'
-        }
-        /// <summary>
-        /// Test the property 'Operation'
-        /// </summary>
-        [Fact]
-        public void OperationTest()
-        {
-            // TODO unit test for the property 'Operation'
-        }
-        /// <summary>
-        /// Test the property 'FilterValue'
-        /// </summary>
-        [Fact]
-        public void FilterValueTest()
-        {
-            // TODO unit test for the property 'FilterValue'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/PercolateRequestQueryTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/PercolateRequestQueryTests.cs
deleted file mode 100755
index f53e1a5..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/PercolateRequestQueryTests.cs
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing PercolateRequestQuery
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class PercolateRequestQueryTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for PercolateRequestQuery
-        //private PercolateRequestQuery instance;
-
-        public PercolateRequestQueryTests()
-        {
-            // TODO uncomment below to create an instance of PercolateRequestQuery
-            //instance = new PercolateRequestQuery();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of PercolateRequestQuery
-        /// </summary>
-        [Fact]
-        public void PercolateRequestQueryInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" PercolateRequestQuery
-            //Assert.IsType<PercolateRequestQuery>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Percolate'
-        /// </summary>
-        [Fact]
-        public void PercolateTest()
-        {
-            // TODO unit test for the property 'Percolate'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/PercolateRequestTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/PercolateRequestTests.cs
deleted file mode 100755
index 36a9f51..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/PercolateRequestTests.cs
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing PercolateRequest
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class PercolateRequestTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for PercolateRequest
-        //private PercolateRequest instance;
-
-        public PercolateRequestTests()
-        {
-            // TODO uncomment below to create an instance of PercolateRequest
-            //instance = new PercolateRequest();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of PercolateRequest
-        /// </summary>
-        [Fact]
-        public void PercolateRequestInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" PercolateRequest
-            //Assert.IsType<PercolateRequest>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Query'
-        /// </summary>
-        [Fact]
-        public void QueryTest()
-        {
-            // TODO unit test for the property 'Query'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/QueryFilterTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/QueryFilterTests.cs
deleted file mode 100755
index 7fe8a2d..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/QueryFilterTests.cs
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing QueryFilter
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class QueryFilterTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for QueryFilter
-        //private QueryFilter instance;
-
-        public QueryFilterTests()
-        {
-            // TODO uncomment below to create an instance of QueryFilter
-            //instance = new QueryFilter();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of QueryFilter
-        /// </summary>
-        [Fact]
-        public void QueryFilterInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" QueryFilter
-            //Assert.IsType<QueryFilter>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'QueryString'
-        /// </summary>
-        [Fact]
-        public void QueryStringTest()
-        {
-            // TODO unit test for the property 'QueryString'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/RangeFilterTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/RangeFilterTests.cs
deleted file mode 100755
index 78ee2d6..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/RangeFilterTests.cs
+++ /dev/null
@@ -1,103 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing RangeFilter
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class RangeFilterTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for RangeFilter
-        //private RangeFilter instance;
-
-        public RangeFilterTests()
-        {
-            // TODO uncomment below to create an instance of RangeFilter
-            //instance = new RangeFilter();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of RangeFilter
-        /// </summary>
-        [Fact]
-        public void RangeFilterInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" RangeFilter
-            //Assert.IsType<RangeFilter>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Field'
-        /// </summary>
-        [Fact]
-        public void FieldTest()
-        {
-            // TODO unit test for the property 'Field'
-        }
-        /// <summary>
-        /// Test the property 'Lte'
-        /// </summary>
-        [Fact]
-        public void LteTest()
-        {
-            // TODO unit test for the property 'Lte'
-        }
-        /// <summary>
-        /// Test the property 'Gte'
-        /// </summary>
-        [Fact]
-        public void GteTest()
-        {
-            // TODO unit test for the property 'Gte'
-        }
-        /// <summary>
-        /// Test the property 'Lt'
-        /// </summary>
-        [Fact]
-        public void LtTest()
-        {
-            // TODO unit test for the property 'Lt'
-        }
-        /// <summary>
-        /// Test the property 'Gt'
-        /// </summary>
-        [Fact]
-        public void GtTest()
-        {
-            // TODO unit test for the property 'Gt'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SearchRequestTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SearchRequestTests.cs
deleted file mode 100755
index 6d1df18..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SearchRequestTests.cs
+++ /dev/null
@@ -1,183 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing SearchRequest
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class SearchRequestTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for SearchRequest
-        //private SearchRequest instance;
-
-        public SearchRequestTests()
-        {
-            // TODO uncomment below to create an instance of SearchRequest
-            //instance = new SearchRequest();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of SearchRequest
-        /// </summary>
-        [Fact]
-        public void SearchRequestInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" SearchRequest
-            //Assert.IsType<SearchRequest>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Index'
-        /// </summary>
-        [Fact]
-        public void IndexTest()
-        {
-            // TODO unit test for the property 'Index'
-        }
-        /// <summary>
-        /// Test the property 'Query'
-        /// </summary>
-        [Fact]
-        public void QueryTest()
-        {
-            // TODO unit test for the property 'Query'
-        }
-        /// <summary>
-        /// Test the property 'FulltextFilter'
-        /// </summary>
-        [Fact]
-        public void FulltextFilterTest()
-        {
-            // TODO unit test for the property 'FulltextFilter'
-        }
-        /// <summary>
-        /// Test the property 'AttrFilter'
-        /// </summary>
-        [Fact]
-        public void AttrFilterTest()
-        {
-            // TODO unit test for the property 'AttrFilter'
-        }
-        /// <summary>
-        /// Test the property 'Limit'
-        /// </summary>
-        [Fact]
-        public void LimitTest()
-        {
-            // TODO unit test for the property 'Limit'
-        }
-        /// <summary>
-        /// Test the property 'Offset'
-        /// </summary>
-        [Fact]
-        public void OffsetTest()
-        {
-            // TODO unit test for the property 'Offset'
-        }
-        /// <summary>
-        /// Test the property 'MaxMatches'
-        /// </summary>
-        [Fact]
-        public void MaxMatchesTest()
-        {
-            // TODO unit test for the property 'MaxMatches'
-        }
-        /// <summary>
-        /// Test the property 'Sort'
-        /// </summary>
-        [Fact]
-        public void SortTest()
-        {
-            // TODO unit test for the property 'Sort'
-        }
-        /// <summary>
-        /// Test the property 'Aggs'
-        /// </summary>
-        [Fact]
-        public void AggsTest()
-        {
-            // TODO unit test for the property 'Aggs'
-        }
-        /// <summary>
-        /// Test the property 'Expressions'
-        /// </summary>
-        [Fact]
-        public void ExpressionsTest()
-        {
-            // TODO unit test for the property 'Expressions'
-        }
-        /// <summary>
-        /// Test the property 'Highlight'
-        /// </summary>
-        [Fact]
-        public void HighlightTest()
-        {
-            // TODO unit test for the property 'Highlight'
-        }
-        /// <summary>
-        /// Test the property 'Source'
-        /// </summary>
-        [Fact]
-        public void SourceTest()
-        {
-            // TODO unit test for the property 'Source'
-        }
-        /// <summary>
-        /// Test the property 'Options'
-        /// </summary>
-        [Fact]
-        public void OptionsTest()
-        {
-            // TODO unit test for the property 'Options'
-        }
-        /// <summary>
-        /// Test the property 'Profile'
-        /// </summary>
-        [Fact]
-        public void ProfileTest()
-        {
-            // TODO unit test for the property 'Profile'
-        }
-        /// <summary>
-        /// Test the property 'TrackScores'
-        /// </summary>
-        [Fact]
-        public void TrackScoresTest()
-        {
-            // TODO unit test for the property 'TrackScores'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SearchResponseHitsTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SearchResponseHitsTests.cs
deleted file mode 100755
index b4469e8..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SearchResponseHitsTests.cs
+++ /dev/null
@@ -1,95 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing SearchResponseHits
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class SearchResponseHitsTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for SearchResponseHits
-        //private SearchResponseHits instance;
-
-        public SearchResponseHitsTests()
-        {
-            // TODO uncomment below to create an instance of SearchResponseHits
-            //instance = new SearchResponseHits();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of SearchResponseHits
-        /// </summary>
-        [Fact]
-        public void SearchResponseHitsInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" SearchResponseHits
-            //Assert.IsType<SearchResponseHits>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'MaxScore'
-        /// </summary>
-        [Fact]
-        public void MaxScoreTest()
-        {
-            // TODO unit test for the property 'MaxScore'
-        }
-        /// <summary>
-        /// Test the property 'Total'
-        /// </summary>
-        [Fact]
-        public void TotalTest()
-        {
-            // TODO unit test for the property 'Total'
-        }
-        /// <summary>
-        /// Test the property 'TotalRelation'
-        /// </summary>
-        [Fact]
-        public void TotalRelationTest()
-        {
-            // TODO unit test for the property 'TotalRelation'
-        }
-        /// <summary>
-        /// Test the property 'Hits'
-        /// </summary>
-        [Fact]
-        public void HitsTest()
-        {
-            // TODO unit test for the property 'Hits'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SearchResponseTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SearchResponseTests.cs
deleted file mode 100755
index 1df617a..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SearchResponseTests.cs
+++ /dev/null
@@ -1,111 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing SearchResponse
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class SearchResponseTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for SearchResponse
-        //private SearchResponse instance;
-
-        public SearchResponseTests()
-        {
-            // TODO uncomment below to create an instance of SearchResponse
-            //instance = new SearchResponse();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of SearchResponse
-        /// </summary>
-        [Fact]
-        public void SearchResponseInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" SearchResponse
-            //Assert.IsType<SearchResponse>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Took'
-        /// </summary>
-        [Fact]
-        public void TookTest()
-        {
-            // TODO unit test for the property 'Took'
-        }
-        /// <summary>
-        /// Test the property 'TimedOut'
-        /// </summary>
-        [Fact]
-        public void TimedOutTest()
-        {
-            // TODO unit test for the property 'TimedOut'
-        }
-        /// <summary>
-        /// Test the property 'Aggregations'
-        /// </summary>
-        [Fact]
-        public void AggregationsTest()
-        {
-            // TODO unit test for the property 'Aggregations'
-        }
-        /// <summary>
-        /// Test the property 'Hits'
-        /// </summary>
-        [Fact]
-        public void HitsTest()
-        {
-            // TODO unit test for the property 'Hits'
-        }
-        /// <summary>
-        /// Test the property 'Profile'
-        /// </summary>
-        [Fact]
-        public void ProfileTest()
-        {
-            // TODO unit test for the property 'Profile'
-        }
-        /// <summary>
-        /// Test the property 'Warning'
-        /// </summary>
-        [Fact]
-        public void WarningTest()
-        {
-            // TODO unit test for the property 'Warning'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SortMVATests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SortMVATests.cs
deleted file mode 100755
index d16e187..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SortMVATests.cs
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing SortMVA
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class SortMVATests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for SortMVA
-        //private SortMVA instance;
-
-        public SortMVATests()
-        {
-            // TODO uncomment below to create an instance of SortMVA
-            //instance = new SortMVA();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of SortMVA
-        /// </summary>
-        [Fact]
-        public void SortMVAInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" SortMVA
-            //Assert.IsType<SortMVA>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Attr'
-        /// </summary>
-        [Fact]
-        public void AttrTest()
-        {
-            // TODO unit test for the property 'Attr'
-        }
-        /// <summary>
-        /// Test the property 'Order'
-        /// </summary>
-        [Fact]
-        public void OrderTest()
-        {
-            // TODO unit test for the property 'Order'
-        }
-        /// <summary>
-        /// Test the property 'Mode'
-        /// </summary>
-        [Fact]
-        public void ModeTest()
-        {
-            // TODO unit test for the property 'Mode'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SortMultipleTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SortMultipleTests.cs
deleted file mode 100755
index 9d0f7f6..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SortMultipleTests.cs
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing SortMultiple
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class SortMultipleTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for SortMultiple
-        //private SortMultiple instance;
-
-        public SortMultipleTests()
-        {
-            // TODO uncomment below to create an instance of SortMultiple
-            //instance = new SortMultiple();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of SortMultiple
-        /// </summary>
-        [Fact]
-        public void SortMultipleInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" SortMultiple
-            //Assert.IsType<SortMultiple>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Attrs'
-        /// </summary>
-        [Fact]
-        public void AttrsTest()
-        {
-            // TODO unit test for the property 'Attrs'
-        }
-        /// <summary>
-        /// Test the property 'Replace'
-        /// </summary>
-        [Fact]
-        public void ReplaceTest()
-        {
-            // TODO unit test for the property 'Replace'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SortOrderTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SortOrderTests.cs
deleted file mode 100755
index 44632e4..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SortOrderTests.cs
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing SortOrder
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class SortOrderTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for SortOrder
-        //private SortOrder instance;
-
-        public SortOrderTests()
-        {
-            // TODO uncomment below to create an instance of SortOrder
-            //instance = new SortOrder();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of SortOrder
-        /// </summary>
-        [Fact]
-        public void SortOrderInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" SortOrder
-            //Assert.IsType<SortOrder>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Attr'
-        /// </summary>
-        [Fact]
-        public void AttrTest()
-        {
-            // TODO unit test for the property 'Attr'
-        }
-        /// <summary>
-        /// Test the property 'Order'
-        /// </summary>
-        [Fact]
-        public void OrderTest()
-        {
-            // TODO unit test for the property 'Order'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SourceByRulesTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SourceByRulesTests.cs
deleted file mode 100755
index 6fd35ed..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SourceByRulesTests.cs
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing SourceByRules
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class SourceByRulesTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for SourceByRules
-        //private SourceByRules instance;
-
-        public SourceByRulesTests()
-        {
-            // TODO uncomment below to create an instance of SourceByRules
-            //instance = new SourceByRules();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of SourceByRules
-        /// </summary>
-        [Fact]
-        public void SourceByRulesInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" SourceByRules
-            //Assert.IsType<SourceByRules>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Includes'
-        /// </summary>
-        [Fact]
-        public void IncludesTest()
-        {
-            // TODO unit test for the property 'Includes'
-        }
-        /// <summary>
-        /// Test the property 'Excludes'
-        /// </summary>
-        [Fact]
-        public void ExcludesTest()
-        {
-            // TODO unit test for the property 'Excludes'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SuccessResponseTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SuccessResponseTests.cs
deleted file mode 100755
index e5f3fb3..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/SuccessResponseTests.cs
+++ /dev/null
@@ -1,103 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing SuccessResponse
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class SuccessResponseTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for SuccessResponse
-        //private SuccessResponse instance;
-
-        public SuccessResponseTests()
-        {
-            // TODO uncomment below to create an instance of SuccessResponse
-            //instance = new SuccessResponse();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of SuccessResponse
-        /// </summary>
-        [Fact]
-        public void SuccessResponseInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" SuccessResponse
-            //Assert.IsType<SuccessResponse>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Index'
-        /// </summary>
-        [Fact]
-        public void IndexTest()
-        {
-            // TODO unit test for the property 'Index'
-        }
-        /// <summary>
-        /// Test the property 'Id'
-        /// </summary>
-        [Fact]
-        public void IdTest()
-        {
-            // TODO unit test for the property 'Id'
-        }
-        /// <summary>
-        /// Test the property 'Created'
-        /// </summary>
-        [Fact]
-        public void CreatedTest()
-        {
-            // TODO unit test for the property 'Created'
-        }
-        /// <summary>
-        /// Test the property 'Result'
-        /// </summary>
-        [Fact]
-        public void ResultTest()
-        {
-            // TODO unit test for the property 'Result'
-        }
-        /// <summary>
-        /// Test the property 'Found'
-        /// </summary>
-        [Fact]
-        public void FoundTest()
-        {
-            // TODO unit test for the property 'Found'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/UpdateDocumentRequestTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/UpdateDocumentRequestTests.cs
deleted file mode 100755
index 5dfcb02..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/UpdateDocumentRequestTests.cs
+++ /dev/null
@@ -1,95 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing UpdateDocumentRequest
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class UpdateDocumentRequestTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for UpdateDocumentRequest
-        //private UpdateDocumentRequest instance;
-
-        public UpdateDocumentRequestTests()
-        {
-            // TODO uncomment below to create an instance of UpdateDocumentRequest
-            //instance = new UpdateDocumentRequest();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of UpdateDocumentRequest
-        /// </summary>
-        [Fact]
-        public void UpdateDocumentRequestInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" UpdateDocumentRequest
-            //Assert.IsType<UpdateDocumentRequest>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Index'
-        /// </summary>
-        [Fact]
-        public void IndexTest()
-        {
-            // TODO unit test for the property 'Index'
-        }
-        /// <summary>
-        /// Test the property 'Doc'
-        /// </summary>
-        [Fact]
-        public void DocTest()
-        {
-            // TODO unit test for the property 'Doc'
-        }
-        /// <summary>
-        /// Test the property 'Id'
-        /// </summary>
-        [Fact]
-        public void IdTest()
-        {
-            // TODO unit test for the property 'Id'
-        }
-        /// <summary>
-        /// Test the property 'Query'
-        /// </summary>
-        [Fact]
-        public void QueryTest()
-        {
-            // TODO unit test for the property 'Query'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/UpdateResponseTests.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/UpdateResponseTests.cs
deleted file mode 100755
index 9c674f0..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch.Test/Model/UpdateResponseTests.cs
+++ /dev/null
@@ -1,95 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Xunit;
-
-using System;
-using System.Linq;
-using System.IO;
-using System.Collections.Generic;
-using ManticoreSearch.Api;
-using ManticoreSearch.Model;
-using ManticoreSearch.Client;
-using System.Reflection;
-using Newtonsoft.Json;
-
-namespace ManticoreSearch.Test.Model
-{
-    /// <summary>
-    ///  Class for testing UpdateResponse
-    /// </summary>
-    /// <remarks>
-    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
-    /// Please update the test case below to test the model.
-    /// </remarks>
-    public class UpdateResponseTests : IDisposable
-    {
-        // TODO uncomment below to declare an instance variable for UpdateResponse
-        //private UpdateResponse instance;
-
-        public UpdateResponseTests()
-        {
-            // TODO uncomment below to create an instance of UpdateResponse
-            //instance = new UpdateResponse();
-        }
-
-        public void Dispose()
-        {
-            // Cleanup when everything is done.
-        }
-
-        /// <summary>
-        /// Test an instance of UpdateResponse
-        /// </summary>
-        [Fact]
-        public void UpdateResponseInstanceTest()
-        {
-            // TODO uncomment below to test "IsType" UpdateResponse
-            //Assert.IsType<UpdateResponse>(instance);
-        }
-
-
-        /// <summary>
-        /// Test the property 'Index'
-        /// </summary>
-        [Fact]
-        public void IndexTest()
-        {
-            // TODO unit test for the property 'Index'
-        }
-        /// <summary>
-        /// Test the property 'Updated'
-        /// </summary>
-        [Fact]
-        public void UpdatedTest()
-        {
-            // TODO unit test for the property 'Updated'
-        }
-        /// <summary>
-        /// Test the property 'Id'
-        /// </summary>
-        [Fact]
-        public void IdTest()
-        {
-            // TODO unit test for the property 'Id'
-        }
-        /// <summary>
-        /// Test the property 'Result'
-        /// </summary>
-        [Fact]
-        public void ResultTest()
-        {
-            // TODO unit test for the property 'Result'
-        }
-
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Api/IndexApi.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Api/IndexApi.cs
deleted file mode 100755
index ce753e1..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Api/IndexApi.cs
+++ /dev/null
@@ -1,1086 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.Net;
-using System.Net.Http;
-using System.Net.Mime;
-using ManticoreSearch.Client;
-using ManticoreSearch.Model;
-using System.Web;
-
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.Dynamic;
-
-
-namespace ManticoreSearch.Api
-{
-
-    /// <summary>
-    /// Represents a collection of functions to interact with the API endpoints
-    /// </summary>
-    public interface IIndexApiSync : IApiAccessor
-    {
-        #region Synchronous Operations
-        /// <summary>
-        /// Bulk index operations
-        /// </summary>
-        /// <remarks>
-        /// Sends multiple operatons like inserts, updates, replaces or deletes.  For each operation it&#39;s object must have same format as in their dedicated method.  The method expects a raw string as the batch in NDJSON.  Each operation object needs to be serialized to   JSON and separated by endline (\\n).      An example of raw input:      &#x60;&#x60;&#x60;   {\&quot;insert\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;, \&quot;doc\&quot;: {\&quot;plot\&quot;: \&quot;A secret team goes to North Pole\&quot;, \&quot;rating\&quot;: 9.5, \&quot;language\&quot;: [2, 3], \&quot;title\&quot;: \&quot;This is an older movie\&quot;, \&quot;lon\&quot;: 51.99, \&quot;meta\&quot;: {\&quot;keywords\&quot;:[\&quot;travel\&quot;,\&quot;ice\&quot;],\&quot;genre\&quot;:[\&quot;adventure\&quot;]}, \&quot;year\&quot;: 1950, \&quot;lat\&quot;: 60.4, \&quot;advise\&quot;: \&quot;PG-13\&quot;}}}   \\n   {\&quot;delete\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;,\&quot;id\&quot;:700}}   &#x60;&#x60;&#x60;      Responds with an object telling whenever any errors occured and an array with status for each operation:      &#x60;&#x60;&#x60;   {     &#39;items&#39;:     [       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;result&#39;:&#39;updated&#39;}       },       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:2,&#39;result&#39;:&#39;updated&#39;}       }     ],     &#39;errors&#39;:false   }   &#x60;&#x60;&#x60;   
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="body"></param>
-        /// <returns>BulkResponse</returns>
-        BulkResponse Bulk(string body);
-
-        /// <summary>
-        /// Bulk index operations
-        /// </summary>
-        /// <remarks>
-        /// Sends multiple operatons like inserts, updates, replaces or deletes.  For each operation it&#39;s object must have same format as in their dedicated method.  The method expects a raw string as the batch in NDJSON.  Each operation object needs to be serialized to   JSON and separated by endline (\\n).      An example of raw input:      &#x60;&#x60;&#x60;   {\&quot;insert\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;, \&quot;doc\&quot;: {\&quot;plot\&quot;: \&quot;A secret team goes to North Pole\&quot;, \&quot;rating\&quot;: 9.5, \&quot;language\&quot;: [2, 3], \&quot;title\&quot;: \&quot;This is an older movie\&quot;, \&quot;lon\&quot;: 51.99, \&quot;meta\&quot;: {\&quot;keywords\&quot;:[\&quot;travel\&quot;,\&quot;ice\&quot;],\&quot;genre\&quot;:[\&quot;adventure\&quot;]}, \&quot;year\&quot;: 1950, \&quot;lat\&quot;: 60.4, \&quot;advise\&quot;: \&quot;PG-13\&quot;}}}   \\n   {\&quot;delete\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;,\&quot;id\&quot;:700}}   &#x60;&#x60;&#x60;      Responds with an object telling whenever any errors occured and an array with status for each operation:      &#x60;&#x60;&#x60;   {     &#39;items&#39;:     [       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;result&#39;:&#39;updated&#39;}       },       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:2,&#39;result&#39;:&#39;updated&#39;}       }     ],     &#39;errors&#39;:false   }   &#x60;&#x60;&#x60;   
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="body"></param>
-        /// <returns>ApiResponse of BulkResponse</returns>
-        ApiResponse<BulkResponse> BulkWithHttpInfo(string body);
-        /// <summary>
-        /// Delete a document in an index
-        /// </summary>
-        /// <remarks>
-        /// Delete one or several documents. The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a  match query, in which case multiple documents can be delete . Example of input to delete by id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;id&#39;:100}   &#x60;&#x60;&#x60;  Example of input to delete using a query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;  The match query has same syntax as in for searching. Responds with an object telling how many documents got deleted:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="deleteDocumentRequest"></param>
-        /// <returns>DeleteResponse</returns>
-        DeleteResponse Delete(DeleteDocumentRequest deleteDocumentRequest);
-
-        /// <summary>
-        /// Delete a document in an index
-        /// </summary>
-        /// <remarks>
-        /// Delete one or several documents. The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a  match query, in which case multiple documents can be delete . Example of input to delete by id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;id&#39;:100}   &#x60;&#x60;&#x60;  Example of input to delete using a query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;  The match query has same syntax as in for searching. Responds with an object telling how many documents got deleted:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="deleteDocumentRequest"></param>
-        /// <returns>ApiResponse of DeleteResponse</returns>
-        ApiResponse<DeleteResponse> DeleteWithHttpInfo(DeleteDocumentRequest deleteDocumentRequest);
-        /// <summary>
-        /// Create a new document in an index
-        /// </summary>
-        /// <remarks>
-        /// Insert a document.  Expects an object like:     &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;id&#39;:701,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is an old movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:1950,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   The document id can also be missing, in which case an autogenerated one will be used:             &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is a new movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:2020,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   It responds with an object in format:      &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:701,&#39;created&#39;:true,&#39;result&#39;:&#39;created&#39;,&#39;status&#39;:201}   &#x60;&#x60;&#x60; 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="insertDocumentRequest"></param>
-        /// <returns>SuccessResponse</returns>
-        SuccessResponse Insert(InsertDocumentRequest insertDocumentRequest);
-
-        /// <summary>
-        /// Create a new document in an index
-        /// </summary>
-        /// <remarks>
-        /// Insert a document.  Expects an object like:     &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;id&#39;:701,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is an old movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:1950,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   The document id can also be missing, in which case an autogenerated one will be used:             &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is a new movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:2020,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   It responds with an object in format:      &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:701,&#39;created&#39;:true,&#39;result&#39;:&#39;created&#39;,&#39;status&#39;:201}   &#x60;&#x60;&#x60; 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="insertDocumentRequest"></param>
-        /// <returns>ApiResponse of SuccessResponse</returns>
-        ApiResponse<SuccessResponse> InsertWithHttpInfo(InsertDocumentRequest insertDocumentRequest);
-        /// <summary>
-        /// Replace new document in an index
-        /// </summary>
-        /// <remarks>
-        /// Replace an existing document. Input has same format as &#x60;insert&#x60; operation. &lt;br/&gt; Responds with an object in format: &lt;br/&gt;    &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;created&#39;:false,&#39;result&#39;:&#39;updated&#39;,&#39;status&#39;:200}   &#x60;&#x60;&#x60; 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="insertDocumentRequest"></param>
-        /// <returns>SuccessResponse</returns>
-        SuccessResponse Replace(InsertDocumentRequest insertDocumentRequest);
-
-        /// <summary>
-        /// Replace new document in an index
-        /// </summary>
-        /// <remarks>
-        /// Replace an existing document. Input has same format as &#x60;insert&#x60; operation. &lt;br/&gt; Responds with an object in format: &lt;br/&gt;    &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;created&#39;:false,&#39;result&#39;:&#39;updated&#39;,&#39;status&#39;:200}   &#x60;&#x60;&#x60; 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="insertDocumentRequest"></param>
-        /// <returns>ApiResponse of SuccessResponse</returns>
-        ApiResponse<SuccessResponse> ReplaceWithHttpInfo(InsertDocumentRequest insertDocumentRequest);
-        /// <summary>
-        /// Update a document in an index
-        /// </summary>
-        /// <remarks>
-        /// Update one or several documents. The update can be made by passing the id or by using a match query in case multiple documents can be updated.  For example update a document using document id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;doc&#39;:{&#39;rating&#39;:9.49},&#39;id&#39;:100}   &#x60;&#x60;&#x60;  And update by using a match query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:{&#39;rating&#39;:9.49},     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;   The match query has same syntax as for searching. Responds with an object that tells how many documents where updated in format:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="updateDocumentRequest"></param>
-        /// <returns>UpdateResponse</returns>
-        UpdateResponse Update(UpdateDocumentRequest updateDocumentRequest);
-
-        /// <summary>
-        /// Update a document in an index
-        /// </summary>
-        /// <remarks>
-        /// Update one or several documents. The update can be made by passing the id or by using a match query in case multiple documents can be updated.  For example update a document using document id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;doc&#39;:{&#39;rating&#39;:9.49},&#39;id&#39;:100}   &#x60;&#x60;&#x60;  And update by using a match query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:{&#39;rating&#39;:9.49},     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;   The match query has same syntax as for searching. Responds with an object that tells how many documents where updated in format:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="updateDocumentRequest"></param>
-        /// <returns>ApiResponse of UpdateResponse</returns>
-        ApiResponse<UpdateResponse> UpdateWithHttpInfo(UpdateDocumentRequest updateDocumentRequest);
-        #endregion Synchronous Operations
-    }
-
-    /// <summary>
-    /// Represents a collection of functions to interact with the API endpoints
-    /// </summary>
-    public interface IIndexApiAsync : IApiAccessor
-    {
-        #region Asynchronous Operations
-        /// <summary>
-        /// Bulk index operations
-        /// </summary>
-        /// <remarks>
-        /// Sends multiple operatons like inserts, updates, replaces or deletes.  For each operation it&#39;s object must have same format as in their dedicated method.  The method expects a raw string as the batch in NDJSON.  Each operation object needs to be serialized to   JSON and separated by endline (\\n).      An example of raw input:      &#x60;&#x60;&#x60;   {\&quot;insert\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;, \&quot;doc\&quot;: {\&quot;plot\&quot;: \&quot;A secret team goes to North Pole\&quot;, \&quot;rating\&quot;: 9.5, \&quot;language\&quot;: [2, 3], \&quot;title\&quot;: \&quot;This is an older movie\&quot;, \&quot;lon\&quot;: 51.99, \&quot;meta\&quot;: {\&quot;keywords\&quot;:[\&quot;travel\&quot;,\&quot;ice\&quot;],\&quot;genre\&quot;:[\&quot;adventure\&quot;]}, \&quot;year\&quot;: 1950, \&quot;lat\&quot;: 60.4, \&quot;advise\&quot;: \&quot;PG-13\&quot;}}}   \\n   {\&quot;delete\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;,\&quot;id\&quot;:700}}   &#x60;&#x60;&#x60;      Responds with an object telling whenever any errors occured and an array with status for each operation:      &#x60;&#x60;&#x60;   {     &#39;items&#39;:     [       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;result&#39;:&#39;updated&#39;}       },       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:2,&#39;result&#39;:&#39;updated&#39;}       }     ],     &#39;errors&#39;:false   }   &#x60;&#x60;&#x60;   
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="body"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of BulkResponse</returns>
-        System.Threading.Tasks.Task<BulkResponse> BulkAsync(string body, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-
-        /// <summary>
-        /// Bulk index operations
-        /// </summary>
-        /// <remarks>
-        /// Sends multiple operatons like inserts, updates, replaces or deletes.  For each operation it&#39;s object must have same format as in their dedicated method.  The method expects a raw string as the batch in NDJSON.  Each operation object needs to be serialized to   JSON and separated by endline (\\n).      An example of raw input:      &#x60;&#x60;&#x60;   {\&quot;insert\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;, \&quot;doc\&quot;: {\&quot;plot\&quot;: \&quot;A secret team goes to North Pole\&quot;, \&quot;rating\&quot;: 9.5, \&quot;language\&quot;: [2, 3], \&quot;title\&quot;: \&quot;This is an older movie\&quot;, \&quot;lon\&quot;: 51.99, \&quot;meta\&quot;: {\&quot;keywords\&quot;:[\&quot;travel\&quot;,\&quot;ice\&quot;],\&quot;genre\&quot;:[\&quot;adventure\&quot;]}, \&quot;year\&quot;: 1950, \&quot;lat\&quot;: 60.4, \&quot;advise\&quot;: \&quot;PG-13\&quot;}}}   \\n   {\&quot;delete\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;,\&quot;id\&quot;:700}}   &#x60;&#x60;&#x60;      Responds with an object telling whenever any errors occured and an array with status for each operation:      &#x60;&#x60;&#x60;   {     &#39;items&#39;:     [       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;result&#39;:&#39;updated&#39;}       },       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:2,&#39;result&#39;:&#39;updated&#39;}       }     ],     &#39;errors&#39;:false   }   &#x60;&#x60;&#x60;   
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="body"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of ApiResponse (BulkResponse)</returns>
-        System.Threading.Tasks.Task<ApiResponse<BulkResponse>> BulkWithHttpInfoAsync(string body, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-        /// <summary>
-        /// Delete a document in an index
-        /// </summary>
-        /// <remarks>
-        /// Delete one or several documents. The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a  match query, in which case multiple documents can be delete . Example of input to delete by id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;id&#39;:100}   &#x60;&#x60;&#x60;  Example of input to delete using a query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;  The match query has same syntax as in for searching. Responds with an object telling how many documents got deleted:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="deleteDocumentRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of DeleteResponse</returns>
-        System.Threading.Tasks.Task<DeleteResponse> DeleteAsync(DeleteDocumentRequest deleteDocumentRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-
-        /// <summary>
-        /// Delete a document in an index
-        /// </summary>
-        /// <remarks>
-        /// Delete one or several documents. The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a  match query, in which case multiple documents can be delete . Example of input to delete by id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;id&#39;:100}   &#x60;&#x60;&#x60;  Example of input to delete using a query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;  The match query has same syntax as in for searching. Responds with an object telling how many documents got deleted:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="deleteDocumentRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of ApiResponse (DeleteResponse)</returns>
-        System.Threading.Tasks.Task<ApiResponse<DeleteResponse>> DeleteWithHttpInfoAsync(DeleteDocumentRequest deleteDocumentRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-        /// <summary>
-        /// Create a new document in an index
-        /// </summary>
-        /// <remarks>
-        /// Insert a document.  Expects an object like:     &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;id&#39;:701,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is an old movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:1950,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   The document id can also be missing, in which case an autogenerated one will be used:             &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is a new movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:2020,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   It responds with an object in format:      &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:701,&#39;created&#39;:true,&#39;result&#39;:&#39;created&#39;,&#39;status&#39;:201}   &#x60;&#x60;&#x60; 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="insertDocumentRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of SuccessResponse</returns>
-        System.Threading.Tasks.Task<SuccessResponse> InsertAsync(InsertDocumentRequest insertDocumentRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-
-        /// <summary>
-        /// Create a new document in an index
-        /// </summary>
-        /// <remarks>
-        /// Insert a document.  Expects an object like:     &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;id&#39;:701,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is an old movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:1950,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   The document id can also be missing, in which case an autogenerated one will be used:             &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is a new movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:2020,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   It responds with an object in format:      &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:701,&#39;created&#39;:true,&#39;result&#39;:&#39;created&#39;,&#39;status&#39;:201}   &#x60;&#x60;&#x60; 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="insertDocumentRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of ApiResponse (SuccessResponse)</returns>
-        System.Threading.Tasks.Task<ApiResponse<SuccessResponse>> InsertWithHttpInfoAsync(InsertDocumentRequest insertDocumentRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-        /// <summary>
-        /// Replace new document in an index
-        /// </summary>
-        /// <remarks>
-        /// Replace an existing document. Input has same format as &#x60;insert&#x60; operation. &lt;br/&gt; Responds with an object in format: &lt;br/&gt;    &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;created&#39;:false,&#39;result&#39;:&#39;updated&#39;,&#39;status&#39;:200}   &#x60;&#x60;&#x60; 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="insertDocumentRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of SuccessResponse</returns>
-        System.Threading.Tasks.Task<SuccessResponse> ReplaceAsync(InsertDocumentRequest insertDocumentRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-
-        /// <summary>
-        /// Replace new document in an index
-        /// </summary>
-        /// <remarks>
-        /// Replace an existing document. Input has same format as &#x60;insert&#x60; operation. &lt;br/&gt; Responds with an object in format: &lt;br/&gt;    &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;created&#39;:false,&#39;result&#39;:&#39;updated&#39;,&#39;status&#39;:200}   &#x60;&#x60;&#x60; 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="insertDocumentRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of ApiResponse (SuccessResponse)</returns>
-        System.Threading.Tasks.Task<ApiResponse<SuccessResponse>> ReplaceWithHttpInfoAsync(InsertDocumentRequest insertDocumentRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-        /// <summary>
-        /// Update a document in an index
-        /// </summary>
-        /// <remarks>
-        /// Update one or several documents. The update can be made by passing the id or by using a match query in case multiple documents can be updated.  For example update a document using document id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;doc&#39;:{&#39;rating&#39;:9.49},&#39;id&#39;:100}   &#x60;&#x60;&#x60;  And update by using a match query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:{&#39;rating&#39;:9.49},     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;   The match query has same syntax as for searching. Responds with an object that tells how many documents where updated in format:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="updateDocumentRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of UpdateResponse</returns>
-        System.Threading.Tasks.Task<UpdateResponse> UpdateAsync(UpdateDocumentRequest updateDocumentRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-
-        /// <summary>
-        /// Update a document in an index
-        /// </summary>
-        /// <remarks>
-        /// Update one or several documents. The update can be made by passing the id or by using a match query in case multiple documents can be updated.  For example update a document using document id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;doc&#39;:{&#39;rating&#39;:9.49},&#39;id&#39;:100}   &#x60;&#x60;&#x60;  And update by using a match query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:{&#39;rating&#39;:9.49},     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;   The match query has same syntax as for searching. Responds with an object that tells how many documents where updated in format:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="updateDocumentRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of ApiResponse (UpdateResponse)</returns>
-        System.Threading.Tasks.Task<ApiResponse<UpdateResponse>> UpdateWithHttpInfoAsync(UpdateDocumentRequest updateDocumentRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-        #endregion Asynchronous Operations
-    }
-
-    /// <summary>
-    /// Represents a collection of functions to interact with the API endpoints
-    /// </summary>
-    public interface IIndexApi : IIndexApiSync, IIndexApiAsync
-    {
-
-    }
-
-    /// <summary>
-    /// Represents a collection of functions to interact with the API endpoints
-    /// </summary>
-    public partial class IndexApi : IDisposable, IIndexApi
-    {
-        private ManticoreSearch.Client.ExceptionFactory _exceptionFactory = (name, response) => null;
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="IndexApi"/> class.
-        /// **IMPORTANT** This will also create an instance of HttpClient, which is less than ideal.
-        /// It's better to reuse the <see href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests#issues-with-the-original-httpclient-class-available-in-net">HttpClient and HttpClientHandler</see>.
-        /// </summary>
-        /// <returns></returns>
-        public IndexApi() : this((string)null)
-        {
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="IndexApi"/> class.
-        /// **IMPORTANT** This will also create an instance of HttpClient, which is less than ideal.
-        /// It's better to reuse the <see href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests#issues-with-the-original-httpclient-class-available-in-net">HttpClient and HttpClientHandler</see>.
-        /// </summary>
-        /// <param name="basePath">The target service's base path in URL format.</param>
-        /// <exception cref="ArgumentException"></exception>
-        /// <returns></returns>
-        public IndexApi(string basePath)
-        {
-            this.Configuration = ManticoreSearch.Client.Configuration.MergeConfigurations(
-                ManticoreSearch.Client.GlobalConfiguration.Instance,
-                new ManticoreSearch.Client.Configuration { BasePath = basePath }
-            );
-            this.ApiClient = new ManticoreSearch.Client.ApiClient(this.Configuration.BasePath);
-            this.Client =  this.ApiClient;
-            this.AsynchronousClient = this.ApiClient;
-            this.ExceptionFactory = ManticoreSearch.Client.Configuration.DefaultExceptionFactory;
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="IndexApi"/> class using Configuration object.
-        /// **IMPORTANT** This will also create an instance of HttpClient, which is less than ideal.
-        /// It's better to reuse the <see href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests#issues-with-the-original-httpclient-class-available-in-net">HttpClient and HttpClientHandler</see>.
-        /// </summary>
-        /// <param name="configuration">An instance of Configuration.</param>
-        /// <exception cref="ArgumentNullException"></exception>
-        /// <returns></returns>
-        public IndexApi(ManticoreSearch.Client.Configuration configuration)
-        {
-            if (configuration == null) throw new ArgumentNullException("configuration");
-
-            this.Configuration = ManticoreSearch.Client.Configuration.MergeConfigurations(
-                ManticoreSearch.Client.GlobalConfiguration.Instance,
-                configuration
-            );
-            this.ApiClient = new ManticoreSearch.Client.ApiClient(this.Configuration.BasePath);
-            this.Client = this.ApiClient;
-            this.AsynchronousClient = this.ApiClient;
-            ExceptionFactory = ManticoreSearch.Client.Configuration.DefaultExceptionFactory;
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="IndexApi"/> class.
-        /// </summary>
-        /// <param name="client">An instance of HttpClient.</param>
-        /// <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
-        /// <exception cref="ArgumentNullException"></exception>
-        /// <returns></returns>
-        /// <remarks>
-        /// Some configuration settings will not be applied without passing an HttpClientHandler.
-        /// The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
-        /// </remarks>
-        public IndexApi(HttpClient client, HttpClientHandler handler = null) : this(client, (string)null, handler)
-        {
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="IndexApi"/> class.
-        /// </summary>
-        /// <param name="client">An instance of HttpClient.</param>
-        /// <param name="basePath">The target service's base path in URL format.</param>
-        /// <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
-        /// <exception cref="ArgumentNullException"></exception>
-        /// <exception cref="ArgumentException"></exception>
-        /// <returns></returns>
-        /// <remarks>
-        /// Some configuration settings will not be applied without passing an HttpClientHandler.
-        /// The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
-        /// </remarks>
-        public IndexApi(HttpClient client, string basePath, HttpClientHandler handler = null)
-        {
-            if (client == null) throw new ArgumentNullException("client");
-
-            this.Configuration = ManticoreSearch.Client.Configuration.MergeConfigurations(
-                ManticoreSearch.Client.GlobalConfiguration.Instance,
-                new ManticoreSearch.Client.Configuration { BasePath = basePath }
-            );
-            this.ApiClient = new ManticoreSearch.Client.ApiClient(client, this.Configuration.BasePath, handler);
-            this.Client =  this.ApiClient;
-            this.AsynchronousClient = this.ApiClient;
-            this.ExceptionFactory = ManticoreSearch.Client.Configuration.DefaultExceptionFactory;
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="IndexApi"/> class using Configuration object.
-        /// </summary>
-        /// <param name="client">An instance of HttpClient.</param>
-        /// <param name="configuration">An instance of Configuration.</param>
-        /// <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
-        /// <exception cref="ArgumentNullException"></exception>
-        /// <returns></returns>
-        /// <remarks>
-        /// Some configuration settings will not be applied without passing an HttpClientHandler.
-        /// The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
-        /// </remarks>
-        public IndexApi(HttpClient client, ManticoreSearch.Client.Configuration configuration, HttpClientHandler handler = null)
-        {
-            if (configuration == null) throw new ArgumentNullException("configuration");
-            if (client == null) throw new ArgumentNullException("client");
-
-            this.Configuration = ManticoreSearch.Client.Configuration.MergeConfigurations(
-                ManticoreSearch.Client.GlobalConfiguration.Instance,
-                configuration
-            );
-            this.ApiClient = new ManticoreSearch.Client.ApiClient(client, this.Configuration.BasePath, handler);
-            this.Client = this.ApiClient;
-            this.AsynchronousClient = this.ApiClient;
-            ExceptionFactory = ManticoreSearch.Client.Configuration.DefaultExceptionFactory;
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="IndexApi"/> class
-        /// using a Configuration object and client instance.
-        /// </summary>
-        /// <param name="client">The client interface for synchronous API access.</param>
-        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
-        /// <param name="configuration">The configuration object.</param>
-        /// <exception cref="ArgumentNullException"></exception>
-        public IndexApi(ManticoreSearch.Client.ISynchronousClient client, ManticoreSearch.Client.IAsynchronousClient asyncClient, ManticoreSearch.Client.IReadableConfiguration configuration)
-        {
-            if (client == null) throw new ArgumentNullException("client");
-            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
-            if (configuration == null) throw new ArgumentNullException("configuration");
-
-            this.Client = client;
-            this.AsynchronousClient = asyncClient;
-            this.Configuration = configuration;
-            this.ExceptionFactory = ManticoreSearch.Client.Configuration.DefaultExceptionFactory;
-        }
-
-        /// <summary>
-        /// Disposes resources if they were created by us
-        /// </summary>
-        public void Dispose()
-        {
-            this.ApiClient?.Dispose();
-        }
-
-        /// <summary>
-        /// Holds the ApiClient if created
-        /// </summary>
-        public ManticoreSearch.Client.ApiClient ApiClient { get; set; } = null;
-
-        /// <summary>
-        /// The client for accessing this underlying API asynchronously.
-        /// </summary>
-        public ManticoreSearch.Client.IAsynchronousClient AsynchronousClient { get; set; }
-
-        /// <summary>
-        /// The client for accessing this underlying API synchronously.
-        /// </summary>
-        public ManticoreSearch.Client.ISynchronousClient Client { get; set; }
-
-        /// <summary>
-        /// Gets the base path of the API client.
-        /// </summary>
-        /// <value>The base path</value>
-        public string GetBasePath()
-        {
-            return this.Configuration.BasePath;
-        }
-
-        /// <summary>
-        /// Gets or sets the configuration object
-        /// </summary>
-        /// <value>An instance of the Configuration</value>
-        public ManticoreSearch.Client.IReadableConfiguration Configuration { get; set; }
-
-        /// <summary>
-        /// Provides a factory method hook for the creation of exceptions.
-        /// </summary>
-        public ManticoreSearch.Client.ExceptionFactory ExceptionFactory
-        {
-            get
-            {
-                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
-                {
-                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
-                }
-                return _exceptionFactory;
-            }
-            set { _exceptionFactory = value; }
-        }
-
-        /// <summary>
-        /// Bulk index operations Sends multiple operatons like inserts, updates, replaces or deletes.  For each operation it&#39;s object must have same format as in their dedicated method.  The method expects a raw string as the batch in NDJSON.  Each operation object needs to be serialized to   JSON and separated by endline (\\n).      An example of raw input:      &#x60;&#x60;&#x60;   {\&quot;insert\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;, \&quot;doc\&quot;: {\&quot;plot\&quot;: \&quot;A secret team goes to North Pole\&quot;, \&quot;rating\&quot;: 9.5, \&quot;language\&quot;: [2, 3], \&quot;title\&quot;: \&quot;This is an older movie\&quot;, \&quot;lon\&quot;: 51.99, \&quot;meta\&quot;: {\&quot;keywords\&quot;:[\&quot;travel\&quot;,\&quot;ice\&quot;],\&quot;genre\&quot;:[\&quot;adventure\&quot;]}, \&quot;year\&quot;: 1950, \&quot;lat\&quot;: 60.4, \&quot;advise\&quot;: \&quot;PG-13\&quot;}}}   \\n   {\&quot;delete\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;,\&quot;id\&quot;:700}}   &#x60;&#x60;&#x60;      Responds with an object telling whenever any errors occured and an array with status for each operation:      &#x60;&#x60;&#x60;   {     &#39;items&#39;:     [       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;result&#39;:&#39;updated&#39;}       },       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:2,&#39;result&#39;:&#39;updated&#39;}       }     ],     &#39;errors&#39;:false   }   &#x60;&#x60;&#x60;   
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="body"></param>
-        /// <returns>BulkResponse</returns>
-        public BulkResponse Bulk(string body)
-        {
-            ManticoreSearch.Client.ApiResponse<BulkResponse> localVarResponse = BulkWithHttpInfo(body);
-            return localVarResponse.Data;
-        }
-
-        /// <summary>
-        /// Bulk index operations Sends multiple operatons like inserts, updates, replaces or deletes.  For each operation it&#39;s object must have same format as in their dedicated method.  The method expects a raw string as the batch in NDJSON.  Each operation object needs to be serialized to   JSON and separated by endline (\\n).      An example of raw input:      &#x60;&#x60;&#x60;   {\&quot;insert\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;, \&quot;doc\&quot;: {\&quot;plot\&quot;: \&quot;A secret team goes to North Pole\&quot;, \&quot;rating\&quot;: 9.5, \&quot;language\&quot;: [2, 3], \&quot;title\&quot;: \&quot;This is an older movie\&quot;, \&quot;lon\&quot;: 51.99, \&quot;meta\&quot;: {\&quot;keywords\&quot;:[\&quot;travel\&quot;,\&quot;ice\&quot;],\&quot;genre\&quot;:[\&quot;adventure\&quot;]}, \&quot;year\&quot;: 1950, \&quot;lat\&quot;: 60.4, \&quot;advise\&quot;: \&quot;PG-13\&quot;}}}   \\n   {\&quot;delete\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;,\&quot;id\&quot;:700}}   &#x60;&#x60;&#x60;      Responds with an object telling whenever any errors occured and an array with status for each operation:      &#x60;&#x60;&#x60;   {     &#39;items&#39;:     [       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;result&#39;:&#39;updated&#39;}       },       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:2,&#39;result&#39;:&#39;updated&#39;}       }     ],     &#39;errors&#39;:false   }   &#x60;&#x60;&#x60;   
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="body"></param>
-        /// <returns>ApiResponse of BulkResponse</returns>
-        public ManticoreSearch.Client.ApiResponse<BulkResponse> BulkWithHttpInfo(string body)
-        {
-        	
-
-            // verify the required parameter 'body' is set
-            if (body == null)
-                throw new ManticoreSearch.Client.ApiException(400, "Missing required parameter 'body' when calling IndexApi->Bulk");
-
-            ManticoreSearch.Client.RequestOptions localVarRequestOptions = new ManticoreSearch.Client.RequestOptions();
-
-            string[] _contentTypes = new string[] {
-                "application/x-ndjson"
-            };
-
-            // to determine the Accept header
-            string[] _accepts = new string[] {
-                "application/json"
-            };
-
-            var localVarContentType = ManticoreSearch.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
-            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
-
-            var localVarAccept = ManticoreSearch.Client.ClientUtils.SelectHeaderAccept(_accepts);
-            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
-
-            localVarRequestOptions.Data = body;
-
-
-            // make the HTTP request
-            var localVarResponse = this.Client.Post<BulkResponse>("/bulk", localVarRequestOptions, this.Configuration);
-			
-            if (this.ExceptionFactory != null)
-            {
-                Exception _exception = this.ExceptionFactory("Bulk", localVarResponse);
-                if (_exception != null) throw _exception;
-            }
-
-            return localVarResponse;
-        }
-
-        /// <summary>
-        /// Bulk index operations Sends multiple operatons like inserts, updates, replaces or deletes.  For each operation it&#39;s object must have same format as in their dedicated method.  The method expects a raw string as the batch in NDJSON.  Each operation object needs to be serialized to   JSON and separated by endline (\\n).      An example of raw input:      &#x60;&#x60;&#x60;   {\&quot;insert\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;, \&quot;doc\&quot;: {\&quot;plot\&quot;: \&quot;A secret team goes to North Pole\&quot;, \&quot;rating\&quot;: 9.5, \&quot;language\&quot;: [2, 3], \&quot;title\&quot;: \&quot;This is an older movie\&quot;, \&quot;lon\&quot;: 51.99, \&quot;meta\&quot;: {\&quot;keywords\&quot;:[\&quot;travel\&quot;,\&quot;ice\&quot;],\&quot;genre\&quot;:[\&quot;adventure\&quot;]}, \&quot;year\&quot;: 1950, \&quot;lat\&quot;: 60.4, \&quot;advise\&quot;: \&quot;PG-13\&quot;}}}   \\n   {\&quot;delete\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;,\&quot;id\&quot;:700}}   &#x60;&#x60;&#x60;      Responds with an object telling whenever any errors occured and an array with status for each operation:      &#x60;&#x60;&#x60;   {     &#39;items&#39;:     [       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;result&#39;:&#39;updated&#39;}       },       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:2,&#39;result&#39;:&#39;updated&#39;}       }     ],     &#39;errors&#39;:false   }   &#x60;&#x60;&#x60;   
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="body"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of BulkResponse</returns>
-        public async System.Threading.Tasks.Task<BulkResponse> BulkAsync(string body, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            ManticoreSearch.Client.ApiResponse<BulkResponse> localVarResponse = await BulkWithHttpInfoAsync(body, cancellationToken).ConfigureAwait(false);
-            return localVarResponse.Data;
-        }
-
-        /// <summary>
-        /// Bulk index operations Sends multiple operatons like inserts, updates, replaces or deletes.  For each operation it&#39;s object must have same format as in their dedicated method.  The method expects a raw string as the batch in NDJSON.  Each operation object needs to be serialized to   JSON and separated by endline (\\n).      An example of raw input:      &#x60;&#x60;&#x60;   {\&quot;insert\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;, \&quot;doc\&quot;: {\&quot;plot\&quot;: \&quot;A secret team goes to North Pole\&quot;, \&quot;rating\&quot;: 9.5, \&quot;language\&quot;: [2, 3], \&quot;title\&quot;: \&quot;This is an older movie\&quot;, \&quot;lon\&quot;: 51.99, \&quot;meta\&quot;: {\&quot;keywords\&quot;:[\&quot;travel\&quot;,\&quot;ice\&quot;],\&quot;genre\&quot;:[\&quot;adventure\&quot;]}, \&quot;year\&quot;: 1950, \&quot;lat\&quot;: 60.4, \&quot;advise\&quot;: \&quot;PG-13\&quot;}}}   \\n   {\&quot;delete\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;,\&quot;id\&quot;:700}}   &#x60;&#x60;&#x60;      Responds with an object telling whenever any errors occured and an array with status for each operation:      &#x60;&#x60;&#x60;   {     &#39;items&#39;:     [       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;result&#39;:&#39;updated&#39;}       },       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:2,&#39;result&#39;:&#39;updated&#39;}       }     ],     &#39;errors&#39;:false   }   &#x60;&#x60;&#x60;   
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="body"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of ApiResponse (BulkResponse)</returns>
-        public async System.Threading.Tasks.Task<ManticoreSearch.Client.ApiResponse<BulkResponse>> BulkWithHttpInfoAsync(string body, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            // verify the required parameter 'body' is set
-            if (body == null)
-                throw new ManticoreSearch.Client.ApiException(400, "Missing required parameter 'body' when calling IndexApi->Bulk");
-
-
-            ManticoreSearch.Client.RequestOptions localVarRequestOptions = new ManticoreSearch.Client.RequestOptions();
-
-            string[] _contentTypes = new string[] {
-                "application/x-ndjson"
-            };
-
-            // to determine the Accept header
-            string[] _accepts = new string[] {
-                "application/json"
-            };
-
-
-            var localVarContentType = ManticoreSearch.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
-            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
-
-            var localVarAccept = ManticoreSearch.Client.ClientUtils.SelectHeaderAccept(_accepts);
-            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
-
-            localVarRequestOptions.Data = body;
-
-
-            // make the HTTP request
-
-            var localVarResponse = await this.AsynchronousClient.PostAsync<BulkResponse>("/bulk", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);
-
-            if (this.ExceptionFactory != null)
-            {
-                Exception _exception = this.ExceptionFactory("Bulk", localVarResponse);
-                if (_exception != null) throw _exception;
-            }
-
-            return localVarResponse;
-        }
-
-        /// <summary>
-        /// Delete a document in an index Delete one or several documents. The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a  match query, in which case multiple documents can be delete . Example of input to delete by id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;id&#39;:100}   &#x60;&#x60;&#x60;  Example of input to delete using a query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;  The match query has same syntax as in for searching. Responds with an object telling how many documents got deleted:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="deleteDocumentRequest"></param>
-        /// <returns>DeleteResponse</returns>
-        public DeleteResponse Delete(DeleteDocumentRequest deleteDocumentRequest)
-        {
-            ManticoreSearch.Client.ApiResponse<DeleteResponse> localVarResponse = DeleteWithHttpInfo(deleteDocumentRequest);
-            return localVarResponse.Data;
-        }
-
-        /// <summary>
-        /// Delete a document in an index Delete one or several documents. The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a  match query, in which case multiple documents can be delete . Example of input to delete by id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;id&#39;:100}   &#x60;&#x60;&#x60;  Example of input to delete using a query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;  The match query has same syntax as in for searching. Responds with an object telling how many documents got deleted:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="deleteDocumentRequest"></param>
-        /// <returns>ApiResponse of DeleteResponse</returns>
-        public ManticoreSearch.Client.ApiResponse<DeleteResponse> DeleteWithHttpInfo(DeleteDocumentRequest deleteDocumentRequest)
-        {
-        	var dict = JsonConvert.DeserializeObject<JObject>(JsonConvert.SerializeObject(deleteDocumentRequest));
-        	if (dict.ContainsKey("id") && dict.ContainsKey("query"))
-	 		{
-	 			dict.Remove("query");
-	 		}
-        	
-
-            // verify the required parameter 'deleteDocumentRequest' is set
-            if (deleteDocumentRequest == null)
-                throw new ManticoreSearch.Client.ApiException(400, "Missing required parameter 'deleteDocumentRequest' when calling IndexApi->Delete");
-
-            ManticoreSearch.Client.RequestOptions localVarRequestOptions = new ManticoreSearch.Client.RequestOptions();
-
-            string[] _contentTypes = new string[] {
-                "application/json"
-            };
-
-            // to determine the Accept header
-            string[] _accepts = new string[] {
-                "application/json"
-            };
-
-            var localVarContentType = ManticoreSearch.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
-            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
-
-            var localVarAccept = ManticoreSearch.Client.ClientUtils.SelectHeaderAccept(_accepts);
-            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
-
-            localVarRequestOptions.Data = dict;
-
-
-            // make the HTTP request
-            var localVarResponse = this.Client.Post<DeleteResponse>("/delete", localVarRequestOptions, this.Configuration);
-			
-            if (this.ExceptionFactory != null)
-            {
-                Exception _exception = this.ExceptionFactory("Delete", localVarResponse);
-                if (_exception != null) throw _exception;
-            }
-
-            return localVarResponse;
-        }
-
-        /// <summary>
-        /// Delete a document in an index Delete one or several documents. The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a  match query, in which case multiple documents can be delete . Example of input to delete by id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;id&#39;:100}   &#x60;&#x60;&#x60;  Example of input to delete using a query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;  The match query has same syntax as in for searching. Responds with an object telling how many documents got deleted:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="deleteDocumentRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of DeleteResponse</returns>
-        public async System.Threading.Tasks.Task<DeleteResponse> DeleteAsync(DeleteDocumentRequest deleteDocumentRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            ManticoreSearch.Client.ApiResponse<DeleteResponse> localVarResponse = await DeleteWithHttpInfoAsync(deleteDocumentRequest, cancellationToken).ConfigureAwait(false);
-            return localVarResponse.Data;
-        }
-
-        /// <summary>
-        /// Delete a document in an index Delete one or several documents. The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a  match query, in which case multiple documents can be delete . Example of input to delete by id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;id&#39;:100}   &#x60;&#x60;&#x60;  Example of input to delete using a query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;  The match query has same syntax as in for searching. Responds with an object telling how many documents got deleted:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="deleteDocumentRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of ApiResponse (DeleteResponse)</returns>
-        public async System.Threading.Tasks.Task<ManticoreSearch.Client.ApiResponse<DeleteResponse>> DeleteWithHttpInfoAsync(DeleteDocumentRequest deleteDocumentRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            // verify the required parameter 'deleteDocumentRequest' is set
-            if (deleteDocumentRequest == null)
-                throw new ManticoreSearch.Client.ApiException(400, "Missing required parameter 'deleteDocumentRequest' when calling IndexApi->Delete");
-
-
-            ManticoreSearch.Client.RequestOptions localVarRequestOptions = new ManticoreSearch.Client.RequestOptions();
-
-            string[] _contentTypes = new string[] {
-                "application/json"
-            };
-
-            // to determine the Accept header
-            string[] _accepts = new string[] {
-                "application/json"
-            };
-
-
-            var localVarContentType = ManticoreSearch.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
-            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
-
-            var localVarAccept = ManticoreSearch.Client.ClientUtils.SelectHeaderAccept(_accepts);
-            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
-
-            localVarRequestOptions.Data = deleteDocumentRequest;
-
-
-            // make the HTTP request
-
-            var localVarResponse = await this.AsynchronousClient.PostAsync<DeleteResponse>("/delete", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);
-
-            if (this.ExceptionFactory != null)
-            {
-                Exception _exception = this.ExceptionFactory("Delete", localVarResponse);
-                if (_exception != null) throw _exception;
-            }
-
-            return localVarResponse;
-        }
-
-        /// <summary>
-        /// Create a new document in an index Insert a document.  Expects an object like:     &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;id&#39;:701,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is an old movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:1950,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   The document id can also be missing, in which case an autogenerated one will be used:             &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is a new movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:2020,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   It responds with an object in format:      &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:701,&#39;created&#39;:true,&#39;result&#39;:&#39;created&#39;,&#39;status&#39;:201}   &#x60;&#x60;&#x60; 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="insertDocumentRequest"></param>
-        /// <returns>SuccessResponse</returns>
-        public SuccessResponse Insert(InsertDocumentRequest insertDocumentRequest)
-        {
-            ManticoreSearch.Client.ApiResponse<SuccessResponse> localVarResponse = InsertWithHttpInfo(insertDocumentRequest);
-            return localVarResponse.Data;
-        }
-
-        /// <summary>
-        /// Create a new document in an index Insert a document.  Expects an object like:     &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;id&#39;:701,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is an old movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:1950,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   The document id can also be missing, in which case an autogenerated one will be used:             &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is a new movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:2020,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   It responds with an object in format:      &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:701,&#39;created&#39;:true,&#39;result&#39;:&#39;created&#39;,&#39;status&#39;:201}   &#x60;&#x60;&#x60; 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="insertDocumentRequest"></param>
-        /// <returns>ApiResponse of SuccessResponse</returns>
-        public ManticoreSearch.Client.ApiResponse<SuccessResponse> InsertWithHttpInfo(InsertDocumentRequest insertDocumentRequest)
-        {
-        	
-
-            // verify the required parameter 'insertDocumentRequest' is set
-            if (insertDocumentRequest == null)
-                throw new ManticoreSearch.Client.ApiException(400, "Missing required parameter 'insertDocumentRequest' when calling IndexApi->Insert");
-
-            ManticoreSearch.Client.RequestOptions localVarRequestOptions = new ManticoreSearch.Client.RequestOptions();
-
-            string[] _contentTypes = new string[] {
-                "application/json"
-            };
-
-            // to determine the Accept header
-            string[] _accepts = new string[] {
-                "application/json"
-            };
-
-            var localVarContentType = ManticoreSearch.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
-            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
-
-            var localVarAccept = ManticoreSearch.Client.ClientUtils.SelectHeaderAccept(_accepts);
-            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
-
-            localVarRequestOptions.Data = insertDocumentRequest;
-
-
-            // make the HTTP request
-            var localVarResponse = this.Client.Post<SuccessResponse>("/insert", localVarRequestOptions, this.Configuration);
-			
-            if (this.ExceptionFactory != null)
-            {
-                Exception _exception = this.ExceptionFactory("Insert", localVarResponse);
-                if (_exception != null) throw _exception;
-            }
-
-            return localVarResponse;
-        }
-
-        /// <summary>
-        /// Create a new document in an index Insert a document.  Expects an object like:     &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;id&#39;:701,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is an old movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:1950,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   The document id can also be missing, in which case an autogenerated one will be used:             &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is a new movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:2020,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   It responds with an object in format:      &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:701,&#39;created&#39;:true,&#39;result&#39;:&#39;created&#39;,&#39;status&#39;:201}   &#x60;&#x60;&#x60; 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="insertDocumentRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of SuccessResponse</returns>
-        public async System.Threading.Tasks.Task<SuccessResponse> InsertAsync(InsertDocumentRequest insertDocumentRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            ManticoreSearch.Client.ApiResponse<SuccessResponse> localVarResponse = await InsertWithHttpInfoAsync(insertDocumentRequest, cancellationToken).ConfigureAwait(false);
-            return localVarResponse.Data;
-        }
-
-        /// <summary>
-        /// Create a new document in an index Insert a document.  Expects an object like:     &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;id&#39;:701,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is an old movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:1950,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   The document id can also be missing, in which case an autogenerated one will be used:             &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is a new movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:2020,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   It responds with an object in format:      &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:701,&#39;created&#39;:true,&#39;result&#39;:&#39;created&#39;,&#39;status&#39;:201}   &#x60;&#x60;&#x60; 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="insertDocumentRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of ApiResponse (SuccessResponse)</returns>
-        public async System.Threading.Tasks.Task<ManticoreSearch.Client.ApiResponse<SuccessResponse>> InsertWithHttpInfoAsync(InsertDocumentRequest insertDocumentRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            // verify the required parameter 'insertDocumentRequest' is set
-            if (insertDocumentRequest == null)
-                throw new ManticoreSearch.Client.ApiException(400, "Missing required parameter 'insertDocumentRequest' when calling IndexApi->Insert");
-
-
-            ManticoreSearch.Client.RequestOptions localVarRequestOptions = new ManticoreSearch.Client.RequestOptions();
-
-            string[] _contentTypes = new string[] {
-                "application/json"
-            };
-
-            // to determine the Accept header
-            string[] _accepts = new string[] {
-                "application/json"
-            };
-
-
-            var localVarContentType = ManticoreSearch.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
-            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
-
-            var localVarAccept = ManticoreSearch.Client.ClientUtils.SelectHeaderAccept(_accepts);
-            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
-
-            localVarRequestOptions.Data = insertDocumentRequest;
-
-
-            // make the HTTP request
-
-            var localVarResponse = await this.AsynchronousClient.PostAsync<SuccessResponse>("/insert", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);
-
-            if (this.ExceptionFactory != null)
-            {
-                Exception _exception = this.ExceptionFactory("Insert", localVarResponse);
-                if (_exception != null) throw _exception;
-            }
-
-            return localVarResponse;
-        }
-
-        /// <summary>
-        /// Replace new document in an index Replace an existing document. Input has same format as &#x60;insert&#x60; operation. &lt;br/&gt; Responds with an object in format: &lt;br/&gt;    &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;created&#39;:false,&#39;result&#39;:&#39;updated&#39;,&#39;status&#39;:200}   &#x60;&#x60;&#x60; 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="insertDocumentRequest"></param>
-        /// <returns>SuccessResponse</returns>
-        public SuccessResponse Replace(InsertDocumentRequest insertDocumentRequest)
-        {
-            ManticoreSearch.Client.ApiResponse<SuccessResponse> localVarResponse = ReplaceWithHttpInfo(insertDocumentRequest);
-            return localVarResponse.Data;
-        }
-
-        /// <summary>
-        /// Replace new document in an index Replace an existing document. Input has same format as &#x60;insert&#x60; operation. &lt;br/&gt; Responds with an object in format: &lt;br/&gt;    &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;created&#39;:false,&#39;result&#39;:&#39;updated&#39;,&#39;status&#39;:200}   &#x60;&#x60;&#x60; 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="insertDocumentRequest"></param>
-        /// <returns>ApiResponse of SuccessResponse</returns>
-        public ManticoreSearch.Client.ApiResponse<SuccessResponse> ReplaceWithHttpInfo(InsertDocumentRequest insertDocumentRequest)
-        {
-        	
-
-            // verify the required parameter 'insertDocumentRequest' is set
-            if (insertDocumentRequest == null)
-                throw new ManticoreSearch.Client.ApiException(400, "Missing required parameter 'insertDocumentRequest' when calling IndexApi->Replace");
-
-            ManticoreSearch.Client.RequestOptions localVarRequestOptions = new ManticoreSearch.Client.RequestOptions();
-
-            string[] _contentTypes = new string[] {
-                "application/json"
-            };
-
-            // to determine the Accept header
-            string[] _accepts = new string[] {
-                "application/json"
-            };
-
-            var localVarContentType = ManticoreSearch.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
-            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
-
-            var localVarAccept = ManticoreSearch.Client.ClientUtils.SelectHeaderAccept(_accepts);
-            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
-
-            localVarRequestOptions.Data = insertDocumentRequest;
-
-
-            // make the HTTP request
-            var localVarResponse = this.Client.Post<SuccessResponse>("/replace", localVarRequestOptions, this.Configuration);
-			
-            if (this.ExceptionFactory != null)
-            {
-                Exception _exception = this.ExceptionFactory("Replace", localVarResponse);
-                if (_exception != null) throw _exception;
-            }
-
-            return localVarResponse;
-        }
-
-        /// <summary>
-        /// Replace new document in an index Replace an existing document. Input has same format as &#x60;insert&#x60; operation. &lt;br/&gt; Responds with an object in format: &lt;br/&gt;    &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;created&#39;:false,&#39;result&#39;:&#39;updated&#39;,&#39;status&#39;:200}   &#x60;&#x60;&#x60; 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="insertDocumentRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of SuccessResponse</returns>
-        public async System.Threading.Tasks.Task<SuccessResponse> ReplaceAsync(InsertDocumentRequest insertDocumentRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            ManticoreSearch.Client.ApiResponse<SuccessResponse> localVarResponse = await ReplaceWithHttpInfoAsync(insertDocumentRequest, cancellationToken).ConfigureAwait(false);
-            return localVarResponse.Data;
-        }
-
-        /// <summary>
-        /// Replace new document in an index Replace an existing document. Input has same format as &#x60;insert&#x60; operation. &lt;br/&gt; Responds with an object in format: &lt;br/&gt;    &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;created&#39;:false,&#39;result&#39;:&#39;updated&#39;,&#39;status&#39;:200}   &#x60;&#x60;&#x60; 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="insertDocumentRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of ApiResponse (SuccessResponse)</returns>
-        public async System.Threading.Tasks.Task<ManticoreSearch.Client.ApiResponse<SuccessResponse>> ReplaceWithHttpInfoAsync(InsertDocumentRequest insertDocumentRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            // verify the required parameter 'insertDocumentRequest' is set
-            if (insertDocumentRequest == null)
-                throw new ManticoreSearch.Client.ApiException(400, "Missing required parameter 'insertDocumentRequest' when calling IndexApi->Replace");
-
-
-            ManticoreSearch.Client.RequestOptions localVarRequestOptions = new ManticoreSearch.Client.RequestOptions();
-
-            string[] _contentTypes = new string[] {
-                "application/json"
-            };
-
-            // to determine the Accept header
-            string[] _accepts = new string[] {
-                "application/json"
-            };
-
-
-            var localVarContentType = ManticoreSearch.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
-            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
-
-            var localVarAccept = ManticoreSearch.Client.ClientUtils.SelectHeaderAccept(_accepts);
-            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
-
-            localVarRequestOptions.Data = insertDocumentRequest;
-
-
-            // make the HTTP request
-
-            var localVarResponse = await this.AsynchronousClient.PostAsync<SuccessResponse>("/replace", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);
-
-            if (this.ExceptionFactory != null)
-            {
-                Exception _exception = this.ExceptionFactory("Replace", localVarResponse);
-                if (_exception != null) throw _exception;
-            }
-
-            return localVarResponse;
-        }
-
-        /// <summary>
-        /// Update a document in an index Update one or several documents. The update can be made by passing the id or by using a match query in case multiple documents can be updated.  For example update a document using document id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;doc&#39;:{&#39;rating&#39;:9.49},&#39;id&#39;:100}   &#x60;&#x60;&#x60;  And update by using a match query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:{&#39;rating&#39;:9.49},     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;   The match query has same syntax as for searching. Responds with an object that tells how many documents where updated in format:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="updateDocumentRequest"></param>
-        /// <returns>UpdateResponse</returns>
-        public UpdateResponse Update(UpdateDocumentRequest updateDocumentRequest)
-        {
-            ManticoreSearch.Client.ApiResponse<UpdateResponse> localVarResponse = UpdateWithHttpInfo(updateDocumentRequest);
-            return localVarResponse.Data;
-        }
-
-        /// <summary>
-        /// Update a document in an index Update one or several documents. The update can be made by passing the id or by using a match query in case multiple documents can be updated.  For example update a document using document id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;doc&#39;:{&#39;rating&#39;:9.49},&#39;id&#39;:100}   &#x60;&#x60;&#x60;  And update by using a match query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:{&#39;rating&#39;:9.49},     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;   The match query has same syntax as for searching. Responds with an object that tells how many documents where updated in format:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="updateDocumentRequest"></param>
-        /// <returns>ApiResponse of UpdateResponse</returns>
-        public ManticoreSearch.Client.ApiResponse<UpdateResponse> UpdateWithHttpInfo(UpdateDocumentRequest updateDocumentRequest)
-        {
-        	var dict = JsonConvert.DeserializeObject<JObject>(JsonConvert.SerializeObject(updateDocumentRequest));
-        	if (dict.ContainsKey("id") && dict.ContainsKey("query"))
-	 		{
-	 			dict.Remove("query");
-	 		}
-        	
-
-            // verify the required parameter 'updateDocumentRequest' is set
-            if (updateDocumentRequest == null)
-                throw new ManticoreSearch.Client.ApiException(400, "Missing required parameter 'updateDocumentRequest' when calling IndexApi->Update");
-
-            ManticoreSearch.Client.RequestOptions localVarRequestOptions = new ManticoreSearch.Client.RequestOptions();
-
-            string[] _contentTypes = new string[] {
-                "application/json"
-            };
-
-            // to determine the Accept header
-            string[] _accepts = new string[] {
-                "application/json"
-            };
-
-            var localVarContentType = ManticoreSearch.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
-            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
-
-            var localVarAccept = ManticoreSearch.Client.ClientUtils.SelectHeaderAccept(_accepts);
-            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
-
-            localVarRequestOptions.Data = dict;
-
-
-            // make the HTTP request
-            var localVarResponse = this.Client.Post<UpdateResponse>("/update", localVarRequestOptions, this.Configuration);
-			
-            if (this.ExceptionFactory != null)
-            {
-                Exception _exception = this.ExceptionFactory("Update", localVarResponse);
-                if (_exception != null) throw _exception;
-            }
-
-            return localVarResponse;
-        }
-
-        /// <summary>
-        /// Update a document in an index Update one or several documents. The update can be made by passing the id or by using a match query in case multiple documents can be updated.  For example update a document using document id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;doc&#39;:{&#39;rating&#39;:9.49},&#39;id&#39;:100}   &#x60;&#x60;&#x60;  And update by using a match query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:{&#39;rating&#39;:9.49},     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;   The match query has same syntax as for searching. Responds with an object that tells how many documents where updated in format:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="updateDocumentRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of UpdateResponse</returns>
-        public async System.Threading.Tasks.Task<UpdateResponse> UpdateAsync(UpdateDocumentRequest updateDocumentRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            ManticoreSearch.Client.ApiResponse<UpdateResponse> localVarResponse = await UpdateWithHttpInfoAsync(updateDocumentRequest, cancellationToken).ConfigureAwait(false);
-            return localVarResponse.Data;
-        }
-
-        /// <summary>
-        /// Update a document in an index Update one or several documents. The update can be made by passing the id or by using a match query in case multiple documents can be updated.  For example update a document using document id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;doc&#39;:{&#39;rating&#39;:9.49},&#39;id&#39;:100}   &#x60;&#x60;&#x60;  And update by using a match query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:{&#39;rating&#39;:9.49},     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;   The match query has same syntax as for searching. Responds with an object that tells how many documents where updated in format:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="updateDocumentRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of ApiResponse (UpdateResponse)</returns>
-        public async System.Threading.Tasks.Task<ManticoreSearch.Client.ApiResponse<UpdateResponse>> UpdateWithHttpInfoAsync(UpdateDocumentRequest updateDocumentRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            // verify the required parameter 'updateDocumentRequest' is set
-            if (updateDocumentRequest == null)
-                throw new ManticoreSearch.Client.ApiException(400, "Missing required parameter 'updateDocumentRequest' when calling IndexApi->Update");
-
-
-            ManticoreSearch.Client.RequestOptions localVarRequestOptions = new ManticoreSearch.Client.RequestOptions();
-
-            string[] _contentTypes = new string[] {
-                "application/json"
-            };
-
-            // to determine the Accept header
-            string[] _accepts = new string[] {
-                "application/json"
-            };
-
-
-            var localVarContentType = ManticoreSearch.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
-            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
-
-            var localVarAccept = ManticoreSearch.Client.ClientUtils.SelectHeaderAccept(_accepts);
-            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
-
-            localVarRequestOptions.Data = updateDocumentRequest;
-
-
-            // make the HTTP request
-
-            var localVarResponse = await this.AsynchronousClient.PostAsync<UpdateResponse>("/update", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);
-
-            if (this.ExceptionFactory != null)
-            {
-                Exception _exception = this.ExceptionFactory("Update", localVarResponse);
-                if (_exception != null) throw _exception;
-            }
-
-            return localVarResponse;
-        }
-
-    }
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Api/SearchApi.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Api/SearchApi.cs
deleted file mode 100755
index 5ad3ae1..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Api/SearchApi.cs
+++ /dev/null
@@ -1,796 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.Net;
-using System.Net.Http;
-using System.Net.Mime;
-using ManticoreSearch.Client;
-using ManticoreSearch.Model;
-using System.Web;
-
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.Dynamic;
-
-
-namespace ManticoreSearch.Api
-{
-
-    /// <summary>
-    /// Represents a collection of functions to interact with the API endpoints
-    /// </summary>
-    public interface ISearchApiSync : IApiAccessor
-    {
-        #region Synchronous Operations
-        /// <summary>
-        /// Perform reverse search on a percolate index
-        /// </summary>
-        /// <remarks>
-        /// Performs a percolate search.  This method must be used only on percolate indexes.  Expects two parameters: the index name and an object with array of documents to be tested. An example of the documents object:    &#x60;&#x60;&#x60;   {     \&quot;query\&quot;:     {       \&quot;percolate\&quot;:       {         \&quot;document\&quot;:         {           \&quot;content\&quot;:\&quot;sample content\&quot;         }       }     }   }   &#x60;&#x60;&#x60;  Responds with an object with matched stored queries:     &#x60;&#x60;&#x60;   {     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;max_score&#39;:1,       &#39;hits&#39;:       [         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;2&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;match&#39;:{&#39;title&#39;:&#39;some&#39;}             }           }         },         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;5&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;ql&#39;:&#39;some | none&#39;             }           }         }       ]     }   }   &#x60;&#x60;&#x60; 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="index">Name of the percolate index</param>
-        /// <param name="percolateRequest"></param>
-        /// <returns>SearchResponse</returns>
-        SearchResponse Percolate(string index, PercolateRequest percolateRequest);
-
-        /// <summary>
-        /// Perform reverse search on a percolate index
-        /// </summary>
-        /// <remarks>
-        /// Performs a percolate search.  This method must be used only on percolate indexes.  Expects two parameters: the index name and an object with array of documents to be tested. An example of the documents object:    &#x60;&#x60;&#x60;   {     \&quot;query\&quot;:     {       \&quot;percolate\&quot;:       {         \&quot;document\&quot;:         {           \&quot;content\&quot;:\&quot;sample content\&quot;         }       }     }   }   &#x60;&#x60;&#x60;  Responds with an object with matched stored queries:     &#x60;&#x60;&#x60;   {     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;max_score&#39;:1,       &#39;hits&#39;:       [         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;2&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;match&#39;:{&#39;title&#39;:&#39;some&#39;}             }           }         },         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;5&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;ql&#39;:&#39;some | none&#39;             }           }         }       ]     }   }   &#x60;&#x60;&#x60; 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="index">Name of the percolate index</param>
-        /// <param name="percolateRequest"></param>
-        /// <returns>ApiResponse of SearchResponse</returns>
-        ApiResponse<SearchResponse> PercolateWithHttpInfo(string index, PercolateRequest percolateRequest);
-        /// <summary>
-        /// Performs a search on an index
-        /// </summary>
-        /// <remarks>
-        ///  The method expects an object with the following mandatory properties: * the name of the index to search * the match query object For details, see the documentation on [**SearchRequest**](SearchRequest.md) The method returns an object with the following properties: - took: the time taken to execute the search query. - timed_out: a boolean indicating whether the query timed out. - hits: an object with the following properties:    - total: the total number of hits found.    - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:      - _id: the ID of the matched document.      - _score: the score of the matched document.      - _source: the source data of the matched document.  In addition, if profiling is enabled, the response will include an additional array with profiling information attached. Here is an example search response:    &#x60;&#x60;&#x60;   {     &#39;took&#39;:10,     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;hits&#39;:       [         {&#39;_id&#39;:&#39;1&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:11}},         {&#39;_id&#39;:&#39;2&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:12}}       ]     }   }   &#x60;&#x60;&#x60;  For more information about the match query syntax and additional parameters that can be added to request and response, please see the documentation [here](https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON). 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="searchRequest"></param>
-        /// <returns>SearchResponse</returns>
-        SearchResponse Search(SearchRequest searchRequest);
-
-        /// <summary>
-        /// Performs a search on an index
-        /// </summary>
-        /// <remarks>
-        ///  The method expects an object with the following mandatory properties: * the name of the index to search * the match query object For details, see the documentation on [**SearchRequest**](SearchRequest.md) The method returns an object with the following properties: - took: the time taken to execute the search query. - timed_out: a boolean indicating whether the query timed out. - hits: an object with the following properties:    - total: the total number of hits found.    - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:      - _id: the ID of the matched document.      - _score: the score of the matched document.      - _source: the source data of the matched document.  In addition, if profiling is enabled, the response will include an additional array with profiling information attached. Here is an example search response:    &#x60;&#x60;&#x60;   {     &#39;took&#39;:10,     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;hits&#39;:       [         {&#39;_id&#39;:&#39;1&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:11}},         {&#39;_id&#39;:&#39;2&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:12}}       ]     }   }   &#x60;&#x60;&#x60;  For more information about the match query syntax and additional parameters that can be added to request and response, please see the documentation [here](https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON). 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="searchRequest"></param>
-        /// <returns>ApiResponse of SearchResponse</returns>
-        ApiResponse<SearchResponse> SearchWithHttpInfo(SearchRequest searchRequest);
-        #endregion Synchronous Operations
-    }
-
-    /// <summary>
-    /// Represents a collection of functions to interact with the API endpoints
-    /// </summary>
-    public interface ISearchApiAsync : IApiAccessor
-    {
-        #region Asynchronous Operations
-        /// <summary>
-        /// Perform reverse search on a percolate index
-        /// </summary>
-        /// <remarks>
-        /// Performs a percolate search.  This method must be used only on percolate indexes.  Expects two parameters: the index name and an object with array of documents to be tested. An example of the documents object:    &#x60;&#x60;&#x60;   {     \&quot;query\&quot;:     {       \&quot;percolate\&quot;:       {         \&quot;document\&quot;:         {           \&quot;content\&quot;:\&quot;sample content\&quot;         }       }     }   }   &#x60;&#x60;&#x60;  Responds with an object with matched stored queries:     &#x60;&#x60;&#x60;   {     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;max_score&#39;:1,       &#39;hits&#39;:       [         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;2&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;match&#39;:{&#39;title&#39;:&#39;some&#39;}             }           }         },         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;5&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;ql&#39;:&#39;some | none&#39;             }           }         }       ]     }   }   &#x60;&#x60;&#x60; 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="index">Name of the percolate index</param>
-        /// <param name="percolateRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of SearchResponse</returns>
-        System.Threading.Tasks.Task<SearchResponse> PercolateAsync(string index, PercolateRequest percolateRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-
-        /// <summary>
-        /// Perform reverse search on a percolate index
-        /// </summary>
-        /// <remarks>
-        /// Performs a percolate search.  This method must be used only on percolate indexes.  Expects two parameters: the index name and an object with array of documents to be tested. An example of the documents object:    &#x60;&#x60;&#x60;   {     \&quot;query\&quot;:     {       \&quot;percolate\&quot;:       {         \&quot;document\&quot;:         {           \&quot;content\&quot;:\&quot;sample content\&quot;         }       }     }   }   &#x60;&#x60;&#x60;  Responds with an object with matched stored queries:     &#x60;&#x60;&#x60;   {     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;max_score&#39;:1,       &#39;hits&#39;:       [         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;2&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;match&#39;:{&#39;title&#39;:&#39;some&#39;}             }           }         },         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;5&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;ql&#39;:&#39;some | none&#39;             }           }         }       ]     }   }   &#x60;&#x60;&#x60; 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="index">Name of the percolate index</param>
-        /// <param name="percolateRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of ApiResponse (SearchResponse)</returns>
-        System.Threading.Tasks.Task<ApiResponse<SearchResponse>> PercolateWithHttpInfoAsync(string index, PercolateRequest percolateRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-        /// <summary>
-        /// Performs a search on an index
-        /// </summary>
-        /// <remarks>
-        ///  The method expects an object with the following mandatory properties: * the name of the index to search * the match query object For details, see the documentation on [**SearchRequest**](SearchRequest.md) The method returns an object with the following properties: - took: the time taken to execute the search query. - timed_out: a boolean indicating whether the query timed out. - hits: an object with the following properties:    - total: the total number of hits found.    - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:      - _id: the ID of the matched document.      - _score: the score of the matched document.      - _source: the source data of the matched document.  In addition, if profiling is enabled, the response will include an additional array with profiling information attached. Here is an example search response:    &#x60;&#x60;&#x60;   {     &#39;took&#39;:10,     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;hits&#39;:       [         {&#39;_id&#39;:&#39;1&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:11}},         {&#39;_id&#39;:&#39;2&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:12}}       ]     }   }   &#x60;&#x60;&#x60;  For more information about the match query syntax and additional parameters that can be added to request and response, please see the documentation [here](https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON). 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="searchRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of SearchResponse</returns>
-        System.Threading.Tasks.Task<SearchResponse> SearchAsync(SearchRequest searchRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-
-        /// <summary>
-        /// Performs a search on an index
-        /// </summary>
-        /// <remarks>
-        ///  The method expects an object with the following mandatory properties: * the name of the index to search * the match query object For details, see the documentation on [**SearchRequest**](SearchRequest.md) The method returns an object with the following properties: - took: the time taken to execute the search query. - timed_out: a boolean indicating whether the query timed out. - hits: an object with the following properties:    - total: the total number of hits found.    - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:      - _id: the ID of the matched document.      - _score: the score of the matched document.      - _source: the source data of the matched document.  In addition, if profiling is enabled, the response will include an additional array with profiling information attached. Here is an example search response:    &#x60;&#x60;&#x60;   {     &#39;took&#39;:10,     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;hits&#39;:       [         {&#39;_id&#39;:&#39;1&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:11}},         {&#39;_id&#39;:&#39;2&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:12}}       ]     }   }   &#x60;&#x60;&#x60;  For more information about the match query syntax and additional parameters that can be added to request and response, please see the documentation [here](https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON). 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="searchRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of ApiResponse (SearchResponse)</returns>
-        System.Threading.Tasks.Task<ApiResponse<SearchResponse>> SearchWithHttpInfoAsync(SearchRequest searchRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-        #endregion Asynchronous Operations
-    }
-
-    /// <summary>
-    /// Represents a collection of functions to interact with the API endpoints
-    /// </summary>
-    public interface ISearchApi : ISearchApiSync, ISearchApiAsync
-    {
-
-    }
-
-    /// <summary>
-    /// Represents a collection of functions to interact with the API endpoints
-    /// </summary>
-    public partial class SearchApi : IDisposable, ISearchApi
-    {
-        private ManticoreSearch.Client.ExceptionFactory _exceptionFactory = (name, response) => null;
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="SearchApi"/> class.
-        /// **IMPORTANT** This will also create an instance of HttpClient, which is less than ideal.
-        /// It's better to reuse the <see href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests#issues-with-the-original-httpclient-class-available-in-net">HttpClient and HttpClientHandler</see>.
-        /// </summary>
-        /// <returns></returns>
-        public SearchApi() : this((string)null)
-        {
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="SearchApi"/> class.
-        /// **IMPORTANT** This will also create an instance of HttpClient, which is less than ideal.
-        /// It's better to reuse the <see href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests#issues-with-the-original-httpclient-class-available-in-net">HttpClient and HttpClientHandler</see>.
-        /// </summary>
-        /// <param name="basePath">The target service's base path in URL format.</param>
-        /// <exception cref="ArgumentException"></exception>
-        /// <returns></returns>
-        public SearchApi(string basePath)
-        {
-            this.Configuration = ManticoreSearch.Client.Configuration.MergeConfigurations(
-                ManticoreSearch.Client.GlobalConfiguration.Instance,
-                new ManticoreSearch.Client.Configuration { BasePath = basePath }
-            );
-            this.ApiClient = new ManticoreSearch.Client.ApiClient(this.Configuration.BasePath);
-            this.Client =  this.ApiClient;
-            this.AsynchronousClient = this.ApiClient;
-            this.ExceptionFactory = ManticoreSearch.Client.Configuration.DefaultExceptionFactory;
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="SearchApi"/> class using Configuration object.
-        /// **IMPORTANT** This will also create an instance of HttpClient, which is less than ideal.
-        /// It's better to reuse the <see href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests#issues-with-the-original-httpclient-class-available-in-net">HttpClient and HttpClientHandler</see>.
-        /// </summary>
-        /// <param name="configuration">An instance of Configuration.</param>
-        /// <exception cref="ArgumentNullException"></exception>
-        /// <returns></returns>
-        public SearchApi(ManticoreSearch.Client.Configuration configuration)
-        {
-            if (configuration == null) throw new ArgumentNullException("configuration");
-
-            this.Configuration = ManticoreSearch.Client.Configuration.MergeConfigurations(
-                ManticoreSearch.Client.GlobalConfiguration.Instance,
-                configuration
-            );
-            this.ApiClient = new ManticoreSearch.Client.ApiClient(this.Configuration.BasePath);
-            this.Client = this.ApiClient;
-            this.AsynchronousClient = this.ApiClient;
-            ExceptionFactory = ManticoreSearch.Client.Configuration.DefaultExceptionFactory;
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="SearchApi"/> class.
-        /// </summary>
-        /// <param name="client">An instance of HttpClient.</param>
-        /// <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
-        /// <exception cref="ArgumentNullException"></exception>
-        /// <returns></returns>
-        /// <remarks>
-        /// Some configuration settings will not be applied without passing an HttpClientHandler.
-        /// The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
-        /// </remarks>
-        public SearchApi(HttpClient client, HttpClientHandler handler = null) : this(client, (string)null, handler)
-        {
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="SearchApi"/> class.
-        /// </summary>
-        /// <param name="client">An instance of HttpClient.</param>
-        /// <param name="basePath">The target service's base path in URL format.</param>
-        /// <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
-        /// <exception cref="ArgumentNullException"></exception>
-        /// <exception cref="ArgumentException"></exception>
-        /// <returns></returns>
-        /// <remarks>
-        /// Some configuration settings will not be applied without passing an HttpClientHandler.
-        /// The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
-        /// </remarks>
-        public SearchApi(HttpClient client, string basePath, HttpClientHandler handler = null)
-        {
-            if (client == null) throw new ArgumentNullException("client");
-
-            this.Configuration = ManticoreSearch.Client.Configuration.MergeConfigurations(
-                ManticoreSearch.Client.GlobalConfiguration.Instance,
-                new ManticoreSearch.Client.Configuration { BasePath = basePath }
-            );
-            this.ApiClient = new ManticoreSearch.Client.ApiClient(client, this.Configuration.BasePath, handler);
-            this.Client =  this.ApiClient;
-            this.AsynchronousClient = this.ApiClient;
-            this.ExceptionFactory = ManticoreSearch.Client.Configuration.DefaultExceptionFactory;
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="SearchApi"/> class using Configuration object.
-        /// </summary>
-        /// <param name="client">An instance of HttpClient.</param>
-        /// <param name="configuration">An instance of Configuration.</param>
-        /// <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
-        /// <exception cref="ArgumentNullException"></exception>
-        /// <returns></returns>
-        /// <remarks>
-        /// Some configuration settings will not be applied without passing an HttpClientHandler.
-        /// The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
-        /// </remarks>
-        public SearchApi(HttpClient client, ManticoreSearch.Client.Configuration configuration, HttpClientHandler handler = null)
-        {
-            if (configuration == null) throw new ArgumentNullException("configuration");
-            if (client == null) throw new ArgumentNullException("client");
-
-            this.Configuration = ManticoreSearch.Client.Configuration.MergeConfigurations(
-                ManticoreSearch.Client.GlobalConfiguration.Instance,
-                configuration
-            );
-            this.ApiClient = new ManticoreSearch.Client.ApiClient(client, this.Configuration.BasePath, handler);
-            this.Client = this.ApiClient;
-            this.AsynchronousClient = this.ApiClient;
-            ExceptionFactory = ManticoreSearch.Client.Configuration.DefaultExceptionFactory;
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="SearchApi"/> class
-        /// using a Configuration object and client instance.
-        /// </summary>
-        /// <param name="client">The client interface for synchronous API access.</param>
-        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
-        /// <param name="configuration">The configuration object.</param>
-        /// <exception cref="ArgumentNullException"></exception>
-        public SearchApi(ManticoreSearch.Client.ISynchronousClient client, ManticoreSearch.Client.IAsynchronousClient asyncClient, ManticoreSearch.Client.IReadableConfiguration configuration)
-        {
-            if (client == null) throw new ArgumentNullException("client");
-            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
-            if (configuration == null) throw new ArgumentNullException("configuration");
-
-            this.Client = client;
-            this.AsynchronousClient = asyncClient;
-            this.Configuration = configuration;
-            this.ExceptionFactory = ManticoreSearch.Client.Configuration.DefaultExceptionFactory;
-        }
-
-        /// <summary>
-        /// Disposes resources if they were created by us
-        /// </summary>
-        public void Dispose()
-        {
-            this.ApiClient?.Dispose();
-        }
-
-        /// <summary>
-        /// Holds the ApiClient if created
-        /// </summary>
-        public ManticoreSearch.Client.ApiClient ApiClient { get; set; } = null;
-
-        /// <summary>
-        /// The client for accessing this underlying API asynchronously.
-        /// </summary>
-        public ManticoreSearch.Client.IAsynchronousClient AsynchronousClient { get; set; }
-
-        /// <summary>
-        /// The client for accessing this underlying API synchronously.
-        /// </summary>
-        public ManticoreSearch.Client.ISynchronousClient Client { get; set; }
-
-        /// <summary>
-        /// Gets the base path of the API client.
-        /// </summary>
-        /// <value>The base path</value>
-        public string GetBasePath()
-        {
-            return this.Configuration.BasePath;
-        }
-
-        /// <summary>
-        /// Gets or sets the configuration object
-        /// </summary>
-        /// <value>An instance of the Configuration</value>
-        public ManticoreSearch.Client.IReadableConfiguration Configuration { get; set; }
-
-        /// <summary>
-        /// Provides a factory method hook for the creation of exceptions.
-        /// </summary>
-        public ManticoreSearch.Client.ExceptionFactory ExceptionFactory
-        {
-            get
-            {
-                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
-                {
-                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
-                }
-                return _exceptionFactory;
-            }
-            set { _exceptionFactory = value; }
-        }
-
-        /// <summary>
-        /// Perform reverse search on a percolate index Performs a percolate search.  This method must be used only on percolate indexes.  Expects two parameters: the index name and an object with array of documents to be tested. An example of the documents object:    &#x60;&#x60;&#x60;   {     \&quot;query\&quot;:     {       \&quot;percolate\&quot;:       {         \&quot;document\&quot;:         {           \&quot;content\&quot;:\&quot;sample content\&quot;         }       }     }   }   &#x60;&#x60;&#x60;  Responds with an object with matched stored queries:     &#x60;&#x60;&#x60;   {     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;max_score&#39;:1,       &#39;hits&#39;:       [         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;2&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;match&#39;:{&#39;title&#39;:&#39;some&#39;}             }           }         },         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;5&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;ql&#39;:&#39;some | none&#39;             }           }         }       ]     }   }   &#x60;&#x60;&#x60; 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="index">Name of the percolate index</param>
-        /// <param name="percolateRequest"></param>
-        /// <returns>SearchResponse</returns>
-        public SearchResponse Percolate(string index, PercolateRequest percolateRequest)
-        {
-            ManticoreSearch.Client.ApiResponse<SearchResponse> localVarResponse = PercolateWithHttpInfo(index, percolateRequest);
-            return localVarResponse.Data;
-        }
-
-        /// <summary>
-        /// Perform reverse search on a percolate index Performs a percolate search.  This method must be used only on percolate indexes.  Expects two parameters: the index name and an object with array of documents to be tested. An example of the documents object:    &#x60;&#x60;&#x60;   {     \&quot;query\&quot;:     {       \&quot;percolate\&quot;:       {         \&quot;document\&quot;:         {           \&quot;content\&quot;:\&quot;sample content\&quot;         }       }     }   }   &#x60;&#x60;&#x60;  Responds with an object with matched stored queries:     &#x60;&#x60;&#x60;   {     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;max_score&#39;:1,       &#39;hits&#39;:       [         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;2&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;match&#39;:{&#39;title&#39;:&#39;some&#39;}             }           }         },         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;5&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;ql&#39;:&#39;some | none&#39;             }           }         }       ]     }   }   &#x60;&#x60;&#x60; 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="index">Name of the percolate index</param>
-        /// <param name="percolateRequest"></param>
-        /// <returns>ApiResponse of SearchResponse</returns>
-        public ManticoreSearch.Client.ApiResponse<SearchResponse> PercolateWithHttpInfo(string index, PercolateRequest percolateRequest)
-        {
-        	
-
-            // verify the required parameter 'index' is set
-            if (index == null)
-                throw new ManticoreSearch.Client.ApiException(400, "Missing required parameter 'index' when calling SearchApi->Percolate");
-
-            // verify the required parameter 'percolateRequest' is set
-            if (percolateRequest == null)
-                throw new ManticoreSearch.Client.ApiException(400, "Missing required parameter 'percolateRequest' when calling SearchApi->Percolate");
-
-            ManticoreSearch.Client.RequestOptions localVarRequestOptions = new ManticoreSearch.Client.RequestOptions();
-
-            string[] _contentTypes = new string[] {
-                "application/json"
-            };
-
-            // to determine the Accept header
-            string[] _accepts = new string[] {
-                "application/json"
-            };
-
-            var localVarContentType = ManticoreSearch.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
-            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
-
-            var localVarAccept = ManticoreSearch.Client.ClientUtils.SelectHeaderAccept(_accepts);
-            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
-
-            localVarRequestOptions.PathParameters.Add("index", ManticoreSearch.Client.ClientUtils.ParameterToString(index)); // path parameter
-            localVarRequestOptions.Data = percolateRequest;
-
-
-            // make the HTTP request
-            var localVarResponse = this.Client.Post<SearchResponse>("/pq/{index}/search", localVarRequestOptions, this.Configuration);
-			
-            if (this.ExceptionFactory != null)
-            {
-                Exception _exception = this.ExceptionFactory("Percolate", localVarResponse);
-                if (_exception != null) throw _exception;
-            }
-
-            return localVarResponse;
-        }
-
-        /// <summary>
-        /// Perform reverse search on a percolate index Performs a percolate search.  This method must be used only on percolate indexes.  Expects two parameters: the index name and an object with array of documents to be tested. An example of the documents object:    &#x60;&#x60;&#x60;   {     \&quot;query\&quot;:     {       \&quot;percolate\&quot;:       {         \&quot;document\&quot;:         {           \&quot;content\&quot;:\&quot;sample content\&quot;         }       }     }   }   &#x60;&#x60;&#x60;  Responds with an object with matched stored queries:     &#x60;&#x60;&#x60;   {     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;max_score&#39;:1,       &#39;hits&#39;:       [         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;2&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;match&#39;:{&#39;title&#39;:&#39;some&#39;}             }           }         },         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;5&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;ql&#39;:&#39;some | none&#39;             }           }         }       ]     }   }   &#x60;&#x60;&#x60; 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="index">Name of the percolate index</param>
-        /// <param name="percolateRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of SearchResponse</returns>
-        public async System.Threading.Tasks.Task<SearchResponse> PercolateAsync(string index, PercolateRequest percolateRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            ManticoreSearch.Client.ApiResponse<SearchResponse> localVarResponse = await PercolateWithHttpInfoAsync(index, percolateRequest, cancellationToken).ConfigureAwait(false);
-            return localVarResponse.Data;
-        }
-
-        /// <summary>
-        /// Perform reverse search on a percolate index Performs a percolate search.  This method must be used only on percolate indexes.  Expects two parameters: the index name and an object with array of documents to be tested. An example of the documents object:    &#x60;&#x60;&#x60;   {     \&quot;query\&quot;:     {       \&quot;percolate\&quot;:       {         \&quot;document\&quot;:         {           \&quot;content\&quot;:\&quot;sample content\&quot;         }       }     }   }   &#x60;&#x60;&#x60;  Responds with an object with matched stored queries:     &#x60;&#x60;&#x60;   {     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;max_score&#39;:1,       &#39;hits&#39;:       [         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;2&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;match&#39;:{&#39;title&#39;:&#39;some&#39;}             }           }         },         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;5&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;ql&#39;:&#39;some | none&#39;             }           }         }       ]     }   }   &#x60;&#x60;&#x60; 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="index">Name of the percolate index</param>
-        /// <param name="percolateRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of ApiResponse (SearchResponse)</returns>
-        public async System.Threading.Tasks.Task<ManticoreSearch.Client.ApiResponse<SearchResponse>> PercolateWithHttpInfoAsync(string index, PercolateRequest percolateRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            // verify the required parameter 'index' is set
-            if (index == null)
-                throw new ManticoreSearch.Client.ApiException(400, "Missing required parameter 'index' when calling SearchApi->Percolate");
-
-            // verify the required parameter 'percolateRequest' is set
-            if (percolateRequest == null)
-                throw new ManticoreSearch.Client.ApiException(400, "Missing required parameter 'percolateRequest' when calling SearchApi->Percolate");
-
-
-            ManticoreSearch.Client.RequestOptions localVarRequestOptions = new ManticoreSearch.Client.RequestOptions();
-
-            string[] _contentTypes = new string[] {
-                "application/json"
-            };
-
-            // to determine the Accept header
-            string[] _accepts = new string[] {
-                "application/json"
-            };
-
-
-            var localVarContentType = ManticoreSearch.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
-            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
-
-            var localVarAccept = ManticoreSearch.Client.ClientUtils.SelectHeaderAccept(_accepts);
-            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
-
-            localVarRequestOptions.PathParameters.Add("index", ManticoreSearch.Client.ClientUtils.ParameterToString(index)); // path parameter
-            localVarRequestOptions.Data = percolateRequest;
-
-
-            // make the HTTP request
-
-            var localVarResponse = await this.AsynchronousClient.PostAsync<SearchResponse>("/pq/{index}/search", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);
-
-            if (this.ExceptionFactory != null)
-            {
-                Exception _exception = this.ExceptionFactory("Percolate", localVarResponse);
-                if (_exception != null) throw _exception;
-            }
-
-            return localVarResponse;
-        }
-
-        /// <summary>
-        /// Performs a search on an index  The method expects an object with the following mandatory properties: * the name of the index to search * the match query object For details, see the documentation on [**SearchRequest**](SearchRequest.md) The method returns an object with the following properties: - took: the time taken to execute the search query. - timed_out: a boolean indicating whether the query timed out. - hits: an object with the following properties:    - total: the total number of hits found.    - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:      - _id: the ID of the matched document.      - _score: the score of the matched document.      - _source: the source data of the matched document.  In addition, if profiling is enabled, the response will include an additional array with profiling information attached. Here is an example search response:    &#x60;&#x60;&#x60;   {     &#39;took&#39;:10,     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;hits&#39;:       [         {&#39;_id&#39;:&#39;1&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:11}},         {&#39;_id&#39;:&#39;2&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:12}}       ]     }   }   &#x60;&#x60;&#x60;  For more information about the match query syntax and additional parameters that can be added to request and response, please see the documentation [here](https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON). 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="searchRequest"></param>
-        /// <returns>SearchResponse</returns>
-        public SearchResponse Search(SearchRequest searchRequest)
-        {
-            ManticoreSearch.Client.ApiResponse<SearchResponse> localVarResponse = SearchWithHttpInfo(searchRequest);
-            return localVarResponse.Data;
-        }
-
-        /// <summary>
-        /// Performs a search on an index  The method expects an object with the following mandatory properties: * the name of the index to search * the match query object For details, see the documentation on [**SearchRequest**](SearchRequest.md) The method returns an object with the following properties: - took: the time taken to execute the search query. - timed_out: a boolean indicating whether the query timed out. - hits: an object with the following properties:    - total: the total number of hits found.    - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:      - _id: the ID of the matched document.      - _score: the score of the matched document.      - _source: the source data of the matched document.  In addition, if profiling is enabled, the response will include an additional array with profiling information attached. Here is an example search response:    &#x60;&#x60;&#x60;   {     &#39;took&#39;:10,     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;hits&#39;:       [         {&#39;_id&#39;:&#39;1&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:11}},         {&#39;_id&#39;:&#39;2&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:12}}       ]     }   }   &#x60;&#x60;&#x60;  For more information about the match query syntax and additional parameters that can be added to request and response, please see the documentation [here](https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON). 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="searchRequest"></param>
-        /// <returns>ApiResponse of SearchResponse</returns>
-        public ManticoreSearch.Client.ApiResponse<SearchResponse> SearchWithHttpInfo(SearchRequest searchRequest)
-        {
-        	
-            JObject RestructObj(JObject obj, string objType)
- 			{
- 			    if (!obj.ContainsKey("attr") && !obj.ContainsKey("name") && !obj.ContainsKey("query_fields") && !obj.ContainsKey("value") && !obj.ContainsKey("values")
- 			        && !obj.ContainsKey("field") && !obj.ContainsKey("location_anchor") && !obj.ContainsKey("must") && !obj.ContainsKey("must_not") && !obj.ContainsKey("should"))
- 			    {
- 			        return obj;
- 			    }
- 			    
- 			    var newObj = new JObject();
- 			    string keyPropVal;
- 			    
- 			    if (objType == "fulltext_filter")
-				{
-				    if (obj.ContainsKey("query_fields"))
-				    {
-				        keyPropVal = (string)obj["query_fields"];
-				        if (obj.ContainsKey("query_phrase"))
-				        {
-				            var matchPhraseObj = new JObject();
-				            matchPhraseObj[keyPropVal] = obj["query_phrase"];
-				            newObj["match_phrase"] = matchPhraseObj;
-				        }
-				        else
-				        {
-				            var matchObj = new JObject();
-				            matchObj[keyPropVal] = obj.ContainsKey("operator")
-				                ? new JObject { { "query", obj["query_string"] }, { "operator", obj["operator"] } }
-				                : obj["query_string"];
-				            newObj["match"] = matchObj;
-				        }
-				    }
-				    else
-				    {
-				        newObj = obj;
-				    }
-				}
-				else if (objType == "attr_filter")
-			    {
-			        if (obj.ContainsKey("field"))
-			        {
-			            keyPropVal = (string)obj["field"];
-			            if (obj.ContainsKey("value"))
-			            {
-			                var equalsObj = new JObject();
-			                equalsObj[keyPropVal] = obj["value"];
-			                newObj["equals"] = equalsObj;
-			            }
-			            else if (obj.ContainsKey("values"))
-			            {
-			                var inObj = new JObject();
-			                inObj[keyPropVal] = obj["values"];
-			                newObj["in"] = inObj;
-			            }
-			            else
-			            {
-			            	obj.Remove("field");
-							// Check if the filter's values are actually integers
-                            new[] { "gte", "lte", "gt", "lt" }.ToList().ForEach(propName => 
-                            {
-                                decimal? propVal = (decimal?)obj[propName];
-                                if (propVal.HasValue && Math.Round((decimal)propVal) == propVal)
-                                {
-                                    obj[propName] = (int)propVal;
-                                }
-                            });
-
-			                newObj[keyPropVal] = obj;
-			                newObj = new JObject { { "range", newObj } };
-			            }
-			        }
-			        else 
-			        {
-			        	if (!obj.ContainsKey("must") && !obj.ContainsKey("must_not") && !obj.ContainsKey("should")) 
-			        	{
-							newObj["geo_distance"] = obj;
-						} else 
-						{
-							JObject RestructFilter(JObject filter)
-							{
-								return (filter.ContainsKey("query_fields") || filter.ContainsKey("query_string"))
-									? RestructObj(filter, "fulltext_filter")
-									: RestructObj(filter, "attr_filter");
-							}
-
-							new[] {"must", "must_not", "should"}.ToList().ForEach(propName =>
-							{
-								if (obj.ContainsKey(propName) && obj[propName] != null) {
-									
-									newObj[propName] = JArray.FromObject(
-										obj[propName].Select( filter => RestructFilter((JObject)filter) )
-									);
-								}
-							});
-							
-							newObj = new JObject { { "bool", newObj } };
-						}
-			        }
-			    } 
-				else {
-	 			    var keyPropName = obj.ContainsKey("attr") ? "attr" : "name";
-	 		        keyPropVal = (string)obj[keyPropName];
-	 		        obj.Remove(keyPropName);
-			        newObj[keyPropVal] = obj;
-	 		    }
- 		        
- 		        return newObj;
- 			}
- 			
- 			JObject RestructNestedObj(List<JContainer> nestedObj, List<string> propNames)
-			{
-			    var newProp = new JObject();
-			    foreach (JObject propVal in (JArray)nestedObj[nestedObj.Count - 1])
-			    {
-			        var oldProp = RestructObj(propVal, propNames[propNames.Count - 1]);
-			        newProp.Merge(oldProp);
-			    }
-			    nestedObj[nestedObj.Count - 1] = newProp;
-			
-			    for (int i = propNames.Count - 1; i >= 0; i--)
-			    {
-			        nestedObj[i][propNames[i]] = nestedObj[i + 1];
-			    }
-			    
-			    return (JObject)nestedObj[0];
-			}
-
-            // verify the required parameter 'searchRequest' is set
-            if (searchRequest == null)
-                throw new ManticoreSearch.Client.ApiException(400, "Missing required parameter 'searchRequest' when calling SearchApi->Search");
-
-            ManticoreSearch.Client.RequestOptions localVarRequestOptions = new ManticoreSearch.Client.RequestOptions();
-
-            string[] _contentTypes = new string[] {
-                "application/json"
-            };
-
-            // to determine the Accept header
-            string[] _accepts = new string[] {
-                "application/json"
-            };
-
-            var localVarContentType = ManticoreSearch.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
-            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
-
-            var localVarAccept = ManticoreSearch.Client.ClientUtils.SelectHeaderAccept(_accepts);
-            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
-
-			JsonSerializerSettings convertSettings = new JsonSerializerSettings {NullValueHandling = NullValueHandling.Ignore, DefaultValueHandling = DefaultValueHandling.Ignore};
-            var dict = JsonConvert.DeserializeObject<JObject>(JsonConvert.SerializeObject(searchRequest, convertSettings));
-			
-			if (dict.ContainsKey("source")) 
-			{
- 				dict["_source"] = dict["source"];
- 				dict.Remove("source");
- 			}
- 
- 			if (dict.ContainsKey("sort"))
- 			{
-	 		    var sortList = new JArray();
-	 		    foreach (object sort in (JArray)dict["sort"])
-	 		    {
-	 		    	if (sort is JObject)
-	 		    	{
-	 		        	sortList.Add(RestructObj((JObject)sort, "sort"));
-	 		        }
-	 		        else
-	 		        {
-	 		        	sortList.Add(sort);
-	 		        } 
-	 		    }
-	 		    dict["sort"] = sortList;
-	 		}
-	 		
-	 		if (dict.ContainsKey("highlight"))
-	 		{
-	 			var highlightDict = (JObject)dict["highlight"];
-	 			if (highlightDict.ContainsKey("highlight_query"))
-	 			{
-	 				highlightDict.Remove("highlight_query");
-	 			}
-	 		}
- 		    
- 		    if (dict.ContainsKey("fulltext_filter") || dict.ContainsKey("attr_filter")) {
-				var query = new JObject();
-				var filterObj = new JObject();
-				
-				new[] { "fulltext_filter", "attr_filter" }.ToList().ForEach(propName => 
-				{
-					if (dict.ContainsKey(propName)) {
-						filterObj = RestructObj((JObject)dict[propName], propName);
-						query.Merge(filterObj);
-						dict.Remove(propName);
-					}
-				});
-				
-				dict["query"] = query;
-			}
- 		    
- 		    new[] { "highlight.fields" }.ToList().ForEach(propSign =>
-			{
-			    var propNames = propSign.Split('.').ToList();
-			    var nestedObj = new List<JContainer> { dict };
-			    for (int i = 0; i < propNames.Count; i++)
-			    {
-		        	var subObj =  (JObject)nestedObj[i];
-		        	if (!subObj.ContainsKey(propNames[i]))
-		            	return;
-					nestedObj.Add((JContainer)nestedObj[i][propNames[i]]);
-			    }
-			
-			    dict = RestructNestedObj(nestedObj, propNames);
-			});
-						
-			localVarRequestOptions.Data = dict;
-
-
-            // make the HTTP request
-            var localVarResponse = this.Client.Post<SearchResponse>("/search", localVarRequestOptions, this.Configuration);
-			
-            if (this.ExceptionFactory != null)
-            {
-                Exception _exception = this.ExceptionFactory("Search", localVarResponse);
-                if (_exception != null) throw _exception;
-            }
-
-            return localVarResponse;
-        }
-
-        /// <summary>
-        /// Performs a search on an index  The method expects an object with the following mandatory properties: * the name of the index to search * the match query object For details, see the documentation on [**SearchRequest**](SearchRequest.md) The method returns an object with the following properties: - took: the time taken to execute the search query. - timed_out: a boolean indicating whether the query timed out. - hits: an object with the following properties:    - total: the total number of hits found.    - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:      - _id: the ID of the matched document.      - _score: the score of the matched document.      - _source: the source data of the matched document.  In addition, if profiling is enabled, the response will include an additional array with profiling information attached. Here is an example search response:    &#x60;&#x60;&#x60;   {     &#39;took&#39;:10,     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;hits&#39;:       [         {&#39;_id&#39;:&#39;1&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:11}},         {&#39;_id&#39;:&#39;2&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:12}}       ]     }   }   &#x60;&#x60;&#x60;  For more information about the match query syntax and additional parameters that can be added to request and response, please see the documentation [here](https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON). 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="searchRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of SearchResponse</returns>
-        public async System.Threading.Tasks.Task<SearchResponse> SearchAsync(SearchRequest searchRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            ManticoreSearch.Client.ApiResponse<SearchResponse> localVarResponse = await SearchWithHttpInfoAsync(searchRequest, cancellationToken).ConfigureAwait(false);
-            return localVarResponse.Data;
-        }
-
-        /// <summary>
-        /// Performs a search on an index  The method expects an object with the following mandatory properties: * the name of the index to search * the match query object For details, see the documentation on [**SearchRequest**](SearchRequest.md) The method returns an object with the following properties: - took: the time taken to execute the search query. - timed_out: a boolean indicating whether the query timed out. - hits: an object with the following properties:    - total: the total number of hits found.    - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:      - _id: the ID of the matched document.      - _score: the score of the matched document.      - _source: the source data of the matched document.  In addition, if profiling is enabled, the response will include an additional array with profiling information attached. Here is an example search response:    &#x60;&#x60;&#x60;   {     &#39;took&#39;:10,     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;hits&#39;:       [         {&#39;_id&#39;:&#39;1&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:11}},         {&#39;_id&#39;:&#39;2&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:12}}       ]     }   }   &#x60;&#x60;&#x60;  For more information about the match query syntax and additional parameters that can be added to request and response, please see the documentation [here](https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON). 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="searchRequest"></param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of ApiResponse (SearchResponse)</returns>
-        public async System.Threading.Tasks.Task<ManticoreSearch.Client.ApiResponse<SearchResponse>> SearchWithHttpInfoAsync(SearchRequest searchRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            // verify the required parameter 'searchRequest' is set
-            if (searchRequest == null)
-                throw new ManticoreSearch.Client.ApiException(400, "Missing required parameter 'searchRequest' when calling SearchApi->Search");
-
-
-            ManticoreSearch.Client.RequestOptions localVarRequestOptions = new ManticoreSearch.Client.RequestOptions();
-
-            string[] _contentTypes = new string[] {
-                "application/json"
-            };
-
-            // to determine the Accept header
-            string[] _accepts = new string[] {
-                "application/json"
-            };
-
-
-            var localVarContentType = ManticoreSearch.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
-            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
-
-            var localVarAccept = ManticoreSearch.Client.ClientUtils.SelectHeaderAccept(_accepts);
-            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
-
-            localVarRequestOptions.Data = searchRequest;
-
-
-            // make the HTTP request
-
-            var localVarResponse = await this.AsynchronousClient.PostAsync<SearchResponse>("/search", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);
-
-            if (this.ExceptionFactory != null)
-            {
-                Exception _exception = this.ExceptionFactory("Search", localVarResponse);
-                if (_exception != null) throw _exception;
-            }
-
-            return localVarResponse;
-        }
-
-    }
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Api/UtilsApi.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Api/UtilsApi.cs
deleted file mode 100755
index 5bbadc2..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Api/UtilsApi.cs
+++ /dev/null
@@ -1,460 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.Net;
-using System.Net.Http;
-using System.Net.Mime;
-using ManticoreSearch.Client;
-using ManticoreSearch.Model;
-using System.Web;
-
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.Dynamic;
-
-
-namespace ManticoreSearch.Api
-{
-
-    /// <summary>
-    /// Represents a collection of functions to interact with the API endpoints
-    /// </summary>
-    public interface IUtilsApiSync : IApiAccessor
-    {
-        #region Synchronous Operations
-        /// <summary>
-        /// Perform SQL requests
-        /// </summary>
-        /// <remarks>
-        /// Run a query in SQL format. Expects a query string passed through &#x60;body&#x60; parameter and optional &#x60;raw_response&#x60; parameter that defines a format of response. &#x60;raw_response&#x60; can be set to &#x60;False&#x60; for Select queries only, e.g., &#x60;SELECT * FROM myindex&#x60; The query string must stay as it is, no URL encoding is needed. The response object depends on the query executed. In select mode the response has same format as &#x60;/search&#x60; operation. 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="body">A query parameter string. </param>
-        /// <param name="rawResponse">Optional parameter, defines a format of response. Can be set to &#x60;False&#x60; for Select only queries and set to &#x60;True&#x60; or omitted for any type of queries:  (optional, default to true)</param>
-        /// <returns>List&lt;Object&gt;</returns>
-        List<Object> Sql(string body, bool? rawResponse = default(bool?));
-
-        /// <summary>
-        /// Perform SQL requests
-        /// </summary>
-        /// <remarks>
-        /// Run a query in SQL format. Expects a query string passed through &#x60;body&#x60; parameter and optional &#x60;raw_response&#x60; parameter that defines a format of response. &#x60;raw_response&#x60; can be set to &#x60;False&#x60; for Select queries only, e.g., &#x60;SELECT * FROM myindex&#x60; The query string must stay as it is, no URL encoding is needed. The response object depends on the query executed. In select mode the response has same format as &#x60;/search&#x60; operation. 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="body">A query parameter string. </param>
-        /// <param name="rawResponse">Optional parameter, defines a format of response. Can be set to &#x60;False&#x60; for Select only queries and set to &#x60;True&#x60; or omitted for any type of queries:  (optional, default to true)</param>
-        /// <returns>ApiResponse of List&lt;Object&gt;</returns>
-        ApiResponse<List<Object>> SqlWithHttpInfo(string body, bool? rawResponse = default(bool?));
-        #endregion Synchronous Operations
-    }
-
-    /// <summary>
-    /// Represents a collection of functions to interact with the API endpoints
-    /// </summary>
-    public interface IUtilsApiAsync : IApiAccessor
-    {
-        #region Asynchronous Operations
-        /// <summary>
-        /// Perform SQL requests
-        /// </summary>
-        /// <remarks>
-        /// Run a query in SQL format. Expects a query string passed through &#x60;body&#x60; parameter and optional &#x60;raw_response&#x60; parameter that defines a format of response. &#x60;raw_response&#x60; can be set to &#x60;False&#x60; for Select queries only, e.g., &#x60;SELECT * FROM myindex&#x60; The query string must stay as it is, no URL encoding is needed. The response object depends on the query executed. In select mode the response has same format as &#x60;/search&#x60; operation. 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="body">A query parameter string. </param>
-        /// <param name="rawResponse">Optional parameter, defines a format of response. Can be set to &#x60;False&#x60; for Select only queries and set to &#x60;True&#x60; or omitted for any type of queries:  (optional, default to true)</param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of List&lt;Object&gt;</returns>
-        System.Threading.Tasks.Task<List<Object>> SqlAsync(string body, bool? rawResponse = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-
-        /// <summary>
-        /// Perform SQL requests
-        /// </summary>
-        /// <remarks>
-        /// Run a query in SQL format. Expects a query string passed through &#x60;body&#x60; parameter and optional &#x60;raw_response&#x60; parameter that defines a format of response. &#x60;raw_response&#x60; can be set to &#x60;False&#x60; for Select queries only, e.g., &#x60;SELECT * FROM myindex&#x60; The query string must stay as it is, no URL encoding is needed. The response object depends on the query executed. In select mode the response has same format as &#x60;/search&#x60; operation. 
-        /// </remarks>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="body">A query parameter string. </param>
-        /// <param name="rawResponse">Optional parameter, defines a format of response. Can be set to &#x60;False&#x60; for Select only queries and set to &#x60;True&#x60; or omitted for any type of queries:  (optional, default to true)</param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of ApiResponse (List&lt;Object&gt;)</returns>
-        System.Threading.Tasks.Task<ApiResponse<List<Object>>> SqlWithHttpInfoAsync(string body, bool? rawResponse = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-        #endregion Asynchronous Operations
-    }
-
-    /// <summary>
-    /// Represents a collection of functions to interact with the API endpoints
-    /// </summary>
-    public interface IUtilsApi : IUtilsApiSync, IUtilsApiAsync
-    {
-
-    }
-
-    /// <summary>
-    /// Represents a collection of functions to interact with the API endpoints
-    /// </summary>
-    public partial class UtilsApi : IDisposable, IUtilsApi
-    {
-        private ManticoreSearch.Client.ExceptionFactory _exceptionFactory = (name, response) => null;
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="UtilsApi"/> class.
-        /// **IMPORTANT** This will also create an instance of HttpClient, which is less than ideal.
-        /// It's better to reuse the <see href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests#issues-with-the-original-httpclient-class-available-in-net">HttpClient and HttpClientHandler</see>.
-        /// </summary>
-        /// <returns></returns>
-        public UtilsApi() : this((string)null)
-        {
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="UtilsApi"/> class.
-        /// **IMPORTANT** This will also create an instance of HttpClient, which is less than ideal.
-        /// It's better to reuse the <see href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests#issues-with-the-original-httpclient-class-available-in-net">HttpClient and HttpClientHandler</see>.
-        /// </summary>
-        /// <param name="basePath">The target service's base path in URL format.</param>
-        /// <exception cref="ArgumentException"></exception>
-        /// <returns></returns>
-        public UtilsApi(string basePath)
-        {
-            this.Configuration = ManticoreSearch.Client.Configuration.MergeConfigurations(
-                ManticoreSearch.Client.GlobalConfiguration.Instance,
-                new ManticoreSearch.Client.Configuration { BasePath = basePath }
-            );
-            this.ApiClient = new ManticoreSearch.Client.ApiClient(this.Configuration.BasePath);
-            this.Client =  this.ApiClient;
-            this.AsynchronousClient = this.ApiClient;
-            this.ExceptionFactory = ManticoreSearch.Client.Configuration.DefaultExceptionFactory;
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="UtilsApi"/> class using Configuration object.
-        /// **IMPORTANT** This will also create an instance of HttpClient, which is less than ideal.
-        /// It's better to reuse the <see href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests#issues-with-the-original-httpclient-class-available-in-net">HttpClient and HttpClientHandler</see>.
-        /// </summary>
-        /// <param name="configuration">An instance of Configuration.</param>
-        /// <exception cref="ArgumentNullException"></exception>
-        /// <returns></returns>
-        public UtilsApi(ManticoreSearch.Client.Configuration configuration)
-        {
-            if (configuration == null) throw new ArgumentNullException("configuration");
-
-            this.Configuration = ManticoreSearch.Client.Configuration.MergeConfigurations(
-                ManticoreSearch.Client.GlobalConfiguration.Instance,
-                configuration
-            );
-            this.ApiClient = new ManticoreSearch.Client.ApiClient(this.Configuration.BasePath);
-            this.Client = this.ApiClient;
-            this.AsynchronousClient = this.ApiClient;
-            ExceptionFactory = ManticoreSearch.Client.Configuration.DefaultExceptionFactory;
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="UtilsApi"/> class.
-        /// </summary>
-        /// <param name="client">An instance of HttpClient.</param>
-        /// <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
-        /// <exception cref="ArgumentNullException"></exception>
-        /// <returns></returns>
-        /// <remarks>
-        /// Some configuration settings will not be applied without passing an HttpClientHandler.
-        /// The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
-        /// </remarks>
-        public UtilsApi(HttpClient client, HttpClientHandler handler = null) : this(client, (string)null, handler)
-        {
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="UtilsApi"/> class.
-        /// </summary>
-        /// <param name="client">An instance of HttpClient.</param>
-        /// <param name="basePath">The target service's base path in URL format.</param>
-        /// <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
-        /// <exception cref="ArgumentNullException"></exception>
-        /// <exception cref="ArgumentException"></exception>
-        /// <returns></returns>
-        /// <remarks>
-        /// Some configuration settings will not be applied without passing an HttpClientHandler.
-        /// The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
-        /// </remarks>
-        public UtilsApi(HttpClient client, string basePath, HttpClientHandler handler = null)
-        {
-            if (client == null) throw new ArgumentNullException("client");
-
-            this.Configuration = ManticoreSearch.Client.Configuration.MergeConfigurations(
-                ManticoreSearch.Client.GlobalConfiguration.Instance,
-                new ManticoreSearch.Client.Configuration { BasePath = basePath }
-            );
-            this.ApiClient = new ManticoreSearch.Client.ApiClient(client, this.Configuration.BasePath, handler);
-            this.Client =  this.ApiClient;
-            this.AsynchronousClient = this.ApiClient;
-            this.ExceptionFactory = ManticoreSearch.Client.Configuration.DefaultExceptionFactory;
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="UtilsApi"/> class using Configuration object.
-        /// </summary>
-        /// <param name="client">An instance of HttpClient.</param>
-        /// <param name="configuration">An instance of Configuration.</param>
-        /// <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
-        /// <exception cref="ArgumentNullException"></exception>
-        /// <returns></returns>
-        /// <remarks>
-        /// Some configuration settings will not be applied without passing an HttpClientHandler.
-        /// The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
-        /// </remarks>
-        public UtilsApi(HttpClient client, ManticoreSearch.Client.Configuration configuration, HttpClientHandler handler = null)
-        {
-            if (configuration == null) throw new ArgumentNullException("configuration");
-            if (client == null) throw new ArgumentNullException("client");
-
-            this.Configuration = ManticoreSearch.Client.Configuration.MergeConfigurations(
-                ManticoreSearch.Client.GlobalConfiguration.Instance,
-                configuration
-            );
-            this.ApiClient = new ManticoreSearch.Client.ApiClient(client, this.Configuration.BasePath, handler);
-            this.Client = this.ApiClient;
-            this.AsynchronousClient = this.ApiClient;
-            ExceptionFactory = ManticoreSearch.Client.Configuration.DefaultExceptionFactory;
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="UtilsApi"/> class
-        /// using a Configuration object and client instance.
-        /// </summary>
-        /// <param name="client">The client interface for synchronous API access.</param>
-        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
-        /// <param name="configuration">The configuration object.</param>
-        /// <exception cref="ArgumentNullException"></exception>
-        public UtilsApi(ManticoreSearch.Client.ISynchronousClient client, ManticoreSearch.Client.IAsynchronousClient asyncClient, ManticoreSearch.Client.IReadableConfiguration configuration)
-        {
-            if (client == null) throw new ArgumentNullException("client");
-            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
-            if (configuration == null) throw new ArgumentNullException("configuration");
-
-            this.Client = client;
-            this.AsynchronousClient = asyncClient;
-            this.Configuration = configuration;
-            this.ExceptionFactory = ManticoreSearch.Client.Configuration.DefaultExceptionFactory;
-        }
-
-        /// <summary>
-        /// Disposes resources if they were created by us
-        /// </summary>
-        public void Dispose()
-        {
-            this.ApiClient?.Dispose();
-        }
-
-        /// <summary>
-        /// Holds the ApiClient if created
-        /// </summary>
-        public ManticoreSearch.Client.ApiClient ApiClient { get; set; } = null;
-
-        /// <summary>
-        /// The client for accessing this underlying API asynchronously.
-        /// </summary>
-        public ManticoreSearch.Client.IAsynchronousClient AsynchronousClient { get; set; }
-
-        /// <summary>
-        /// The client for accessing this underlying API synchronously.
-        /// </summary>
-        public ManticoreSearch.Client.ISynchronousClient Client { get; set; }
-
-        /// <summary>
-        /// Gets the base path of the API client.
-        /// </summary>
-        /// <value>The base path</value>
-        public string GetBasePath()
-        {
-            return this.Configuration.BasePath;
-        }
-
-        /// <summary>
-        /// Gets or sets the configuration object
-        /// </summary>
-        /// <value>An instance of the Configuration</value>
-        public ManticoreSearch.Client.IReadableConfiguration Configuration { get; set; }
-
-        /// <summary>
-        /// Provides a factory method hook for the creation of exceptions.
-        /// </summary>
-        public ManticoreSearch.Client.ExceptionFactory ExceptionFactory
-        {
-            get
-            {
-                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
-                {
-                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
-                }
-                return _exceptionFactory;
-            }
-            set { _exceptionFactory = value; }
-        }
-
-        /// <summary>
-        /// Perform SQL requests Run a query in SQL format. Expects a query string passed through &#x60;body&#x60; parameter and optional &#x60;raw_response&#x60; parameter that defines a format of response. &#x60;raw_response&#x60; can be set to &#x60;False&#x60; for Select queries only, e.g., &#x60;SELECT * FROM myindex&#x60; The query string must stay as it is, no URL encoding is needed. The response object depends on the query executed. In select mode the response has same format as &#x60;/search&#x60; operation. 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="body">A query parameter string. </param>
-        /// <param name="rawResponse">Optional parameter, defines a format of response. Can be set to &#x60;False&#x60; for Select only queries and set to &#x60;True&#x60; or omitted for any type of queries:  (optional, default to true)</param>
-        /// <returns>List&lt;Object&gt;</returns>
-        public List<Object> Sql(string body, bool? rawResponse = default(bool?))
-        {
-            ManticoreSearch.Client.ApiResponse<List<Object>> localVarResponse = SqlWithHttpInfo(body, rawResponse);
-            return localVarResponse.Data;
-        }
-
-        /// <summary>
-        /// Perform SQL requests Run a query in SQL format. Expects a query string passed through &#x60;body&#x60; parameter and optional &#x60;raw_response&#x60; parameter that defines a format of response. &#x60;raw_response&#x60; can be set to &#x60;False&#x60; for Select queries only, e.g., &#x60;SELECT * FROM myindex&#x60; The query string must stay as it is, no URL encoding is needed. The response object depends on the query executed. In select mode the response has same format as &#x60;/search&#x60; operation. 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="body">A query parameter string. </param>
-        /// <param name="rawResponse">Optional parameter, defines a format of response. Can be set to &#x60;False&#x60; for Select only queries and set to &#x60;True&#x60; or omitted for any type of queries:  (optional, default to true)</param>
-        /// <returns>ApiResponse of List&lt;Object&gt;</returns>
-        public ManticoreSearch.Client.ApiResponse<List<Object>> SqlWithHttpInfo(string body, bool? rawResponse = default(bool?))
-        {
-        	
-
-            // verify the required parameter 'body' is set
-            if (body == null)
-                throw new ManticoreSearch.Client.ApiException(400, "Missing required parameter 'body' when calling UtilsApi->Sql");
-
-            ManticoreSearch.Client.RequestOptions localVarRequestOptions = new ManticoreSearch.Client.RequestOptions();
-
-            string[] _contentTypes = new string[] {
-                "text/plain"
-            };
-
-            // to determine the Accept header
-            string[] _accepts = new string[] {
-                "application/json"
-            };
-
-            var localVarContentType = ManticoreSearch.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
-            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
-
-            var localVarAccept = ManticoreSearch.Client.ClientUtils.SelectHeaderAccept(_accepts);
-            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
-
-            if (rawResponse != null)
-            {
-                localVarRequestOptions.QueryParameters.Add(ManticoreSearch.Client.ClientUtils.ParameterToMultiMap("", "raw_response", rawResponse));
-            }
-            localVarRequestOptions.Data = body;
-			if  (localVarRequestOptions.Data != null) 
-			{
-			  if  (rawResponse == false) 
-			  {
-			    localVarRequestOptions.Data = "query=" + HttpUtility.UrlEncode( body.ToString() ).Replace("+", "%20");
-			  } else 
-			  {
-			    localVarRequestOptions.Data = "mode=raw&query=" + HttpUtility.UrlEncode( body.ToString() ).Replace("+", "%20");
-			  }
-			}
-
-
-            // make the HTTP request
-            var localVarResponse = new ManticoreSearch.Client.ApiResponse<List<Object>>( new HttpStatusCode(), null);
-            if  (rawResponse == false) 
-            {
-                var res = this.Client.Post<Object>("/sql", localVarRequestOptions, this.Configuration);
-                List<Object> resList = new List<Object>();
-                resList.Add( res.Data );
-                localVarResponse = new ManticoreSearch.Client.ApiResponse<List<Object>>(res.StatusCode, res.Headers, resList);
-            } else 
-            {
-                localVarResponse = this.Client.Post<List<Object>>("/sql", localVarRequestOptions, this.Configuration);
-            }
-			
-            if (this.ExceptionFactory != null)
-            {
-                Exception _exception = this.ExceptionFactory("Sql", localVarResponse);
-                if (_exception != null) throw _exception;
-            }
-
-            return localVarResponse;
-        }
-
-        /// <summary>
-        /// Perform SQL requests Run a query in SQL format. Expects a query string passed through &#x60;body&#x60; parameter and optional &#x60;raw_response&#x60; parameter that defines a format of response. &#x60;raw_response&#x60; can be set to &#x60;False&#x60; for Select queries only, e.g., &#x60;SELECT * FROM myindex&#x60; The query string must stay as it is, no URL encoding is needed. The response object depends on the query executed. In select mode the response has same format as &#x60;/search&#x60; operation. 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="body">A query parameter string. </param>
-        /// <param name="rawResponse">Optional parameter, defines a format of response. Can be set to &#x60;False&#x60; for Select only queries and set to &#x60;True&#x60; or omitted for any type of queries:  (optional, default to true)</param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of List&lt;Object&gt;</returns>
-        public async System.Threading.Tasks.Task<List<Object>> SqlAsync(string body, bool? rawResponse = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            ManticoreSearch.Client.ApiResponse<List<Object>> localVarResponse = await SqlWithHttpInfoAsync(body, rawResponse, cancellationToken).ConfigureAwait(false);
-            return localVarResponse.Data;
-        }
-
-        /// <summary>
-        /// Perform SQL requests Run a query in SQL format. Expects a query string passed through &#x60;body&#x60; parameter and optional &#x60;raw_response&#x60; parameter that defines a format of response. &#x60;raw_response&#x60; can be set to &#x60;False&#x60; for Select queries only, e.g., &#x60;SELECT * FROM myindex&#x60; The query string must stay as it is, no URL encoding is needed. The response object depends on the query executed. In select mode the response has same format as &#x60;/search&#x60; operation. 
-        /// </summary>
-        /// <exception cref="ManticoreSearch.Client.ApiException">Thrown when fails to make API call</exception>
-        /// <param name="body">A query parameter string. </param>
-        /// <param name="rawResponse">Optional parameter, defines a format of response. Can be set to &#x60;False&#x60; for Select only queries and set to &#x60;True&#x60; or omitted for any type of queries:  (optional, default to true)</param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <returns>Task of ApiResponse (List&lt;Object&gt;)</returns>
-        public async System.Threading.Tasks.Task<ManticoreSearch.Client.ApiResponse<List<Object>>> SqlWithHttpInfoAsync(string body, bool? rawResponse = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            // verify the required parameter 'body' is set
-            if (body == null)
-                throw new ManticoreSearch.Client.ApiException(400, "Missing required parameter 'body' when calling UtilsApi->Sql");
-
-
-            ManticoreSearch.Client.RequestOptions localVarRequestOptions = new ManticoreSearch.Client.RequestOptions();
-
-            string[] _contentTypes = new string[] {
-                "text/plain"
-            };
-
-            // to determine the Accept header
-            string[] _accepts = new string[] {
-                "application/json"
-            };
-
-
-            var localVarContentType = ManticoreSearch.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
-            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
-
-            var localVarAccept = ManticoreSearch.Client.ClientUtils.SelectHeaderAccept(_accepts);
-            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
-
-            if (rawResponse != null)
-            {
-                localVarRequestOptions.QueryParameters.Add(ManticoreSearch.Client.ClientUtils.ParameterToMultiMap("", "raw_response", rawResponse));
-            }
-            localVarRequestOptions.Data = body;
-
-
-            // make the HTTP request
-
-            var localVarResponse = await this.AsynchronousClient.PostAsync<List<Object>>("/sql", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);
-
-            if (this.ExceptionFactory != null)
-            {
-                Exception _exception = this.ExceptionFactory("Sql", localVarResponse);
-                if (_exception != null) throw _exception;
-            }
-
-            return localVarResponse;
-        }
-
-    }
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/ApiClient.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/ApiClient.cs
deleted file mode 100755
index 834a95b..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/ApiClient.cs
+++ /dev/null
@@ -1,750 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Globalization;
-using System.IO;
-using System.Linq;
-using System.Net;
-using System.Reflection;
-using System.Runtime.Serialization;
-using System.Runtime.Serialization.Formatters;
-using System.Text;
-using System.Threading;
-using System.Text.RegularExpressions;
-using System.Threading.Tasks;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Serialization;
-using ErrorEventArgs = Newtonsoft.Json.Serialization.ErrorEventArgs;
-using System.Net.Http;
-using System.Net.Http.Headers;
-using Polly;
-
-namespace ManticoreSearch.Client
-{
-    /// <summary>
-    /// To Serialize/Deserialize JSON using our custom logic, but only when ContentType is JSON.
-    /// </summary>
-    internal class CustomJsonCodec
-    {
-        private readonly IReadableConfiguration _configuration;
-        private static readonly string _contentType = "application/json";
-        private readonly JsonSerializerSettings _serializerSettings = new JsonSerializerSettings
-        {
-            // OpenAPI generated types generally hide default constructors.
-            ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor,
-            ContractResolver = new DefaultContractResolver
-            {
-                NamingStrategy = new CamelCaseNamingStrategy
-                {
-                    OverrideSpecifiedNames = false
-                }
-            }
-        };
-
-        public CustomJsonCodec(IReadableConfiguration configuration)
-        {
-            _configuration = configuration;
-        }
-
-        public CustomJsonCodec(JsonSerializerSettings serializerSettings, IReadableConfiguration configuration)
-        {
-            _serializerSettings = serializerSettings;
-            _configuration = configuration;
-        }
-
-        /// <summary>
-        /// Serialize the object into a JSON string.
-        /// </summary>
-        /// <param name="obj">Object to be serialized.</param>
-        /// <returns>A JSON string.</returns>
-        public string Serialize(object obj)
-        {
-            if (obj != null && obj is ManticoreSearch.Model.AbstractOpenAPISchema)
-            {
-                // the object to be serialized is an oneOf/anyOf schema
-                return ((ManticoreSearch.Model.AbstractOpenAPISchema)obj).ToJson();
-            }
-            else
-            {
-                return JsonConvert.SerializeObject(obj, _serializerSettings);
-            }
-        }
-
-        public async Task<T> Deserialize<T>(HttpResponseMessage response)
-        {
-            var result = (T) await Deserialize(response, typeof(T));
-            return result;
-        }
-
-        /// <summary>
-        /// Deserialize the JSON string into a proper object.
-        /// </summary>
-        /// <param name="response">The HTTP response.</param>
-        /// <param name="type">Object type.</param>
-        /// <returns>Object representation of the JSON string.</returns>
-        internal async Task<object> Deserialize(HttpResponseMessage response, Type type)
-        {
-            IList<string> headers = response.Headers.Select(x => x.Key + "=" + x.Value).ToList();
-
-            if (type == typeof(byte[])) // return byte array
-            {
-                return await response.Content.ReadAsByteArrayAsync();
-            }
-            else if (type == typeof(FileParameter))
-            {
-                return new FileParameter(await response.Content.ReadAsStreamAsync());
-            }
-
-            // TODO: ? if (type.IsAssignableFrom(typeof(Stream)))
-            if (type == typeof(Stream))
-            {
-                var bytes = await response.Content.ReadAsByteArrayAsync();
-                if (headers != null)
-                {
-                    var filePath = string.IsNullOrEmpty(_configuration.TempFolderPath)
-                        ? Path.GetTempPath()
-                        : _configuration.TempFolderPath;
-                    var regex = new Regex(@"Content-Disposition=.*filename=['""]?([^'""\s]+)['""]?$");
-                    foreach (var header in headers)
-                    {
-                        var match = regex.Match(header.ToString());
-                        if (match.Success)
-                        {
-                            string fileName = filePath + ClientUtils.SanitizeFilename(match.Groups[1].Value.Replace("\"", "").Replace("'", ""));
-                            File.WriteAllBytes(fileName, bytes);
-                            return new FileStream(fileName, FileMode.Open);
-                        }
-                    }
-                }
-                var stream = new MemoryStream(bytes);
-                return stream;
-            }
-
-            if (type.Name.StartsWith("System.Nullable`1[[System.DateTime")) // return a datetime object
-            {
-                return DateTime.Parse(await response.Content.ReadAsStringAsync(), null, System.Globalization.DateTimeStyles.RoundtripKind);
-            }
-
-            if (type == typeof(string) || type.Name.StartsWith("System.Nullable")) // return primitive type
-            {
-                return Convert.ChangeType(await response.Content.ReadAsStringAsync(), type);
-            }
-
-            // at this point, it must be a model (json)
-            try
-            {
-                return JsonConvert.DeserializeObject(await response.Content.ReadAsStringAsync(), type, _serializerSettings);
-            }
-            catch (Exception e)
-            {
-                throw new ApiException(500, e.Message);
-            }
-        }
-
-        public string RootElement { get; set; }
-        public string Namespace { get; set; }
-        public string DateFormat { get; set; }
-
-        public string ContentType
-        {
-            get { return _contentType; }
-            set { throw new InvalidOperationException("Not allowed to set content type."); }
-        }
-    }
-    /// <summary>
-    /// Provides a default implementation of an Api client (both synchronous and asynchronous implementations),
-    /// encapsulating general REST accessor use cases.
-    /// </summary>
-    /// <remarks>
-    /// The Dispose method will manage the HttpClient lifecycle when not passed by constructor.
-    /// </remarks>
-    public partial class ApiClient : IDisposable, ISynchronousClient, IAsynchronousClient
-    {
-        private readonly string _baseUrl;
-
-        private readonly HttpClientHandler _httpClientHandler;
-        private readonly HttpClient _httpClient;
-        private readonly bool _disposeClient;
-
-        /// <summary>
-        /// Specifies the settings on a <see cref="JsonSerializer" /> object.
-        /// These settings can be adjusted to accommodate custom serialization rules.
-        /// </summary>
-        public JsonSerializerSettings SerializerSettings { get; set; } = new JsonSerializerSettings
-        {
-            // OpenAPI generated types generally hide default constructors.
-            ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor,
-            ContractResolver = new DefaultContractResolver
-            {
-                NamingStrategy = new CamelCaseNamingStrategy
-                {
-                    OverrideSpecifiedNames = false
-                }
-            }
-        };
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="ApiClient" />, defaulting to the global configurations' base url.
-        /// **IMPORTANT** This will also create an instance of HttpClient, which is less than ideal.
-        /// It's better to reuse the <see href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests#issues-with-the-original-httpclient-class-available-in-net">HttpClient and HttpClientHandler</see>.
-        /// </summary>
-        public ApiClient() :
-                 this(ManticoreSearch.Client.GlobalConfiguration.Instance.BasePath)
-        {
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="ApiClient" />.
-        /// **IMPORTANT** This will also create an instance of HttpClient, which is less than ideal.
-        /// It's better to reuse the <see href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests#issues-with-the-original-httpclient-class-available-in-net">HttpClient and HttpClientHandler</see>.
-        /// </summary>
-        /// <param name="basePath">The target service's base path in URL format.</param>
-        /// <exception cref="ArgumentException"></exception>
-        public ApiClient(string basePath)
-        {
-            if (string.IsNullOrEmpty(basePath)) throw new ArgumentException("basePath cannot be empty");
-
-            _httpClientHandler = new HttpClientHandler();
-            _httpClient = new HttpClient(_httpClientHandler, true);
-            _disposeClient = true;
-            _baseUrl = basePath;
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="ApiClient" />, defaulting to the global configurations' base url.
-        /// </summary>
-        /// <param name="client">An instance of HttpClient.</param>
-        /// <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
-        /// <exception cref="ArgumentNullException"></exception>
-        /// <remarks>
-        /// Some configuration settings will not be applied without passing an HttpClientHandler.
-        /// The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
-        /// </remarks>
-        public ApiClient(HttpClient client, HttpClientHandler handler = null) :
-                 this(client, ManticoreSearch.Client.GlobalConfiguration.Instance.BasePath, handler)
-        {
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="ApiClient" />.
-        /// </summary>
-        /// <param name="client">An instance of HttpClient.</param>
-        /// <param name="basePath">The target service's base path in URL format.</param>
-        /// <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
-        /// <exception cref="ArgumentNullException"></exception>
-        /// <exception cref="ArgumentException"></exception>
-        /// <remarks>
-        /// Some configuration settings will not be applied without passing an HttpClientHandler.
-        /// The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
-        /// </remarks>
-        public ApiClient(HttpClient client, string basePath, HttpClientHandler handler = null)
-        {
-            if (client == null) throw new ArgumentNullException("client cannot be null");
-            if (string.IsNullOrEmpty(basePath)) throw new ArgumentException("basePath cannot be empty");
-
-            _httpClientHandler = handler;
-            _httpClient = client;
-            _baseUrl = basePath;
-        }
-
-        /// <summary>
-        /// Disposes resources if they were created by us
-        /// </summary>
-        public void Dispose()
-        {
-            if(_disposeClient) {
-                _httpClient.Dispose();
-            }
-        }
-
-        /// Prepares multipart/form-data content
-        HttpContent PrepareMultipartFormDataContent(RequestOptions options)
-        {
-            string boundary = "---------" + Guid.NewGuid().ToString().ToUpperInvariant();
-            var multipartContent = new MultipartFormDataContent(boundary);
-            foreach (var formParameter in options.FormParameters)
-            {
-                multipartContent.Add(new StringContent(formParameter.Value), formParameter.Key);
-            }
-
-            if (options.FileParameters != null && options.FileParameters.Count > 0)
-            {
-                foreach (var fileParam in options.FileParameters)
-                {
-                    foreach (var file in fileParam.Value)
-                    {
-                        var content = new StreamContent(file.Content);
-                        content.Headers.ContentType = new MediaTypeHeaderValue(file.ContentType);
-                        multipartContent.Add(content, fileParam.Key, file.Name);
-                    }
-                }
-            }
-            return multipartContent;
-        }
-
-        /// <summary>
-        /// Provides all logic for constructing a new HttpRequestMessage.
-        /// At this point, all information for querying the service is known. Here, it is simply
-        /// mapped into the a HttpRequestMessage.
-        /// </summary>
-        /// <param name="method">The http verb.</param>
-        /// <param name="path">The target path (or resource).</param>
-        /// <param name="options">The additional request options.</param>
-        /// <param name="configuration">A per-request configuration object. It is assumed that any merge with
-        /// GlobalConfiguration has been done before calling this method.</param>
-        /// <returns>[private] A new HttpRequestMessage instance.</returns>
-        /// <exception cref="ArgumentNullException"></exception>
-        private HttpRequestMessage NewRequest(
-            HttpMethod method,
-            string path,
-            RequestOptions options,
-            IReadableConfiguration configuration)
-        {
-            if (path == null) throw new ArgumentNullException("path");
-            if (options == null) throw new ArgumentNullException("options");
-            if (configuration == null) throw new ArgumentNullException("configuration");
-
-            WebRequestPathBuilder builder = new WebRequestPathBuilder(_baseUrl, path);
-
-            builder.AddPathParameters(options.PathParameters);
-
-            builder.AddQueryParameters(options.QueryParameters);
-
-            HttpRequestMessage request = new HttpRequestMessage(method, builder.GetFullUri());
-
-            if (configuration.UserAgent != null)
-            {
-                request.Headers.TryAddWithoutValidation("User-Agent", configuration.UserAgent);
-            }
-
-            if (configuration.DefaultHeaders != null)
-            {
-                foreach (var headerParam in configuration.DefaultHeaders)
-                {
-                    request.Headers.Add(headerParam.Key, headerParam.Value);
-                }
-            }
-
-            if (options.HeaderParameters != null)
-            {
-                foreach (var headerParam in options.HeaderParameters)
-                {
-                    foreach (var value in headerParam.Value)
-                    {
-                        // Todo make content headers actually content headers
-                        request.Headers.TryAddWithoutValidation(headerParam.Key, value);
-                    }
-                }
-            }
-
-            List<Tuple<HttpContent, string, string>> contentList = new List<Tuple<HttpContent, string, string>>();
-
-            string contentType = null;
-            if (options.HeaderParameters != null && options.HeaderParameters.ContainsKey("Content-Type"))
-            {
-                var contentTypes = options.HeaderParameters["Content-Type"];
-                contentType = contentTypes.FirstOrDefault();
-            }
-
-            if (contentType == "multipart/form-data")
-            {
-                request.Content = PrepareMultipartFormDataContent(options);
-            }
-            else if (contentType == "application/x-www-form-urlencoded")
-            {
-                request.Content = new FormUrlEncodedContent(options.FormParameters);
-            }
-            else
-            {
-                if (options.Data != null)
-                {
-                    if (options.Data is FileParameter fp)
-                    {
-                        contentType = contentType ?? "application/octet-stream";
-
-                        var streamContent = new StreamContent(fp.Content);
-                        streamContent.Headers.ContentType = new MediaTypeHeaderValue(contentType);
-                        request.Content = streamContent;
-                    }
-                    else
-                    {
-                        var serializer = new CustomJsonCodec(SerializerSettings, configuration);
-                        string data = "";
-                        if (options.Data.GetType().ToString() == "System.String")
-                        {
-                            data = options.Data.ToString();
-                        }
-                        else
-                        {
-                            data = serializer.Serialize(options.Data);
-                        }
-                        if (contentType != "application/x-ndjson") 
-                        {
-                            contentType = "application/json";
-                        } 
-                        request.Content = new StringContent(data, new UTF8Encoding(), contentType);
-                    }
-                }
-            }
-
-
-
-            // TODO provide an alternative that allows cookies per request instead of per API client
-            if (options.Cookies != null && options.Cookies.Count > 0)
-            {
-                request.Properties["CookieContainer"] = options.Cookies;
-            }
-
-            return request;
-        }
-
-        partial void InterceptRequest(HttpRequestMessage req);
-        partial void InterceptResponse(HttpRequestMessage req, HttpResponseMessage response);
-
-        private async Task<ApiResponse<T>> ToApiResponse<T>(HttpResponseMessage response, object responseData, Uri uri)
-        {
-            T result = (T) responseData;
-            string rawContent = await response.Content.ReadAsStringAsync();
-
-            var transformed = new ApiResponse<T>(response.StatusCode, new Multimap<string, string>(), result, rawContent)
-            {
-                ErrorText = response.ReasonPhrase,
-                Cookies = new List<Cookie>()
-            };
-
-            // process response headers, e.g. Access-Control-Allow-Methods
-            if (response.Headers != null)
-            {
-                foreach (var responseHeader in response.Headers)
-                {
-                    transformed.Headers.Add(responseHeader.Key, ClientUtils.ParameterToString(responseHeader.Value));
-                }
-            }
-
-            // process response content headers, e.g. Content-Type
-            if (response.Content.Headers != null)
-            {
-                foreach (var responseHeader in response.Content.Headers)
-                {
-                    transformed.Headers.Add(responseHeader.Key, ClientUtils.ParameterToString(responseHeader.Value));
-                }
-            }
-
-            if (_httpClientHandler != null && response != null)
-            {
-                try {
-                    foreach (Cookie cookie in _httpClientHandler.CookieContainer.GetCookies(uri))
-                    {
-                        transformed.Cookies.Add(cookie);
-                    }
-                }
-                catch (PlatformNotSupportedException) {}
-            }
-
-            return transformed;
-        }
-
-        private ApiResponse<T> Exec<T>(HttpRequestMessage req, IReadableConfiguration configuration)
-        {
-            return ExecAsync<T>(req, configuration).GetAwaiter().GetResult();
-        }
-
-        private async Task<ApiResponse<T>> ExecAsync<T>(HttpRequestMessage req,
-            IReadableConfiguration configuration,
-            System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            var deserializer = new CustomJsonCodec(SerializerSettings, configuration);
-
-            var finalToken = cancellationToken;
-
-            if (configuration.Timeout > 0)
-            {
-                var tokenSource = new CancellationTokenSource(configuration.Timeout);
-                finalToken = CancellationTokenSource.CreateLinkedTokenSource(finalToken, tokenSource.Token).Token;
-            }
-
-            if (configuration.Proxy != null)
-            {
-                if(_httpClientHandler == null) throw new InvalidOperationException("Configuration `Proxy` not supported when the client is explicitly created without an HttpClientHandler, use the proper constructor.");
-                _httpClientHandler.Proxy = configuration.Proxy;
-            }
-
-            if (configuration.ClientCertificates != null)
-            {
-                if(_httpClientHandler == null) throw new InvalidOperationException("Configuration `ClientCertificates` not supported when the client is explicitly created without an HttpClientHandler, use the proper constructor.");
-                _httpClientHandler.ClientCertificates.AddRange(configuration.ClientCertificates);
-            }
-
-            var cookieContainer = req.Properties.ContainsKey("CookieContainer") ? req.Properties["CookieContainer"] as List<Cookie> : null;
-
-            if (cookieContainer != null)
-            {
-                if(_httpClientHandler == null) throw new InvalidOperationException("Request property `CookieContainer` not supported when the client is explicitly created without an HttpClientHandler, use the proper constructor.");
-                foreach (var cookie in cookieContainer)
-                {
-                    _httpClientHandler.CookieContainer.Add(cookie);
-                }
-            }
-
-            InterceptRequest(req);
-
-            HttpResponseMessage response;
-            if (RetryConfiguration.AsyncRetryPolicy != null)
-            {
-                var policy = RetryConfiguration.AsyncRetryPolicy;
-                var policyResult = await policy
-                    .ExecuteAndCaptureAsync(() => _httpClient.SendAsync(req, cancellationToken))
-                    .ConfigureAwait(false);
-                response = (policyResult.Outcome == OutcomeType.Successful) ?
-                    policyResult.Result : new HttpResponseMessage()
-                    {
-                        ReasonPhrase = policyResult.FinalException.ToString(),
-                        RequestMessage = req
-                    };
-            }
-            else
-            {
-                response = await _httpClient.SendAsync(req, cancellationToken).ConfigureAwait(false);
-            }
-
-            if (!response.IsSuccessStatusCode)
-            {
-                return await ToApiResponse<T>(response, default(T), req.RequestUri);
-            }
-
-            object responseData = await deserializer.Deserialize<T>(response);
-
-            // if the response type is oneOf/anyOf, call FromJSON to deserialize the data
-            if (typeof(ManticoreSearch.Model.AbstractOpenAPISchema).IsAssignableFrom(typeof(T)))
-            {
-                responseData = (T) typeof(T).GetMethod("FromJson").Invoke(null, new object[] { response.Content });
-            }
-            else if (typeof(T).Name == "Stream") // for binary response
-            {
-                responseData = (T) (object) await response.Content.ReadAsStreamAsync();
-            }
-
-            InterceptResponse(req, response);
-
-            return await ToApiResponse<T>(response, responseData, req.RequestUri);
-        }
-
-        #region IAsynchronousClient
-        /// <summary>
-        /// Make a HTTP GET request (async).
-        /// </summary>
-        /// <param name="path">The target path (or resource).</param>
-        /// <param name="options">The additional request options.</param>
-        /// <param name="configuration">A per-request configuration object. It is assumed that any merge with
-        /// GlobalConfiguration has been done before calling this method.</param>
-        /// <param name="cancellationToken">Token that enables callers to cancel the request.</param>
-        /// <returns>A Task containing ApiResponse</returns>
-        public Task<ApiResponse<T>> GetAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            var config = configuration ?? GlobalConfiguration.Instance;
-            return ExecAsync<T>(NewRequest(HttpMethod.Get, path, options, config), config, cancellationToken);
-        }
-
-        /// <summary>
-        /// Make a HTTP POST request (async).
-        /// </summary>
-        /// <param name="path">The target path (or resource).</param>
-        /// <param name="options">The additional request options.</param>
-        /// <param name="configuration">A per-request configuration object. It is assumed that any merge with
-        /// GlobalConfiguration has been done before calling this method.</param>
-        /// <param name="cancellationToken">Token that enables callers to cancel the request.</param>
-        /// <returns>A Task containing ApiResponse</returns>
-        public Task<ApiResponse<T>> PostAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            var config = configuration ?? GlobalConfiguration.Instance;
-            return ExecAsync<T>(NewRequest(HttpMethod.Post, path, options, config), config, cancellationToken);
-        }
-
-        /// <summary>
-        /// Make a HTTP PUT request (async).
-        /// </summary>
-        /// <param name="path">The target path (or resource).</param>
-        /// <param name="options">The additional request options.</param>
-        /// <param name="configuration">A per-request configuration object. It is assumed that any merge with
-        /// GlobalConfiguration has been done before calling this method.</param>
-        /// <param name="cancellationToken">Token that enables callers to cancel the request.</param>
-        /// <returns>A Task containing ApiResponse</returns>
-        public Task<ApiResponse<T>> PutAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            var config = configuration ?? GlobalConfiguration.Instance;
-            return ExecAsync<T>(NewRequest(HttpMethod.Put, path, options, config), config, cancellationToken);
-        }
-
-        /// <summary>
-        /// Make a HTTP DELETE request (async).
-        /// </summary>
-        /// <param name="path">The target path (or resource).</param>
-        /// <param name="options">The additional request options.</param>
-        /// <param name="configuration">A per-request configuration object. It is assumed that any merge with
-        /// GlobalConfiguration has been done before calling this method.</param>
-        /// <param name="cancellationToken">Token that enables callers to cancel the request.</param>
-        /// <returns>A Task containing ApiResponse</returns>
-        public Task<ApiResponse<T>> DeleteAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            var config = configuration ?? GlobalConfiguration.Instance;
-            return ExecAsync<T>(NewRequest(HttpMethod.Delete, path, options, config), config, cancellationToken);
-        }
-
-        /// <summary>
-        /// Make a HTTP HEAD request (async).
-        /// </summary>
-        /// <param name="path">The target path (or resource).</param>
-        /// <param name="options">The additional request options.</param>
-        /// <param name="configuration">A per-request configuration object. It is assumed that any merge with
-        /// GlobalConfiguration has been done before calling this method.</param>
-        /// <param name="cancellationToken">Token that enables callers to cancel the request.</param>
-        /// <returns>A Task containing ApiResponse</returns>
-        public Task<ApiResponse<T>> HeadAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            var config = configuration ?? GlobalConfiguration.Instance;
-            return ExecAsync<T>(NewRequest(HttpMethod.Head, path, options, config), config, cancellationToken);
-        }
-
-        /// <summary>
-        /// Make a HTTP OPTION request (async).
-        /// </summary>
-        /// <param name="path">The target path (or resource).</param>
-        /// <param name="options">The additional request options.</param>
-        /// <param name="configuration">A per-request configuration object. It is assumed that any merge with
-        /// GlobalConfiguration has been done before calling this method.</param>
-        /// <param name="cancellationToken">Token that enables callers to cancel the request.</param>
-        /// <returns>A Task containing ApiResponse</returns>
-        public Task<ApiResponse<T>> OptionsAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            var config = configuration ?? GlobalConfiguration.Instance;
-            return ExecAsync<T>(NewRequest(HttpMethod.Options, path, options, config), config, cancellationToken);
-        }
-
-        /// <summary>
-        /// Make a HTTP PATCH request (async).
-        /// </summary>
-        /// <param name="path">The target path (or resource).</param>
-        /// <param name="options">The additional request options.</param>
-        /// <param name="configuration">A per-request configuration object. It is assumed that any merge with
-        /// GlobalConfiguration has been done before calling this method.</param>
-        /// <param name="cancellationToken">Token that enables callers to cancel the request.</param>
-        /// <returns>A Task containing ApiResponse</returns>
-        public Task<ApiResponse<T>> PatchAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
-        {
-            var config = configuration ?? GlobalConfiguration.Instance;
-            return ExecAsync<T>(NewRequest(new HttpMethod("PATCH"), path, options, config), config, cancellationToken);
-        }
-        #endregion IAsynchronousClient
-
-        #region ISynchronousClient
-        /// <summary>
-        /// Make a HTTP GET request (synchronous).
-        /// </summary>
-        /// <param name="path">The target path (or resource).</param>
-        /// <param name="options">The additional request options.</param>
-        /// <param name="configuration">A per-request configuration object. It is assumed that any merge with
-        /// GlobalConfiguration has been done before calling this method.</param>
-        /// <returns>A Task containing ApiResponse</returns>
-        public ApiResponse<T> Get<T>(string path, RequestOptions options, IReadableConfiguration configuration = null)
-        {
-            var config = configuration ?? GlobalConfiguration.Instance;
-            return Exec<T>(NewRequest(HttpMethod.Get, path, options, config), config);
-        }
-
-        /// <summary>
-        /// Make a HTTP POST request (synchronous).
-        /// </summary>
-        /// <param name="path">The target path (or resource).</param>
-        /// <param name="options">The additional request options.</param>
-        /// <param name="configuration">A per-request configuration object. It is assumed that any merge with
-        /// GlobalConfiguration has been done before calling this method.</param>
-        /// <returns>A Task containing ApiResponse</returns>
-        public ApiResponse<T> Post<T>(string path, RequestOptions options, IReadableConfiguration configuration = null)
-        {
-            var config = configuration ?? GlobalConfiguration.Instance;
-            return Exec<T>(NewRequest(HttpMethod.Post, path, options, config), config);
-        }
-
-        /// <summary>
-        /// Make a HTTP PUT request (synchronous).
-        /// </summary>
-        /// <param name="path">The target path (or resource).</param>
-        /// <param name="options">The additional request options.</param>
-        /// <param name="configuration">A per-request configuration object. It is assumed that any merge with
-        /// GlobalConfiguration has been done before calling this method.</param>
-        /// <returns>A Task containing ApiResponse</returns>
-        public ApiResponse<T> Put<T>(string path, RequestOptions options, IReadableConfiguration configuration = null)
-        {
-            var config = configuration ?? GlobalConfiguration.Instance;
-            return Exec<T>(NewRequest(HttpMethod.Put, path, options, config), config);
-        }
-
-        /// <summary>
-        /// Make a HTTP DELETE request (synchronous).
-        /// </summary>
-        /// <param name="path">The target path (or resource).</param>
-        /// <param name="options">The additional request options.</param>
-        /// <param name="configuration">A per-request configuration object. It is assumed that any merge with
-        /// GlobalConfiguration has been done before calling this method.</param>
-        /// <returns>A Task containing ApiResponse</returns>
-        public ApiResponse<T> Delete<T>(string path, RequestOptions options, IReadableConfiguration configuration = null)
-        {
-            var config = configuration ?? GlobalConfiguration.Instance;
-            return Exec<T>(NewRequest(HttpMethod.Delete, path, options, config), config);
-        }
-
-        /// <summary>
-        /// Make a HTTP HEAD request (synchronous).
-        /// </summary>
-        /// <param name="path">The target path (or resource).</param>
-        /// <param name="options">The additional request options.</param>
-        /// <param name="configuration">A per-request configuration object. It is assumed that any merge with
-        /// GlobalConfiguration has been done before calling this method.</param>
-        /// <returns>A Task containing ApiResponse</returns>
-        public ApiResponse<T> Head<T>(string path, RequestOptions options, IReadableConfiguration configuration = null)
-        {
-            var config = configuration ?? GlobalConfiguration.Instance;
-            return Exec<T>(NewRequest(HttpMethod.Head, path, options, config), config);
-        }
-
-        /// <summary>
-        /// Make a HTTP OPTION request (synchronous).
-        /// </summary>
-        /// <param name="path">The target path (or resource).</param>
-        /// <param name="options">The additional request options.</param>
-        /// <param name="configuration">A per-request configuration object. It is assumed that any merge with
-        /// GlobalConfiguration has been done before calling this method.</param>
-        /// <returns>A Task containing ApiResponse</returns>
-        public ApiResponse<T> Options<T>(string path, RequestOptions options, IReadableConfiguration configuration = null)
-        {
-            var config = configuration ?? GlobalConfiguration.Instance;
-            return Exec<T>(NewRequest(HttpMethod.Options, path, options, config), config);
-        }
-
-        /// <summary>
-        /// Make a HTTP PATCH request (synchronous).
-        /// </summary>
-        /// <param name="path">The target path (or resource).</param>
-        /// <param name="options">The additional request options.</param>
-        /// <param name="configuration">A per-request configuration object. It is assumed that any merge with
-        /// GlobalConfiguration has been done before calling this method.</param>
-        /// <returns>A Task containing ApiResponse</returns>
-        public ApiResponse<T> Patch<T>(string path, RequestOptions options, IReadableConfiguration configuration = null)
-        {
-            var config = configuration ?? GlobalConfiguration.Instance;
-            return Exec<T>(NewRequest(new HttpMethod("PATCH"), path, options, config), config);
-        }
-        #endregion ISynchronousClient
-    }
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/ApiException.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/ApiException.cs
deleted file mode 100755
index eb90116..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/ApiException.cs
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-
-namespace ManticoreSearch.Client
-{
-    /// <summary>
-    /// API Exception
-    /// </summary>
-    public class ApiException : Exception
-    {
-        /// <summary>
-        /// Gets or sets the error code (HTTP status code)
-        /// </summary>
-        /// <value>The error code (HTTP status code).</value>
-        public int ErrorCode { get; set; }
-
-        /// <summary>
-        /// Gets or sets the error content (body json object)
-        /// </summary>
-        /// <value>The error content (Http response body).</value>
-        public object ErrorContent { get; private set; }
-
-        /// <summary>
-        /// Gets or sets the HTTP headers
-        /// </summary>
-        /// <value>HTTP headers</value>
-        public Multimap<string, string> Headers { get; private set; }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="ApiException"/> class.
-        /// </summary>
-        public ApiException() { }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="ApiException"/> class.
-        /// </summary>
-        /// <param name="errorCode">HTTP status code.</param>
-        /// <param name="message">Error message.</param>
-        public ApiException(int errorCode, string message) : base(message)
-        {
-            this.ErrorCode = errorCode;
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="ApiException"/> class.
-        /// </summary>
-        /// <param name="errorCode">HTTP status code.</param>
-        /// <param name="message">Error message.</param>
-        /// <param name="errorContent">Error content.</param>
-        /// <param name="headers">HTTP Headers.</param>
-        public ApiException(int errorCode, string message, object errorContent = null, Multimap<string, string> headers = null) : base(message)
-        {
-            this.ErrorCode = errorCode;
-            this.ErrorContent = errorContent;
-            this.Headers = headers;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/ApiResponse.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/ApiResponse.cs
deleted file mode 100755
index 00a7061..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/ApiResponse.cs
+++ /dev/null
@@ -1,167 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections.Generic;
-using System.Net;
-
-namespace ManticoreSearch.Client
-{
-    /// <summary>
-    /// Provides a non-generic contract for the ApiResponse wrapper.
-    /// </summary>
-    public interface IApiResponse
-    {
-        /// <summary>
-        /// The data type of <see cref="Content"/>
-        /// </summary>
-        Type ResponseType { get; }
-
-        /// <summary>
-        /// The content of this response
-        /// </summary>
-        Object Content { get; }
-
-        /// <summary>
-        /// Gets or sets the status code (HTTP status code)
-        /// </summary>
-        /// <value>The status code.</value>
-        HttpStatusCode StatusCode { get; }
-
-        /// <summary>
-        /// Gets or sets the HTTP headers
-        /// </summary>
-        /// <value>HTTP headers</value>
-        Multimap<string, string> Headers { get; }
-
-        /// <summary>
-        /// Gets or sets any error text defined by the calling client.
-        /// </summary>
-        string ErrorText { get; set; }
-
-        /// <summary>
-        /// Gets or sets any cookies passed along on the response.
-        /// </summary>
-        List<Cookie> Cookies { get; set; }
-
-        /// <summary>
-        /// The raw content of this response
-        /// </summary>
-        string RawContent { get; }
-    }
-
-    /// <summary>
-    /// API Response
-    /// </summary>
-    public class ApiResponse<T> : IApiResponse
-    {
-        #region Properties
-
-        /// <summary>
-        /// Gets or sets the status code (HTTP status code)
-        /// </summary>
-        /// <value>The status code.</value>
-        public HttpStatusCode StatusCode { get; }
-
-        /// <summary>
-        /// Gets or sets the HTTP headers
-        /// </summary>
-        /// <value>HTTP headers</value>
-        public Multimap<string, string> Headers { get; }
-
-        /// <summary>
-        /// Gets or sets the data (parsed HTTP body)
-        /// </summary>
-        /// <value>The data.</value>
-        public T Data { get; }
-
-        /// <summary>
-        /// Gets or sets any error text defined by the calling client.
-        /// </summary>
-        public string ErrorText { get; set; }
-
-        /// <summary>
-        /// Gets or sets any cookies passed along on the response.
-        /// </summary>
-        public List<Cookie> Cookies { get; set; }
-
-        /// <summary>
-        /// The content of this response
-        /// </summary>
-        public Type ResponseType
-        {
-            get { return typeof(T); }
-        }
-
-        /// <summary>
-        /// The data type of <see cref="Content"/>
-        /// </summary>
-        public object Content
-        {
-            get { return Data; }
-        }
-
-        /// <summary>
-        /// The raw content
-        /// </summary>
-        public string RawContent { get; }
-
-        #endregion Properties
-
-        #region Constructors
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="ApiResponse{T}" /> class.
-        /// </summary>
-        /// <param name="statusCode">HTTP status code.</param>
-        /// <param name="headers">HTTP headers.</param>
-        /// <param name="data">Data (parsed HTTP body)</param>
-        /// <param name="rawContent">Raw content.</param>
-        public ApiResponse(HttpStatusCode statusCode, Multimap<string, string> headers, T data, string rawContent)
-        {
-            StatusCode = statusCode;
-            Headers = headers;
-            Data = data;
-            RawContent = rawContent;
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="ApiResponse{T}" /> class.
-        /// </summary>
-        /// <param name="statusCode">HTTP status code.</param>
-        /// <param name="headers">HTTP headers.</param>
-        /// <param name="data">Data (parsed HTTP body)</param>
-        public ApiResponse(HttpStatusCode statusCode, Multimap<string, string> headers, T data) : this(statusCode, headers, data, null)
-        {
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="ApiResponse{T}" /> class.
-        /// </summary>
-        /// <param name="statusCode">HTTP status code.</param>
-        /// <param name="data">Data (parsed HTTP body)</param>
-        /// <param name="rawContent">Raw content.</param>
-        public ApiResponse(HttpStatusCode statusCode, T data, string rawContent) : this(statusCode, null, data, rawContent)
-        {
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="ApiResponse{T}" /> class.
-        /// </summary>
-        /// <param name="statusCode">HTTP status code.</param>
-        /// <param name="data">Data (parsed HTTP body)</param>
-        public ApiResponse(HttpStatusCode statusCode, T data) : this(statusCode, data, null)
-        {
-        }
-
-        #endregion Constructors
-    }
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/ClientUtils.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/ClientUtils.cs
deleted file mode 100755
index ae1bc65..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/ClientUtils.cs
+++ /dev/null
@@ -1,195 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Globalization;
-using System.IO;
-using System.Linq;
-using System.Text;
-using System.Text.RegularExpressions;
-
-namespace ManticoreSearch.Client
-{
-    /// <summary>
-    /// Utility functions providing some benefit to API client consumers.
-    /// </summary>
-    public static class ClientUtils
-    {
-        /// <summary>
-        /// Sanitize filename by removing the path
-        /// </summary>
-        /// <param name="filename">Filename</param>
-        /// <returns>Filename</returns>
-        public static string SanitizeFilename(string filename)
-        {
-            Match match = Regex.Match(filename, @".*[/\\](.*)$");
-            return match.Success ? match.Groups[1].Value : filename;
-        }
-
-        /// <summary>
-        /// Convert params to key/value pairs.
-        /// Use collectionFormat to properly format lists and collections.
-        /// </summary>
-        /// <param name="collectionFormat">The swagger-supported collection format, one of: csv, tsv, ssv, pipes, multi</param>
-        /// <param name="name">Key name.</param>
-        /// <param name="value">Value object.</param>
-        /// <returns>A multimap of keys with 1..n associated values.</returns>
-        public static Multimap<string, string> ParameterToMultiMap(string collectionFormat, string name, object value)
-        {
-            var parameters = new Multimap<string, string>();
-
-            if (value is ICollection collection && collectionFormat == "multi")
-            {
-                foreach (var item in collection)
-                {
-                    parameters.Add(name, ParameterToString(item));
-                }
-            }
-            else if (value is IDictionary dictionary)
-            {
-                if(collectionFormat == "deepObject") {
-                    foreach (DictionaryEntry entry in dictionary)
-                    {
-                        parameters.Add(name + "[" + entry.Key + "]", ParameterToString(entry.Value));
-                    }
-                }
-                else {
-                    foreach (DictionaryEntry entry in dictionary)
-                    {
-                        parameters.Add(entry.Key.ToString(), ParameterToString(entry.Value));
-                    }
-                }
-            }
-            else
-            {
-                parameters.Add(name, ParameterToString(value));
-            }
-
-            return parameters;
-        }
-
-        /// <summary>
-        /// If parameter is DateTime, output in a formatted string (default ISO 8601), customizable with Configuration.DateTime.
-        /// If parameter is a list, join the list with ",".
-        /// Otherwise just return the string.
-        /// </summary>
-        /// <param name="obj">The parameter (header, path, query, form).</param>
-        /// <param name="configuration">An optional configuration instance, providing formatting options used in processing.</param>
-        /// <returns>Formatted string.</returns>
-        public static string ParameterToString(object obj, IReadableConfiguration configuration = null)
-        {
-            if (obj is DateTime dateTime)
-                // Return a formatted date string - Can be customized with Configuration.DateTimeFormat
-                // Defaults to an ISO 8601, using the known as a Round-trip date/time pattern ("o")
-                // https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx#Anchor_8
-                // For example: 2009-06-15T13:45:30.0000000
-                return dateTime.ToString((configuration ?? GlobalConfiguration.Instance).DateTimeFormat);
-            if (obj is DateTimeOffset dateTimeOffset)
-                // Return a formatted date string - Can be customized with Configuration.DateTimeFormat
-                // Defaults to an ISO 8601, using the known as a Round-trip date/time pattern ("o")
-                // https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx#Anchor_8
-                // For example: 2009-06-15T13:45:30.0000000
-                return dateTimeOffset.ToString((configuration ?? GlobalConfiguration.Instance).DateTimeFormat);
-            if (obj is bool boolean)
-                return boolean ? "true" : "false";
-            if (obj is ICollection collection)
-                return string.Join(",", collection.Cast<object>());
-
-            return Convert.ToString(obj, CultureInfo.InvariantCulture);
-        }
-
-        /// <summary>
-        /// Encode string in base64 format.
-        /// </summary>
-        /// <param name="text">string to be encoded.</param>
-        /// <returns>Encoded string.</returns>
-        public static string Base64Encode(string text)
-        {
-            return Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes(text));
-        }
-
-        /// <summary>
-        /// Convert stream to byte array
-        /// </summary>
-        /// <param name="inputStream">Input stream to be converted</param>
-        /// <returns>Byte array</returns>
-        public static byte[] ReadAsBytes(Stream inputStream)
-        {
-            using (var ms = new MemoryStream())
-            {
-                inputStream.CopyTo(ms);
-                return ms.ToArray();
-            }
-        }
-
-        /// <summary>
-        /// Select the Content-Type header's value from the given content-type array:
-        /// if JSON type exists in the given array, use it;
-        /// otherwise use the first one defined in 'consumes'
-        /// </summary>
-        /// <param name="contentTypes">The Content-Type array to select from.</param>
-        /// <returns>The Content-Type header to use.</returns>
-        public static string SelectHeaderContentType(string[] contentTypes)
-        {
-            if (contentTypes.Length == 0)
-                return null;
-
-            foreach (var contentType in contentTypes)
-            {
-                if (IsJsonMime(contentType))
-                    return contentType;
-            }
-
-            return contentTypes[0]; // use the first content type specified in 'consumes'
-        }
-
-        /// <summary>
-        /// Select the Accept header's value from the given accepts array:
-        /// if JSON exists in the given array, use it;
-        /// otherwise use all of them (joining into a string)
-        /// </summary>
-        /// <param name="accepts">The accepts array to select from.</param>
-        /// <returns>The Accept header to use.</returns>
-        public static string SelectHeaderAccept(string[] accepts)
-        {
-            if (accepts.Length == 0)
-                return null;
-
-            if (accepts.Contains("application/json", StringComparer.OrdinalIgnoreCase))
-                return "application/json";
-
-            return string.Join(",", accepts);
-        }
-
-        /// <summary>
-        /// Provides a case-insensitive check that a provided content type is a known JSON-like content type.
-        /// </summary>
-        public static readonly Regex JsonRegex = new Regex("(?i)^(application/json|[^;/ \t]+/[^;/ \t]+[+]json)[ \t]*(;.*)?$");
-
-        /// <summary>
-        /// Check if the given MIME is a JSON MIME.
-        /// JSON MIME examples:
-        ///    application/json
-        ///    application/json; charset=UTF8
-        ///    APPLICATION/JSON
-        ///    application/vnd.company+json
-        /// </summary>
-        /// <param name="mime">MIME</param>
-        /// <returns>Returns True if MIME type is json.</returns>
-        public static bool IsJsonMime(string mime)
-        {
-            if (string.IsNullOrWhiteSpace(mime)) return false;
-
-            return JsonRegex.IsMatch(mime) || mime.Equals("application/json-patch+json");
-        }
-    }
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/Configuration.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/Configuration.cs
deleted file mode 100755
index ffd7c97..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/Configuration.cs
+++ /dev/null
@@ -1,587 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections.Concurrent;
-using System.Collections.Generic;
-using System.IO;
-using System.Linq;
-using System.Net;
-using System.Reflection;
-using System.Security.Cryptography.X509Certificates;
-using System.Text;
-
-namespace ManticoreSearch.Client
-{
-    /// <summary>
-    /// Represents a set of configuration settings
-    /// </summary>
-    public class Configuration : IReadableConfiguration
-    {
-        #region Constants
-
-        /// <summary>
-        /// Version of the package.
-        /// </summary>
-        /// <value>Version of the package.</value>
-        public const string Version = "4.0.0";
-
-        /// <summary>
-        /// Identifier for ISO 8601 DateTime Format
-        /// </summary>
-        /// <remarks>See https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx#Anchor_8 for more information.</remarks>
-        // ReSharper disable once InconsistentNaming
-        public const string ISO8601_DATETIME_FORMAT = "o";
-
-        #endregion Constants
-
-        #region Static Members
-
-        /// <summary>
-        /// Default creation of exceptions for a given method name and response object
-        /// </summary>
-        public static readonly ExceptionFactory DefaultExceptionFactory = (methodName, response) =>
-        {
-            var status = (int)response.StatusCode;
-            if (status >= 400)
-            {
-                return new ApiException(status,
-                    string.Format("Error calling {0}: {1}", methodName, response.RawContent),
-                    response.RawContent, response.Headers);
-            }
-            return null;
-        };
-
-        #endregion Static Members
-
-        #region Private Members
-
-        /// <summary>
-        /// Defines the base path of the target API server.
-        /// Example: http://localhost:3000/v1/
-        /// </summary>
-        private string _basePath;
-
-        /// <summary>
-        /// Gets or sets the API key based on the authentication name.
-        /// This is the key and value comprising the "secret" for accessing an API.
-        /// </summary>
-        /// <value>The API key.</value>
-        private IDictionary<string, string> _apiKey;
-
-        /// <summary>
-        /// Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
-        /// </summary>
-        /// <value>The prefix of the API key.</value>
-        private IDictionary<string, string> _apiKeyPrefix;
-
-        private string _dateTimeFormat = ISO8601_DATETIME_FORMAT;
-        private string _tempFolderPath = Path.GetTempPath();
-
-        /// <summary>
-        /// Gets or sets the servers defined in the OpenAPI spec.
-        /// </summary>
-        /// <value>The servers</value>
-        private IList<IReadOnlyDictionary<string, object>> _servers;
-
-        /// <summary>
-        /// Gets or sets the operation servers defined in the OpenAPI spec.
-        /// </summary>
-        /// <value>The operation servers</value>
-        private IReadOnlyDictionary<string, List<IReadOnlyDictionary<string, object>>> _operationServers;
-
-        #endregion Private Members
-
-        #region Constructors
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="Configuration" /> class
-        /// </summary>
-        [System.Diagnostics.CodeAnalysis.SuppressMessage("ReSharper", "VirtualMemberCallInConstructor")]
-        public Configuration()
-        {
-            Proxy = null;
-            UserAgent = "OpenAPI-Generator/4.0.0/csharp";
-            BasePath = "http://localhost:9408";
-            DefaultHeaders = new ConcurrentDictionary<string, string>();
-            ApiKey = new ConcurrentDictionary<string, string>();
-            ApiKeyPrefix = new ConcurrentDictionary<string, string>();
-            Servers = new List<IReadOnlyDictionary<string, object>>()
-            {
-                {
-                    new Dictionary<string, object> {
-                        {"url", "http://localhost:9408"},
-                        {"description", "Default Manticore Search HTTP"},
-                    }
-                }
-            };
-            OperationServers = new Dictionary<string, List<IReadOnlyDictionary<string, object>>>()
-            {
-            };
-
-            // Setting Timeout has side effects (forces ApiClient creation).
-            Timeout = 100000;
-        }
-
-        /// <summary>
-        /// Initializes a new instance of the <see cref="Configuration" /> class
-        /// </summary>
-        [System.Diagnostics.CodeAnalysis.SuppressMessage("ReSharper", "VirtualMemberCallInConstructor")]
-        public Configuration(
-            IDictionary<string, string> defaultHeaders,
-            IDictionary<string, string> apiKey,
-            IDictionary<string, string> apiKeyPrefix,
-            string basePath = "http://localhost:9408") : this()
-        {
-            if (string.IsNullOrWhiteSpace(basePath))
-                throw new ArgumentException("The provided basePath is invalid.", "basePath");
-            if (defaultHeaders == null)
-                throw new ArgumentNullException("defaultHeaders");
-            if (apiKey == null)
-                throw new ArgumentNullException("apiKey");
-            if (apiKeyPrefix == null)
-                throw new ArgumentNullException("apiKeyPrefix");
-
-            BasePath = basePath;
-
-            foreach (var keyValuePair in defaultHeaders)
-            {
-                DefaultHeaders.Add(keyValuePair);
-            }
-
-            foreach (var keyValuePair in apiKey)
-            {
-                ApiKey.Add(keyValuePair);
-            }
-
-            foreach (var keyValuePair in apiKeyPrefix)
-            {
-                ApiKeyPrefix.Add(keyValuePair);
-            }
-        }
-
-        #endregion Constructors
-
-        #region Properties
-
-        /// <summary>
-        /// Gets or sets the base path for API access.
-        /// </summary>
-        public virtual string BasePath {
-            get { return _basePath; }
-            set { _basePath = value; }
-        }
-
-        /// <summary>
-        /// Gets or sets the default header.
-        /// </summary>
-        [Obsolete("Use DefaultHeaders instead.")]
-        public virtual IDictionary<string, string> DefaultHeader
-        {
-            get
-            {
-                return DefaultHeaders;
-            }
-            set
-            {
-                DefaultHeaders = value;
-            }
-        }
-
-        /// <summary>
-        /// Gets or sets the default headers.
-        /// </summary>
-        public virtual IDictionary<string, string> DefaultHeaders { get; set; }
-
-        /// <summary>
-        /// Gets or sets the HTTP timeout (milliseconds) of ApiClient. Default to 100000 milliseconds.
-        /// </summary>
-        public virtual int Timeout { get; set; }
-
-        /// <summary>
-        /// Gets or sets the proxy
-        /// </summary>
-        /// <value>Proxy.</value>
-        public virtual WebProxy Proxy { get; set; }
-
-        /// <summary>
-        /// Gets or sets the HTTP user agent.
-        /// </summary>
-        /// <value>Http user agent.</value>
-        public virtual string UserAgent { get; set; }
-
-        /// <summary>
-        /// Gets or sets the username (HTTP basic authentication).
-        /// </summary>
-        /// <value>The username.</value>
-        public virtual string Username { get; set; }
-
-        /// <summary>
-        /// Gets or sets the password (HTTP basic authentication).
-        /// </summary>
-        /// <value>The password.</value>
-        public virtual string Password { get; set; }
-
-        /// <summary>
-        /// Gets the API key with prefix.
-        /// </summary>
-        /// <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
-        /// <returns>API key with prefix.</returns>
-        public string GetApiKeyWithPrefix(string apiKeyIdentifier)
-        {
-            string apiKeyValue;
-            ApiKey.TryGetValue(apiKeyIdentifier, out apiKeyValue);
-            string apiKeyPrefix;
-            if (ApiKeyPrefix.TryGetValue(apiKeyIdentifier, out apiKeyPrefix))
-            {
-                return apiKeyPrefix + " " + apiKeyValue;
-            }
-
-            return apiKeyValue;
-        }
-
-        /// <summary>
-        /// Gets or sets certificate collection to be sent with requests.
-        /// </summary>
-        /// <value>X509 Certificate collection.</value>
-        public X509CertificateCollection ClientCertificates { get; set; }
-
-        /// <summary>
-        /// Gets or sets the access token for OAuth2 authentication.
-        ///
-        /// This helper property simplifies code generation.
-        /// </summary>
-        /// <value>The access token.</value>
-        public virtual string AccessToken { get; set; }
-
-        /// <summary>
-        /// Gets or sets the temporary folder path to store the files downloaded from the server.
-        /// </summary>
-        /// <value>Folder path.</value>
-        public virtual string TempFolderPath
-        {
-            get { return _tempFolderPath; }
-
-            set
-            {
-                if (string.IsNullOrEmpty(value))
-                {
-                    _tempFolderPath = Path.GetTempPath();
-                    return;
-                }
-
-                // create the directory if it does not exist
-                if (!Directory.Exists(value))
-                {
-                    Directory.CreateDirectory(value);
-                }
-
-                // check if the path contains directory separator at the end
-                if (value[value.Length - 1] == Path.DirectorySeparatorChar)
-                {
-                    _tempFolderPath = value;
-                }
-                else
-                {
-                    _tempFolderPath = value + Path.DirectorySeparatorChar;
-                }
-            }
-        }
-
-        /// <summary>
-        /// Gets or sets the date time format used when serializing in the ApiClient
-        /// By default, it's set to ISO 8601 - "o", for others see:
-        /// https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx
-        /// and https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx
-        /// No validation is done to ensure that the string you're providing is valid
-        /// </summary>
-        /// <value>The DateTimeFormat string</value>
-        public virtual string DateTimeFormat
-        {
-            get { return _dateTimeFormat; }
-            set
-            {
-                if (string.IsNullOrEmpty(value))
-                {
-                    // Never allow a blank or null string, go back to the default
-                    _dateTimeFormat = ISO8601_DATETIME_FORMAT;
-                    return;
-                }
-
-                // Caution, no validation when you choose date time format other than ISO 8601
-                // Take a look at the above links
-                _dateTimeFormat = value;
-            }
-        }
-
-        /// <summary>
-        /// Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
-        ///
-        /// Whatever you set here will be prepended to the value defined in AddApiKey.
-        ///
-        /// An example invocation here might be:
-        /// <example>
-        /// ApiKeyPrefix["Authorization"] = "Bearer";
-        /// </example>
-        /// … where ApiKey["Authorization"] would then be used to set the value of your bearer token.
-        ///
-        /// <remarks>
-        /// OAuth2 workflows should set tokens via AccessToken.
-        /// </remarks>
-        /// </summary>
-        /// <value>The prefix of the API key.</value>
-        public virtual IDictionary<string, string> ApiKeyPrefix
-        {
-            get { return _apiKeyPrefix; }
-            set
-            {
-                if (value == null)
-                {
-                    throw new InvalidOperationException("ApiKeyPrefix collection may not be null.");
-                }
-                _apiKeyPrefix = value;
-            }
-        }
-
-        /// <summary>
-        /// Gets or sets the API key based on the authentication name.
-        /// </summary>
-        /// <value>The API key.</value>
-        public virtual IDictionary<string, string> ApiKey
-        {
-            get { return _apiKey; }
-            set
-            {
-                if (value == null)
-                {
-                    throw new InvalidOperationException("ApiKey collection may not be null.");
-                }
-                _apiKey = value;
-            }
-        }
-
-        /// <summary>
-        /// Gets or sets the servers.
-        /// </summary>
-        /// <value>The servers.</value>
-        public virtual IList<IReadOnlyDictionary<string, object>> Servers
-        {
-            get { return _servers; }
-            set
-            {
-                if (value == null)
-                {
-                    throw new InvalidOperationException("Servers may not be null.");
-                }
-                _servers = value;
-            }
-        }
-
-        /// <summary>
-        /// Gets or sets the operation servers.
-        /// </summary>
-        /// <value>The operation servers.</value>
-        public virtual IReadOnlyDictionary<string, List<IReadOnlyDictionary<string, object>>> OperationServers
-        {
-            get { return _operationServers; }
-            set
-            {
-                if (value == null)
-                {
-                    throw new InvalidOperationException("Operation servers may not be null.");
-                }
-                _operationServers = value;
-            }
-        }
-
-        /// <summary>
-        /// Returns URL based on server settings without providing values
-        /// for the variables
-        /// </summary>
-        /// <param name="index">Array index of the server settings.</param>
-        /// <return>The server URL.</return>
-        public string GetServerUrl(int index)
-        {
-            return GetServerUrl(Servers, index, null);
-        }
-
-        /// <summary>
-        /// Returns URL based on server settings.
-        /// </summary>
-        /// <param name="index">Array index of the server settings.</param>
-        /// <param name="inputVariables">Dictionary of the variables and the corresponding values.</param>
-        /// <return>The server URL.</return>
-        public string GetServerUrl(int index, Dictionary<string, string> inputVariables)
-        {
-            return GetServerUrl(Servers, index, inputVariables);
-        }
-
-        /// <summary>
-        /// Returns URL based on operation server settings.
-        /// </summary>
-        /// <param name="operation">Operation associated with the request path.</param>
-        /// <param name="index">Array index of the server settings.</param>
-        /// <return>The operation server URL.</return>
-        public string GetOperationServerUrl(string operation, int index)
-        {
-            return GetOperationServerUrl(operation, index, null);
-        }
-
-        /// <summary>
-        /// Returns URL based on operation server settings.
-        /// </summary>
-        /// <param name="operation">Operation associated with the request path.</param>
-        /// <param name="index">Array index of the server settings.</param>
-        /// <param name="inputVariables">Dictionary of the variables and the corresponding values.</param>
-        /// <return>The operation server URL.</return>
-        public string GetOperationServerUrl(string operation, int index, Dictionary<string, string> inputVariables)
-        {
-            if (OperationServers.TryGetValue(operation, out var operationServer))
-            {
-                return GetServerUrl(operationServer, index, inputVariables);
-            }
-
-            return null;
-        }
-
-        /// <summary>
-        /// Returns URL based on server settings.
-        /// </summary>
-        /// <param name="servers">Dictionary of server settings.</param>
-        /// <param name="index">Array index of the server settings.</param>
-        /// <param name="inputVariables">Dictionary of the variables and the corresponding values.</param>
-        /// <return>The server URL.</return>
-        private string GetServerUrl(IList<IReadOnlyDictionary<string, object>> servers, int index, Dictionary<string, string> inputVariables)
-        {
-            if (index < 0 || index >= servers.Count)
-            {
-                throw new InvalidOperationException($"Invalid index {index} when selecting the server. Must be less than {servers.Count}.");
-            }
-
-            if (inputVariables == null)
-            {
-                inputVariables = new Dictionary<string, string>();
-            }
-
-            IReadOnlyDictionary<string, object> server = servers[index];
-            string url = (string)server["url"];
-
-            if (server.ContainsKey("variables"))
-            {
-                // go through each variable and assign a value
-                foreach (KeyValuePair<string, object> variable in (IReadOnlyDictionary<string, object>)server["variables"])
-                {
-
-                    IReadOnlyDictionary<string, object> serverVariables = (IReadOnlyDictionary<string, object>)(variable.Value);
-
-                    if (inputVariables.ContainsKey(variable.Key))
-                    {
-                        if (((List<string>)serverVariables["enum_values"]).Contains(inputVariables[variable.Key]))
-                        {
-                            url = url.Replace("{" + variable.Key + "}", inputVariables[variable.Key]);
-                        }
-                        else
-                        {
-                            throw new InvalidOperationException($"The variable `{variable.Key}` in the server URL has invalid value #{inputVariables[variable.Key]}. Must be {(List<string>)serverVariables["enum_values"]}");
-                        }
-                    }
-                    else
-                    {
-                        // use default value
-                        url = url.Replace("{" + variable.Key + "}", (string)serverVariables["default_value"]);
-                    }
-                }
-            }
-
-            return url;
-        }
-
-        #endregion Properties
-
-        #region Methods
-
-        /// <summary>
-        /// Returns a string with essential information for debugging.
-        /// </summary>
-        public static string ToDebugReport()
-        {
-            string report = "C# SDK (ManticoreSearch) Debug Report:\n";
-            report += "    OS: " + System.Environment.OSVersion + "\n";
-            report += "    .NET Framework Version: " + System.Environment.Version  + "\n";
-            report += "    Version of the API: 3.3.1\n";
-            report += "    SDK Package Version: 4.0.0\n";
-
-            return report;
-        }
-
-        /// <summary>
-        /// Add Api Key Header.
-        /// </summary>
-        /// <param name="key">Api Key name.</param>
-        /// <param name="value">Api Key value.</param>
-        /// <returns></returns>
-        public void AddApiKey(string key, string value)
-        {
-            ApiKey[key] = value;
-        }
-
-        /// <summary>
-        /// Sets the API key prefix.
-        /// </summary>
-        /// <param name="key">Api Key name.</param>
-        /// <param name="value">Api Key value.</param>
-        public void AddApiKeyPrefix(string key, string value)
-        {
-            ApiKeyPrefix[key] = value;
-        }
-
-        #endregion Methods
-
-        #region Static Members
-        /// <summary>
-        /// Merge configurations.
-        /// </summary>
-        /// <param name="first">First configuration.</param>
-        /// <param name="second">Second configuration.</param>
-        /// <return>Merged configuration.</return>
-        public static IReadableConfiguration MergeConfigurations(IReadableConfiguration first, IReadableConfiguration second)
-        {
-            if (second == null) return first ?? GlobalConfiguration.Instance;
-
-            Dictionary<string, string> apiKey = first.ApiKey.ToDictionary(kvp => kvp.Key, kvp => kvp.Value);
-            Dictionary<string, string> apiKeyPrefix = first.ApiKeyPrefix.ToDictionary(kvp => kvp.Key, kvp => kvp.Value);
-            Dictionary<string, string> defaultHeaders = first.DefaultHeaders.ToDictionary(kvp => kvp.Key, kvp => kvp.Value);
-
-            foreach (var kvp in second.ApiKey) apiKey[kvp.Key] = kvp.Value;
-            foreach (var kvp in second.ApiKeyPrefix) apiKeyPrefix[kvp.Key] = kvp.Value;
-            foreach (var kvp in second.DefaultHeaders) defaultHeaders[kvp.Key] = kvp.Value;
-
-            var config = new Configuration
-            {
-                ApiKey = apiKey,
-                ApiKeyPrefix = apiKeyPrefix,
-                DefaultHeaders = defaultHeaders,
-                BasePath = second.BasePath ?? first.BasePath,
-                Timeout = second.Timeout,
-                Proxy = second.Proxy ?? first.Proxy,
-                UserAgent = second.UserAgent ?? first.UserAgent,
-                Username = second.Username ?? first.Username,
-                Password = second.Password ?? first.Password,
-                AccessToken = second.AccessToken ?? first.AccessToken,
-                TempFolderPath = second.TempFolderPath ?? first.TempFolderPath,
-                DateTimeFormat = second.DateTimeFormat ?? first.DateTimeFormat,
-                ClientCertificates = second.ClientCertificates ?? first.ClientCertificates,
-            };
-            return config;
-        }
-        #endregion Static Members
-    }
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/ExceptionFactory.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/ExceptionFactory.cs
deleted file mode 100755
index 12831f9..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/ExceptionFactory.cs
+++ /dev/null
@@ -1,23 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-
-namespace ManticoreSearch.Client
-{
-    /// <summary>
-    /// A delegate to ExceptionFactory method
-    /// </summary>
-    /// <param name="methodName">Method name</param>
-    /// <param name="response">Response</param>
-    /// <returns>Exceptions</returns>
-    public delegate Exception ExceptionFactory(string methodName, IApiResponse response);
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/FileParameter.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/FileParameter.cs
deleted file mode 100755
index 42b29e6..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/FileParameter.cs
+++ /dev/null
@@ -1,81 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System.IO;
-
-namespace ManticoreSearch.Client
-{
-
-    /// <summary>
-    /// Represents a File passed to the API as a Parameter, allows using different backends for files
-    /// </summary>
-    public class FileParameter
-    {
-        /// <summary>
-        /// The filename
-        /// </summary>
-        public string Name { get; set; } = "no_name_provided";
-
-        /// <summary>
-        /// The content type of the file
-        /// </summary>
-        public string ContentType { get; set; } = "application/octet-stream";
-
-        /// <summary>
-        /// The content of the file
-        /// </summary>
-        public Stream Content { get; set; }
-
-        /// <summary>
-        /// Construct a FileParameter just from the contents, will extract the filename from a filestream
-        /// </summary>
-        /// <param name="content"> The file content </param>
-        public FileParameter(Stream content)
-        {
-            if (content is FileStream fs)
-            {
-                Name = fs.Name;
-            }
-            Content = content;
-        }
-
-        /// <summary>
-        /// Construct a FileParameter from name and content
-        /// </summary>
-        /// <param name="filename">The filename</param>
-        /// <param name="content">The file content</param>
-        public FileParameter(string filename, Stream content)
-        {
-            Name = filename;
-            Content = content;
-        }
-
-        /// <summary>
-        /// Construct a FileParameter from name and content
-        /// </summary>
-        /// <param name="filename">The filename</param>
-        /// <param name="contentType">The content type of the file</param>
-        /// <param name="content">The file content</param>
-        public FileParameter(string filename, string contentType, Stream content)
-        {
-            Name = filename;
-            ContentType = contentType;
-            Content = content;
-        }
-
-        /// <summary>
-        /// Implicit conversion of stream to file parameter. Useful for backwards compatibility.
-        /// </summary>
-        /// <param name="s">Stream to convert</param>
-        /// <returns>FileParameter</returns>
-        public static implicit operator FileParameter(Stream s) => new FileParameter(s);
-    }
-}
\ No newline at end of file
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/GlobalConfiguration.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/GlobalConfiguration.cs
deleted file mode 100755
index e3a397f..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/GlobalConfiguration.cs
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System.Collections.Generic;
-
-namespace ManticoreSearch.Client
-{
-    /// <summary>
-    /// <see cref="GlobalConfiguration"/> provides a compile-time extension point for globally configuring
-    /// API Clients.
-    /// </summary>
-    /// <remarks>
-    /// A customized implementation via partial class may reside in another file and may
-    /// be excluded from automatic generation via a .openapi-generator-ignore file.
-    /// </remarks>
-    public partial class GlobalConfiguration : Configuration
-    {
-        #region Private Members
-
-        private static readonly object GlobalConfigSync = new { };
-        private static IReadableConfiguration _globalConfiguration;
-
-        #endregion Private Members
-
-        #region Constructors
-
-        /// <inheritdoc />
-        private GlobalConfiguration()
-        {
-        }
-
-        /// <inheritdoc />
-        public GlobalConfiguration(IDictionary<string, string> defaultHeader, IDictionary<string, string> apiKey, IDictionary<string, string> apiKeyPrefix, string basePath = "http://localhost:3000/api") : base(defaultHeader, apiKey, apiKeyPrefix, basePath)
-        {
-        }
-
-        static GlobalConfiguration()
-        {
-            Instance = new GlobalConfiguration();
-        }
-
-        #endregion Constructors
-
-        /// <summary>
-        /// Gets or sets the default Configuration.
-        /// </summary>
-        /// <value>Configuration.</value>
-        public static IReadableConfiguration Instance
-        {
-            get { return _globalConfiguration; }
-            set
-            {
-                lock (GlobalConfigSync)
-                {
-                    _globalConfiguration = value;
-                }
-            }
-        }
-    }
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/IApiAccessor.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/IApiAccessor.cs
deleted file mode 100755
index 72c5a33..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/IApiAccessor.cs
+++ /dev/null
@@ -1,38 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-
-namespace ManticoreSearch.Client
-{
-    /// <summary>
-    /// Represents configuration aspects required to interact with the API endpoints.
-    /// </summary>
-    public interface IApiAccessor
-    {
-        /// <summary>
-        /// Gets or sets the configuration object
-        /// </summary>
-        /// <value>An instance of the Configuration</value>
-        IReadableConfiguration Configuration { get; set; }
-
-        /// <summary>
-        /// Gets the base path of the API client.
-        /// </summary>
-        /// <value>The base path</value>
-        string GetBasePath();
-
-        /// <summary>
-        /// Provides a factory method hook for the creation of exceptions.
-        /// </summary>
-        ExceptionFactory ExceptionFactory { get; set; }
-    }
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/IAsynchronousClient.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/IAsynchronousClient.cs
deleted file mode 100755
index 1bf7353..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/IAsynchronousClient.cs
+++ /dev/null
@@ -1,101 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Threading.Tasks;
-
-namespace ManticoreSearch.Client
-{
-    /// <summary>
-    /// Contract for Asynchronous RESTful API interactions.
-    ///
-    /// This interface allows consumers to provide a custom API accessor client.
-    /// </summary>
-    public interface IAsynchronousClient
-    {
-        /// <summary>
-        /// Executes a non-blocking call to some <paramref name="path"/> using the GET http verb.
-        /// </summary>
-        /// <param name="path">The relative path to invoke.</param>
-        /// <param name="options">The request parameters to pass along to the client.</param>
-        /// <param name="configuration">Per-request configurable settings.</param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <typeparam name="T">The return type.</typeparam>
-        /// <returns>A task eventually representing the response data, decorated with <see cref="ApiResponse{T}"/></returns>
-        Task<ApiResponse<T>> GetAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-
-        /// <summary>
-        /// Executes a non-blocking call to some <paramref name="path"/> using the POST http verb.
-        /// </summary>
-        /// <param name="path">The relative path to invoke.</param>
-        /// <param name="options">The request parameters to pass along to the client.</param>
-        /// <param name="configuration">Per-request configurable settings.</param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <typeparam name="T">The return type.</typeparam>
-        /// <returns>A task eventually representing the response data, decorated with <see cref="ApiResponse{T}"/></returns>
-        Task<ApiResponse<T>> PostAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-
-        /// <summary>
-        /// Executes a non-blocking call to some <paramref name="path"/> using the PUT http verb.
-        /// </summary>
-        /// <param name="path">The relative path to invoke.</param>
-        /// <param name="options">The request parameters to pass along to the client.</param>
-        /// <param name="configuration">Per-request configurable settings.</param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <typeparam name="T">The return type.</typeparam>
-        /// <returns>A task eventually representing the response data, decorated with <see cref="ApiResponse{T}"/></returns>
-        Task<ApiResponse<T>> PutAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-
-        /// <summary>
-        /// Executes a non-blocking call to some <paramref name="path"/> using the DELETE http verb.
-        /// </summary>
-        /// <param name="path">The relative path to invoke.</param>
-        /// <param name="options">The request parameters to pass along to the client.</param>
-        /// <param name="configuration">Per-request configurable settings.</param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <typeparam name="T">The return type.</typeparam>
-        /// <returns>A task eventually representing the response data, decorated with <see cref="ApiResponse{T}"/></returns>
-        Task<ApiResponse<T>> DeleteAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-
-        /// <summary>
-        /// Executes a non-blocking call to some <paramref name="path"/> using the HEAD http verb.
-        /// </summary>
-        /// <param name="path">The relative path to invoke.</param>
-        /// <param name="options">The request parameters to pass along to the client.</param>
-        /// <param name="configuration">Per-request configurable settings.</param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <typeparam name="T">The return type.</typeparam>
-        /// <returns>A task eventually representing the response data, decorated with <see cref="ApiResponse{T}"/></returns>
-        Task<ApiResponse<T>> HeadAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-
-        /// <summary>
-        /// Executes a non-blocking call to some <paramref name="path"/> using the OPTIONS http verb.
-        /// </summary>
-        /// <param name="path">The relative path to invoke.</param>
-        /// <param name="options">The request parameters to pass along to the client.</param>
-        /// <param name="configuration">Per-request configurable settings.</param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <typeparam name="T">The return type.</typeparam>
-        /// <returns>A task eventually representing the response data, decorated with <see cref="ApiResponse{T}"/></returns>
-        Task<ApiResponse<T>> OptionsAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-
-        /// <summary>
-        /// Executes a non-blocking call to some <paramref name="path"/> using the PATCH http verb.
-        /// </summary>
-        /// <param name="path">The relative path to invoke.</param>
-        /// <param name="options">The request parameters to pass along to the client.</param>
-        /// <param name="configuration">Per-request configurable settings.</param>
-        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
-        /// <typeparam name="T">The return type.</typeparam>
-        /// <returns>A task eventually representing the response data, decorated with <see cref="ApiResponse{T}"/></returns>
-        Task<ApiResponse<T>> PatchAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
-    }
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/IReadableConfiguration.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/IReadableConfiguration.cs
deleted file mode 100755
index 4e785e3..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/IReadableConfiguration.cs
+++ /dev/null
@@ -1,130 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections.Generic;
-using System.Net;
-using System.Security.Cryptography.X509Certificates;
-
-namespace ManticoreSearch.Client
-{
-    /// <summary>
-    /// Represents a readable-only configuration contract.
-    /// </summary>
-    public interface IReadableConfiguration
-    {
-        /// <summary>
-        /// Gets the access token.
-        /// </summary>
-        /// <value>Access token.</value>
-        string AccessToken { get; }
-
-        /// <summary>
-        /// Gets the API key.
-        /// </summary>
-        /// <value>API key.</value>
-        IDictionary<string, string> ApiKey { get; }
-
-        /// <summary>
-        /// Gets the API key prefix.
-        /// </summary>
-        /// <value>API key prefix.</value>
-        IDictionary<string, string> ApiKeyPrefix { get; }
-
-        /// <summary>
-        /// Gets the base path.
-        /// </summary>
-        /// <value>Base path.</value>
-        string BasePath { get; }
-
-        /// <summary>
-        /// Gets the date time format.
-        /// </summary>
-        /// <value>Date time format.</value>
-        string DateTimeFormat { get; }
-
-        /// <summary>
-        /// Gets the default header.
-        /// </summary>
-        /// <value>Default header.</value>
-        [Obsolete("Use DefaultHeaders instead.")]
-        IDictionary<string, string> DefaultHeader { get; }
-
-        /// <summary>
-        /// Gets the default headers.
-        /// </summary>
-        /// <value>Default headers.</value>
-        IDictionary<string, string> DefaultHeaders { get; }
-
-        /// <summary>
-        /// Gets the temp folder path.
-        /// </summary>
-        /// <value>Temp folder path.</value>
-        string TempFolderPath { get; }
-
-        /// <summary>
-        /// Gets the HTTP connection timeout (in milliseconds)
-        /// </summary>
-        /// <value>HTTP connection timeout.</value>
-        int Timeout { get; }
-
-        /// <summary>
-        /// Gets the proxy.
-        /// </summary>
-        /// <value>Proxy.</value>
-        WebProxy Proxy { get; }
-
-        /// <summary>
-        /// Gets the user agent.
-        /// </summary>
-        /// <value>User agent.</value>
-        string UserAgent { get; }
-
-        /// <summary>
-        /// Gets the username.
-        /// </summary>
-        /// <value>Username.</value>
-        string Username { get; }
-
-        /// <summary>
-        /// Gets the password.
-        /// </summary>
-        /// <value>Password.</value>
-        string Password { get; }
-
-        /// <summary>
-        /// Get the servers associated with the operation.
-        /// </summary>
-        /// <value>Operation servers.</value>
-        IReadOnlyDictionary<string, List<IReadOnlyDictionary<string, object>>> OperationServers { get; }
-
-        /// <summary>
-        /// Gets the API key with prefix.
-        /// </summary>
-        /// <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
-        /// <returns>API key with prefix.</returns>
-        string GetApiKeyWithPrefix(string apiKeyIdentifier);
-
-        /// <summary>
-        /// Gets the Operation server url at the provided index.
-        /// </summary>
-        /// <param name="operation">Operation server name.</param>
-        /// <param name="index">Index of the operation server settings.</param>
-        /// <returns></returns>
-        string GetOperationServerUrl(string operation, int index);
-
-        /// <summary>
-        /// Gets certificate collection to be sent with requests.
-        /// </summary>
-        /// <value>X509 Certificate collection.</value>
-        X509CertificateCollection ClientCertificates { get; }
-    }
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/ISynchronousClient.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/ISynchronousClient.cs
deleted file mode 100755
index 12c314f..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/ISynchronousClient.cs
+++ /dev/null
@@ -1,94 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.IO;
-
-namespace ManticoreSearch.Client
-{
-    /// <summary>
-    /// Contract for Synchronous RESTful API interactions.
-    ///
-    /// This interface allows consumers to provide a custom API accessor client.
-    /// </summary>
-    public interface ISynchronousClient
-    {
-        /// <summary>
-        /// Executes a blocking call to some <paramref name="path"/> using the GET http verb.
-        /// </summary>
-        /// <param name="path">The relative path to invoke.</param>
-        /// <param name="options">The request parameters to pass along to the client.</param>
-        /// <param name="configuration">Per-request configurable settings.</param>
-        /// <typeparam name="T">The return type.</typeparam>
-        /// <returns>The response data, decorated with <see cref="ApiResponse{T}"/></returns>
-        ApiResponse<T> Get<T>(string path, RequestOptions options, IReadableConfiguration configuration = null);
-
-        /// <summary>
-        /// Executes a blocking call to some <paramref name="path"/> using the POST http verb.
-        /// </summary>
-        /// <param name="path">The relative path to invoke.</param>
-        /// <param name="options">The request parameters to pass along to the client.</param>
-        /// <param name="configuration">Per-request configurable settings.</param>
-        /// <typeparam name="T">The return type.</typeparam>
-        /// <returns>The response data, decorated with <see cref="ApiResponse{T}"/></returns>
-        ApiResponse<T> Post<T>(string path, RequestOptions options, IReadableConfiguration configuration = null);
-
-        /// <summary>
-        /// Executes a blocking call to some <paramref name="path"/> using the PUT http verb.
-        /// </summary>
-        /// <param name="path">The relative path to invoke.</param>
-        /// <param name="options">The request parameters to pass along to the client.</param>
-        /// <param name="configuration">Per-request configurable settings.</param>
-        /// <typeparam name="T">The return type.</typeparam>
-        /// <returns>The response data, decorated with <see cref="ApiResponse{T}"/></returns>
-        ApiResponse<T> Put<T>(string path, RequestOptions options, IReadableConfiguration configuration = null);
-
-        /// <summary>
-        /// Executes a blocking call to some <paramref name="path"/> using the DELETE http verb.
-        /// </summary>
-        /// <param name="path">The relative path to invoke.</param>
-        /// <param name="options">The request parameters to pass along to the client.</param>
-        /// <param name="configuration">Per-request configurable settings.</param>
-        /// <typeparam name="T">The return type.</typeparam>
-        /// <returns>The response data, decorated with <see cref="ApiResponse{T}"/></returns>
-        ApiResponse<T> Delete<T>(string path, RequestOptions options, IReadableConfiguration configuration = null);
-
-        /// <summary>
-        /// Executes a blocking call to some <paramref name="path"/> using the HEAD http verb.
-        /// </summary>
-        /// <param name="path">The relative path to invoke.</param>
-        /// <param name="options">The request parameters to pass along to the client.</param>
-        /// <param name="configuration">Per-request configurable settings.</param>
-        /// <typeparam name="T">The return type.</typeparam>
-        /// <returns>The response data, decorated with <see cref="ApiResponse{T}"/></returns>
-        ApiResponse<T> Head<T>(string path, RequestOptions options, IReadableConfiguration configuration = null);
-
-        /// <summary>
-        /// Executes a blocking call to some <paramref name="path"/> using the OPTIONS http verb.
-        /// </summary>
-        /// <param name="path">The relative path to invoke.</param>
-        /// <param name="options">The request parameters to pass along to the client.</param>
-        /// <param name="configuration">Per-request configurable settings.</param>
-        /// <typeparam name="T">The return type.</typeparam>
-        /// <returns>The response data, decorated with <see cref="ApiResponse{T}"/></returns>
-        ApiResponse<T> Options<T>(string path, RequestOptions options, IReadableConfiguration configuration = null);
-
-        /// <summary>
-        /// Executes a blocking call to some <paramref name="path"/> using the PATCH http verb.
-        /// </summary>
-        /// <param name="path">The relative path to invoke.</param>
-        /// <param name="options">The request parameters to pass along to the client.</param>
-        /// <param name="configuration">Per-request configurable settings.</param>
-        /// <typeparam name="T">The return type.</typeparam>
-        /// <returns>The response data, decorated with <see cref="ApiResponse{T}"/></returns>
-        ApiResponse<T> Patch<T>(string path, RequestOptions options, IReadableConfiguration configuration = null);
-    }
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/Multimap.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/Multimap.cs
deleted file mode 100755
index e22f889..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/Multimap.cs
+++ /dev/null
@@ -1,296 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-
-namespace ManticoreSearch.Client
-{
-    /// <summary>
-    /// A dictionary in which one key has many associated values.
-    /// </summary>
-    /// <typeparam name="TKey">The type of the key</typeparam>
-    /// <typeparam name="TValue">The type of the value associated with the key.</typeparam>
-    public class Multimap<TKey, TValue> : IDictionary<TKey, IList<TValue>>
-    {
-        #region Private Fields
-
-        private readonly Dictionary<TKey, IList<TValue>> _dictionary;
-
-        #endregion Private Fields
-
-        #region Constructors
-
-        /// <summary>
-        /// Empty Constructor.
-        /// </summary>
-        public Multimap()
-        {
-            _dictionary = new Dictionary<TKey, IList<TValue>>();
-        }
-
-        /// <summary>
-        /// Constructor with comparer.
-        /// </summary>
-        /// <param name="comparer"></param>
-        public Multimap(IEqualityComparer<TKey> comparer)
-        {
-            _dictionary = new Dictionary<TKey, IList<TValue>>(comparer);
-        }
-
-        #endregion Constructors
-
-        #region Enumerators
-
-        /// <summary>
-        /// To get the enumerator.
-        /// </summary>
-        /// <returns>Enumerator</returns>
-        public IEnumerator<KeyValuePair<TKey, IList<TValue>>> GetEnumerator()
-        {
-            return _dictionary.GetEnumerator();
-        }
-
-        /// <summary>
-        /// To get the enumerator.
-        /// </summary>
-        /// <returns>Enumerator</returns>
-        IEnumerator IEnumerable.GetEnumerator()
-        {
-            return _dictionary.GetEnumerator();
-        }
-
-        #endregion Enumerators
-
-        #region Public Members
-        /// <summary>
-        /// Add values to Multimap
-        /// </summary>
-        /// <param name="item">Key value pair</param>
-        public void Add(KeyValuePair<TKey, IList<TValue>> item)
-        {
-            if (!TryAdd(item.Key, item.Value))
-                throw new InvalidOperationException("Could not add values to Multimap.");
-        }
-
-        /// <summary>
-        /// Add Multimap to Multimap
-        /// </summary>
-        /// <param name="multimap">Multimap</param>
-        public void Add(Multimap<TKey, TValue> multimap)
-        {
-            foreach (var item in multimap)
-            {
-                if (!TryAdd(item.Key, item.Value))
-                    throw new InvalidOperationException("Could not add values to Multimap.");
-            }
-        }
-
-        /// <summary>
-        /// Clear Multimap
-        /// </summary>
-        public void Clear()
-        {
-            _dictionary.Clear();
-        }
-
-        /// <summary>
-        /// Determines whether Multimap contains the specified item.
-        /// </summary>
-        /// <param name="item">Key value pair</param>
-        /// <exception cref="NotImplementedException">Method needs to be implemented</exception>
-        /// <returns>true if the Multimap contains the item; otherwise, false.</returns>
-        public bool Contains(KeyValuePair<TKey, IList<TValue>> item)
-        {
-            throw new NotImplementedException();
-        }
-
-        /// <summary>
-        ///  Copy items of the Multimap to an array,
-        ///     starting at a particular array index.
-        /// </summary>
-        /// <param name="array">The array that is the destination of the items copied
-        ///     from Multimap. The array must have zero-based indexing.</param>
-        /// <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
-        /// <exception cref="NotImplementedException">Method needs to be implemented</exception>
-        public void CopyTo(KeyValuePair<TKey, IList<TValue>>[] array, int arrayIndex)
-        {
-            throw new NotImplementedException();
-        }
-
-        /// <summary>
-        /// Removes the specified item from the Multimap.
-        /// </summary>
-        /// <param name="item">Key value pair</param>
-        /// <returns>true if the item is successfully removed; otherwise, false.</returns>
-        /// <exception cref="NotImplementedException">Method needs to be implemented</exception>
-        public bool Remove(KeyValuePair<TKey, IList<TValue>> item)
-        {
-            throw new NotImplementedException();
-        }
-
-        /// <summary>
-        /// Gets the number of items contained in the Multimap.
-        /// </summary>
-        public int Count => _dictionary.Count;
-
-        /// <summary>
-        /// Gets a value indicating whether the Multimap is read-only.
-        /// </summary>
-        public bool IsReadOnly => false;
-
-        /// <summary>
-        /// Adds an item with the provided key and value to the Multimap.
-        /// </summary>
-        /// <param name="key">The object to use as the key of the item to add.</param>
-        /// <param name="value">The object to use as the value of the item to add.</param>
-        /// <exception cref="InvalidOperationException">Thrown when couldn't add the value to Multimap.</exception>
-        public void Add(TKey key, IList<TValue> value)
-        {
-            if (value != null && value.Count > 0)
-            {
-                if (_dictionary.TryGetValue(key, out var list))
-                {
-                    foreach (var k in value) list.Add(k);
-                }
-                else
-                {
-                    list = new List<TValue>(value);
-                    if (!TryAdd(key, list))
-                        throw new InvalidOperationException("Could not add values to Multimap.");
-                }
-            }
-        }
-
-        /// <summary>
-        /// Determines whether the Multimap contains an item with the specified key.
-        /// </summary>
-        /// <param name="key">The key to locate in the Multimap.</param>
-        /// <returns>true if the Multimap contains an item with
-        ///     the key; otherwise, false.</returns>
-        public bool ContainsKey(TKey key)
-        {
-            return _dictionary.ContainsKey(key);
-        }
-
-        /// <summary>
-        /// Removes item with the specified key from the Multimap.
-        /// </summary>
-        /// <param name="key">The key to locate in the Multimap.</param>
-        /// <returns>true if the item is successfully removed; otherwise, false.</returns>
-        public bool Remove(TKey key)
-        {
-            return TryRemove(key, out var _);
-        }
-
-        /// <summary>
-        /// Gets the value associated with the specified key.
-        /// </summary>
-        /// <param name="key">The key whose value to get.</param>
-        /// <param name="value">When this method returns, the value associated with the specified key, if the
-        ///     key is found; otherwise, the default value for the type of the value parameter.
-        ///     This parameter is passed uninitialized.</param>
-        /// <returns> true if the object that implements Multimap contains
-        ///     an item with the specified key; otherwise, false.</returns>
-        public bool TryGetValue(TKey key, out IList<TValue> value)
-        {
-            return _dictionary.TryGetValue(key, out value);
-        }
-
-        /// <summary>
-        /// Gets or sets the item with the specified key.
-        /// </summary>
-        /// <param name="key">The key of the item to get or set.</param>
-        /// <returns>The value of the specified key.</returns>
-        public IList<TValue> this[TKey key]
-        {
-            get => _dictionary[key];
-            set => _dictionary[key] = value;
-        }
-
-        /// <summary>
-        /// Gets a System.Collections.Generic.ICollection containing the keys of the Multimap.
-        /// </summary>
-        public ICollection<TKey> Keys => _dictionary.Keys;
-
-        /// <summary>
-        /// Gets a System.Collections.Generic.ICollection containing the values of the Multimap.
-        /// </summary>
-        public ICollection<IList<TValue>> Values => _dictionary.Values;
-
-        /// <summary>
-        ///  Copy the items of the Multimap to an System.Array,
-        ///     starting at a particular System.Array index.
-        /// </summary>
-        /// <param name="array">The one-dimensional System.Array that is the destination of the items copied
-        ///     from Multimap. The System.Array must have zero-based indexing.</param>
-        /// <param name="index">The zero-based index in array at which copying begins.</param>
-        public void CopyTo(Array array, int index)
-        {
-            ((ICollection)_dictionary).CopyTo(array, index);
-        }
-
-        /// <summary>
-        /// Adds an item with the provided key and value to the Multimap.
-        /// </summary>
-        /// <param name="key">The object to use as the key of the item to add.</param>
-        /// <param name="value">The object to use as the value of the item to add.</param>
-        /// <exception cref="InvalidOperationException">Thrown when couldn't add value to Multimap.</exception>
-        public void Add(TKey key, TValue value)
-        {
-            if (value != null)
-            {
-                if (_dictionary.TryGetValue(key, out var list))
-                {
-                    list.Add(value);
-                }
-                else
-                {
-                    list = new List<TValue> { value };
-                    if (!TryAdd(key, list))
-                        throw new InvalidOperationException("Could not add value to Multimap.");
-                }
-            }
-        }
-
-        #endregion Public Members
-
-        #region Private Members
-
-        /**
-         * Helper method to encapsulate generator differences between dictionary types.
-         */
-        private bool TryRemove(TKey key, out IList<TValue> value)
-        {
-            _dictionary.TryGetValue(key, out value);
-            return _dictionary.Remove(key);
-        }
-
-        /**
-         * Helper method to encapsulate generator differences between dictionary types.
-         */
-        private bool TryAdd(TKey key, IList<TValue> value)
-        {
-            try
-            {
-                _dictionary.Add(key, value);
-            }
-            catch (ArgumentException)
-            {
-                return false;
-            }
-
-            return true;
-        }
-        #endregion Private Members
-    }
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/OpenAPIDateConverter.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/OpenAPIDateConverter.cs
deleted file mode 100755
index 90b5de1..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/OpenAPIDateConverter.cs
+++ /dev/null
@@ -1,30 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-using Newtonsoft.Json.Converters;
-
-namespace ManticoreSearch.Client
-{
-    /// <summary>
-    /// Formatter for 'date' openapi formats ss defined by full-date - RFC3339
-    /// see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#data-types
-    /// </summary>
-    public class OpenAPIDateConverter : IsoDateTimeConverter
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="OpenAPIDateConverter" /> class.
-        /// </summary>
-        public OpenAPIDateConverter()
-        {
-            // full-date   = date-fullyear "-" date-month "-" date-mday
-            DateTimeFormat = "yyyy-MM-dd";
-        }
-    }
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/RequestOptions.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/RequestOptions.cs
deleted file mode 100755
index 7d799c9..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/RequestOptions.cs
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections.Generic;
-using System.IO;
-using System.Net;
-
-namespace ManticoreSearch.Client
-{
-    /// <summary>
-    /// A container for generalized request inputs. This type allows consumers to extend the request functionality
-    /// by abstracting away from the default (built-in) request framework (e.g. RestSharp).
-    /// </summary>
-    public class RequestOptions
-    {
-        /// <summary>
-        /// Parameters to be bound to path parts of the Request's URL
-        /// </summary>
-        public Dictionary<string, string> PathParameters { get; set; }
-
-        /// <summary>
-        /// Query parameters to be applied to the request.
-        /// Keys may have 1 or more values associated.
-        /// </summary>
-        public Multimap<string, string> QueryParameters { get; set; }
-
-        /// <summary>
-        /// Header parameters to be applied to to the request.
-        /// Keys may have 1 or more values associated.
-        /// </summary>
-        public Multimap<string, string> HeaderParameters { get; set; }
-
-        /// <summary>
-        /// Form parameters to be sent along with the request.
-        /// </summary>
-        public Dictionary<string, string> FormParameters { get; set; }
-
-        /// <summary>
-        /// File parameters to be sent along with the request.
-        /// </summary>
-        public Multimap<string, FileParameter> FileParameters { get; set; }
-
-        /// <summary>
-        /// Cookies to be sent along with the request.
-        /// </summary>
-        public List<Cookie> Cookies { get; set; }
-
-        /// <summary>
-        /// Any data associated with a request body.
-        /// </summary>
-        public Object Data { get; set; }
-
-        /// <summary>
-        /// Constructs a new instance of <see cref="RequestOptions"/>
-        /// </summary>
-        public RequestOptions()
-        {
-            PathParameters = new Dictionary<string, string>();
-            QueryParameters = new Multimap<string, string>();
-            HeaderParameters = new Multimap<string, string>();
-            FormParameters = new Dictionary<string, string>();
-            FileParameters = new Multimap<string, FileParameter>();
-            Cookies = new List<Cookie>();
-        }
-    }
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/RetryConfiguration.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/RetryConfiguration.cs
deleted file mode 100755
index f7fff0d..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/RetryConfiguration.cs
+++ /dev/null
@@ -1,32 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using Polly;
-using System.Net.Http;
-
-namespace ManticoreSearch.Client
-{
-    /// <summary>
-    /// Configuration class to set the polly retry policies to be applied to the requests.
-    /// </summary>
-    public static class RetryConfiguration
-    {
-        /// <summary>
-        /// Retry policy
-        /// </summary>
-        public static Policy<HttpResponseMessage> RetryPolicy { get; set; }
-
-        /// <summary>
-        /// Async retry policy
-        /// </summary>
-        public static AsyncPolicy<HttpResponseMessage> AsyncRetryPolicy { get; set; }
-    }
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/WebRequestPathBuilder.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/WebRequestPathBuilder.cs
deleted file mode 100755
index 47c43ed..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Client/WebRequestPathBuilder.cs
+++ /dev/null
@@ -1,54 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-using System;
-using System.Collections.Generic;
-
-namespace ManticoreSearch.Client
-{
-    /// <summary>
-    /// A URI builder
-    /// </summary>
-    class WebRequestPathBuilder
-    {
-            private string _baseUrl;
-            private string _path;
-            private string _query = "?";
-            public WebRequestPathBuilder(string baseUrl, string path)
-            {
-                _baseUrl = baseUrl;
-                _path = path;
-            }
-
-            public void AddPathParameters(Dictionary<string, string> parameters)
-            {
-                foreach (var parameter in parameters)
-                {
-                    _path = _path.Replace("{" + parameter.Key + "}", Uri.EscapeDataString(parameter.Value));
-                }
-            }
-
-            public void AddQueryParameters(Multimap<string, string> parameters)
-            {
-                foreach (var parameter in parameters)
-                {
-                    foreach (var value in parameter.Value)
-                    {
-                        _query = _query + parameter.Key + "=" + Uri.EscapeDataString(value) + "&";
-                    }
-                }
-            }
-
-            public string GetFullUri()
-            {
-                return _baseUrl + _path + _query.Substring(0, _query.Length - 1);
-            }
-    }
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/ManticoreSearch.csproj b/out/manticoresearch-csharp-actual/src/ManticoreSearch/ManticoreSearch.csproj
deleted file mode 100755
index e3d3406..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/ManticoreSearch.csproj
+++ /dev/null
@@ -1,29 +0,0 @@
-<Project Sdk="Microsoft.NET.Sdk">
-
-  <PropertyGroup>
-    <GenerateAssemblyInfo>false</GenerateAssemblyInfo><!-- setting GenerateAssemblyInfo to false causes this bug https://github.com/dotnet/project-system/issues/3934 -->
-    <TargetFramework>netstandard2.0</TargetFramework>
-    <AssemblyName>ManticoreSearch</AssemblyName>
-    <PackageId>ManticoreSearch</PackageId>
-    <OutputType>Library</OutputType>
-    <Authors>OpenAPI</Authors>
-    <Company>OpenAPI</Company>
-    <AssemblyTitle>OpenAPI Library</AssemblyTitle>
-    <Description>A library generated from a OpenAPI doc</Description>
-    <Copyright>No Copyright</Copyright>
-    <RootNamespace>ManticoreSearch</RootNamespace>
-    <Version>4.0.0</Version>
-    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\ManticoreSearch.xml</DocumentationFile>
-    <RepositoryUrl>https://github.com/manticoresoftware/manticoresearch-csharp.git</RepositoryUrl>
-    <RepositoryType>git</RepositoryType>
-    <PackageReleaseNotes>Minor update</PackageReleaseNotes>
-  </PropertyGroup>
-
-  <ItemGroup>
-    <PackageReference Include="JsonSubTypes" Version="1.8.0" />
-    <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
-    <PackageReference Include="Polly" Version="7.2.3" />
-    <PackageReference Include="System.ComponentModel.Annotations" Version="5.0.0" />
-  </ItemGroup>
-
-</Project>
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/AbstractOpenAPISchema.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/AbstractOpenAPISchema.cs
deleted file mode 100755
index a462410..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/AbstractOpenAPISchema.cs
+++ /dev/null
@@ -1,77 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Serialization;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    ///  Abstract base class for oneOf, anyOf schemas in the OpenAPI specification
-    /// </summary>
-    public abstract partial class AbstractOpenAPISchema
-    {
-        /// <summary>
-        ///  Custom JSON serializer
-        /// </summary>
-        static public readonly JsonSerializerSettings SerializerSettings = new JsonSerializerSettings
-        {
-            // OpenAPI generated types generally hide default constructors.
-            ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor,
-            MissingMemberHandling = MissingMemberHandling.Error,
-            ContractResolver = new DefaultContractResolver
-            {
-                NamingStrategy = new CamelCaseNamingStrategy
-                {
-                    OverrideSpecifiedNames = false
-                }
-            }
-        };
-
-        /// <summary>
-        ///  Custom JSON serializer for objects with additional properties
-        /// </summary>
-        static public readonly JsonSerializerSettings AdditionalPropertiesSerializerSettings = new JsonSerializerSettings
-        {
-            // OpenAPI generated types generally hide default constructors.
-            ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor,
-            MissingMemberHandling = MissingMemberHandling.Ignore,
-            ContractResolver = new DefaultContractResolver
-            {
-                NamingStrategy = new CamelCaseNamingStrategy
-                {
-                    OverrideSpecifiedNames = false
-                }
-            }
-        };
-
-        /// <summary>
-        /// Gets or Sets the actual instance
-        /// </summary>
-        public abstract Object ActualInstance { get; set; }
-
-        /// <summary>
-        /// Gets or Sets IsNullable to indicate whether the instance is nullable
-        /// </summary>
-        public bool IsNullable { get; protected set; }
-
-        /// <summary>
-        /// Gets or Sets the schema type, which can be either `oneOf` or `anyOf`
-        /// </summary>
-        public string SchemaType { get; protected set; }
-
-        /// <summary>
-        /// Converts the instance into JSON string.
-        /// </summary>
-        public abstract string ToJson();
-    }
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/Aggregation.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/Aggregation.cs
deleted file mode 100755
index 5938cd3..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/Aggregation.cs
+++ /dev/null
@@ -1,149 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Aggregation Alias
-    /// </summary>
-    [DataContract(Name = "aggregation")]
-    public partial class Aggregation : IEquatable<Aggregation>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="Aggregation" /> class.
-        /// </summary>
-        /// <param name="terms">terms.</param>
-        /// <param name="sort">sort.</param>
-        public Aggregation(AggregationTerms terms = default(AggregationTerms), List<Dictionary<string, AggregationSortInnerValue>> sort = default(List<Dictionary<string, AggregationSortInnerValue>>))
-        {
-            this.Terms = terms;
-            this.Sort = sort;
-        }
-
-        /// <summary>
-        /// Gets or Sets Terms
-        /// </summary>
-        [DataMember(Name = "terms", EmitDefaultValue = false)]
-        public AggregationTerms Terms { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Sort
-        /// </summary>
-        [DataMember(Name = "sort", EmitDefaultValue = false)]
-        public List<Dictionary<string, AggregationSortInnerValue>> Sort { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class Aggregation {\n");
-            sb.Append("  Terms: ").Append(Terms).Append("\n");
-            sb.Append("  Sort: ").Append(Sort).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as Aggregation);
-        }
-
-        /// <summary>
-        /// Returns true if Aggregation instances are equal
-        /// </summary>
-        /// <param name="input">Instance of Aggregation to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(Aggregation input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Terms == input.Terms ||
-                    (this.Terms != null &&
-                    this.Terms.Equals(input.Terms))
-                ) && 
-                (
-                    this.Sort == input.Sort ||
-                    this.Sort != null &&
-                    input.Sort != null &&
-                    this.Sort.SequenceEqual(input.Sort)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Terms != null)
-                {
-                    hashCode = (hashCode * 59) + this.Terms.GetHashCode();
-                }
-                if (this.Sort != null)
-                {
-                    hashCode = (hashCode * 59) + this.Sort.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/AggregationSortInnerValue.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/AggregationSortInnerValue.cs
deleted file mode 100755
index b67913e..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/AggregationSortInnerValue.cs
+++ /dev/null
@@ -1,130 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// AggregationSortInnerValue
-    /// </summary>
-    [DataContract(Name = "aggregation_sort_inner_value")]
-    public partial class AggregationSortInnerValue : IEquatable<AggregationSortInnerValue>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="AggregationSortInnerValue" /> class.
-        /// </summary>
-        /// <param name="order">order.</param>
-        public AggregationSortInnerValue(string order = default(string))
-        {
-            this.Order = order;
-        }
-
-        /// <summary>
-        /// Gets or Sets Order
-        /// </summary>
-        [DataMember(Name = "order", EmitDefaultValue = false)]
-        public string Order { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class AggregationSortInnerValue {\n");
-            sb.Append("  Order: ").Append(Order).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as AggregationSortInnerValue);
-        }
-
-        /// <summary>
-        /// Returns true if AggregationSortInnerValue instances are equal
-        /// </summary>
-        /// <param name="input">Instance of AggregationSortInnerValue to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(AggregationSortInnerValue input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Order == input.Order ||
-                    (this.Order != null &&
-                    this.Order.Equals(input.Order))
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Order != null)
-                {
-                    hashCode = (hashCode * 59) + this.Order.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/AggregationTerms.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/AggregationTerms.cs
deleted file mode 100755
index ea57e6e..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/AggregationTerms.cs
+++ /dev/null
@@ -1,146 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// AggregationTerms
-    /// </summary>
-    [DataContract(Name = "aggregation_terms")]
-    public partial class AggregationTerms : IEquatable<AggregationTerms>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="AggregationTerms" /> class.
-        /// </summary>
-        /// <param name="field">Attribute Name to Aggregate.</param>
-        /// <param name="size">Maximum Number of Buckets in the Result.</param>
-        public AggregationTerms(string field = default(string), int size = default(int))
-        {
-            this.Field = field;
-            this.Size = size;
-        }
-
-        /// <summary>
-        /// Attribute Name to Aggregate
-        /// </summary>
-        /// <value>Attribute Name to Aggregate</value>
-        [DataMember(Name = "field", EmitDefaultValue = false)]
-        public string Field { get; set; }
-
-        /// <summary>
-        /// Maximum Number of Buckets in the Result
-        /// </summary>
-        /// <value>Maximum Number of Buckets in the Result</value>
-        [DataMember(Name = "size", EmitDefaultValue = false)]
-        public int Size { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class AggregationTerms {\n");
-            sb.Append("  Field: ").Append(Field).Append("\n");
-            sb.Append("  Size: ").Append(Size).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as AggregationTerms);
-        }
-
-        /// <summary>
-        /// Returns true if AggregationTerms instances are equal
-        /// </summary>
-        /// <param name="input">Instance of AggregationTerms to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(AggregationTerms input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Field == input.Field ||
-                    (this.Field != null &&
-                    this.Field.Equals(input.Field))
-                ) && 
-                (
-                    this.Size == input.Size ||
-                    this.Size.Equals(input.Size)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Field != null)
-                {
-                    hashCode = (hashCode * 59) + this.Field.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.Size.GetHashCode();
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/BoolFilter.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/BoolFilter.cs
deleted file mode 100755
index 4aa10f3..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/BoolFilter.cs
+++ /dev/null
@@ -1,169 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Boolean attribute filter
-    /// </summary>
-    [DataContract(Name = "boolFilter")]
-    public partial class BoolFilter : IEquatable<BoolFilter>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="BoolFilter" /> class.
-        /// </summary>
-        /// <param name="should">should.</param>
-        /// <param name="must">must.</param>
-        /// <param name="mustNot">mustNot.</param>
-        public BoolFilter(List<Object> should = default(List<Object>), List<Object> must = default(List<Object>), List<Object> mustNot = default(List<Object>))
-        {
-            this.Should = should;
-            this.Must = must;
-            this.MustNot = mustNot;
-        }
-
-        /// <summary>
-        /// Gets or Sets Should
-        /// </summary>
-        [DataMember(Name = "should", EmitDefaultValue = false)]
-        public List<Object> Should { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Must
-        /// </summary>
-        [DataMember(Name = "must", EmitDefaultValue = false)]
-        public List<Object> Must { get; set; }
-
-        /// <summary>
-        /// Gets or Sets MustNot
-        /// </summary>
-        [DataMember(Name = "must_not", EmitDefaultValue = false)]
-        public List<Object> MustNot { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class BoolFilter {\n");
-            sb.Append("  Should: ").Append(Should).Append("\n");
-            sb.Append("  Must: ").Append(Must).Append("\n");
-            sb.Append("  MustNot: ").Append(MustNot).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as BoolFilter);
-        }
-
-        /// <summary>
-        /// Returns true if BoolFilter instances are equal
-        /// </summary>
-        /// <param name="input">Instance of BoolFilter to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(BoolFilter input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Should == input.Should ||
-                    this.Should != null &&
-                    input.Should != null &&
-                    this.Should.SequenceEqual(input.Should)
-                ) && 
-                (
-                    this.Must == input.Must ||
-                    this.Must != null &&
-                    input.Must != null &&
-                    this.Must.SequenceEqual(input.Must)
-                ) && 
-                (
-                    this.MustNot == input.MustNot ||
-                    this.MustNot != null &&
-                    input.MustNot != null &&
-                    this.MustNot.SequenceEqual(input.MustNot)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Should != null)
-                {
-                    hashCode = (hashCode * 59) + this.Should.GetHashCode();
-                }
-                if (this.Must != null)
-                {
-                    hashCode = (hashCode * 59) + this.Must.GetHashCode();
-                }
-                if (this.MustNot != null)
-                {
-                    hashCode = (hashCode * 59) + this.MustNot.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/BulkResponse.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/BulkResponse.cs
deleted file mode 100755
index e620314..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/BulkResponse.cs
+++ /dev/null
@@ -1,176 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Success bulk response
-    /// </summary>
-    [DataContract(Name = "bulkResponse")]
-    public partial class BulkResponse : IEquatable<BulkResponse>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="BulkResponse" /> class.
-        /// </summary>
-        /// <param name="items">items.</param>
-        /// <param name="errors">errors.</param>
-        /// <param name="error">error.</param>
-        public BulkResponse(Object items = default(Object), bool errors = default(bool), string error = default(string)) : base()
-        {
-            this.Items = items;
-            this.Errors = errors;
-            this.Error = error;
-            this.AdditionalProperties = new Dictionary<string, object>();
-        }
-
-        /// <summary>
-        /// Gets or Sets Items
-        /// </summary>
-        [DataMember(Name = "items", EmitDefaultValue = false)]
-        public Object Items { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Errors
-        /// </summary>
-        [DataMember(Name = "errors", EmitDefaultValue = true)]
-        public bool Errors { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Error
-        /// </summary>
-        [DataMember(Name = "error", EmitDefaultValue = false)]
-        public string Error { get; set; }
-
-        /// <summary>
-        /// Gets or Sets additional properties
-        /// </summary>
-        [JsonExtensionData]
-        public IDictionary<string, object> AdditionalProperties { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class BulkResponse {\n");
-            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
-            sb.Append("  Items: ").Append(Items).Append("\n");
-            sb.Append("  Errors: ").Append(Errors).Append("\n");
-            sb.Append("  Error: ").Append(Error).Append("\n");
-            sb.Append("  AdditionalProperties: ").Append(AdditionalProperties).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as BulkResponse);
-        }
-
-        /// <summary>
-        /// Returns true if BulkResponse instances are equal
-        /// </summary>
-        /// <param name="input">Instance of BulkResponse to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(BulkResponse input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return base.Equals(input) && 
-                (
-                    this.Items == input.Items ||
-                    (this.Items != null &&
-                    this.Items.Equals(input.Items))
-                ) && base.Equals(input) && 
-                (
-                    this.Errors == input.Errors ||
-                    this.Errors.Equals(input.Errors)
-                ) && base.Equals(input) && 
-                (
-                    this.Error == input.Error ||
-                    (this.Error != null &&
-                    this.Error.Equals(input.Error))
-                )
-                && (this.AdditionalProperties.Count == input.AdditionalProperties.Count && !this.AdditionalProperties.Except(input.AdditionalProperties).Any());
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = base.GetHashCode();
-                if (this.Items != null)
-                {
-                    hashCode = (hashCode * 59) + this.Items.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.Errors.GetHashCode();
-                if (this.Error != null)
-                {
-                    hashCode = (hashCode * 59) + this.Error.GetHashCode();
-                }
-                if (this.AdditionalProperties != null)
-                {
-                    hashCode = (hashCode * 59) + this.AdditionalProperties.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/DeleteDocumentRequest.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/DeleteDocumentRequest.cs
deleted file mode 100755
index e0e476f..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/DeleteDocumentRequest.cs
+++ /dev/null
@@ -1,194 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Payload for delete request. Documents can be deleted either one by one by specifying the document id or by providing a query object. For more information see  [Delete API](https://manual.manticoresearch.com/Deleting_documents) 
-    /// </summary>
-    [DataContract(Name = "deleteDocumentRequest")]
-    public partial class DeleteDocumentRequest : IEquatable<DeleteDocumentRequest>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="DeleteDocumentRequest" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected DeleteDocumentRequest() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="DeleteDocumentRequest" /> class.
-        /// </summary>
-        /// <param name="index">Index name (required).</param>
-        /// <param name="cluster">cluster name.</param>
-        /// <param name="id">Document ID.</param>
-        /// <param name="query">Query tree object.</param>
-        public DeleteDocumentRequest(string index = default(string), string cluster = default(string), long id = default(long), Object query = default(Object))
-        {
-            // to ensure "index" is required (not null)
-            if (index == null)
-            {
-                throw new ArgumentNullException("index is a required property for DeleteDocumentRequest and cannot be null");
-            }
-            this.Index = index;
-            this.Cluster = cluster;
-            this.Id = id;
-            this.Query = query;
-        }
-
-        /// <summary>
-        /// Index name
-        /// </summary>
-        /// <value>Index name</value>
-        [DataMember(Name = "index", IsRequired = true, EmitDefaultValue = false)]
-        public string Index { get; set; }
-
-        /// <summary>
-        /// cluster name
-        /// </summary>
-        /// <value>cluster name</value>
-        [DataMember(Name = "cluster", EmitDefaultValue = false)]
-        public string Cluster { get; set; }
-
-        /// <summary>
-        /// Document ID
-        /// </summary>
-        /// <value>Document ID</value>
-        [DataMember(Name = "id", EmitDefaultValue = false)]
-        public long Id { get; set; }
-
-        /// <summary>
-        /// Query tree object
-        /// </summary>
-        /// <value>Query tree object</value>
-        [DataMember(Name = "query", EmitDefaultValue = false)]
-        public Object Query { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class DeleteDocumentRequest {\n");
-            sb.Append("  Index: ").Append(Index).Append("\n");
-            sb.Append("  Cluster: ").Append(Cluster).Append("\n");
-            sb.Append("  Id: ").Append(Id).Append("\n");
-            sb.Append("  Query: ").Append(Query).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as DeleteDocumentRequest);
-        }
-
-        /// <summary>
-        /// Returns true if DeleteDocumentRequest instances are equal
-        /// </summary>
-        /// <param name="input">Instance of DeleteDocumentRequest to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(DeleteDocumentRequest input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Index == input.Index ||
-                    (this.Index != null &&
-                    this.Index.Equals(input.Index))
-                ) && 
-                (
-                    this.Cluster == input.Cluster ||
-                    (this.Cluster != null &&
-                    this.Cluster.Equals(input.Cluster))
-                ) && 
-                (
-                    this.Id == input.Id ||
-                    this.Id.Equals(input.Id)
-                ) && 
-                (
-                    this.Query == input.Query ||
-                    (this.Query != null &&
-                    this.Query.Equals(input.Query))
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Index != null)
-                {
-                    hashCode = (hashCode * 59) + this.Index.GetHashCode();
-                }
-                if (this.Cluster != null)
-                {
-                    hashCode = (hashCode * 59) + this.Cluster.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.Id.GetHashCode();
-                if (this.Query != null)
-                {
-                    hashCode = (hashCode * 59) + this.Query.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/DeleteResponse.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/DeleteResponse.cs
deleted file mode 100755
index 3029229..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/DeleteResponse.cs
+++ /dev/null
@@ -1,176 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Success response
-    /// </summary>
-    [DataContract(Name = "deleteResponse")]
-    public partial class DeleteResponse : IEquatable<DeleteResponse>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="DeleteResponse" /> class.
-        /// </summary>
-        /// <param name="index">index.</param>
-        /// <param name="deleted">deleted.</param>
-        /// <param name="id">id.</param>
-        /// <param name="result">result.</param>
-        public DeleteResponse(string index = default(string), int deleted = default(int), long id = default(long), string result = default(string))
-        {
-            this.Index = index;
-            this.Deleted = deleted;
-            this.Id = id;
-            this.Result = result;
-        }
-
-        /// <summary>
-        /// Gets or Sets Index
-        /// </summary>
-        [DataMember(Name = "_index", EmitDefaultValue = false)]
-        public string Index { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Deleted
-        /// </summary>
-        [DataMember(Name = "deleted", EmitDefaultValue = false)]
-        public int Deleted { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Id
-        /// </summary>
-        [DataMember(Name = "_id", EmitDefaultValue = false)]
-        public long Id { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Result
-        /// </summary>
-        [DataMember(Name = "result", EmitDefaultValue = false)]
-        public string Result { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class DeleteResponse {\n");
-            sb.Append("  Index: ").Append(Index).Append("\n");
-            sb.Append("  Deleted: ").Append(Deleted).Append("\n");
-            sb.Append("  Id: ").Append(Id).Append("\n");
-            sb.Append("  Result: ").Append(Result).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as DeleteResponse);
-        }
-
-        /// <summary>
-        /// Returns true if DeleteResponse instances are equal
-        /// </summary>
-        /// <param name="input">Instance of DeleteResponse to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(DeleteResponse input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Index == input.Index ||
-                    (this.Index != null &&
-                    this.Index.Equals(input.Index))
-                ) && 
-                (
-                    this.Deleted == input.Deleted ||
-                    this.Deleted.Equals(input.Deleted)
-                ) && 
-                (
-                    this.Id == input.Id ||
-                    this.Id.Equals(input.Id)
-                ) && 
-                (
-                    this.Result == input.Result ||
-                    (this.Result != null &&
-                    this.Result.Equals(input.Result))
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Index != null)
-                {
-                    hashCode = (hashCode * 59) + this.Index.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.Deleted.GetHashCode();
-                hashCode = (hashCode * 59) + this.Id.GetHashCode();
-                if (this.Result != null)
-                {
-                    hashCode = (hashCode * 59) + this.Result.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/EqualsFilter.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/EqualsFilter.cs
deleted file mode 100755
index 9a889d8..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/EqualsFilter.cs
+++ /dev/null
@@ -1,163 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Equals attribute filter
-    /// </summary>
-    [DataContract(Name = "equalsFilter")]
-    public partial class EqualsFilter : IEquatable<EqualsFilter>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="EqualsFilter" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected EqualsFilter() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="EqualsFilter" /> class.
-        /// </summary>
-        /// <param name="field">field (required).</param>
-        /// <param name="value">value (required).</param>
-        public EqualsFilter(string field = default(string), Object value = default(Object))
-        {
-            // to ensure "field" is required (not null)
-            if (field == null)
-            {
-                throw new ArgumentNullException("field is a required property for EqualsFilter and cannot be null");
-            }
-            this.Field = field;
-            // to ensure "value" is required (not null)
-            if (value == null)
-            {
-                throw new ArgumentNullException("value is a required property for EqualsFilter and cannot be null");
-            }
-            this.Value = value;
-        }
-
-        /// <summary>
-        /// Gets or Sets Field
-        /// </summary>
-        [DataMember(Name = "field", IsRequired = true, EmitDefaultValue = false)]
-        public string Field { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Value
-        /// </summary>
-        [DataMember(Name = "value", IsRequired = true, EmitDefaultValue = false)]
-        public Object Value { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class EqualsFilter {\n");
-            sb.Append("  Field: ").Append(Field).Append("\n");
-            sb.Append("  Value: ").Append(Value).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as EqualsFilter);
-        }
-
-        /// <summary>
-        /// Returns true if EqualsFilter instances are equal
-        /// </summary>
-        /// <param name="input">Instance of EqualsFilter to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(EqualsFilter input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Field == input.Field ||
-                    (this.Field != null &&
-                    this.Field.Equals(input.Field))
-                ) && 
-                (
-                    this.Value == input.Value ||
-                    (this.Value != null &&
-                    this.Value.Equals(input.Value))
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Field != null)
-                {
-                    hashCode = (hashCode * 59) + this.Field.GetHashCode();
-                }
-                if (this.Value != null)
-                {
-                    hashCode = (hashCode * 59) + this.Value.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/ErrorResponse.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/ErrorResponse.cs
deleted file mode 100755
index d6ecf33..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/ErrorResponse.cs
+++ /dev/null
@@ -1,155 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Error response
-    /// </summary>
-    [DataContract(Name = "errorResponse")]
-    public partial class ErrorResponse : IEquatable<ErrorResponse>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="ErrorResponse" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected ErrorResponse() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="ErrorResponse" /> class.
-        /// </summary>
-        /// <param name="error">error (required).</param>
-        /// <param name="status">status (required).</param>
-        public ErrorResponse(Dictionary<string, Object> error = default(Dictionary<string, Object>), int status = default(int))
-        {
-            // to ensure "error" is required (not null)
-            if (error == null)
-            {
-                throw new ArgumentNullException("error is a required property for ErrorResponse and cannot be null");
-            }
-            this.Error = error;
-            this.Status = status;
-        }
-
-        /// <summary>
-        /// Gets or Sets Error
-        /// </summary>
-        [DataMember(Name = "error", IsRequired = true, EmitDefaultValue = false)]
-        public Dictionary<string, Object> Error { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Status
-        /// </summary>
-        [DataMember(Name = "status", IsRequired = true, EmitDefaultValue = false)]
-        public int Status { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class ErrorResponse {\n");
-            sb.Append("  Error: ").Append(Error).Append("\n");
-            sb.Append("  Status: ").Append(Status).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as ErrorResponse);
-        }
-
-        /// <summary>
-        /// Returns true if ErrorResponse instances are equal
-        /// </summary>
-        /// <param name="input">Instance of ErrorResponse to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(ErrorResponse input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Error == input.Error ||
-                    this.Error != null &&
-                    input.Error != null &&
-                    this.Error.SequenceEqual(input.Error)
-                ) && 
-                (
-                    this.Status == input.Status ||
-                    this.Status.Equals(input.Status)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Error != null)
-                {
-                    hashCode = (hashCode * 59) + this.Error.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.Status.GetHashCode();
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/Facet.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/Facet.cs
deleted file mode 100755
index 440e734..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/Facet.cs
+++ /dev/null
@@ -1,175 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Query FACET expression
-    /// </summary>
-    [DataContract(Name = "facet")]
-    public partial class Facet : IEquatable<Facet>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="Facet" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected Facet() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="Facet" /> class.
-        /// </summary>
-        /// <param name="attr">The name of an attribute to facet (required).</param>
-        /// <param name="alias">Facet alias.</param>
-        /// <param name="limit">The number of facet values to return.</param>
-        public Facet(string attr = default(string), string alias = default(string), int limit = default(int))
-        {
-            // to ensure "attr" is required (not null)
-            if (attr == null)
-            {
-                throw new ArgumentNullException("attr is a required property for Facet and cannot be null");
-            }
-            this.Attr = attr;
-            this.Alias = alias;
-            this.Limit = limit;
-        }
-
-        /// <summary>
-        /// The name of an attribute to facet
-        /// </summary>
-        /// <value>The name of an attribute to facet</value>
-        [DataMember(Name = "attr", IsRequired = true, EmitDefaultValue = false)]
-        public string Attr { get; set; }
-
-        /// <summary>
-        /// Facet alias
-        /// </summary>
-        /// <value>Facet alias</value>
-        [DataMember(Name = "alias", EmitDefaultValue = false)]
-        public string Alias { get; set; }
-
-        /// <summary>
-        /// The number of facet values to return
-        /// </summary>
-        /// <value>The number of facet values to return</value>
-        [DataMember(Name = "limit", EmitDefaultValue = false)]
-        public int Limit { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class Facet {\n");
-            sb.Append("  Attr: ").Append(Attr).Append("\n");
-            sb.Append("  Alias: ").Append(Alias).Append("\n");
-            sb.Append("  Limit: ").Append(Limit).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as Facet);
-        }
-
-        /// <summary>
-        /// Returns true if Facet instances are equal
-        /// </summary>
-        /// <param name="input">Instance of Facet to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(Facet input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Attr == input.Attr ||
-                    (this.Attr != null &&
-                    this.Attr.Equals(input.Attr))
-                ) && 
-                (
-                    this.Alias == input.Alias ||
-                    (this.Alias != null &&
-                    this.Alias.Equals(input.Alias))
-                ) && 
-                (
-                    this.Limit == input.Limit ||
-                    this.Limit.Equals(input.Limit)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Attr != null)
-                {
-                    hashCode = (hashCode * 59) + this.Attr.GetHashCode();
-                }
-                if (this.Alias != null)
-                {
-                    hashCode = (hashCode * 59) + this.Alias.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.Limit.GetHashCode();
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/FilterBoolean.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/FilterBoolean.cs
deleted file mode 100755
index 216ee22..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/FilterBoolean.cs
+++ /dev/null
@@ -1,177 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Query filter
-    /// </summary>
-    [DataContract(Name = "filterBoolean")]
-    public partial class FilterBoolean : IEquatable<FilterBoolean>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="FilterBoolean" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected FilterBoolean() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="FilterBoolean" /> class.
-        /// </summary>
-        /// <param name="filterField">filterField (required).</param>
-        /// <param name="operation">operation (required).</param>
-        /// <param name="filterValue">filterValue (required).</param>
-        public FilterBoolean(string filterField = default(string), string operation = default(string), bool filterValue = default(bool))
-        {
-            // to ensure "filterField" is required (not null)
-            if (filterField == null)
-            {
-                throw new ArgumentNullException("filterField is a required property for FilterBoolean and cannot be null");
-            }
-            this.FilterField = filterField;
-            // to ensure "operation" is required (not null)
-            if (operation == null)
-            {
-                throw new ArgumentNullException("operation is a required property for FilterBoolean and cannot be null");
-            }
-            this.Operation = operation;
-            this.FilterValue = filterValue;
-        }
-
-        /// <summary>
-        /// Gets or Sets FilterField
-        /// </summary>
-        [DataMember(Name = "filter_field", IsRequired = true, EmitDefaultValue = false)]
-        public string FilterField { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Operation
-        /// </summary>
-        [DataMember(Name = "operation", IsRequired = true, EmitDefaultValue = false)]
-        public string Operation { get; set; }
-
-        /// <summary>
-        /// Gets or Sets FilterValue
-        /// </summary>
-        [DataMember(Name = "filter_value", IsRequired = true, EmitDefaultValue = true)]
-        public bool FilterValue { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class FilterBoolean {\n");
-            sb.Append("  FilterField: ").Append(FilterField).Append("\n");
-            sb.Append("  Operation: ").Append(Operation).Append("\n");
-            sb.Append("  FilterValue: ").Append(FilterValue).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as FilterBoolean);
-        }
-
-        /// <summary>
-        /// Returns true if FilterBoolean instances are equal
-        /// </summary>
-        /// <param name="input">Instance of FilterBoolean to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(FilterBoolean input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.FilterField == input.FilterField ||
-                    (this.FilterField != null &&
-                    this.FilterField.Equals(input.FilterField))
-                ) && 
-                (
-                    this.Operation == input.Operation ||
-                    (this.Operation != null &&
-                    this.Operation.Equals(input.Operation))
-                ) && 
-                (
-                    this.FilterValue == input.FilterValue ||
-                    this.FilterValue.Equals(input.FilterValue)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.FilterField != null)
-                {
-                    hashCode = (hashCode * 59) + this.FilterField.GetHashCode();
-                }
-                if (this.Operation != null)
-                {
-                    hashCode = (hashCode * 59) + this.Operation.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.FilterValue.GetHashCode();
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/FilterNumber.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/FilterNumber.cs
deleted file mode 100755
index 07c57a2..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/FilterNumber.cs
+++ /dev/null
@@ -1,177 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Query filter
-    /// </summary>
-    [DataContract(Name = "filterNumber")]
-    public partial class FilterNumber : IEquatable<FilterNumber>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="FilterNumber" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected FilterNumber() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="FilterNumber" /> class.
-        /// </summary>
-        /// <param name="filterField">filterField (required).</param>
-        /// <param name="operation">operation (required).</param>
-        /// <param name="filterValue">filterValue (required).</param>
-        public FilterNumber(string filterField = default(string), string operation = default(string), decimal filterValue = default(decimal))
-        {
-            // to ensure "filterField" is required (not null)
-            if (filterField == null)
-            {
-                throw new ArgumentNullException("filterField is a required property for FilterNumber and cannot be null");
-            }
-            this.FilterField = filterField;
-            // to ensure "operation" is required (not null)
-            if (operation == null)
-            {
-                throw new ArgumentNullException("operation is a required property for FilterNumber and cannot be null");
-            }
-            this.Operation = operation;
-            this.FilterValue = filterValue;
-        }
-
-        /// <summary>
-        /// Gets or Sets FilterField
-        /// </summary>
-        [DataMember(Name = "filter_field", IsRequired = true, EmitDefaultValue = false)]
-        public string FilterField { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Operation
-        /// </summary>
-        [DataMember(Name = "operation", IsRequired = true, EmitDefaultValue = false)]
-        public string Operation { get; set; }
-
-        /// <summary>
-        /// Gets or Sets FilterValue
-        /// </summary>
-        [DataMember(Name = "filter_value", IsRequired = true, EmitDefaultValue = false)]
-        public decimal FilterValue { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class FilterNumber {\n");
-            sb.Append("  FilterField: ").Append(FilterField).Append("\n");
-            sb.Append("  Operation: ").Append(Operation).Append("\n");
-            sb.Append("  FilterValue: ").Append(FilterValue).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as FilterNumber);
-        }
-
-        /// <summary>
-        /// Returns true if FilterNumber instances are equal
-        /// </summary>
-        /// <param name="input">Instance of FilterNumber to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(FilterNumber input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.FilterField == input.FilterField ||
-                    (this.FilterField != null &&
-                    this.FilterField.Equals(input.FilterField))
-                ) && 
-                (
-                    this.Operation == input.Operation ||
-                    (this.Operation != null &&
-                    this.Operation.Equals(input.Operation))
-                ) && 
-                (
-                    this.FilterValue == input.FilterValue ||
-                    this.FilterValue.Equals(input.FilterValue)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.FilterField != null)
-                {
-                    hashCode = (hashCode * 59) + this.FilterField.GetHashCode();
-                }
-                if (this.Operation != null)
-                {
-                    hashCode = (hashCode * 59) + this.Operation.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.FilterValue.GetHashCode();
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/FilterString.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/FilterString.cs
deleted file mode 100755
index 50ddeec..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/FilterString.cs
+++ /dev/null
@@ -1,186 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Query filter
-    /// </summary>
-    [DataContract(Name = "filterString")]
-    public partial class FilterString : IEquatable<FilterString>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="FilterString" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected FilterString() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="FilterString" /> class.
-        /// </summary>
-        /// <param name="filterField">filterField (required).</param>
-        /// <param name="operation">operation (required).</param>
-        /// <param name="filterValue">filterValue (required).</param>
-        public FilterString(string filterField = default(string), string operation = default(string), string filterValue = default(string))
-        {
-            // to ensure "filterField" is required (not null)
-            if (filterField == null)
-            {
-                throw new ArgumentNullException("filterField is a required property for FilterString and cannot be null");
-            }
-            this.FilterField = filterField;
-            // to ensure "operation" is required (not null)
-            if (operation == null)
-            {
-                throw new ArgumentNullException("operation is a required property for FilterString and cannot be null");
-            }
-            this.Operation = operation;
-            // to ensure "filterValue" is required (not null)
-            if (filterValue == null)
-            {
-                throw new ArgumentNullException("filterValue is a required property for FilterString and cannot be null");
-            }
-            this.FilterValue = filterValue;
-        }
-
-        /// <summary>
-        /// Gets or Sets FilterField
-        /// </summary>
-        [DataMember(Name = "filter_field", IsRequired = true, EmitDefaultValue = false)]
-        public string FilterField { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Operation
-        /// </summary>
-        [DataMember(Name = "operation", IsRequired = true, EmitDefaultValue = false)]
-        public string Operation { get; set; }
-
-        /// <summary>
-        /// Gets or Sets FilterValue
-        /// </summary>
-        [DataMember(Name = "filter_value", IsRequired = true, EmitDefaultValue = false)]
-        public string FilterValue { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class FilterString {\n");
-            sb.Append("  FilterField: ").Append(FilterField).Append("\n");
-            sb.Append("  Operation: ").Append(Operation).Append("\n");
-            sb.Append("  FilterValue: ").Append(FilterValue).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as FilterString);
-        }
-
-        /// <summary>
-        /// Returns true if FilterString instances are equal
-        /// </summary>
-        /// <param name="input">Instance of FilterString to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(FilterString input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.FilterField == input.FilterField ||
-                    (this.FilterField != null &&
-                    this.FilterField.Equals(input.FilterField))
-                ) && 
-                (
-                    this.Operation == input.Operation ||
-                    (this.Operation != null &&
-                    this.Operation.Equals(input.Operation))
-                ) && 
-                (
-                    this.FilterValue == input.FilterValue ||
-                    (this.FilterValue != null &&
-                    this.FilterValue.Equals(input.FilterValue))
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.FilterField != null)
-                {
-                    hashCode = (hashCode * 59) + this.FilterField.GetHashCode();
-                }
-                if (this.Operation != null)
-                {
-                    hashCode = (hashCode * 59) + this.Operation.GetHashCode();
-                }
-                if (this.FilterValue != null)
-                {
-                    hashCode = (hashCode * 59) + this.FilterValue.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/GeoDistanceFilter.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/GeoDistanceFilter.cs
deleted file mode 100755
index 3e0571a..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/GeoDistanceFilter.cs
+++ /dev/null
@@ -1,201 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Geo distance attribute filter
-    /// </summary>
-    [DataContract(Name = "geoDistanceFilter")]
-    public partial class GeoDistanceFilter : IEquatable<GeoDistanceFilter>, IValidatableObject
-    {
-        /// <summary>
-        /// Defines DistanceType
-        /// </summary>
-        [JsonConverter(typeof(StringEnumConverter))]
-        public enum DistanceTypeEnum
-        {
-            /// <summary>
-            /// Enum Adaptive for value: adaptive
-            /// </summary>
-            [EnumMember(Value = "adaptive")]
-            Adaptive = 1,
-
-            /// <summary>
-            /// Enum Haversine for value: haversine
-            /// </summary>
-            [EnumMember(Value = "haversine")]
-            Haversine = 2
-
-        }
-
-
-        /// <summary>
-        /// Gets or Sets DistanceType
-        /// </summary>
-        [DataMember(Name = "distance_type", EmitDefaultValue = false)]
-        public DistanceTypeEnum? DistanceType { get; set; }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="GeoDistanceFilter" /> class.
-        /// </summary>
-        /// <param name="locationAnchor">locationAnchor.</param>
-        /// <param name="locationSource">Attribute containing latitude and longitude data.</param>
-        /// <param name="distanceType">distanceType.</param>
-        /// <param name="distance">distance.</param>
-        public GeoDistanceFilter(GeoDistanceFilterLocationAnchor locationAnchor = default(GeoDistanceFilterLocationAnchor), string locationSource = default(string), DistanceTypeEnum? distanceType = default(DistanceTypeEnum?), string distance = default(string))
-        {
-            this.LocationAnchor = locationAnchor;
-            this.LocationSource = locationSource;
-            this.DistanceType = distanceType;
-            this.Distance = distance;
-        }
-
-        /// <summary>
-        /// Gets or Sets LocationAnchor
-        /// </summary>
-        [DataMember(Name = "location_anchor", EmitDefaultValue = false)]
-        public GeoDistanceFilterLocationAnchor LocationAnchor { get; set; }
-
-        /// <summary>
-        /// Attribute containing latitude and longitude data
-        /// </summary>
-        /// <value>Attribute containing latitude and longitude data</value>
-        [DataMember(Name = "location_source", EmitDefaultValue = false)]
-        public string LocationSource { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Distance
-        /// </summary>
-        [DataMember(Name = "distance", EmitDefaultValue = false)]
-        public string Distance { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class GeoDistanceFilter {\n");
-            sb.Append("  LocationAnchor: ").Append(LocationAnchor).Append("\n");
-            sb.Append("  LocationSource: ").Append(LocationSource).Append("\n");
-            sb.Append("  DistanceType: ").Append(DistanceType).Append("\n");
-            sb.Append("  Distance: ").Append(Distance).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as GeoDistanceFilter);
-        }
-
-        /// <summary>
-        /// Returns true if GeoDistanceFilter instances are equal
-        /// </summary>
-        /// <param name="input">Instance of GeoDistanceFilter to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(GeoDistanceFilter input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.LocationAnchor == input.LocationAnchor ||
-                    (this.LocationAnchor != null &&
-                    this.LocationAnchor.Equals(input.LocationAnchor))
-                ) && 
-                (
-                    this.LocationSource == input.LocationSource ||
-                    (this.LocationSource != null &&
-                    this.LocationSource.Equals(input.LocationSource))
-                ) && 
-                (
-                    this.DistanceType == input.DistanceType ||
-                    this.DistanceType.Equals(input.DistanceType)
-                ) && 
-                (
-                    this.Distance == input.Distance ||
-                    (this.Distance != null &&
-                    this.Distance.Equals(input.Distance))
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.LocationAnchor != null)
-                {
-                    hashCode = (hashCode * 59) + this.LocationAnchor.GetHashCode();
-                }
-                if (this.LocationSource != null)
-                {
-                    hashCode = (hashCode * 59) + this.LocationSource.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.DistanceType.GetHashCode();
-                if (this.Distance != null)
-                {
-                    hashCode = (hashCode * 59) + this.Distance.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/GeoDistanceFilterLocationAnchor.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/GeoDistanceFilterLocationAnchor.cs
deleted file mode 100755
index d1aee15..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/GeoDistanceFilterLocationAnchor.cs
+++ /dev/null
@@ -1,142 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Geo pin point object
-    /// </summary>
-    [DataContract(Name = "geoDistanceFilter_location_anchor")]
-    public partial class GeoDistanceFilterLocationAnchor : IEquatable<GeoDistanceFilterLocationAnchor>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="GeoDistanceFilterLocationAnchor" /> class.
-        /// </summary>
-        /// <param name="lat">Geo latitude of pin point in degrees.</param>
-        /// <param name="lon">Geo longitude pf pin point in degrees.</param>
-        public GeoDistanceFilterLocationAnchor(decimal lat = default(decimal), decimal lon = default(decimal))
-        {
-            this.Lat = lat;
-            this.Lon = lon;
-        }
-
-        /// <summary>
-        /// Geo latitude of pin point in degrees
-        /// </summary>
-        /// <value>Geo latitude of pin point in degrees</value>
-        [DataMember(Name = "lat", EmitDefaultValue = false)]
-        public decimal Lat { get; set; }
-
-        /// <summary>
-        /// Geo longitude pf pin point in degrees
-        /// </summary>
-        /// <value>Geo longitude pf pin point in degrees</value>
-        [DataMember(Name = "lon", EmitDefaultValue = false)]
-        public decimal Lon { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class GeoDistanceFilterLocationAnchor {\n");
-            sb.Append("  Lat: ").Append(Lat).Append("\n");
-            sb.Append("  Lon: ").Append(Lon).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as GeoDistanceFilterLocationAnchor);
-        }
-
-        /// <summary>
-        /// Returns true if GeoDistanceFilterLocationAnchor instances are equal
-        /// </summary>
-        /// <param name="input">Instance of GeoDistanceFilterLocationAnchor to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(GeoDistanceFilterLocationAnchor input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Lat == input.Lat ||
-                    this.Lat.Equals(input.Lat)
-                ) && 
-                (
-                    this.Lon == input.Lon ||
-                    this.Lon.Equals(input.Lon)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                hashCode = (hashCode * 59) + this.Lat.GetHashCode();
-                hashCode = (hashCode * 59) + this.Lon.GetHashCode();
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/Highlight.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/Highlight.cs
deleted file mode 100755
index 6a44e14..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/Highlight.cs
+++ /dev/null
@@ -1,540 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Query HIGHLIGHT expression
-    /// </summary>
-    [DataContract(Name = "highlight")]
-    public partial class Highlight : IEquatable<Highlight>, IValidatableObject
-    {
-        /// <summary>
-        /// Defines Encoder
-        /// </summary>
-        [JsonConverter(typeof(StringEnumConverter))]
-        public enum EncoderEnum
-        {
-            /// <summary>
-            /// Enum Default for value: default
-            /// </summary>
-            [EnumMember(Value = "default")]
-            Default = 1,
-
-            /// <summary>
-            /// Enum Html for value: html
-            /// </summary>
-            [EnumMember(Value = "html")]
-            Html = 2
-
-        }
-
-
-        /// <summary>
-        /// Gets or Sets Encoder
-        /// </summary>
-        [DataMember(Name = "encoder", EmitDefaultValue = false)]
-        public EncoderEnum? Encoder { get; set; }
-        /// <summary>
-        /// Defines NoMatchSize
-        /// </summary>
-        public enum NoMatchSizeEnum
-        {
-            /// <summary>
-            /// Enum NUMBER_0 for value: 0
-            /// </summary>
-            NUMBER_0 = 0,
-
-            /// <summary>
-            /// Enum NUMBER_1 for value: 1
-            /// </summary>
-            NUMBER_1 = 1
-
-        }
-
-
-        /// <summary>
-        /// Gets or Sets NoMatchSize
-        /// </summary>
-        [DataMember(Name = "no_match_size", EmitDefaultValue = false)]
-        public NoMatchSizeEnum? NoMatchSize { get; set; }
-        /// <summary>
-        /// Defines HtmlStripMode
-        /// </summary>
-        [JsonConverter(typeof(StringEnumConverter))]
-        public enum HtmlStripModeEnum
-        {
-            /// <summary>
-            /// Enum None for value: none
-            /// </summary>
-            [EnumMember(Value = "none")]
-            None = 1,
-
-            /// <summary>
-            /// Enum Strip for value: strip
-            /// </summary>
-            [EnumMember(Value = "strip")]
-            Strip = 2,
-
-            /// <summary>
-            /// Enum Index for value: index
-            /// </summary>
-            [EnumMember(Value = "index")]
-            Index = 3,
-
-            /// <summary>
-            /// Enum Retain for value: retain
-            /// </summary>
-            [EnumMember(Value = "retain")]
-            Retain = 4
-
-        }
-
-
-        /// <summary>
-        /// Gets or Sets HtmlStripMode
-        /// </summary>
-        [DataMember(Name = "html_strip_mode", EmitDefaultValue = false)]
-        public HtmlStripModeEnum? HtmlStripMode { get; set; }
-        /// <summary>
-        /// Defines SnippetBoundary
-        /// </summary>
-        [JsonConverter(typeof(StringEnumConverter))]
-        public enum SnippetBoundaryEnum
-        {
-            /// <summary>
-            /// Enum Sentence for value: sentence
-            /// </summary>
-            [EnumMember(Value = "sentence")]
-            Sentence = 1,
-
-            /// <summary>
-            /// Enum Paragraph for value: paragraph
-            /// </summary>
-            [EnumMember(Value = "paragraph")]
-            Paragraph = 2,
-
-            /// <summary>
-            /// Enum Zone for value: zone
-            /// </summary>
-            [EnumMember(Value = "zone")]
-            Zone = 3
-
-        }
-
-
-        /// <summary>
-        /// Gets or Sets SnippetBoundary
-        /// </summary>
-        [DataMember(Name = "snippet_boundary", EmitDefaultValue = false)]
-        public SnippetBoundaryEnum? SnippetBoundary { get; set; }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="Highlight" /> class.
-        /// </summary>
-        /// <param name="fieldnames">fieldnames.</param>
-        /// <param name="fields">fields.</param>
-        /// <param name="encoder">encoder.</param>
-        /// <param name="highlightQuery">highlightQuery.</param>
-        /// <param name="preTags">preTags (default to &quot;&lt;strong&gt;&quot;).</param>
-        /// <param name="postTags">postTags (default to &quot;&lt;/strong&gt;&quot;).</param>
-        /// <param name="noMatchSize">noMatchSize.</param>
-        /// <param name="fragmentSize">fragmentSize (default to 256).</param>
-        /// <param name="numberOfFragments">numberOfFragments (default to 0).</param>
-        /// <param name="limit">limit (default to 256).</param>
-        /// <param name="limitWords">limitWords (default to 0).</param>
-        /// <param name="limitSnippets">limitSnippets (default to 0).</param>
-        /// <param name="limitsPerField">limitsPerField (default to false).</param>
-        /// <param name="useBoundaries">useBoundaries (default to false).</param>
-        /// <param name="forceAllWords">forceAllWords (default to false).</param>
-        /// <param name="allowEmpty">allowEmpty (default to false).</param>
-        /// <param name="emitZones">emitZones (default to false).</param>
-        /// <param name="forceSnippets">forceSnippets (default to false).</param>
-        /// <param name="around">around (default to 5).</param>
-        /// <param name="startSnippetId">startSnippetId (default to 1).</param>
-        /// <param name="htmlStripMode">htmlStripMode.</param>
-        /// <param name="snippetBoundary">snippetBoundary.</param>
-        public Highlight(List<string> fieldnames = default(List<string>), List<HighlightField> fields = default(List<HighlightField>), EncoderEnum? encoder = default(EncoderEnum?), Dictionary<string, Object> highlightQuery = default(Dictionary<string, Object>), string preTags = "<strong>", string postTags = "</strong>", NoMatchSizeEnum? noMatchSize = default(NoMatchSizeEnum?), int fragmentSize = 256, int numberOfFragments = 0, int limit = 256, int limitWords = 0, int limitSnippets = 0, bool limitsPerField = false, bool useBoundaries = false, bool forceAllWords = false, bool allowEmpty = false, bool emitZones = false, bool forceSnippets = false, int around = 5, int startSnippetId = 1, HtmlStripModeEnum? htmlStripMode = default(HtmlStripModeEnum?), SnippetBoundaryEnum? snippetBoundary = default(SnippetBoundaryEnum?))
-        {
-            this.Fieldnames = fieldnames;
-            this.Fields = fields;
-            this.Encoder = encoder;
-            this.HighlightQuery = highlightQuery;
-            // use default value if no "preTags" provided
-            this.PreTags = preTags ?? "<strong>";
-            // use default value if no "postTags" provided
-            this.PostTags = postTags ?? "</strong>";
-            this.NoMatchSize = noMatchSize;
-            this.FragmentSize = fragmentSize;
-            this.NumberOfFragments = numberOfFragments;
-            this.Limit = limit;
-            this.LimitWords = limitWords;
-            this.LimitSnippets = limitSnippets;
-            this.LimitsPerField = limitsPerField;
-            this.UseBoundaries = useBoundaries;
-            this.ForceAllWords = forceAllWords;
-            this.AllowEmpty = allowEmpty;
-            this.EmitZones = emitZones;
-            this.ForceSnippets = forceSnippets;
-            this.Around = around;
-            this.StartSnippetId = startSnippetId;
-            this.HtmlStripMode = htmlStripMode;
-            this.SnippetBoundary = snippetBoundary;
-        }
-
-        /// <summary>
-        /// Gets or Sets Fieldnames
-        /// </summary>
-        [DataMember(Name = "fieldnames", EmitDefaultValue = false)]
-        public List<string> Fieldnames { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Fields
-        /// </summary>
-        [DataMember(Name = "fields", EmitDefaultValue = false)]
-        public List<HighlightField> Fields { get; set; }
-
-        /// <summary>
-        /// Gets or Sets HighlightQuery
-        /// </summary>
-        [DataMember(Name = "highlight_query", EmitDefaultValue = true)]
-        public Dictionary<string, Object> HighlightQuery { get; set; }
-
-        /// <summary>
-        /// Gets or Sets PreTags
-        /// </summary>
-        [DataMember(Name = "pre_tags", EmitDefaultValue = false)]
-        public string PreTags { get; set; }
-
-        /// <summary>
-        /// Gets or Sets PostTags
-        /// </summary>
-        [DataMember(Name = "post_tags", EmitDefaultValue = false)]
-        public string PostTags { get; set; }
-
-        /// <summary>
-        /// Gets or Sets FragmentSize
-        /// </summary>
-        [DataMember(Name = "fragment_size", EmitDefaultValue = false)]
-        public int FragmentSize { get; set; }
-
-        /// <summary>
-        /// Gets or Sets NumberOfFragments
-        /// </summary>
-        [DataMember(Name = "number_of_fragments", EmitDefaultValue = false)]
-        public int NumberOfFragments { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Limit
-        /// </summary>
-        [DataMember(Name = "limit", EmitDefaultValue = false)]
-        public int Limit { get; set; }
-
-        /// <summary>
-        /// Gets or Sets LimitWords
-        /// </summary>
-        [DataMember(Name = "limit_words", EmitDefaultValue = false)]
-        public int LimitWords { get; set; }
-
-        /// <summary>
-        /// Gets or Sets LimitSnippets
-        /// </summary>
-        [DataMember(Name = "limit_snippets", EmitDefaultValue = false)]
-        public int LimitSnippets { get; set; }
-
-        /// <summary>
-        /// Gets or Sets LimitsPerField
-        /// </summary>
-        [DataMember(Name = "limits_per_field", EmitDefaultValue = true)]
-        public bool LimitsPerField { get; set; }
-
-        /// <summary>
-        /// Gets or Sets UseBoundaries
-        /// </summary>
-        [DataMember(Name = "use_boundaries", EmitDefaultValue = true)]
-        public bool UseBoundaries { get; set; }
-
-        /// <summary>
-        /// Gets or Sets ForceAllWords
-        /// </summary>
-        [DataMember(Name = "force_all_words", EmitDefaultValue = true)]
-        public bool ForceAllWords { get; set; }
-
-        /// <summary>
-        /// Gets or Sets AllowEmpty
-        /// </summary>
-        [DataMember(Name = "allow_empty", EmitDefaultValue = true)]
-        public bool AllowEmpty { get; set; }
-
-        /// <summary>
-        /// Gets or Sets EmitZones
-        /// </summary>
-        [DataMember(Name = "emit_zones", EmitDefaultValue = true)]
-        public bool EmitZones { get; set; }
-
-        /// <summary>
-        /// Gets or Sets ForceSnippets
-        /// </summary>
-        [DataMember(Name = "force_snippets", EmitDefaultValue = true)]
-        public bool ForceSnippets { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Around
-        /// </summary>
-        [DataMember(Name = "around", EmitDefaultValue = false)]
-        public int Around { get; set; }
-
-        /// <summary>
-        /// Gets or Sets StartSnippetId
-        /// </summary>
-        [DataMember(Name = "start_snippet_id", EmitDefaultValue = false)]
-        public int StartSnippetId { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class Highlight {\n");
-            sb.Append("  Fieldnames: ").Append(Fieldnames).Append("\n");
-            sb.Append("  Fields: ").Append(Fields).Append("\n");
-            sb.Append("  Encoder: ").Append(Encoder).Append("\n");
-            sb.Append("  HighlightQuery: ").Append(HighlightQuery).Append("\n");
-            sb.Append("  PreTags: ").Append(PreTags).Append("\n");
-            sb.Append("  PostTags: ").Append(PostTags).Append("\n");
-            sb.Append("  NoMatchSize: ").Append(NoMatchSize).Append("\n");
-            sb.Append("  FragmentSize: ").Append(FragmentSize).Append("\n");
-            sb.Append("  NumberOfFragments: ").Append(NumberOfFragments).Append("\n");
-            sb.Append("  Limit: ").Append(Limit).Append("\n");
-            sb.Append("  LimitWords: ").Append(LimitWords).Append("\n");
-            sb.Append("  LimitSnippets: ").Append(LimitSnippets).Append("\n");
-            sb.Append("  LimitsPerField: ").Append(LimitsPerField).Append("\n");
-            sb.Append("  UseBoundaries: ").Append(UseBoundaries).Append("\n");
-            sb.Append("  ForceAllWords: ").Append(ForceAllWords).Append("\n");
-            sb.Append("  AllowEmpty: ").Append(AllowEmpty).Append("\n");
-            sb.Append("  EmitZones: ").Append(EmitZones).Append("\n");
-            sb.Append("  ForceSnippets: ").Append(ForceSnippets).Append("\n");
-            sb.Append("  Around: ").Append(Around).Append("\n");
-            sb.Append("  StartSnippetId: ").Append(StartSnippetId).Append("\n");
-            sb.Append("  HtmlStripMode: ").Append(HtmlStripMode).Append("\n");
-            sb.Append("  SnippetBoundary: ").Append(SnippetBoundary).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as Highlight);
-        }
-
-        /// <summary>
-        /// Returns true if Highlight instances are equal
-        /// </summary>
-        /// <param name="input">Instance of Highlight to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(Highlight input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Fieldnames == input.Fieldnames ||
-                    this.Fieldnames != null &&
-                    input.Fieldnames != null &&
-                    this.Fieldnames.SequenceEqual(input.Fieldnames)
-                ) && 
-                (
-                    this.Fields == input.Fields ||
-                    this.Fields != null &&
-                    input.Fields != null &&
-                    this.Fields.SequenceEqual(input.Fields)
-                ) && 
-                (
-                    this.Encoder == input.Encoder ||
-                    this.Encoder.Equals(input.Encoder)
-                ) && 
-                (
-                    this.HighlightQuery == input.HighlightQuery ||
-                    this.HighlightQuery != null &&
-                    input.HighlightQuery != null &&
-                    this.HighlightQuery.SequenceEqual(input.HighlightQuery)
-                ) && 
-                (
-                    this.PreTags == input.PreTags ||
-                    (this.PreTags != null &&
-                    this.PreTags.Equals(input.PreTags))
-                ) && 
-                (
-                    this.PostTags == input.PostTags ||
-                    (this.PostTags != null &&
-                    this.PostTags.Equals(input.PostTags))
-                ) && 
-                (
-                    this.NoMatchSize == input.NoMatchSize ||
-                    this.NoMatchSize.Equals(input.NoMatchSize)
-                ) && 
-                (
-                    this.FragmentSize == input.FragmentSize ||
-                    this.FragmentSize.Equals(input.FragmentSize)
-                ) && 
-                (
-                    this.NumberOfFragments == input.NumberOfFragments ||
-                    this.NumberOfFragments.Equals(input.NumberOfFragments)
-                ) && 
-                (
-                    this.Limit == input.Limit ||
-                    this.Limit.Equals(input.Limit)
-                ) && 
-                (
-                    this.LimitWords == input.LimitWords ||
-                    this.LimitWords.Equals(input.LimitWords)
-                ) && 
-                (
-                    this.LimitSnippets == input.LimitSnippets ||
-                    this.LimitSnippets.Equals(input.LimitSnippets)
-                ) && 
-                (
-                    this.LimitsPerField == input.LimitsPerField ||
-                    this.LimitsPerField.Equals(input.LimitsPerField)
-                ) && 
-                (
-                    this.UseBoundaries == input.UseBoundaries ||
-                    this.UseBoundaries.Equals(input.UseBoundaries)
-                ) && 
-                (
-                    this.ForceAllWords == input.ForceAllWords ||
-                    this.ForceAllWords.Equals(input.ForceAllWords)
-                ) && 
-                (
-                    this.AllowEmpty == input.AllowEmpty ||
-                    this.AllowEmpty.Equals(input.AllowEmpty)
-                ) && 
-                (
-                    this.EmitZones == input.EmitZones ||
-                    this.EmitZones.Equals(input.EmitZones)
-                ) && 
-                (
-                    this.ForceSnippets == input.ForceSnippets ||
-                    this.ForceSnippets.Equals(input.ForceSnippets)
-                ) && 
-                (
-                    this.Around == input.Around ||
-                    this.Around.Equals(input.Around)
-                ) && 
-                (
-                    this.StartSnippetId == input.StartSnippetId ||
-                    this.StartSnippetId.Equals(input.StartSnippetId)
-                ) && 
-                (
-                    this.HtmlStripMode == input.HtmlStripMode ||
-                    this.HtmlStripMode.Equals(input.HtmlStripMode)
-                ) && 
-                (
-                    this.SnippetBoundary == input.SnippetBoundary ||
-                    this.SnippetBoundary.Equals(input.SnippetBoundary)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Fieldnames != null)
-                {
-                    hashCode = (hashCode * 59) + this.Fieldnames.GetHashCode();
-                }
-                if (this.Fields != null)
-                {
-                    hashCode = (hashCode * 59) + this.Fields.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.Encoder.GetHashCode();
-                if (this.HighlightQuery != null)
-                {
-                    hashCode = (hashCode * 59) + this.HighlightQuery.GetHashCode();
-                }
-                if (this.PreTags != null)
-                {
-                    hashCode = (hashCode * 59) + this.PreTags.GetHashCode();
-                }
-                if (this.PostTags != null)
-                {
-                    hashCode = (hashCode * 59) + this.PostTags.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.NoMatchSize.GetHashCode();
-                hashCode = (hashCode * 59) + this.FragmentSize.GetHashCode();
-                hashCode = (hashCode * 59) + this.NumberOfFragments.GetHashCode();
-                hashCode = (hashCode * 59) + this.Limit.GetHashCode();
-                hashCode = (hashCode * 59) + this.LimitWords.GetHashCode();
-                hashCode = (hashCode * 59) + this.LimitSnippets.GetHashCode();
-                hashCode = (hashCode * 59) + this.LimitsPerField.GetHashCode();
-                hashCode = (hashCode * 59) + this.UseBoundaries.GetHashCode();
-                hashCode = (hashCode * 59) + this.ForceAllWords.GetHashCode();
-                hashCode = (hashCode * 59) + this.AllowEmpty.GetHashCode();
-                hashCode = (hashCode * 59) + this.EmitZones.GetHashCode();
-                hashCode = (hashCode * 59) + this.ForceSnippets.GetHashCode();
-                hashCode = (hashCode * 59) + this.Around.GetHashCode();
-                hashCode = (hashCode * 59) + this.StartSnippetId.GetHashCode();
-                hashCode = (hashCode * 59) + this.HtmlStripMode.GetHashCode();
-                hashCode = (hashCode * 59) + this.SnippetBoundary.GetHashCode();
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/HighlightField.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/HighlightField.cs
deleted file mode 100755
index 2a6550d..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/HighlightField.cs
+++ /dev/null
@@ -1,182 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Query Highlight field with options set
-    /// </summary>
-    [DataContract(Name = "highlightField")]
-    public partial class HighlightField : IEquatable<HighlightField>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="HighlightField" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected HighlightField() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="HighlightField" /> class.
-        /// </summary>
-        /// <param name="name">name (required).</param>
-        /// <param name="limit">limit (default to 256).</param>
-        /// <param name="limitWords">limitWords (default to 0).</param>
-        /// <param name="limitSnippets">limitSnippets (default to 0).</param>
-        public HighlightField(string name = default(string), int limit = 256, int limitWords = 0, int limitSnippets = 0)
-        {
-            // to ensure "name" is required (not null)
-            if (name == null)
-            {
-                throw new ArgumentNullException("name is a required property for HighlightField and cannot be null");
-            }
-            this.Name = name;
-            this.Limit = limit;
-            this.LimitWords = limitWords;
-            this.LimitSnippets = limitSnippets;
-        }
-
-        /// <summary>
-        /// Gets or Sets Name
-        /// </summary>
-        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = false)]
-        public string Name { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Limit
-        /// </summary>
-        [DataMember(Name = "limit", EmitDefaultValue = false)]
-        public int Limit { get; set; }
-
-        /// <summary>
-        /// Gets or Sets LimitWords
-        /// </summary>
-        [DataMember(Name = "limit_words", EmitDefaultValue = false)]
-        public int LimitWords { get; set; }
-
-        /// <summary>
-        /// Gets or Sets LimitSnippets
-        /// </summary>
-        [DataMember(Name = "limit_snippets", EmitDefaultValue = false)]
-        public int LimitSnippets { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class HighlightField {\n");
-            sb.Append("  Name: ").Append(Name).Append("\n");
-            sb.Append("  Limit: ").Append(Limit).Append("\n");
-            sb.Append("  LimitWords: ").Append(LimitWords).Append("\n");
-            sb.Append("  LimitSnippets: ").Append(LimitSnippets).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as HighlightField);
-        }
-
-        /// <summary>
-        /// Returns true if HighlightField instances are equal
-        /// </summary>
-        /// <param name="input">Instance of HighlightField to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(HighlightField input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Name == input.Name ||
-                    (this.Name != null &&
-                    this.Name.Equals(input.Name))
-                ) && 
-                (
-                    this.Limit == input.Limit ||
-                    this.Limit.Equals(input.Limit)
-                ) && 
-                (
-                    this.LimitWords == input.LimitWords ||
-                    this.LimitWords.Equals(input.LimitWords)
-                ) && 
-                (
-                    this.LimitSnippets == input.LimitSnippets ||
-                    this.LimitSnippets.Equals(input.LimitSnippets)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Name != null)
-                {
-                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.Limit.GetHashCode();
-                hashCode = (hashCode * 59) + this.LimitWords.GetHashCode();
-                hashCode = (hashCode * 59) + this.LimitSnippets.GetHashCode();
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/InFilter.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/InFilter.cs
deleted file mode 100755
index 0369312..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/InFilter.cs
+++ /dev/null
@@ -1,164 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// In attribute filter
-    /// </summary>
-    [DataContract(Name = "inFilter")]
-    public partial class InFilter : IEquatable<InFilter>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="InFilter" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected InFilter() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="InFilter" /> class.
-        /// </summary>
-        /// <param name="field">field (required).</param>
-        /// <param name="values">values (required).</param>
-        public InFilter(string field = default(string), List<Object> values = default(List<Object>))
-        {
-            // to ensure "field" is required (not null)
-            if (field == null)
-            {
-                throw new ArgumentNullException("field is a required property for InFilter and cannot be null");
-            }
-            this.Field = field;
-            // to ensure "values" is required (not null)
-            if (values == null)
-            {
-                throw new ArgumentNullException("values is a required property for InFilter and cannot be null");
-            }
-            this.Values = values;
-        }
-
-        /// <summary>
-        /// Gets or Sets Field
-        /// </summary>
-        [DataMember(Name = "field", IsRequired = true, EmitDefaultValue = false)]
-        public string Field { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Values
-        /// </summary>
-        [DataMember(Name = "values", IsRequired = true, EmitDefaultValue = false)]
-        public List<Object> Values { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class InFilter {\n");
-            sb.Append("  Field: ").Append(Field).Append("\n");
-            sb.Append("  Values: ").Append(Values).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as InFilter);
-        }
-
-        /// <summary>
-        /// Returns true if InFilter instances are equal
-        /// </summary>
-        /// <param name="input">Instance of InFilter to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(InFilter input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Field == input.Field ||
-                    (this.Field != null &&
-                    this.Field.Equals(input.Field))
-                ) && 
-                (
-                    this.Values == input.Values ||
-                    this.Values != null &&
-                    input.Values != null &&
-                    this.Values.SequenceEqual(input.Values)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Field != null)
-                {
-                    hashCode = (hashCode * 59) + this.Field.GetHashCode();
-                }
-                if (this.Values != null)
-                {
-                    hashCode = (hashCode * 59) + this.Values.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/InsertDocumentRequest.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/InsertDocumentRequest.cs
deleted file mode 100755
index 4c3c0b9..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/InsertDocumentRequest.cs
+++ /dev/null
@@ -1,200 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Object with document data. 
-    /// </summary>
-    [DataContract(Name = "insertDocumentRequest")]
-    public partial class InsertDocumentRequest : IEquatable<InsertDocumentRequest>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="InsertDocumentRequest" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected InsertDocumentRequest() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="InsertDocumentRequest" /> class.
-        /// </summary>
-        /// <param name="index">Name of the index (required).</param>
-        /// <param name="cluster">cluster name.</param>
-        /// <param name="id">Document ID. .</param>
-        /// <param name="doc">Object with document data  (required).</param>
-        public InsertDocumentRequest(string index = default(string), string cluster = default(string), long id = default(long), Dictionary<string, Object> doc = default(Dictionary<string, Object>))
-        {
-            // to ensure "index" is required (not null)
-            if (index == null)
-            {
-                throw new ArgumentNullException("index is a required property for InsertDocumentRequest and cannot be null");
-            }
-            this.Index = index;
-            // to ensure "doc" is required (not null)
-            if (doc == null)
-            {
-                throw new ArgumentNullException("doc is a required property for InsertDocumentRequest and cannot be null");
-            }
-            this.Doc = doc;
-            this.Cluster = cluster;
-            this.Id = id;
-        }
-
-        /// <summary>
-        /// Name of the index
-        /// </summary>
-        /// <value>Name of the index</value>
-        [DataMember(Name = "index", IsRequired = true, EmitDefaultValue = false)]
-        public string Index { get; set; }
-
-        /// <summary>
-        /// cluster name
-        /// </summary>
-        /// <value>cluster name</value>
-        [DataMember(Name = "cluster", EmitDefaultValue = false)]
-        public string Cluster { get; set; }
-
-        /// <summary>
-        /// Document ID. 
-        /// </summary>
-        /// <value>Document ID. </value>
-        [DataMember(Name = "id", EmitDefaultValue = false)]
-        public long Id { get; set; }
-
-        /// <summary>
-        /// Object with document data 
-        /// </summary>
-        /// <value>Object with document data </value>
-        [DataMember(Name = "doc", IsRequired = true, EmitDefaultValue = false)]
-        public Dictionary<string, Object> Doc { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class InsertDocumentRequest {\n");
-            sb.Append("  Index: ").Append(Index).Append("\n");
-            sb.Append("  Cluster: ").Append(Cluster).Append("\n");
-            sb.Append("  Id: ").Append(Id).Append("\n");
-            sb.Append("  Doc: ").Append(Doc).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as InsertDocumentRequest);
-        }
-
-        /// <summary>
-        /// Returns true if InsertDocumentRequest instances are equal
-        /// </summary>
-        /// <param name="input">Instance of InsertDocumentRequest to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(InsertDocumentRequest input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Index == input.Index ||
-                    (this.Index != null &&
-                    this.Index.Equals(input.Index))
-                ) && 
-                (
-                    this.Cluster == input.Cluster ||
-                    (this.Cluster != null &&
-                    this.Cluster.Equals(input.Cluster))
-                ) && 
-                (
-                    this.Id == input.Id ||
-                    this.Id.Equals(input.Id)
-                ) && 
-                (
-                    this.Doc == input.Doc ||
-                    this.Doc != null &&
-                    input.Doc != null &&
-                    this.Doc.SequenceEqual(input.Doc)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Index != null)
-                {
-                    hashCode = (hashCode * 59) + this.Index.GetHashCode();
-                }
-                if (this.Cluster != null)
-                {
-                    hashCode = (hashCode * 59) + this.Cluster.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.Id.GetHashCode();
-                if (this.Doc != null)
-                {
-                    hashCode = (hashCode * 59) + this.Doc.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/MatchFilter.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/MatchFilter.cs
deleted file mode 100755
index f08d9de..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/MatchFilter.cs
+++ /dev/null
@@ -1,163 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Query match filter
-    /// </summary>
-    [DataContract(Name = "matchFilter")]
-    public partial class MatchFilter : IEquatable<MatchFilter>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="MatchFilter" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected MatchFilter() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="MatchFilter" /> class.
-        /// </summary>
-        /// <param name="queryString">queryString (required) (default to &quot;&quot;).</param>
-        /// <param name="queryFields">queryFields (required) (default to &quot;*&quot;).</param>
-        public MatchFilter(string queryString = "", string queryFields = "*")
-        {
-            // to ensure "queryString" is required (not null)
-            if (queryString == null)
-            {
-                throw new ArgumentNullException("queryString is a required property for MatchFilter and cannot be null");
-            }
-            this.QueryString = queryString;
-            // to ensure "queryFields" is required (not null)
-            if (queryFields == null)
-            {
-                throw new ArgumentNullException("queryFields is a required property for MatchFilter and cannot be null");
-            }
-            this.QueryFields = queryFields;
-        }
-
-        /// <summary>
-        /// Gets or Sets QueryString
-        /// </summary>
-        [DataMember(Name = "query_string", IsRequired = true, EmitDefaultValue = false)]
-        public string QueryString { get; set; }
-
-        /// <summary>
-        /// Gets or Sets QueryFields
-        /// </summary>
-        [DataMember(Name = "query_fields", IsRequired = true, EmitDefaultValue = false)]
-        public string QueryFields { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class MatchFilter {\n");
-            sb.Append("  QueryString: ").Append(QueryString).Append("\n");
-            sb.Append("  QueryFields: ").Append(QueryFields).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as MatchFilter);
-        }
-
-        /// <summary>
-        /// Returns true if MatchFilter instances are equal
-        /// </summary>
-        /// <param name="input">Instance of MatchFilter to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(MatchFilter input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.QueryString == input.QueryString ||
-                    (this.QueryString != null &&
-                    this.QueryString.Equals(input.QueryString))
-                ) && 
-                (
-                    this.QueryFields == input.QueryFields ||
-                    (this.QueryFields != null &&
-                    this.QueryFields.Equals(input.QueryFields))
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.QueryString != null)
-                {
-                    hashCode = (hashCode * 59) + this.QueryString.GetHashCode();
-                }
-                if (this.QueryFields != null)
-                {
-                    hashCode = (hashCode * 59) + this.QueryFields.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/MatchOp.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/MatchOp.cs
deleted file mode 100755
index 8541637..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/MatchOp.cs
+++ /dev/null
@@ -1,140 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Query match expression with logical operator
-    /// </summary>
-    [DataContract(Name = "matchOp")]
-    public partial class MatchOp : IEquatable<MatchOp>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="MatchOp" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected MatchOp() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="MatchOp" /> class.
-        /// </summary>
-        /// <param name="queryInfo">queryInfo (required).</param>
-        public MatchOp(Object queryInfo = default(Object))
-        {
-            // to ensure "queryInfo" is required (not null)
-            if (queryInfo == null)
-            {
-                throw new ArgumentNullException("queryInfo is a required property for MatchOp and cannot be null");
-            }
-            this.QueryInfo = queryInfo;
-        }
-
-        /// <summary>
-        /// Gets or Sets QueryInfo
-        /// </summary>
-        [DataMember(Name = "query_info", IsRequired = true, EmitDefaultValue = false)]
-        public Object QueryInfo { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class MatchOp {\n");
-            sb.Append("  QueryInfo: ").Append(QueryInfo).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as MatchOp);
-        }
-
-        /// <summary>
-        /// Returns true if MatchOp instances are equal
-        /// </summary>
-        /// <param name="input">Instance of MatchOp to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(MatchOp input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.QueryInfo == input.QueryInfo ||
-                    (this.QueryInfo != null &&
-                    this.QueryInfo.Equals(input.QueryInfo))
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.QueryInfo != null)
-                {
-                    hashCode = (hashCode * 59) + this.QueryInfo.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/MatchOpFilter.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/MatchOpFilter.cs
deleted file mode 100755
index c69e1ed..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/MatchOpFilter.cs
+++ /dev/null
@@ -1,197 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Query match expression
-    /// </summary>
-    [DataContract(Name = "matchOpFilter")]
-    public partial class MatchOpFilter : IEquatable<MatchOpFilter>, IValidatableObject
-    {
-        /// <summary>
-        /// Defines Operator
-        /// </summary>
-        [JsonConverter(typeof(StringEnumConverter))]
-        public enum OperatorEnum
-        {
-            /// <summary>
-            /// Enum Or for value: or
-            /// </summary>
-            [EnumMember(Value = "or")]
-            Or = 1,
-
-            /// <summary>
-            /// Enum And for value: and
-            /// </summary>
-            [EnumMember(Value = "and")]
-            And = 2
-
-        }
-
-
-        /// <summary>
-        /// Gets or Sets Operator
-        /// </summary>
-        [DataMember(Name = "operator", IsRequired = true, EmitDefaultValue = false)]
-        public OperatorEnum Operator { get; set; }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="MatchOpFilter" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected MatchOpFilter() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="MatchOpFilter" /> class.
-        /// </summary>
-        /// <param name="queryString">queryString (required).</param>
-        /// <param name="queryFields">queryFields (required).</param>
-        /// <param name="_operator">_operator (required).</param>
-        public MatchOpFilter(string queryString = default(string), string queryFields = default(string), OperatorEnum _operator = default(OperatorEnum))
-        {
-            // to ensure "queryString" is required (not null)
-            if (queryString == null)
-            {
-                throw new ArgumentNullException("queryString is a required property for MatchOpFilter and cannot be null");
-            }
-            this.QueryString = queryString;
-            // to ensure "queryFields" is required (not null)
-            if (queryFields == null)
-            {
-                throw new ArgumentNullException("queryFields is a required property for MatchOpFilter and cannot be null");
-            }
-            this.QueryFields = queryFields;
-            this.Operator = _operator;
-        }
-
-        /// <summary>
-        /// Gets or Sets QueryString
-        /// </summary>
-        [DataMember(Name = "query_string", IsRequired = true, EmitDefaultValue = false)]
-        public string QueryString { get; set; }
-
-        /// <summary>
-        /// Gets or Sets QueryFields
-        /// </summary>
-        [DataMember(Name = "query_fields", IsRequired = true, EmitDefaultValue = false)]
-        public string QueryFields { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class MatchOpFilter {\n");
-            sb.Append("  QueryString: ").Append(QueryString).Append("\n");
-            sb.Append("  QueryFields: ").Append(QueryFields).Append("\n");
-            sb.Append("  Operator: ").Append(Operator).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as MatchOpFilter);
-        }
-
-        /// <summary>
-        /// Returns true if MatchOpFilter instances are equal
-        /// </summary>
-        /// <param name="input">Instance of MatchOpFilter to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(MatchOpFilter input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.QueryString == input.QueryString ||
-                    (this.QueryString != null &&
-                    this.QueryString.Equals(input.QueryString))
-                ) && 
-                (
-                    this.QueryFields == input.QueryFields ||
-                    (this.QueryFields != null &&
-                    this.QueryFields.Equals(input.QueryFields))
-                ) && 
-                (
-                    this.Operator == input.Operator ||
-                    this.Operator.Equals(input.Operator)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.QueryString != null)
-                {
-                    hashCode = (hashCode * 59) + this.QueryString.GetHashCode();
-                }
-                if (this.QueryFields != null)
-                {
-                    hashCode = (hashCode * 59) + this.QueryFields.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.Operator.GetHashCode();
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/MatchPhraseFilter.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/MatchPhraseFilter.cs
deleted file mode 100755
index 439e227..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/MatchPhraseFilter.cs
+++ /dev/null
@@ -1,163 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Query match expression
-    /// </summary>
-    [DataContract(Name = "matchPhraseFilter")]
-    public partial class MatchPhraseFilter : IEquatable<MatchPhraseFilter>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="MatchPhraseFilter" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected MatchPhraseFilter() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="MatchPhraseFilter" /> class.
-        /// </summary>
-        /// <param name="queryPhrase">queryPhrase (required).</param>
-        /// <param name="queryFields">queryFields (required).</param>
-        public MatchPhraseFilter(string queryPhrase = default(string), string queryFields = default(string))
-        {
-            // to ensure "queryPhrase" is required (not null)
-            if (queryPhrase == null)
-            {
-                throw new ArgumentNullException("queryPhrase is a required property for MatchPhraseFilter and cannot be null");
-            }
-            this.QueryPhrase = queryPhrase;
-            // to ensure "queryFields" is required (not null)
-            if (queryFields == null)
-            {
-                throw new ArgumentNullException("queryFields is a required property for MatchPhraseFilter and cannot be null");
-            }
-            this.QueryFields = queryFields;
-        }
-
-        /// <summary>
-        /// Gets or Sets QueryPhrase
-        /// </summary>
-        [DataMember(Name = "query_phrase", IsRequired = true, EmitDefaultValue = false)]
-        public string QueryPhrase { get; set; }
-
-        /// <summary>
-        /// Gets or Sets QueryFields
-        /// </summary>
-        [DataMember(Name = "query_fields", IsRequired = true, EmitDefaultValue = false)]
-        public string QueryFields { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class MatchPhraseFilter {\n");
-            sb.Append("  QueryPhrase: ").Append(QueryPhrase).Append("\n");
-            sb.Append("  QueryFields: ").Append(QueryFields).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as MatchPhraseFilter);
-        }
-
-        /// <summary>
-        /// Returns true if MatchPhraseFilter instances are equal
-        /// </summary>
-        /// <param name="input">Instance of MatchPhraseFilter to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(MatchPhraseFilter input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.QueryPhrase == input.QueryPhrase ||
-                    (this.QueryPhrase != null &&
-                    this.QueryPhrase.Equals(input.QueryPhrase))
-                ) && 
-                (
-                    this.QueryFields == input.QueryFields ||
-                    (this.QueryFields != null &&
-                    this.QueryFields.Equals(input.QueryFields))
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.QueryPhrase != null)
-                {
-                    hashCode = (hashCode * 59) + this.QueryPhrase.GetHashCode();
-                }
-                if (this.QueryFields != null)
-                {
-                    hashCode = (hashCode * 59) + this.QueryFields.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/NotFilterBoolean.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/NotFilterBoolean.cs
deleted file mode 100755
index 94dfdcb..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/NotFilterBoolean.cs
+++ /dev/null
@@ -1,177 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Query filter
-    /// </summary>
-    [DataContract(Name = "notFilterBoolean")]
-    public partial class NotFilterBoolean : IEquatable<NotFilterBoolean>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="NotFilterBoolean" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected NotFilterBoolean() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="NotFilterBoolean" /> class.
-        /// </summary>
-        /// <param name="filterField">filterField (required).</param>
-        /// <param name="operation">operation (required).</param>
-        /// <param name="filterValue">filterValue (required).</param>
-        public NotFilterBoolean(string filterField = default(string), string operation = default(string), bool filterValue = default(bool))
-        {
-            // to ensure "filterField" is required (not null)
-            if (filterField == null)
-            {
-                throw new ArgumentNullException("filterField is a required property for NotFilterBoolean and cannot be null");
-            }
-            this.FilterField = filterField;
-            // to ensure "operation" is required (not null)
-            if (operation == null)
-            {
-                throw new ArgumentNullException("operation is a required property for NotFilterBoolean and cannot be null");
-            }
-            this.Operation = operation;
-            this.FilterValue = filterValue;
-        }
-
-        /// <summary>
-        /// Gets or Sets FilterField
-        /// </summary>
-        [DataMember(Name = "filter_field", IsRequired = true, EmitDefaultValue = false)]
-        public string FilterField { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Operation
-        /// </summary>
-        [DataMember(Name = "operation", IsRequired = true, EmitDefaultValue = false)]
-        public string Operation { get; set; }
-
-        /// <summary>
-        /// Gets or Sets FilterValue
-        /// </summary>
-        [DataMember(Name = "filter_value", IsRequired = true, EmitDefaultValue = true)]
-        public bool FilterValue { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class NotFilterBoolean {\n");
-            sb.Append("  FilterField: ").Append(FilterField).Append("\n");
-            sb.Append("  Operation: ").Append(Operation).Append("\n");
-            sb.Append("  FilterValue: ").Append(FilterValue).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as NotFilterBoolean);
-        }
-
-        /// <summary>
-        /// Returns true if NotFilterBoolean instances are equal
-        /// </summary>
-        /// <param name="input">Instance of NotFilterBoolean to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(NotFilterBoolean input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.FilterField == input.FilterField ||
-                    (this.FilterField != null &&
-                    this.FilterField.Equals(input.FilterField))
-                ) && 
-                (
-                    this.Operation == input.Operation ||
-                    (this.Operation != null &&
-                    this.Operation.Equals(input.Operation))
-                ) && 
-                (
-                    this.FilterValue == input.FilterValue ||
-                    this.FilterValue.Equals(input.FilterValue)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.FilterField != null)
-                {
-                    hashCode = (hashCode * 59) + this.FilterField.GetHashCode();
-                }
-                if (this.Operation != null)
-                {
-                    hashCode = (hashCode * 59) + this.Operation.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.FilterValue.GetHashCode();
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/NotFilterNumber.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/NotFilterNumber.cs
deleted file mode 100755
index 185b48d..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/NotFilterNumber.cs
+++ /dev/null
@@ -1,177 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Query filter
-    /// </summary>
-    [DataContract(Name = "notFilterNumber")]
-    public partial class NotFilterNumber : IEquatable<NotFilterNumber>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="NotFilterNumber" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected NotFilterNumber() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="NotFilterNumber" /> class.
-        /// </summary>
-        /// <param name="filterField">filterField (required).</param>
-        /// <param name="operation">operation (required).</param>
-        /// <param name="filterValue">filterValue (required).</param>
-        public NotFilterNumber(string filterField = default(string), string operation = default(string), decimal filterValue = default(decimal))
-        {
-            // to ensure "filterField" is required (not null)
-            if (filterField == null)
-            {
-                throw new ArgumentNullException("filterField is a required property for NotFilterNumber and cannot be null");
-            }
-            this.FilterField = filterField;
-            // to ensure "operation" is required (not null)
-            if (operation == null)
-            {
-                throw new ArgumentNullException("operation is a required property for NotFilterNumber and cannot be null");
-            }
-            this.Operation = operation;
-            this.FilterValue = filterValue;
-        }
-
-        /// <summary>
-        /// Gets or Sets FilterField
-        /// </summary>
-        [DataMember(Name = "filter_field", IsRequired = true, EmitDefaultValue = false)]
-        public string FilterField { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Operation
-        /// </summary>
-        [DataMember(Name = "operation", IsRequired = true, EmitDefaultValue = false)]
-        public string Operation { get; set; }
-
-        /// <summary>
-        /// Gets or Sets FilterValue
-        /// </summary>
-        [DataMember(Name = "filter_value", IsRequired = true, EmitDefaultValue = false)]
-        public decimal FilterValue { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class NotFilterNumber {\n");
-            sb.Append("  FilterField: ").Append(FilterField).Append("\n");
-            sb.Append("  Operation: ").Append(Operation).Append("\n");
-            sb.Append("  FilterValue: ").Append(FilterValue).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as NotFilterNumber);
-        }
-
-        /// <summary>
-        /// Returns true if NotFilterNumber instances are equal
-        /// </summary>
-        /// <param name="input">Instance of NotFilterNumber to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(NotFilterNumber input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.FilterField == input.FilterField ||
-                    (this.FilterField != null &&
-                    this.FilterField.Equals(input.FilterField))
-                ) && 
-                (
-                    this.Operation == input.Operation ||
-                    (this.Operation != null &&
-                    this.Operation.Equals(input.Operation))
-                ) && 
-                (
-                    this.FilterValue == input.FilterValue ||
-                    this.FilterValue.Equals(input.FilterValue)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.FilterField != null)
-                {
-                    hashCode = (hashCode * 59) + this.FilterField.GetHashCode();
-                }
-                if (this.Operation != null)
-                {
-                    hashCode = (hashCode * 59) + this.Operation.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.FilterValue.GetHashCode();
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/NotFilterString.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/NotFilterString.cs
deleted file mode 100755
index de4d8e3..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/NotFilterString.cs
+++ /dev/null
@@ -1,186 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Query filter
-    /// </summary>
-    [DataContract(Name = "notFilterString")]
-    public partial class NotFilterString : IEquatable<NotFilterString>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="NotFilterString" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected NotFilterString() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="NotFilterString" /> class.
-        /// </summary>
-        /// <param name="filterField">filterField (required).</param>
-        /// <param name="operation">operation (required).</param>
-        /// <param name="filterValue">filterValue (required).</param>
-        public NotFilterString(string filterField = default(string), string operation = default(string), string filterValue = default(string))
-        {
-            // to ensure "filterField" is required (not null)
-            if (filterField == null)
-            {
-                throw new ArgumentNullException("filterField is a required property for NotFilterString and cannot be null");
-            }
-            this.FilterField = filterField;
-            // to ensure "operation" is required (not null)
-            if (operation == null)
-            {
-                throw new ArgumentNullException("operation is a required property for NotFilterString and cannot be null");
-            }
-            this.Operation = operation;
-            // to ensure "filterValue" is required (not null)
-            if (filterValue == null)
-            {
-                throw new ArgumentNullException("filterValue is a required property for NotFilterString and cannot be null");
-            }
-            this.FilterValue = filterValue;
-        }
-
-        /// <summary>
-        /// Gets or Sets FilterField
-        /// </summary>
-        [DataMember(Name = "filter_field", IsRequired = true, EmitDefaultValue = false)]
-        public string FilterField { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Operation
-        /// </summary>
-        [DataMember(Name = "operation", IsRequired = true, EmitDefaultValue = false)]
-        public string Operation { get; set; }
-
-        /// <summary>
-        /// Gets or Sets FilterValue
-        /// </summary>
-        [DataMember(Name = "filter_value", IsRequired = true, EmitDefaultValue = false)]
-        public string FilterValue { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class NotFilterString {\n");
-            sb.Append("  FilterField: ").Append(FilterField).Append("\n");
-            sb.Append("  Operation: ").Append(Operation).Append("\n");
-            sb.Append("  FilterValue: ").Append(FilterValue).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as NotFilterString);
-        }
-
-        /// <summary>
-        /// Returns true if NotFilterString instances are equal
-        /// </summary>
-        /// <param name="input">Instance of NotFilterString to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(NotFilterString input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.FilterField == input.FilterField ||
-                    (this.FilterField != null &&
-                    this.FilterField.Equals(input.FilterField))
-                ) && 
-                (
-                    this.Operation == input.Operation ||
-                    (this.Operation != null &&
-                    this.Operation.Equals(input.Operation))
-                ) && 
-                (
-                    this.FilterValue == input.FilterValue ||
-                    (this.FilterValue != null &&
-                    this.FilterValue.Equals(input.FilterValue))
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.FilterField != null)
-                {
-                    hashCode = (hashCode * 59) + this.FilterField.GetHashCode();
-                }
-                if (this.Operation != null)
-                {
-                    hashCode = (hashCode * 59) + this.Operation.GetHashCode();
-                }
-                if (this.FilterValue != null)
-                {
-                    hashCode = (hashCode * 59) + this.FilterValue.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/PercolateRequest.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/PercolateRequest.cs
deleted file mode 100755
index 530977a..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/PercolateRequest.cs
+++ /dev/null
@@ -1,140 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Object with documents to percolate
-    /// </summary>
-    [DataContract(Name = "percolateRequest")]
-    public partial class PercolateRequest : IEquatable<PercolateRequest>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="PercolateRequest" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected PercolateRequest() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="PercolateRequest" /> class.
-        /// </summary>
-        /// <param name="query">query (required).</param>
-        public PercolateRequest(PercolateRequestQuery query = default(PercolateRequestQuery))
-        {
-            // to ensure "query" is required (not null)
-            if (query == null)
-            {
-                throw new ArgumentNullException("query is a required property for PercolateRequest and cannot be null");
-            }
-            this.Query = query;
-        }
-
-        /// <summary>
-        /// Gets or Sets Query
-        /// </summary>
-        [DataMember(Name = "query", IsRequired = true, EmitDefaultValue = false)]
-        public PercolateRequestQuery Query { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class PercolateRequest {\n");
-            sb.Append("  Query: ").Append(Query).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as PercolateRequest);
-        }
-
-        /// <summary>
-        /// Returns true if PercolateRequest instances are equal
-        /// </summary>
-        /// <param name="input">Instance of PercolateRequest to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(PercolateRequest input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Query == input.Query ||
-                    (this.Query != null &&
-                    this.Query.Equals(input.Query))
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Query != null)
-                {
-                    hashCode = (hashCode * 59) + this.Query.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/PercolateRequestQuery.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/PercolateRequestQuery.cs
deleted file mode 100755
index 2fc54a6..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/PercolateRequestQuery.cs
+++ /dev/null
@@ -1,157 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// PercolateRequestQuery
-    /// </summary>
-    [DataContract(Name = "percolateRequest_query")]
-    public partial class PercolateRequestQuery : IEquatable<PercolateRequestQuery>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="PercolateRequestQuery" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected PercolateRequestQuery()
-        {
-            this.AdditionalProperties = new Dictionary<string, object>();
-        }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="PercolateRequestQuery" /> class.
-        /// </summary>
-        /// <param name="percolate">percolate (required).</param>
-        public PercolateRequestQuery(Object percolate = default(Object)) : base()
-        {
-            // to ensure "percolate" is required (not null)
-            if (percolate == null)
-            {
-                throw new ArgumentNullException("percolate is a required property for PercolateRequestQuery and cannot be null");
-            }
-            this.Percolate = percolate;
-            this.AdditionalProperties = new Dictionary<string, object>();
-        }
-
-        /// <summary>
-        /// Gets or Sets Percolate
-        /// </summary>
-        [DataMember(Name = "percolate", IsRequired = true, EmitDefaultValue = false)]
-        public Object Percolate { get; set; }
-
-        /// <summary>
-        /// Gets or Sets additional properties
-        /// </summary>
-        [JsonExtensionData]
-        public IDictionary<string, object> AdditionalProperties { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class PercolateRequestQuery {\n");
-            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
-            sb.Append("  Percolate: ").Append(Percolate).Append("\n");
-            sb.Append("  AdditionalProperties: ").Append(AdditionalProperties).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as PercolateRequestQuery);
-        }
-
-        /// <summary>
-        /// Returns true if PercolateRequestQuery instances are equal
-        /// </summary>
-        /// <param name="input">Instance of PercolateRequestQuery to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(PercolateRequestQuery input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return base.Equals(input) && 
-                (
-                    this.Percolate == input.Percolate ||
-                    (this.Percolate != null &&
-                    this.Percolate.Equals(input.Percolate))
-                )
-                && (this.AdditionalProperties.Count == input.AdditionalProperties.Count && !this.AdditionalProperties.Except(input.AdditionalProperties).Any());
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = base.GetHashCode();
-                if (this.Percolate != null)
-                {
-                    hashCode = (hashCode * 59) + this.Percolate.GetHashCode();
-                }
-                if (this.AdditionalProperties != null)
-                {
-                    hashCode = (hashCode * 59) + this.AdditionalProperties.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/QueryFilter.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/QueryFilter.cs
deleted file mode 100755
index 09f2163..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/QueryFilter.cs
+++ /dev/null
@@ -1,140 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Query string filter
-    /// </summary>
-    [DataContract(Name = "queryFilter")]
-    public partial class QueryFilter : IEquatable<QueryFilter>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="QueryFilter" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected QueryFilter() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="QueryFilter" /> class.
-        /// </summary>
-        /// <param name="queryString">queryString (required).</param>
-        public QueryFilter(string queryString = default(string))
-        {
-            // to ensure "queryString" is required (not null)
-            if (queryString == null)
-            {
-                throw new ArgumentNullException("queryString is a required property for QueryFilter and cannot be null");
-            }
-            this.QueryString = queryString;
-        }
-
-        /// <summary>
-        /// Gets or Sets QueryString
-        /// </summary>
-        [DataMember(Name = "query_string", IsRequired = true, EmitDefaultValue = false)]
-        public string QueryString { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class QueryFilter {\n");
-            sb.Append("  QueryString: ").Append(QueryString).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as QueryFilter);
-        }
-
-        /// <summary>
-        /// Returns true if QueryFilter instances are equal
-        /// </summary>
-        /// <param name="input">Instance of QueryFilter to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(QueryFilter input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.QueryString == input.QueryString ||
-                    (this.QueryString != null &&
-                    this.QueryString.Equals(input.QueryString))
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.QueryString != null)
-                {
-                    hashCode = (hashCode * 59) + this.QueryString.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/RangeFilter.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/RangeFilter.cs
deleted file mode 100755
index 8bb6f21..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/RangeFilter.cs
+++ /dev/null
@@ -1,212 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Range attribute filter
-    /// </summary>
-    [DataContract(Name = "rangeFilter")]
-    public partial class RangeFilter : IEquatable<RangeFilter>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="RangeFilter" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected RangeFilter() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="RangeFilter" /> class.
-        /// </summary>
-        /// <param name="field">field (required).</param>
-        /// <param name="lte">lte.</param>
-        /// <param name="gte">gte.</param>
-        /// <param name="lt">lt.</param>
-        /// <param name="gt">gt.</param>
-        public RangeFilter(string field = default(string), decimal? lte = default(decimal?), decimal? gte = default(decimal?), decimal? lt = default(decimal?), decimal? gt = default(decimal?))
-        {
-            // to ensure "field" is required (not null)
-            if (field == null)
-            {
-                throw new ArgumentNullException("field is a required property for RangeFilter and cannot be null");
-            }
-            this.Field = field;
-            this.Lte = lte;
-            this.Gte = gte;
-            this.Lt = lt;
-            this.Gt = gt;
-        }
-
-        /// <summary>
-        /// Gets or Sets Field
-        /// </summary>
-        [DataMember(Name = "field", IsRequired = true, EmitDefaultValue = false)]
-        public string Field { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Lte
-        /// </summary>
-        [DataMember(Name = "lte", EmitDefaultValue = true)]
-        public decimal? Lte { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Gte
-        /// </summary>
-        [DataMember(Name = "gte", EmitDefaultValue = true)]
-        public decimal? Gte { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Lt
-        /// </summary>
-        [DataMember(Name = "lt", EmitDefaultValue = true)]
-        public decimal? Lt { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Gt
-        /// </summary>
-        [DataMember(Name = "gt", EmitDefaultValue = true)]
-        public decimal? Gt { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class RangeFilter {\n");
-            sb.Append("  Field: ").Append(Field).Append("\n");
-            sb.Append("  Lte: ").Append(Lte).Append("\n");
-            sb.Append("  Gte: ").Append(Gte).Append("\n");
-            sb.Append("  Lt: ").Append(Lt).Append("\n");
-            sb.Append("  Gt: ").Append(Gt).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as RangeFilter);
-        }
-
-        /// <summary>
-        /// Returns true if RangeFilter instances are equal
-        /// </summary>
-        /// <param name="input">Instance of RangeFilter to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(RangeFilter input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Field == input.Field ||
-                    (this.Field != null &&
-                    this.Field.Equals(input.Field))
-                ) && 
-                (
-                    this.Lte == input.Lte ||
-                    (this.Lte != null &&
-                    this.Lte.Equals(input.Lte))
-                ) && 
-                (
-                    this.Gte == input.Gte ||
-                    (this.Gte != null &&
-                    this.Gte.Equals(input.Gte))
-                ) && 
-                (
-                    this.Lt == input.Lt ||
-                    (this.Lt != null &&
-                    this.Lt.Equals(input.Lt))
-                ) && 
-                (
-                    this.Gt == input.Gt ||
-                    (this.Gt != null &&
-                    this.Gt.Equals(input.Gt))
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Field != null)
-                {
-                    hashCode = (hashCode * 59) + this.Field.GetHashCode();
-                }
-                if (this.Lte != null)
-                {
-                    hashCode = (hashCode * 59) + this.Lte.GetHashCode();
-                }
-                if (this.Gte != null)
-                {
-                    hashCode = (hashCode * 59) + this.Gte.GetHashCode();
-                }
-                if (this.Lt != null)
-                {
-                    hashCode = (hashCode * 59) + this.Lt.GetHashCode();
-                }
-                if (this.Gt != null)
-                {
-                    hashCode = (hashCode * 59) + this.Gt.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SearchRequest.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SearchRequest.cs
deleted file mode 100755
index 0b0735c..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SearchRequest.cs
+++ /dev/null
@@ -1,381 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Request object for search operation
-    /// </summary>
-    [DataContract(Name = "searchRequest")]
-    public partial class SearchRequest : IEquatable<SearchRequest>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="SearchRequest" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected SearchRequest() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="SearchRequest" /> class.
-        /// </summary>
-        /// <param name="index">index (required) (default to &quot;&quot;).</param>
-        /// <param name="query">query.</param>
-        /// <param name="fulltextFilter">fulltextFilter.</param>
-        /// <param name="attrFilter">attrFilter.</param>
-        /// <param name="limit">limit.</param>
-        /// <param name="offset">offset.</param>
-        /// <param name="maxMatches">maxMatches.</param>
-        /// <param name="sort">sort.</param>
-        /// <param name="aggs">aggs.</param>
-        /// <param name="expressions">expressions.</param>
-        /// <param name="highlight">highlight.</param>
-        /// <param name="source">source.</param>
-        /// <param name="options">options.</param>
-        /// <param name="profile">profile.</param>
-        /// <param name="trackScores">trackScores.</param>
-        public SearchRequest(string index = "", Object query = default(Object), Object fulltextFilter = default(Object), Object attrFilter = default(Object), int limit = default(int), int offset = default(int), int maxMatches = default(int), List<Object> sort = default(List<Object>), Dictionary<string, Aggregation> aggs = default(Dictionary<string, Aggregation>), Dictionary<string, string> expressions = default(Dictionary<string, string>), Highlight highlight = default(Highlight), Object source = default(Object), Dictionary<string, Object> options = default(Dictionary<string, Object>), bool profile = default(bool), bool trackScores = default(bool))
-        {
-            // to ensure "index" is required (not null)
-            if (index == null)
-            {
-                throw new ArgumentNullException("index is a required property for SearchRequest and cannot be null");
-            }
-            this.Index = index;
-            this.Query = query;
-            this.FulltextFilter = fulltextFilter;
-            this.AttrFilter = attrFilter;
-            this.Limit = limit;
-            this.Offset = offset;
-            this.MaxMatches = maxMatches;
-            this.Sort = sort;
-            this.Aggs = aggs;
-            this.Expressions = expressions;
-            this.Highlight = highlight;
-            this.Source = source;
-            this.Options = options;
-            this.Profile = profile;
-            this.TrackScores = trackScores;
-        }
-
-        /// <summary>
-        /// Gets or Sets Index
-        /// </summary>
-        [DataMember(Name = "index", IsRequired = true, EmitDefaultValue = false)]
-        public string Index { get; set; }
-
-        Object _Query;
-        /// <summary>
-        /// Gets or Sets Query
-        /// </summary>
-        [DataMember(Name = "query", EmitDefaultValue = false)]
-        public Object Query 
-        {
-         	get { return _Query; } 
-        	set { _Query = value; this.FulltextFilter = null; this.AttrFilter = null; }  
-        }
-
-        /// <summary>
-        /// Gets or Sets FulltextFilter
-        /// </summary>
-        [DataMember(Name = "fulltext_filter", EmitDefaultValue = false)]
-        public Object FulltextFilter { get; set; }
-
-        /// <summary>
-        /// Gets or Sets AttrFilter
-        /// </summary>
-        [DataMember(Name = "attr_filter", EmitDefaultValue = false)]
-        public Object AttrFilter { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Limit
-        /// </summary>
-        [DataMember(Name = "limit", EmitDefaultValue = false)]
-        public int Limit { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Offset
-        /// </summary>
-        [DataMember(Name = "offset", EmitDefaultValue = false)]
-        public int Offset { get; set; }
-
-        /// <summary>
-        /// Gets or Sets MaxMatches
-        /// </summary>
-        [DataMember(Name = "max_matches", EmitDefaultValue = false)]
-        public int MaxMatches { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Sort
-        /// </summary>
-        [DataMember(Name = "sort", EmitDefaultValue = false)]
-        public List<Object> Sort { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Aggs
-        /// </summary>
-        [DataMember(Name = "aggs", EmitDefaultValue = false)]
-        public Dictionary<string, Aggregation> Aggs { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Expressions
-        /// </summary>
-        [DataMember(Name = "expressions", EmitDefaultValue = false)]
-        public Dictionary<string, string> Expressions { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Highlight
-        /// </summary>
-        [DataMember(Name = "highlight", EmitDefaultValue = false)]
-        public Highlight Highlight { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Source
-        /// </summary>
-        [DataMember(Name = "source", EmitDefaultValue = false)]
-        public Object Source { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Options
-        /// </summary>
-        [DataMember(Name = "options", EmitDefaultValue = false)]
-        public Dictionary<string, Object> Options { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Profile
-        /// </summary>
-        [DataMember(Name = "profile", EmitDefaultValue = true)]
-        public bool Profile { get; set; }
-
-        /// <summary>
-        /// Gets or Sets TrackScores
-        /// </summary>
-        [DataMember(Name = "track_scores", EmitDefaultValue = true)]
-        public bool TrackScores { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class SearchRequest {\n");
-            sb.Append("  Index: ").Append(Index).Append("\n");
-            sb.Append("  Query: ").Append(Query).Append("\n");
-            sb.Append("  FulltextFilter: ").Append(FulltextFilter).Append("\n");
-            sb.Append("  AttrFilter: ").Append(AttrFilter).Append("\n");
-            sb.Append("  Limit: ").Append(Limit).Append("\n");
-            sb.Append("  Offset: ").Append(Offset).Append("\n");
-            sb.Append("  MaxMatches: ").Append(MaxMatches).Append("\n");
-            sb.Append("  Sort: ").Append(Sort).Append("\n");
-            sb.Append("  Aggs: ").Append(Aggs).Append("\n");
-            sb.Append("  Expressions: ").Append(Expressions).Append("\n");
-            sb.Append("  Highlight: ").Append(Highlight).Append("\n");
-            sb.Append("  Source: ").Append(Source).Append("\n");
-            sb.Append("  Options: ").Append(Options).Append("\n");
-            sb.Append("  Profile: ").Append(Profile).Append("\n");
-            sb.Append("  TrackScores: ").Append(TrackScores).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as SearchRequest);
-        }
-
-        /// <summary>
-        /// Returns true if SearchRequest instances are equal
-        /// </summary>
-        /// <param name="input">Instance of SearchRequest to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(SearchRequest input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Index == input.Index ||
-                    (this.Index != null &&
-                    this.Index.Equals(input.Index))
-                ) && 
-                (
-                    this.Query == input.Query ||
-                    (this.Query != null &&
-                    this.Query.Equals(input.Query))
-                ) && 
-                (
-                    this.FulltextFilter == input.FulltextFilter ||
-                    (this.FulltextFilter != null &&
-                    this.FulltextFilter.Equals(input.FulltextFilter))
-                ) && 
-                (
-                    this.AttrFilter == input.AttrFilter ||
-                    (this.AttrFilter != null &&
-                    this.AttrFilter.Equals(input.AttrFilter))
-                ) && 
-                (
-                    this.Limit == input.Limit ||
-                    this.Limit.Equals(input.Limit)
-                ) && 
-                (
-                    this.Offset == input.Offset ||
-                    this.Offset.Equals(input.Offset)
-                ) && 
-                (
-                    this.MaxMatches == input.MaxMatches ||
-                    this.MaxMatches.Equals(input.MaxMatches)
-                ) && 
-                (
-                    this.Sort == input.Sort ||
-                    this.Sort != null &&
-                    input.Sort != null &&
-                    this.Sort.SequenceEqual(input.Sort)
-                ) && 
-                (
-                    this.Aggs == input.Aggs ||
-                    this.Aggs != null &&
-                    input.Aggs != null &&
-                    this.Aggs.SequenceEqual(input.Aggs)
-                ) && 
-                (
-                    this.Expressions == input.Expressions ||
-                    this.Expressions != null &&
-                    input.Expressions != null &&
-                    this.Expressions.SequenceEqual(input.Expressions)
-                ) && 
-                (
-                    this.Highlight == input.Highlight ||
-                    (this.Highlight != null &&
-                    this.Highlight.Equals(input.Highlight))
-                ) && 
-                (
-                    this.Source == input.Source ||
-                    (this.Source != null &&
-                    this.Source.Equals(input.Source))
-                ) && 
-                (
-                    this.Options == input.Options ||
-                    this.Options != null &&
-                    input.Options != null &&
-                    this.Options.SequenceEqual(input.Options)
-                ) && 
-                (
-                    this.Profile == input.Profile ||
-                    this.Profile.Equals(input.Profile)
-                ) && 
-                (
-                    this.TrackScores == input.TrackScores ||
-                    this.TrackScores.Equals(input.TrackScores)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Index != null)
-                {
-                    hashCode = (hashCode * 59) + this.Index.GetHashCode();
-                }
-                if (this.Query != null)
-                {
-                    hashCode = (hashCode * 59) + this.Query.GetHashCode();
-                }
-                if (this.FulltextFilter != null)
-                {
-                    hashCode = (hashCode * 59) + this.FulltextFilter.GetHashCode();
-                }
-                if (this.AttrFilter != null)
-                {
-                    hashCode = (hashCode * 59) + this.AttrFilter.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.Limit.GetHashCode();
-                hashCode = (hashCode * 59) + this.Offset.GetHashCode();
-                hashCode = (hashCode * 59) + this.MaxMatches.GetHashCode();
-                if (this.Sort != null)
-                {
-                    hashCode = (hashCode * 59) + this.Sort.GetHashCode();
-                }
-                if (this.Aggs != null)
-                {
-                    hashCode = (hashCode * 59) + this.Aggs.GetHashCode();
-                }
-                if (this.Expressions != null)
-                {
-                    hashCode = (hashCode * 59) + this.Expressions.GetHashCode();
-                }
-                if (this.Highlight != null)
-                {
-                    hashCode = (hashCode * 59) + this.Highlight.GetHashCode();
-                }
-                if (this.Source != null)
-                {
-                    hashCode = (hashCode * 59) + this.Source.GetHashCode();
-                }
-                if (this.Options != null)
-                {
-                    hashCode = (hashCode * 59) + this.Options.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.Profile.GetHashCode();
-                hashCode = (hashCode * 59) + this.TrackScores.GetHashCode();
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SearchResponse.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SearchResponse.cs
deleted file mode 100755
index 417b61a..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SearchResponse.cs
+++ /dev/null
@@ -1,214 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Response object of a search request
-    /// </summary>
-    [DataContract(Name = "searchResponse")]
-    public partial class SearchResponse : IEquatable<SearchResponse>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="SearchResponse" /> class.
-        /// </summary>
-        /// <param name="took">took.</param>
-        /// <param name="timedOut">timedOut.</param>
-        /// <param name="aggregations">aggregations.</param>
-        /// <param name="hits">hits.</param>
-        /// <param name="profile">profile.</param>
-        /// <param name="warning">warning.</param>
-        public SearchResponse(int took = default(int), bool timedOut = default(bool), Dictionary<string, Object> aggregations = default(Dictionary<string, Object>), SearchResponseHits hits = default(SearchResponseHits), Object profile = default(Object), Dictionary<string, Object> warning = default(Dictionary<string, Object>))
-        {
-            this.Took = took;
-            this.TimedOut = timedOut;
-            this.Aggregations = aggregations;
-            this.Hits = hits;
-            this.Profile = profile;
-            this.Warning = warning;
-        }
-
-        /// <summary>
-        /// Gets or Sets Took
-        /// </summary>
-        [DataMember(Name = "took", EmitDefaultValue = false)]
-        public int Took { get; set; }
-
-        /// <summary>
-        /// Gets or Sets TimedOut
-        /// </summary>
-        [DataMember(Name = "timed_out", EmitDefaultValue = true)]
-        public bool TimedOut { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Aggregations
-        /// </summary>
-        [DataMember(Name = "aggregations", EmitDefaultValue = false)]
-        public Dictionary<string, Object> Aggregations { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Hits
-        /// </summary>
-        [DataMember(Name = "hits", EmitDefaultValue = false)]
-        public SearchResponseHits Hits { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Profile
-        /// </summary>
-        [DataMember(Name = "profile", EmitDefaultValue = false)]
-        public Object Profile { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Warning
-        /// </summary>
-        [DataMember(Name = "warning", EmitDefaultValue = false)]
-        public Dictionary<string, Object> Warning { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class SearchResponse {\n");
-            sb.Append("  Took: ").Append(Took).Append("\n");
-            sb.Append("  TimedOut: ").Append(TimedOut).Append("\n");
-            sb.Append("  Aggregations: ").Append(Aggregations).Append("\n");
-            sb.Append("  Hits: ").Append(Hits).Append("\n");
-            sb.Append("  Profile: ").Append(Profile).Append("\n");
-            sb.Append("  Warning: ").Append(Warning).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as SearchResponse);
-        }
-
-        /// <summary>
-        /// Returns true if SearchResponse instances are equal
-        /// </summary>
-        /// <param name="input">Instance of SearchResponse to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(SearchResponse input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Took == input.Took ||
-                    this.Took.Equals(input.Took)
-                ) && 
-                (
-                    this.TimedOut == input.TimedOut ||
-                    this.TimedOut.Equals(input.TimedOut)
-                ) && 
-                (
-                    this.Aggregations == input.Aggregations ||
-                    this.Aggregations != null &&
-                    input.Aggregations != null &&
-                    this.Aggregations.SequenceEqual(input.Aggregations)
-                ) && 
-                (
-                    this.Hits == input.Hits ||
-                    (this.Hits != null &&
-                    this.Hits.Equals(input.Hits))
-                ) && 
-                (
-                    this.Profile == input.Profile ||
-                    (this.Profile != null &&
-                    this.Profile.Equals(input.Profile))
-                ) && 
-                (
-                    this.Warning == input.Warning ||
-                    this.Warning != null &&
-                    input.Warning != null &&
-                    this.Warning.SequenceEqual(input.Warning)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                hashCode = (hashCode * 59) + this.Took.GetHashCode();
-                hashCode = (hashCode * 59) + this.TimedOut.GetHashCode();
-                if (this.Aggregations != null)
-                {
-                    hashCode = (hashCode * 59) + this.Aggregations.GetHashCode();
-                }
-                if (this.Hits != null)
-                {
-                    hashCode = (hashCode * 59) + this.Hits.GetHashCode();
-                }
-                if (this.Profile != null)
-                {
-                    hashCode = (hashCode * 59) + this.Profile.GetHashCode();
-                }
-                if (this.Warning != null)
-                {
-                    hashCode = (hashCode * 59) + this.Warning.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SearchResponseHits.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SearchResponseHits.cs
deleted file mode 100755
index b3134da..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SearchResponseHits.cs
+++ /dev/null
@@ -1,177 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// SearchResponseHits
-    /// </summary>
-    [DataContract(Name = "searchResponse_hits")]
-    public partial class SearchResponseHits : IEquatable<SearchResponseHits>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="SearchResponseHits" /> class.
-        /// </summary>
-        /// <param name="maxScore">maxScore.</param>
-        /// <param name="total">total.</param>
-        /// <param name="totalRelation">totalRelation.</param>
-        /// <param name="hits">hits.</param>
-        public SearchResponseHits(int maxScore = default(int), int total = default(int), string totalRelation = default(string), List<Object> hits = default(List<Object>))
-        {
-            this.MaxScore = maxScore;
-            this.Total = total;
-            this.TotalRelation = totalRelation;
-            this.Hits = hits;
-        }
-
-        /// <summary>
-        /// Gets or Sets MaxScore
-        /// </summary>
-        [DataMember(Name = "max_score", EmitDefaultValue = false)]
-        public int MaxScore { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Total
-        /// </summary>
-        [DataMember(Name = "total", EmitDefaultValue = false)]
-        public int Total { get; set; }
-
-        /// <summary>
-        /// Gets or Sets TotalRelation
-        /// </summary>
-        [DataMember(Name = "total_relation", EmitDefaultValue = false)]
-        public string TotalRelation { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Hits
-        /// </summary>
-        [DataMember(Name = "hits", EmitDefaultValue = false)]
-        public List<Object> Hits { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class SearchResponseHits {\n");
-            sb.Append("  MaxScore: ").Append(MaxScore).Append("\n");
-            sb.Append("  Total: ").Append(Total).Append("\n");
-            sb.Append("  TotalRelation: ").Append(TotalRelation).Append("\n");
-            sb.Append("  Hits: ").Append(Hits).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as SearchResponseHits);
-        }
-
-        /// <summary>
-        /// Returns true if SearchResponseHits instances are equal
-        /// </summary>
-        /// <param name="input">Instance of SearchResponseHits to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(SearchResponseHits input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.MaxScore == input.MaxScore ||
-                    this.MaxScore.Equals(input.MaxScore)
-                ) && 
-                (
-                    this.Total == input.Total ||
-                    this.Total.Equals(input.Total)
-                ) && 
-                (
-                    this.TotalRelation == input.TotalRelation ||
-                    (this.TotalRelation != null &&
-                    this.TotalRelation.Equals(input.TotalRelation))
-                ) && 
-                (
-                    this.Hits == input.Hits ||
-                    this.Hits != null &&
-                    input.Hits != null &&
-                    this.Hits.SequenceEqual(input.Hits)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                hashCode = (hashCode * 59) + this.MaxScore.GetHashCode();
-                hashCode = (hashCode * 59) + this.Total.GetHashCode();
-                if (this.TotalRelation != null)
-                {
-                    hashCode = (hashCode * 59) + this.TotalRelation.GetHashCode();
-                }
-                if (this.Hits != null)
-                {
-                    hashCode = (hashCode * 59) + this.Hits.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SortMVA.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SortMVA.cs
deleted file mode 100755
index 457b9e6..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SortMVA.cs
+++ /dev/null
@@ -1,208 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Query sort expression for MVA attributes
-    /// </summary>
-    [DataContract(Name = "sortMVA")]
-    public partial class SortMVA : IEquatable<SortMVA>, IValidatableObject
-    {
-        /// <summary>
-        /// Defines Order
-        /// </summary>
-        [JsonConverter(typeof(StringEnumConverter))]
-        public enum OrderEnum
-        {
-            /// <summary>
-            /// Enum Asc for value: asc
-            /// </summary>
-            [EnumMember(Value = "asc")]
-            Asc = 1,
-
-            /// <summary>
-            /// Enum Desc for value: desc
-            /// </summary>
-            [EnumMember(Value = "desc")]
-            Desc = 2
-
-        }
-
-
-        /// <summary>
-        /// Gets or Sets Order
-        /// </summary>
-        [DataMember(Name = "order", IsRequired = true, EmitDefaultValue = false)]
-        public OrderEnum Order { get; set; }
-        /// <summary>
-        /// Defines Mode
-        /// </summary>
-        [JsonConverter(typeof(StringEnumConverter))]
-        public enum ModeEnum
-        {
-            /// <summary>
-            /// Enum Min for value: min
-            /// </summary>
-            [EnumMember(Value = "min")]
-            Min = 1,
-
-            /// <summary>
-            /// Enum Max for value: max
-            /// </summary>
-            [EnumMember(Value = "max")]
-            Max = 2
-
-        }
-
-
-        /// <summary>
-        /// Gets or Sets Mode
-        /// </summary>
-        [DataMember(Name = "mode", IsRequired = true, EmitDefaultValue = false)]
-        public ModeEnum Mode { get; set; }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="SortMVA" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected SortMVA() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="SortMVA" /> class.
-        /// </summary>
-        /// <param name="attr">attr (required).</param>
-        /// <param name="order">order (required).</param>
-        /// <param name="mode">mode (required).</param>
-        public SortMVA(string attr = default(string), OrderEnum order = default(OrderEnum), ModeEnum mode = default(ModeEnum))
-        {
-            // to ensure "attr" is required (not null)
-            if (attr == null)
-            {
-                throw new ArgumentNullException("attr is a required property for SortMVA and cannot be null");
-            }
-            this.Attr = attr;
-            this.Order = order;
-            this.Mode = mode;
-        }
-
-        /// <summary>
-        /// Gets or Sets Attr
-        /// </summary>
-        [DataMember(Name = "attr", IsRequired = true, EmitDefaultValue = false)]
-        public string Attr { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class SortMVA {\n");
-            sb.Append("  Attr: ").Append(Attr).Append("\n");
-            sb.Append("  Order: ").Append(Order).Append("\n");
-            sb.Append("  Mode: ").Append(Mode).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as SortMVA);
-        }
-
-        /// <summary>
-        /// Returns true if SortMVA instances are equal
-        /// </summary>
-        /// <param name="input">Instance of SortMVA to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(SortMVA input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Attr == input.Attr ||
-                    (this.Attr != null &&
-                    this.Attr.Equals(input.Attr))
-                ) && 
-                (
-                    this.Order == input.Order ||
-                    this.Order.Equals(input.Order)
-                ) && 
-                (
-                    this.Mode == input.Mode ||
-                    this.Mode.Equals(input.Mode)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Attr != null)
-                {
-                    hashCode = (hashCode * 59) + this.Attr.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.Order.GetHashCode();
-                hashCode = (hashCode * 59) + this.Mode.GetHashCode();
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SortMultiple.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SortMultiple.cs
deleted file mode 100755
index 9461f15..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SortMultiple.cs
+++ /dev/null
@@ -1,155 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Query sort expression for multiple attributes
-    /// </summary>
-    [DataContract(Name = "sortMultiple")]
-    public partial class SortMultiple : IEquatable<SortMultiple>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="SortMultiple" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected SortMultiple() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="SortMultiple" /> class.
-        /// </summary>
-        /// <param name="attrs">attrs (required).</param>
-        /// <param name="replace">replace (required).</param>
-        public SortMultiple(Dictionary<string, Object> attrs = default(Dictionary<string, Object>), bool replace = default(bool))
-        {
-            // to ensure "attrs" is required (not null)
-            if (attrs == null)
-            {
-                throw new ArgumentNullException("attrs is a required property for SortMultiple and cannot be null");
-            }
-            this.Attrs = attrs;
-            this.Replace = replace;
-        }
-
-        /// <summary>
-        /// Gets or Sets Attrs
-        /// </summary>
-        [DataMember(Name = "attrs", IsRequired = true, EmitDefaultValue = false)]
-        public Dictionary<string, Object> Attrs { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Replace
-        /// </summary>
-        [DataMember(Name = "replace", IsRequired = true, EmitDefaultValue = true)]
-        public bool Replace { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class SortMultiple {\n");
-            sb.Append("  Attrs: ").Append(Attrs).Append("\n");
-            sb.Append("  Replace: ").Append(Replace).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as SortMultiple);
-        }
-
-        /// <summary>
-        /// Returns true if SortMultiple instances are equal
-        /// </summary>
-        /// <param name="input">Instance of SortMultiple to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(SortMultiple input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Attrs == input.Attrs ||
-                    this.Attrs != null &&
-                    input.Attrs != null &&
-                    this.Attrs.SequenceEqual(input.Attrs)
-                ) && 
-                (
-                    this.Replace == input.Replace ||
-                    this.Replace.Equals(input.Replace)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Attrs != null)
-                {
-                    hashCode = (hashCode * 59) + this.Attrs.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.Replace.GetHashCode();
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SortOrder.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SortOrder.cs
deleted file mode 100755
index 1501f16..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SortOrder.cs
+++ /dev/null
@@ -1,174 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Query sort expression
-    /// </summary>
-    [DataContract(Name = "sortOrder")]
-    public partial class SortOrder : IEquatable<SortOrder>, IValidatableObject
-    {
-        /// <summary>
-        /// Defines Order
-        /// </summary>
-        [JsonConverter(typeof(StringEnumConverter))]
-        public enum OrderEnum
-        {
-            /// <summary>
-            /// Enum Asc for value: asc
-            /// </summary>
-            [EnumMember(Value = "asc")]
-            Asc = 1,
-
-            /// <summary>
-            /// Enum Desc for value: desc
-            /// </summary>
-            [EnumMember(Value = "desc")]
-            Desc = 2
-
-        }
-
-
-        /// <summary>
-        /// Gets or Sets Order
-        /// </summary>
-        [DataMember(Name = "order", IsRequired = true, EmitDefaultValue = false)]
-        public OrderEnum Order { get; set; }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="SortOrder" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected SortOrder() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="SortOrder" /> class.
-        /// </summary>
-        /// <param name="attr">attr (required).</param>
-        /// <param name="order">order (required).</param>
-        public SortOrder(string attr = default(string), OrderEnum order = default(OrderEnum))
-        {
-            // to ensure "attr" is required (not null)
-            if (attr == null)
-            {
-                throw new ArgumentNullException("attr is a required property for SortOrder and cannot be null");
-            }
-            this.Attr = attr;
-            this.Order = order;
-        }
-
-        /// <summary>
-        /// Gets or Sets Attr
-        /// </summary>
-        [DataMember(Name = "attr", IsRequired = true, EmitDefaultValue = false)]
-        public string Attr { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class SortOrder {\n");
-            sb.Append("  Attr: ").Append(Attr).Append("\n");
-            sb.Append("  Order: ").Append(Order).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as SortOrder);
-        }
-
-        /// <summary>
-        /// Returns true if SortOrder instances are equal
-        /// </summary>
-        /// <param name="input">Instance of SortOrder to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(SortOrder input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Attr == input.Attr ||
-                    (this.Attr != null &&
-                    this.Attr.Equals(input.Attr))
-                ) && 
-                (
-                    this.Order == input.Order ||
-                    this.Order.Equals(input.Order)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Attr != null)
-                {
-                    hashCode = (hashCode * 59) + this.Attr.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.Order.GetHashCode();
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SourceByRules.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SourceByRules.cs
deleted file mode 100755
index 7f7d34c..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SourceByRules.cs
+++ /dev/null
@@ -1,165 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Query fields to be included/excluded to/from response
-    /// </summary>
-    [DataContract(Name = "sourceByRules")]
-    public partial class SourceByRules : IEquatable<SourceByRules>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="SourceByRules" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected SourceByRules() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="SourceByRules" /> class.
-        /// </summary>
-        /// <param name="includes">includes (required).</param>
-        /// <param name="excludes">excludes (required).</param>
-        public SourceByRules(List<string> includes = default(List<string>), List<string> excludes = default(List<string>))
-        {
-            // to ensure "includes" is required (not null)
-            if (includes == null)
-            {
-                throw new ArgumentNullException("includes is a required property for SourceByRules and cannot be null");
-            }
-            this.Includes = includes;
-            // to ensure "excludes" is required (not null)
-            if (excludes == null)
-            {
-                throw new ArgumentNullException("excludes is a required property for SourceByRules and cannot be null");
-            }
-            this.Excludes = excludes;
-        }
-
-        /// <summary>
-        /// Gets or Sets Includes
-        /// </summary>
-        [DataMember(Name = "includes", IsRequired = true, EmitDefaultValue = false)]
-        public List<string> Includes { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Excludes
-        /// </summary>
-        [DataMember(Name = "excludes", IsRequired = true, EmitDefaultValue = false)]
-        public List<string> Excludes { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class SourceByRules {\n");
-            sb.Append("  Includes: ").Append(Includes).Append("\n");
-            sb.Append("  Excludes: ").Append(Excludes).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as SourceByRules);
-        }
-
-        /// <summary>
-        /// Returns true if SourceByRules instances are equal
-        /// </summary>
-        /// <param name="input">Instance of SourceByRules to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(SourceByRules input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Includes == input.Includes ||
-                    this.Includes != null &&
-                    input.Includes != null &&
-                    this.Includes.SequenceEqual(input.Includes)
-                ) && 
-                (
-                    this.Excludes == input.Excludes ||
-                    this.Excludes != null &&
-                    input.Excludes != null &&
-                    this.Excludes.SequenceEqual(input.Excludes)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Includes != null)
-                {
-                    hashCode = (hashCode * 59) + this.Includes.GetHashCode();
-                }
-                if (this.Excludes != null)
-                {
-                    hashCode = (hashCode * 59) + this.Excludes.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SuccessResponse.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SuccessResponse.cs
deleted file mode 100755
index bce65fe..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/SuccessResponse.cs
+++ /dev/null
@@ -1,190 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Success response
-    /// </summary>
-    [DataContract(Name = "successResponse")]
-    public partial class SuccessResponse : IEquatable<SuccessResponse>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="SuccessResponse" /> class.
-        /// </summary>
-        /// <param name="index">index.</param>
-        /// <param name="id">id.</param>
-        /// <param name="created">created.</param>
-        /// <param name="result">result.</param>
-        /// <param name="found">found.</param>
-        public SuccessResponse(string index = default(string), long id = default(long), bool created = default(bool), string result = default(string), bool found = default(bool))
-        {
-            this.Index = index;
-            this.Id = id;
-            this.Created = created;
-            this.Result = result;
-            this.Found = found;
-        }
-
-        /// <summary>
-        /// Gets or Sets Index
-        /// </summary>
-        [DataMember(Name = "_index", EmitDefaultValue = false)]
-        public string Index { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Id
-        /// </summary>
-        [DataMember(Name = "_id", EmitDefaultValue = false)]
-        public long Id { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Created
-        /// </summary>
-        [DataMember(Name = "created", EmitDefaultValue = true)]
-        public bool Created { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Result
-        /// </summary>
-        [DataMember(Name = "result", EmitDefaultValue = false)]
-        public string Result { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Found
-        /// </summary>
-        [DataMember(Name = "found", EmitDefaultValue = true)]
-        public bool Found { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class SuccessResponse {\n");
-            sb.Append("  Index: ").Append(Index).Append("\n");
-            sb.Append("  Id: ").Append(Id).Append("\n");
-            sb.Append("  Created: ").Append(Created).Append("\n");
-            sb.Append("  Result: ").Append(Result).Append("\n");
-            sb.Append("  Found: ").Append(Found).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as SuccessResponse);
-        }
-
-        /// <summary>
-        /// Returns true if SuccessResponse instances are equal
-        /// </summary>
-        /// <param name="input">Instance of SuccessResponse to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(SuccessResponse input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Index == input.Index ||
-                    (this.Index != null &&
-                    this.Index.Equals(input.Index))
-                ) && 
-                (
-                    this.Id == input.Id ||
-                    this.Id.Equals(input.Id)
-                ) && 
-                (
-                    this.Created == input.Created ||
-                    this.Created.Equals(input.Created)
-                ) && 
-                (
-                    this.Result == input.Result ||
-                    (this.Result != null &&
-                    this.Result.Equals(input.Result))
-                ) && 
-                (
-                    this.Found == input.Found ||
-                    this.Found.Equals(input.Found)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Index != null)
-                {
-                    hashCode = (hashCode * 59) + this.Index.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.Id.GetHashCode();
-                hashCode = (hashCode * 59) + this.Created.GetHashCode();
-                if (this.Result != null)
-                {
-                    hashCode = (hashCode * 59) + this.Result.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.Found.GetHashCode();
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/UpdateDocumentRequest.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/UpdateDocumentRequest.cs
deleted file mode 100755
index 014096e..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/UpdateDocumentRequest.cs
+++ /dev/null
@@ -1,200 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Payload for update document
-    /// </summary>
-    [DataContract(Name = "updateDocumentRequest")]
-    public partial class UpdateDocumentRequest : IEquatable<UpdateDocumentRequest>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="UpdateDocumentRequest" /> class.
-        /// </summary>
-        [JsonConstructorAttribute]
-        protected UpdateDocumentRequest() { }
-        /// <summary>
-        /// Initializes a new instance of the <see cref="UpdateDocumentRequest" /> class.
-        /// </summary>
-        /// <param name="index">index (required).</param>
-        /// <param name="doc">Index name (required).</param>
-        /// <param name="id">Document ID.</param>
-        /// <param name="query">Query tree object.</param>
-        public UpdateDocumentRequest(string index = default(string), Dictionary<string, Object> doc = default(Dictionary<string, Object>), long id = default(long), Dictionary<string, Object> query = default(Dictionary<string, Object>))
-        {
-            // to ensure "index" is required (not null)
-            if (index == null)
-            {
-                throw new ArgumentNullException("index is a required property for UpdateDocumentRequest and cannot be null");
-            }
-            this.Index = index;
-            // to ensure "doc" is required (not null)
-            if (doc == null)
-            {
-                throw new ArgumentNullException("doc is a required property for UpdateDocumentRequest and cannot be null");
-            }
-            this.Doc = doc;
-            this.Id = id;
-            this.Query = query;
-        }
-
-        /// <summary>
-        /// Gets or Sets Index
-        /// </summary>
-        [DataMember(Name = "index", IsRequired = true, EmitDefaultValue = false)]
-        public string Index { get; set; }
-
-        /// <summary>
-        /// Index name
-        /// </summary>
-        /// <value>Index name</value>
-        [DataMember(Name = "doc", IsRequired = true, EmitDefaultValue = false)]
-        public Dictionary<string, Object> Doc { get; set; }
-
-        /// <summary>
-        /// Document ID
-        /// </summary>
-        /// <value>Document ID</value>
-        [DataMember(Name = "id", EmitDefaultValue = false)]
-        public long Id { get; set; }
-
-        /// <summary>
-        /// Query tree object
-        /// </summary>
-        /// <value>Query tree object</value>
-        [DataMember(Name = "query", EmitDefaultValue = true)]
-        public Dictionary<string, Object> Query { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class UpdateDocumentRequest {\n");
-            sb.Append("  Index: ").Append(Index).Append("\n");
-            sb.Append("  Doc: ").Append(Doc).Append("\n");
-            sb.Append("  Id: ").Append(Id).Append("\n");
-            sb.Append("  Query: ").Append(Query).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as UpdateDocumentRequest);
-        }
-
-        /// <summary>
-        /// Returns true if UpdateDocumentRequest instances are equal
-        /// </summary>
-        /// <param name="input">Instance of UpdateDocumentRequest to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(UpdateDocumentRequest input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Index == input.Index ||
-                    (this.Index != null &&
-                    this.Index.Equals(input.Index))
-                ) && 
-                (
-                    this.Doc == input.Doc ||
-                    this.Doc != null &&
-                    input.Doc != null &&
-                    this.Doc.SequenceEqual(input.Doc)
-                ) && 
-                (
-                    this.Id == input.Id ||
-                    this.Id.Equals(input.Id)
-                ) && 
-                (
-                    this.Query == input.Query ||
-                    this.Query != null &&
-                    input.Query != null &&
-                    this.Query.SequenceEqual(input.Query)
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Index != null)
-                {
-                    hashCode = (hashCode * 59) + this.Index.GetHashCode();
-                }
-                if (this.Doc != null)
-                {
-                    hashCode = (hashCode * 59) + this.Doc.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.Id.GetHashCode();
-                if (this.Query != null)
-                {
-                    hashCode = (hashCode * 59) + this.Query.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/UpdateResponse.cs b/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/UpdateResponse.cs
deleted file mode 100755
index 42f78f3..0000000
--- a/out/manticoresearch-csharp-actual/src/ManticoreSearch/Model/UpdateResponse.cs
+++ /dev/null
@@ -1,176 +0,0 @@
-/*
- * Manticore Search Client
- *
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- * Generated by: https://github.com/openapitools/openapi-generator.git
- */
-
-
-using System;
-using System.Collections;
-using System.Collections.Generic;
-using System.Collections.ObjectModel;
-using System.Linq;
-using System.IO;
-using System.Runtime.Serialization;
-using System.Text;
-using System.Text.RegularExpressions;
-using Newtonsoft.Json;
-using Newtonsoft.Json.Converters;
-using Newtonsoft.Json.Linq;
-using System.ComponentModel.DataAnnotations;
-using FileParameter = ManticoreSearch.Client.FileParameter;
-using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;
-
-namespace ManticoreSearch.Model
-{
-    /// <summary>
-    /// Success response
-    /// </summary>
-    [DataContract(Name = "updateResponse")]
-    public partial class UpdateResponse : IEquatable<UpdateResponse>, IValidatableObject
-    {
-        /// <summary>
-        /// Initializes a new instance of the <see cref="UpdateResponse" /> class.
-        /// </summary>
-        /// <param name="index">index.</param>
-        /// <param name="updated">updated.</param>
-        /// <param name="id">id.</param>
-        /// <param name="result">result.</param>
-        public UpdateResponse(string index = default(string), int updated = default(int), long id = default(long), string result = default(string))
-        {
-            this.Index = index;
-            this.Updated = updated;
-            this.Id = id;
-            this.Result = result;
-        }
-
-        /// <summary>
-        /// Gets or Sets Index
-        /// </summary>
-        [DataMember(Name = "_index", EmitDefaultValue = false)]
-        public string Index { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Updated
-        /// </summary>
-        [DataMember(Name = "updated", EmitDefaultValue = false)]
-        public int Updated { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Id
-        /// </summary>
-        [DataMember(Name = "_id", EmitDefaultValue = false)]
-        public long Id { get; set; }
-
-        /// <summary>
-        /// Gets or Sets Result
-        /// </summary>
-        [DataMember(Name = "result", EmitDefaultValue = false)]
-        public string Result { get; set; }
-
-        /// <summary>
-        /// Returns the string presentation of the object
-        /// </summary>
-        /// <returns>String presentation of the object</returns>
-        public override string ToString()
-        {
-            StringBuilder sb = new StringBuilder();
-            sb.Append("class UpdateResponse {\n");
-            sb.Append("  Index: ").Append(Index).Append("\n");
-            sb.Append("  Updated: ").Append(Updated).Append("\n");
-            sb.Append("  Id: ").Append(Id).Append("\n");
-            sb.Append("  Result: ").Append(Result).Append("\n");
-            sb.Append("}\n");
-            return sb.ToString();
-        }
-
-        /// <summary>
-        /// Returns the JSON string presentation of the object
-        /// </summary>
-        /// <returns>JSON string presentation of the object</returns>
-        public virtual string ToJson()
-        {
-            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
-        }
-
-        /// <summary>
-        /// Returns true if objects are equal
-        /// </summary>
-        /// <param name="input">Object to be compared</param>
-        /// <returns>Boolean</returns>
-        public override bool Equals(object input)
-        {
-            return this.Equals(input as UpdateResponse);
-        }
-
-        /// <summary>
-        /// Returns true if UpdateResponse instances are equal
-        /// </summary>
-        /// <param name="input">Instance of UpdateResponse to be compared</param>
-        /// <returns>Boolean</returns>
-        public bool Equals(UpdateResponse input)
-        {
-            if (input == null)
-            {
-                return false;
-            }
-            return 
-                (
-                    this.Index == input.Index ||
-                    (this.Index != null &&
-                    this.Index.Equals(input.Index))
-                ) && 
-                (
-                    this.Updated == input.Updated ||
-                    this.Updated.Equals(input.Updated)
-                ) && 
-                (
-                    this.Id == input.Id ||
-                    this.Id.Equals(input.Id)
-                ) && 
-                (
-                    this.Result == input.Result ||
-                    (this.Result != null &&
-                    this.Result.Equals(input.Result))
-                );
-        }
-
-        /// <summary>
-        /// Gets the hash code
-        /// </summary>
-        /// <returns>Hash code</returns>
-        public override int GetHashCode()
-        {
-            unchecked // Overflow is fine, just wrap
-            {
-                int hashCode = 41;
-                if (this.Index != null)
-                {
-                    hashCode = (hashCode * 59) + this.Index.GetHashCode();
-                }
-                hashCode = (hashCode * 59) + this.Updated.GetHashCode();
-                hashCode = (hashCode * 59) + this.Id.GetHashCode();
-                if (this.Result != null)
-                {
-                    hashCode = (hashCode * 59) + this.Result.GetHashCode();
-                }
-                return hashCode;
-            }
-        }
-
-        /// <summary>
-        /// To validate all properties of the instance
-        /// </summary>
-        /// <param name="validationContext">Validation context</param>
-        /// <returns>Validation Result</returns>
-        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
-        {
-            yield break;
-        }
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/.github/workflows/maven.yml b/out/manticoresearch-java-actual/.github/workflows/maven.yml
deleted file mode 100644
index 12ccea5..0000000
--- a/out/manticoresearch-java-actual/.github/workflows/maven.yml
+++ /dev/null
@@ -1,30 +0,0 @@
-# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
-# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
-#
-# This file is auto-generated by OpenAPI Generator (https://openapi-generator.tech)
-
-name: Java CI with Maven
-
-on:
-  push:
-    branches: [ main, master ]
-  pull_request:
-    branches: [ main, master ]
-
-jobs:
-  build:
-    name: Build Manticore Search Client
-    runs-on: ubuntu-latest
-    strategy:
-      matrix:
-        java: [ '8' ]
-    steps:
-    - uses: actions/checkout@v2
-    - name: Set up JDK
-      uses: actions/setup-java@v2
-      with:
-        java-version: ${{ matrix.java }}
-        distribution: 'temurin'
-        cache: maven
-    - name: Build with Maven
-      run: mvn -B package --no-transfer-progress --file pom.xml
diff --git a/out/manticoresearch-java-actual/.gitignore b/out/manticoresearch-java-actual/.gitignore
deleted file mode 100644
index a530464..0000000
--- a/out/manticoresearch-java-actual/.gitignore
+++ /dev/null
@@ -1,21 +0,0 @@
-*.class
-
-# Mobile Tools for Java (J2ME)
-.mtj.tmp/
-
-# Package Files #
-*.jar
-*.war
-*.ear
-
-# exclude jar for gradle wrapper
-!gradle/wrapper/*.jar
-
-# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
-hs_err_pid*
-
-# build files
-**/target
-target
-.gradle
-build
diff --git a/out/manticoresearch-java-actual/.openapi-generator-ignore b/out/manticoresearch-java-actual/.openapi-generator-ignore
deleted file mode 100644
index 7484ee5..0000000
--- a/out/manticoresearch-java-actual/.openapi-generator-ignore
+++ /dev/null
@@ -1,23 +0,0 @@
-# OpenAPI Generator Ignore
-# Generated by openapi-generator https://github.com/openapitools/openapi-generator
-
-# Use this file to prevent files from being overwritten by the generator.
-# The patterns follow closely to .gitignore or .dockerignore.
-
-# As an example, the C# client generator defines ApiClient.cs.
-# You can make changes and tell OpenAPI Generator to ignore just this file by uncommenting the following line:
-#ApiClient.cs
-
-# You can match any string of characters against a directory, file or extension with a single asterisk (*):
-#foo/*/qux
-# The above matches foo/bar/qux and foo/baz/qux, but not foo/bar/baz/qux
-
-# You can recursively match patterns against a directory, file or extension with a double asterisk (**):
-#foo/**/qux
-# This matches foo/bar/qux, foo/baz/qux, and foo/bar/baz/qux
-
-# You can also negate patterns with an exclamation (!).
-# For example, you can ignore all files in a docs folder with the file extension .md:
-#docs/*.md
-# Then explicitly reverse the ignore rule for a single file:
-#!docs/README.md
diff --git a/out/manticoresearch-java-actual/.travis.yml b/out/manticoresearch-java-actual/.travis.yml
deleted file mode 100644
index 1b6741c..0000000
--- a/out/manticoresearch-java-actual/.travis.yml
+++ /dev/null
@@ -1,22 +0,0 @@
-#
-# Generated by OpenAPI Generator: https://openapi-generator.tech
-#
-# Ref: https://docs.travis-ci.com/user/languages/java/
-#
-language: java
-jdk:
-  - openjdk12
-  - openjdk11
-  - openjdk10
-  - openjdk9
-  - openjdk8
-before_install:
-  # ensure gradlew has proper permission
-  - chmod a+x ./gradlew
-script:
-  # test using maven
-  #- mvn test
-  # test using gradle
-  - gradle test
-  # test using sbt
-  # - sbt test
diff --git a/out/manticoresearch-java-actual/LICENSE.txt b/out/manticoresearch-java-actual/LICENSE.txt
deleted file mode 100755
index b5084aa..0000000
--- a/out/manticoresearch-java-actual/LICENSE.txt
+++ /dev/null
@@ -1,21 +0,0 @@
-The MIT License (MIT)
-
-Copyright (c) 2020-2023, Manticore Software LTD 
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
\ No newline at end of file
diff --git a/out/manticoresearch-java-actual/README.md b/out/manticoresearch-java-actual/README.md
deleted file mode 100644
index 6dd31b5..0000000
--- a/out/manticoresearch-java-actual/README.md
+++ /dev/null
@@ -1,204 +0,0 @@
-# Manticore Java client
-
-
-Manticore Search Client
-
-- API version: 5.0.0
-
-- Build date: 2023-12-18T11:24:55.908019234Z[Etc/UTC]
-
-Сlient for Manticore Search.
-
-
-## Requirements
-
-Building the API client library requires:
-
-1. Java 17+
-2. Maven/Gradle
-
-| Manticore Search  | manticoresearch-java    |
-| ----------------- | ----------------------- |
-| >= 6.2.0          | 3.3.1                   |
-| >= 2.5.1          | 2.0.2                   |
-
-
-## Installation
-
-To install the API client library to your local Maven repository, simply execute:
-
-```shell
-mvn clean install
-```
-
-To deploy it to a remote Maven repository instead, configure the settings of the repository and execute:
-
-```shell
-mvn clean deploy
-```
-
-Refer to the [OSSRH Guide](http://central.sonatype.org/pages/ossrh-guide.html) for more information.
-
-### Maven users
-
-Add this dependency to your project's POM:
-
-```xml
-<dependency>
-  <groupId>com.manticoresearch</groupId>
-  <artifactId>manticoresearch</artifactId>
-  <version>5.0.0</version>
-  <scope>compile</scope>
-</dependency>
-```
-
-### Gradle users
-
-Add this dependency to your project's build file:
-
-```groovy
-  repositories {
-    mavenCentral()     // Needed if the 'manticoresearch' jar has been published to maven central.
-    mavenLocal()       // Needed if the 'manticoresearch' jar has been published to the local maven repo.
-  }
-
-  dependencies {
-     implementation "com.manticoresearch:manticoresearch:5.0.0"
-  }
-```
-
-### Others
-
-At first generate the JAR by executing:
-
-```shell
-mvn clean package
-```
-
-Then manually install the following JARs:
-
-- `target/manticoresearch-5.0.0.jar`
-- `target/lib/*.jar`
-
-## Getting Started
-
-Please follow the [installation](#installation) instruction and execute the following Java code:
-
-```java
-
-import com.manticoresearch.client.*;
-import com.manticoresearch.client.auth.*;
-import com.manticoresearch.client.model.*;
-import com.manticoresearch.client.api.*;
-
-public class ApiExample {
-
-    public static void main(String[] args) {
-        ApiClient defaultClient = Configuration.getDefaultApiClient();
-        defaultClient.setBasePath("http://127.0.0.1:9308");
-        
-        IndexApi apiInstance = new IndexApi(defaultClient);
-        String body = ["'{\"insert\": {\"index\": \"test\", \"id\": 1, \"doc\": {\"title\": \"Title 1\"}}},\\n{\"insert\": {\"index\": \"test\", \"id\": 2, \"doc\": {\"title\": \"Title 2\"}}}'"]; // String | 
-        try {
-            BulkResponse result = apiInstance.bulk(body);
-            System.out.println(result);
-        } catch (ApiException e) {
-            System.err.println("Exception when calling IndexApi#bulk");
-            System.err.println("Status code: " + e.getCode());
-            System.err.println("Reason: " + e.getResponseBody());
-            System.err.println("Response headers: " + e.getResponseHeaders());
-            e.printStackTrace();
-        }
-        
-        SearchApi searchApi = new SearchApi(client);
-        try {
-            // Create SearchRequest
-            SearchRequest searchRequest = new SearchRequest();
-            searchRequest.setIndex("test");
-            QueryFilter queryFilter = new QueryFilter();
-			queryFilter.setQueryString("Title 1");								
-			searchRequest.setFulltextFilter(queryFilter);
-			
-			// Perform a search
-			SearchResponse searchResponse = searchApi.search(searchRequest);
-			System.out.println( searchResponse.toString() );
-        } catch (ApiException e) {
-            System.err.println("Exception when calling SearchApi#search");
-            System.err.println("Status code: " + e.getCode());
-            System.err.println("Reason: " + e.getResponseBody());
-            System.err.println("Response headers: " + e.getResponseHeaders());
-            e.printStackTrace();
-        }
-    }
-}
-
-```
-
-## Documentation for API Endpoints
-
-All URIs are relative to *http://127.0.0.1:9308*
-
-Class | Method | HTTP request | Description
------------- | ------------- | ------------- | -------------
-*IndexApi* | [**bulk**](docs/IndexApi.md#bulk) | **POST** /bulk | Bulk index operations
-*IndexApi* | [**delete**](docs/IndexApi.md#delete) | **POST** /delete | Delete a document in an index
-*IndexApi* | [**insert**](docs/IndexApi.md#insert) | **POST** /insert | Create a new document in an index
-*IndexApi* | [**replace**](docs/IndexApi.md#replace) | **POST** /replace | Replace new document in an index
-*IndexApi* | [**update**](docs/IndexApi.md#update) | **POST** /update | Update a document in an index
-*SearchApi* | [**percolate**](docs/SearchApi.md#percolate) | **POST** /pq/{index}/search | Perform reverse search on a percolate index
-*SearchApi* | [**search**](docs/SearchApi.md#search) | **POST** /search | Performs a search on an index
-*UtilsApi* | [**sql**](docs/UtilsApi.md#sql) | **POST** /sql | Perform SQL requests
-
-
-## Documentation for Models
-
- - [Aggregation](docs/Aggregation.md)
- - [AggregationSortInnerValue](docs/AggregationSortInnerValue.md)
- - [AggregationTerms](docs/AggregationTerms.md)
- - [BoolFilter](docs/BoolFilter.md)
- - [BulkResponse](docs/BulkResponse.md)
- - [DeleteDocumentRequest](docs/DeleteDocumentRequest.md)
- - [DeleteResponse](docs/DeleteResponse.md)
- - [EqualsFilter](docs/EqualsFilter.md)
- - [ErrorResponse](docs/ErrorResponse.md)
- - [Facet](docs/Facet.md)
- - [FilterBoolean](docs/FilterBoolean.md)
- - [FilterNumber](docs/FilterNumber.md)
- - [FilterString](docs/FilterString.md)
- - [GeoDistanceFilter](docs/GeoDistanceFilter.md)
- - [GeoDistanceFilterLocationAnchor](docs/GeoDistanceFilterLocationAnchor.md)
- - [Highlight](docs/Highlight.md)
- - [HighlightField](docs/HighlightField.md)
- - [InFilter](docs/InFilter.md)
- - [InsertDocumentRequest](docs/InsertDocumentRequest.md)
- - [MatchFilter](docs/MatchFilter.md)
- - [MatchOp](docs/MatchOp.md)
- - [MatchOpFilter](docs/MatchOpFilter.md)
- - [MatchPhraseFilter](docs/MatchPhraseFilter.md)
- - [NotFilterBoolean](docs/NotFilterBoolean.md)
- - [NotFilterNumber](docs/NotFilterNumber.md)
- - [NotFilterString](docs/NotFilterString.md)
- - [PercolateRequest](docs/PercolateRequest.md)
- - [PercolateRequestQuery](docs/PercolateRequestQuery.md)
- - [QueryFilter](docs/QueryFilter.md)
- - [RangeFilter](docs/RangeFilter.md)
- - [SearchRequest](docs/SearchRequest.md)
- - [SearchResponse](docs/SearchResponse.md)
- - [SearchResponseHits](docs/SearchResponseHits.md)
- - [SortMVA](docs/SortMVA.md)
- - [SortMultiple](docs/SortMultiple.md)
- - [SortOrder](docs/SortOrder.md)
- - [SourceByRules](docs/SourceByRules.md)
- - [SuccessResponse](docs/SuccessResponse.md)
- - [UpdateDocumentRequest](docs/UpdateDocumentRequest.md)
- - [UpdateResponse](docs/UpdateResponse.md)
-
-
-## Documentation for Authorization
-
-All endpoints do not require authorization.
-Authentication schemes defined for the API:
-
-## Recommendation
-
-It's recommended to create an instance of `ApiClient` per thread in a multithreaded environment to avoid any potential issues.
diff --git a/out/manticoresearch-java-actual/build.gradle b/out/manticoresearch-java-actual/build.gradle
deleted file mode 100644
index d67b5f2..0000000
--- a/out/manticoresearch-java-actual/build.gradle
+++ /dev/null
@@ -1,158 +0,0 @@
-apply plugin: 'idea'
-apply plugin: 'eclipse'
-apply plugin: 'com.diffplug.spotless'
-
-group = 'com.manticoresearch'
-version = '5.0.0'
-
-buildscript {
-    repositories {
-        mavenCentral()
-    }
-    dependencies {
-        classpath 'com.android.tools.build:gradle:2.3.+'
-        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
-        classpath 'com.diffplug.spotless:spotless-plugin-gradle:6.3.0'
-    }
-}
-
-repositories {
-    mavenCentral()
-}
-
-if(hasProperty('target') && target == 'android') {
-
-    apply plugin: 'com.android.library'
-    apply plugin: 'com.github.dcendents.android-maven'
-
-    android {
-        compileSdkVersion 25
-        buildToolsVersion '25.0.2'
-        defaultConfig {
-            minSdkVersion 14
-            targetSdkVersion 25
-        }
-        compileOptions {
-            sourceCompatibility JavaVersion.VERSION_1_8
-            targetCompatibility JavaVersion.VERSION_1_8
-        }
-
-        // Rename the aar correctly
-        libraryVariants.all { variant ->
-            variant.outputs.each { output ->
-                def outputFile = output.outputFile
-                if (outputFile != null && outputFile.name.endsWith('.aar')) {
-                    def fileName = "${project.name}-${variant.baseName}-${version}.aar"
-                    output.outputFile = new File(outputFile.parent, fileName)
-                }
-            }
-        }
-
-        dependencies {
-            provided "jakarta.annotation:jakarta.annotation-api:$jakarta_annotation_version"
-        }
-    }
-
-    afterEvaluate {
-        android.libraryVariants.all { variant ->
-            def task = project.tasks.create "jar${variant.name.capitalize()}", Jar
-            task.description = "Create jar artifact for ${variant.name}"
-            task.dependsOn variant.javaCompile
-            task.from variant.javaCompile.destinationDirectory
-            task.destinationDirectory = project.file("${project.buildDir}/outputs/jar")
-            task.archiveFileName = "${project.name}-${variant.baseName}-${version}.jar"
-            artifacts.add('archives', task);
-        }
-    }
-
-    task sourcesJar(type: Jar) {
-        from android.sourceSets.main.java.srcDirs
-        classifier = 'sources'
-    }
-
-    artifacts {
-        archives sourcesJar
-    }
-
-} else {
-
-    apply plugin: 'java'
-    apply plugin: 'maven-publish'
-    sourceCompatibility = JavaVersion.VERSION_1_8
-    targetCompatibility = JavaVersion.VERSION_1_8
-
-    publishing {
-        publications {
-            maven(MavenPublication) {
-               artifactId = 'manticoresearch'
-
-               from components.java
-            }
-        }
-    }
-
-    task execute(type:JavaExec) {
-       main = System.getProperty('mainClass')
-       classpath = sourceSets.main.runtimeClasspath
-    }
-}
-
-ext {
-    swagger_annotations_version = "1.6.5"
-    jackson_version = "2.13.4"
-    jackson_databind_version = "2.13.4.2"
-    jackson_databind_nullable_version = "0.2.6"
-    jakarta_annotation_version = "2.1.0"
-    jersey_version = "3.0.4"
-    junit_version = "5.8.2"
-}
-
-dependencies {
-    implementation "io.swagger:swagger-annotations:$swagger_annotations_version"
-    implementation "com.google.code.findbugs:jsr305:3.0.2"
-    implementation "org.glassfish.jersey.core:jersey-client:$jersey_version"
-    implementation "org.glassfish.jersey.inject:jersey-hk2:$jersey_version"
-    implementation "org.glassfish.jersey.media:jersey-media-multipart:$jersey_version"
-    implementation "org.glassfish.jersey.media:jersey-media-json-jackson:$jersey_version"
-    implementation "org.glassfish.jersey.connectors:jersey-apache-connector:$jersey_version"
-    implementation "com.fasterxml.jackson.core:jackson-core:$jackson_version"
-    implementation "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
-    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_databind_version"
-    implementation "org.openapitools:jackson-databind-nullable:$jackson_databind_nullable_version"
-    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
-    implementation "jakarta.annotation:jakarta.annotation-api:$jakarta_annotation_version"
-    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
-    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"
-}
-
-test {
-    useJUnitPlatform()
-}
-
-javadoc {
-    options.tags = [ "http.response.details:a:Http Response Details" ]
-}
-
-// Use spotless plugin to automatically format code, remove unused import, etc
-// To apply changes directly to the file, run `gradlew spotlessApply`
-// Ref: https://github.com/diffplug/spotless/tree/main/plugin-gradle
-spotless {
-    // comment out below to run spotless as part of the `check` task
-    enforceCheck false
-
-    format 'misc', {
-        // define the files (e.g. '*.gradle', '*.md') to apply `misc` to
-        target '.gitignore'
-        // define the steps to apply to those files
-        trimTrailingWhitespace()
-        indentWithSpaces() // Takes an integer argument if you don't like 4
-        endWithNewline()
-    }
-    java {
-        // don't need to set target, it is inferred from java
-        // apply a specific flavor of google-java-format
-        googleJavaFormat('1.8').aosp().reflowLongStrings()
-        removeUnusedImports()
-        importOrder()
-    }
-}
diff --git a/out/manticoresearch-java-actual/build.sbt b/out/manticoresearch-java-actual/build.sbt
deleted file mode 100644
index 733f73c..0000000
--- a/out/manticoresearch-java-actual/build.sbt
+++ /dev/null
@@ -1,27 +0,0 @@
-lazy val root = (project in file(".")).
-  settings(
-    organization := "com.manticoresearch",
-    name := "manticoresearch",
-    version := "5.0.0",
-    scalaVersion := "2.11.4",
-    scalacOptions ++= Seq("-feature"),
-    Compile / javacOptions ++= Seq("-Xlint:deprecation"),
-    Compile / packageDoc / publishArtifact := false,
-    resolvers += Resolver.mavenLocal,
-    libraryDependencies ++= Seq(
-      "com.google.code.findbugs" % "jsr305" % "3.0.0",
-      "io.swagger" % "swagger-annotations" % "1.6.5",
-      "org.glassfish.jersey.core" % "jersey-client" % "3.0.4",
-      "org.glassfish.jersey.inject" % "jersey-hk2" % "3.0.4",
-      "org.glassfish.jersey.media" % "jersey-media-multipart" % "3.0.4",
-      "org.glassfish.jersey.media" % "jersey-media-json-jackson" % "3.0.4",
-      "org.glassfish.jersey.connectors" % "jersey-apache-connector" % "3.0.4",
-      "com.fasterxml.jackson.core" % "jackson-core" % "2.13.4" % "compile",
-      "com.fasterxml.jackson.core" % "jackson-annotations" % "2.13.4" % "compile",
-      "com.fasterxml.jackson.core" % "jackson-databind" % "2.13.4.2" % "compile",
-      "com.fasterxml.jackson.datatype" % "jackson-datatype-jsr310" % "2.13.2" % "compile",
-      "org.openapitools" % "jackson-databind-nullable" % "0.2.6" % "compile",
-      "jakarta.annotation" % "jakarta.annotation-api" % "2.1.0" % "compile",
-      "org.junit.jupiter" % "junit-jupiter-api" % "5.8.2" % "test"
-    )
-  )
diff --git a/out/manticoresearch-java-actual/docs/Aggregation.md b/out/manticoresearch-java-actual/docs/Aggregation.md
deleted file mode 100644
index 5d36988..0000000
--- a/out/manticoresearch-java-actual/docs/Aggregation.md
+++ /dev/null
@@ -1,18 +0,0 @@
-
-
-# Aggregation
-
-Aggregation Alias
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**terms** | [**AggregationTerms**](AggregationTerms.md) |  |  [optional] |
-|**sort** | **List&lt;Map&lt;String, AggregationSortInnerValue&gt;&gt;** |  |  [optional] |
-
-[[Using in search requests]](SearchRequest.md#Aggregation)
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/AggregationSortInnerValue.md b/out/manticoresearch-java-actual/docs/AggregationSortInnerValue.md
deleted file mode 100644
index 8a0f64b..0000000
--- a/out/manticoresearch-java-actual/docs/AggregationSortInnerValue.md
+++ /dev/null
@@ -1,15 +0,0 @@
-
-
-# AggregationSortInnerValue
-
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**order** | **String** |  |  [optional] |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/AggregationTerms.md b/out/manticoresearch-java-actual/docs/AggregationTerms.md
deleted file mode 100644
index cac4a09..0000000
--- a/out/manticoresearch-java-actual/docs/AggregationTerms.md
+++ /dev/null
@@ -1,16 +0,0 @@
-
-
-# AggregationTerms
-
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**field** | **String** | Attribute Name to Aggregate |  [optional] |
-|**size** | **Integer** | Maximum Number of Buckets in the Result |  [optional] |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/BoolFilter.md b/out/manticoresearch-java-actual/docs/BoolFilter.md
deleted file mode 100644
index 7e8a0c6..0000000
--- a/out/manticoresearch-java-actual/docs/BoolFilter.md
+++ /dev/null
@@ -1,19 +0,0 @@
-
-
-# BoolFilter
-
-Boolean attribute filter
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**should** | **List&lt;Object&gt;** |  |  [optional] |
-|**must** | **List&lt;Object&gt;** |  |  [optional] |
-|**mustNot** | **List&lt;Object&gt;** |  |  [optional] |
-
-[[Using in search requests]](SearchRequest.md#BoolFilter)
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/BulkResponse.md b/out/manticoresearch-java-actual/docs/BulkResponse.md
deleted file mode 100644
index 70ad445..0000000
--- a/out/manticoresearch-java-actual/docs/BulkResponse.md
+++ /dev/null
@@ -1,18 +0,0 @@
-
-
-# BulkResponse
-
-Success bulk response
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**items** | **Object** |  |  [optional] |
-|**errors** | **Boolean** |  |  [optional] |
-|**error** | **String** |  |  [optional] |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/DeleteDocumentRequest.md b/out/manticoresearch-java-actual/docs/DeleteDocumentRequest.md
deleted file mode 100644
index d48f516..0000000
--- a/out/manticoresearch-java-actual/docs/DeleteDocumentRequest.md
+++ /dev/null
@@ -1,19 +0,0 @@
-
-
-# DeleteDocumentRequest
-
-Payload for delete request. Documents can be deleted either one by one by specifying the document id or by providing a query object. For more information see  [Delete API](https://manual.manticoresearch.com/Deleting_documents) 
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**index** | **String** | Index name |  |
-|**cluster** | **String** | cluster name |  [optional] |
-|**id** | **Long** | Document ID |  [optional] |
-|**query** | **Object** | Query tree object |  [optional] |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/DeleteResponse.md b/out/manticoresearch-java-actual/docs/DeleteResponse.md
deleted file mode 100644
index f8d7690..0000000
--- a/out/manticoresearch-java-actual/docs/DeleteResponse.md
+++ /dev/null
@@ -1,19 +0,0 @@
-
-
-# DeleteResponse
-
-Success response
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**index** | **String** |  |  [optional] |
-|**deleted** | **Integer** |  |  [optional] |
-|**id** | **Long** |  |  [optional] |
-|**result** | **String** |  |  [optional] |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/EqualsFilter.md b/out/manticoresearch-java-actual/docs/EqualsFilter.md
deleted file mode 100644
index 64ff11a..0000000
--- a/out/manticoresearch-java-actual/docs/EqualsFilter.md
+++ /dev/null
@@ -1,18 +0,0 @@
-
-
-# EqualsFilter
-
-Equals attribute filter
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**field** | **String** |  |  |
-|**value** | **Object** |  |  |
-
-[[Using in search requests]](SearchRequest.md#EqualsFilter)
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/ErrorResponse.md b/out/manticoresearch-java-actual/docs/ErrorResponse.md
deleted file mode 100644
index 7c753e8..0000000
--- a/out/manticoresearch-java-actual/docs/ErrorResponse.md
+++ /dev/null
@@ -1,17 +0,0 @@
-
-
-# ErrorResponse
-
-Error response
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**error** | **Map&lt;String, Object&gt;** |  |  |
-|**status** | **Integer** |  |  |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/Facet.md b/out/manticoresearch-java-actual/docs/Facet.md
deleted file mode 100644
index 6eb53ee..0000000
--- a/out/manticoresearch-java-actual/docs/Facet.md
+++ /dev/null
@@ -1,18 +0,0 @@
-
-
-# Facet
-
-Query FACET expression
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**attr** | **String** | The name of an attribute to facet |  |
-|**alias** | **String** | Facet alias |  [optional] |
-|**limit** | **Integer** | The number of facet values to return |  [optional] |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/FilterBoolean.md b/out/manticoresearch-java-actual/docs/FilterBoolean.md
deleted file mode 100644
index 855e96a..0000000
--- a/out/manticoresearch-java-actual/docs/FilterBoolean.md
+++ /dev/null
@@ -1,18 +0,0 @@
-
-
-# FilterBoolean
-
-Query filter
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**filterField** | **String** |  |  |
-|**operation** | **String** |  |  |
-|**filterValue** | **Boolean** |  |  |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/FilterNumber.md b/out/manticoresearch-java-actual/docs/FilterNumber.md
deleted file mode 100644
index 9705a2c..0000000
--- a/out/manticoresearch-java-actual/docs/FilterNumber.md
+++ /dev/null
@@ -1,18 +0,0 @@
-
-
-# FilterNumber
-
-Query filter
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**filterField** | **String** |  |  |
-|**operation** | **String** |  |  |
-|**filterValue** | **BigDecimal** |  |  |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/FilterString.md b/out/manticoresearch-java-actual/docs/FilterString.md
deleted file mode 100644
index f4d95cc..0000000
--- a/out/manticoresearch-java-actual/docs/FilterString.md
+++ /dev/null
@@ -1,18 +0,0 @@
-
-
-# FilterString
-
-Query filter
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**filterField** | **String** |  |  |
-|**operation** | **String** |  |  |
-|**filterValue** | **String** |  |  |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/GeoDistanceFilter.md b/out/manticoresearch-java-actual/docs/GeoDistanceFilter.md
deleted file mode 100644
index 4f4c46b..0000000
--- a/out/manticoresearch-java-actual/docs/GeoDistanceFilter.md
+++ /dev/null
@@ -1,28 +0,0 @@
-
-
-# GeoDistanceFilter
-
-Geo distance attribute filter
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**locationAnchor** | [**GeoDistanceFilterLocationAnchor**](GeoDistanceFilterLocationAnchor.md) |  |  [optional] |
-|**locationSource** | **String** | Attribute containing latitude and longitude data |  [optional] |
-|**distanceType** | [**DistanceTypeEnum**](#DistanceTypeEnum) |  |  [optional] |
-|**distance** | **String** |  |  [optional] |
-
-[[Using in search requests]](SearchRequest.md#GeoDistanceFilter)
-
-
-
-## Enum: DistanceTypeEnum
-
-| Name | Value |
-|---- | -----|
-| ADAPTIVE | &quot;adaptive&quot; |
-| HAVERSINE | &quot;haversine&quot; |
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/GeoDistanceFilterLocationAnchor.md b/out/manticoresearch-java-actual/docs/GeoDistanceFilterLocationAnchor.md
deleted file mode 100644
index d5d5a79..0000000
--- a/out/manticoresearch-java-actual/docs/GeoDistanceFilterLocationAnchor.md
+++ /dev/null
@@ -1,17 +0,0 @@
-
-
-# GeoDistanceFilterLocationAnchor
-
-Geo pin point object
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**lat** | **BigDecimal** | Geo latitude of pin point in degrees |  [optional] |
-|**lon** | **BigDecimal** | Geo longitude pf pin point in degrees |  [optional] |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/Highlight.md b/out/manticoresearch-java-actual/docs/Highlight.md
deleted file mode 100644
index a7738f4..0000000
--- a/out/manticoresearch-java-actual/docs/Highlight.md
+++ /dev/null
@@ -1,73 +0,0 @@
-
-
-# Highlight
-
-Query HIGHLIGHT expression
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**fieldnames** | **List&lt;String&gt;** |  |  [optional] |
-|**fields** | [**List&lt;HighlightField&gt;**](HighlightField.md) |  |  [optional] |
-|**encoder** | [**EncoderEnum**](#EncoderEnum) |  |  [optional] |
-|**highlightQuery** | **Map&lt;String, Object&gt;** |  |  [optional] |
-|**preTags** | **String** |  |  [optional] |
-|**postTags** | **String** |  |  [optional] |
-|**noMatchSize** | [**NoMatchSizeEnum**](#NoMatchSizeEnum) |  |  [optional] |
-|**fragmentSize** | **Integer** |  |  [optional] |
-|**numberOfFragments** | **Integer** |  |  [optional] |
-|**limit** | **Integer** |  |  [optional] |
-|**limitWords** | **Integer** |  |  [optional] |
-|**limitSnippets** | **Integer** |  |  [optional] |
-|**limitsPerField** | **Boolean** |  |  [optional] |
-|**useBoundaries** | **Boolean** |  |  [optional] |
-|**forceAllWords** | **Boolean** |  |  [optional] |
-|**allowEmpty** | **Boolean** |  |  [optional] |
-|**emitZones** | **Boolean** |  |  [optional] |
-|**forceSnippets** | **Boolean** |  |  [optional] |
-|**around** | **Integer** |  |  [optional] |
-|**startSnippetId** | **Integer** |  |  [optional] |
-|**htmlStripMode** | [**HtmlStripModeEnum**](#HtmlStripModeEnum) |  |  [optional] |
-|**snippetBoundary** | [**SnippetBoundaryEnum**](#SnippetBoundaryEnum) |  |  [optional] |
-
-[[Using in search requests]](SearchRequest.md#Highlight)
-
-
-
-## Enum: EncoderEnum
-
-| Name | Value |
-|---- | -----|
-| DEFAULT | &quot;default&quot; |
-| HTML | &quot;html&quot; |
-
-
-## Enum: NoMatchSizeEnum
-
-| Name | Value |
-|---- | -----|
-| NUMBER_0 | 0 |
-| NUMBER_1 | 1 |
-
-
-## Enum: HtmlStripModeEnum
-
-| Name | Value |
-|---- | -----|
-| NONE | &quot;none&quot; |
-| STRIP | &quot;strip&quot; |
-| INDEX | &quot;index&quot; |
-| RETAIN | &quot;retain&quot; |
-
-
-## Enum: SnippetBoundaryEnum
-
-| Name | Value |
-|---- | -----|
-| SENTENCE | &quot;sentence&quot; |
-| PARAGRAPH | &quot;paragraph&quot; |
-| ZONE | &quot;zone&quot; |
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/HighlightField.md b/out/manticoresearch-java-actual/docs/HighlightField.md
deleted file mode 100644
index 950049d..0000000
--- a/out/manticoresearch-java-actual/docs/HighlightField.md
+++ /dev/null
@@ -1,20 +0,0 @@
-
-
-# HighlightField
-
-Query Highlight field with options set
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**name** | **String** |  |  |
-|**limit** | **Integer** |  |  [optional] |
-|**limitWords** | **Integer** |  |  [optional] |
-|**limitSnippets** | **Integer** |  |  [optional] |
-
-[[Using in search requests]](SearchRequest.md#HighlightField)
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/InFilter.md b/out/manticoresearch-java-actual/docs/InFilter.md
deleted file mode 100644
index be9adc9..0000000
--- a/out/manticoresearch-java-actual/docs/InFilter.md
+++ /dev/null
@@ -1,18 +0,0 @@
-
-
-# InFilter
-
-In attribute filter
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**field** | **String** |  |  |
-|**values** | **List&lt;Object&gt;** |  |  |
-
-[[Using in search requests]](SearchRequest.md#InFilter)
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/IndexApi.md b/out/manticoresearch-java-actual/docs/IndexApi.md
deleted file mode 100644
index 579088d..0000000
--- a/out/manticoresearch-java-actual/docs/IndexApi.md
+++ /dev/null
@@ -1,448 +0,0 @@
-# IndexApi
-
-All URIs are relative to *http://127.0.0.1:9308*
-
-Method | HTTP request | Description
-------------- | ------------- | -------------
-[**bulk**](IndexApi.md#bulk) | **POST** /json/bulk | Bulk index operations
-[**delete**](IndexApi.md#delete) | **POST** /json/delete | Delete a document in an index
-[**insert**](IndexApi.md#insert) | **POST** /json/insert | Create a new document in an index
-[**replace**](IndexApi.md#replace) | **POST** /json/replace | Replace new document in an index
-[**update**](IndexApi.md#update) | **POST** /json/update | Update a document in an index
-
-
-
-## bulk
-
-> BulkResponse bulk(body)
-
-Bulk index operations
-
-Sends multiple operatons like inserts, updates, replaces or deletes. 
-For each operation it's object must have same format as in their dedicated method. 
-The method expects a raw string as the batch in NDJSON.
- Each operation object needs to be serialized to 
- JSON and separated by endline (\n). 
- 
-  An example of raw input:
-  
-  ```
-  {"insert": {"index": "movies", "doc": {"plot": "A secret team goes to North Pole", "rating": 9.5, "language": [2, 3], "title": "This is an older movie", "lon": 51.99, "meta": {"keywords":["travel","ice"],"genre":["adventure"]}, "year": 1950, "lat": 60.4, "advise": "PG-13"}}}
-  \n
-  {"delete": {"index": "movies","id":700}}
-  ```
-  
-  Responds with an object telling whenever any errors occured and an array with status for each operation:
-  
-  ```
-  {'items':[{'update':{'_index':'products','_id':1,'result':'updated'}},{'update':{'_index':'products','_id':2,'result':'updated'}}],'errors':false}
-  ```
- 
-
-
-### Example
-
-```java
-// Import classes:
-import com.manticoresearch.client.ApiClient;
-import com.manticoresearch.client.ApiException;
-import com.manticoresearch.client.Configuration;
-import com.manticoresearch.client.model.*;
-import com.manticoresearch.client.api.IndexApi;
-
-public class Example {
-    public static void main(String[] args) {
-        ApiClient defaultClient = Configuration.getDefaultApiClient();
-        defaultClient.setBasePath("http://127.0.0.1:9308");
-        IndexApi indexApi = new IndexApi(defaultClient);
-        try {
-             String body = "{\"insert\": {\"index\" : \"products\", \"id\" : 3, \"doc\" : {\"title\" : \"Crossbody Bag with Tassel\", \"price\" : 19.85}}}" +"\n"+"{\"delete\":{\"index\" : \"movies\", \"id\" : 701}}"+"\n"+
-                      "{\"insert\": {\"index\" : \"products\", \"id\" : 4, \"doc\" : {\"title\" : \"microfiber sheet set\", \"price\" : 19.99}}}"+"\n"+
-                      "{\"insert\": {\"index\" : \"products\", \"id\" : 5, \"doc\" : {\"title\" : \"CPet Hair Remover Glove\", \"price\" : 7.99}}}"+"\n";         
-            BulkResponse bulkresult = indexApi.bulk(body);
-        
-            System.out.println(bulkresult);
-        } catch (ApiException e) {
-            System.err.println("Exception when calling IndexApi#bulk");
-            System.err.println("Status code: " + e.getCode());
-            System.err.println("Reason: " + e.getResponseBody());
-            System.err.println("Response headers: " + e.getResponseHeaders());
-            e.printStackTrace();
-        }
-    }
-}
-```
-
-### Parameters
-
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **body** | **String**|  |
-
-### Return type
-
-[**BulkResponse**](BulkResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: application/x-ndjson
-- **Accept**: application/json
-
-### HTTP response details
-| Status code | Description | Response headers |
-|-------------|-------------|------------------|
-| **200** | item updated |  -  |
-| **0** | error |  -  |
-
-
-## delete
-
-> DeleteResponse delete(deleteDocumentRequest)
-
-Delete a document in an index
-
-Delete one or several documents.
-The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a  match query, in which case multiple documents can be delete .
-Example of input to delete by id:
-
-  ```
-  {'index':'movies','id':100}
-  ```
-
-Example of input to delete using a query:
-
-  ```
-  {'index':'movies','query':{'bool':{'must':[{'query_string':'new movie'}]}}}
-  ```
-
-The match query has same syntax as in for searching.
-Responds with an object telling how many documents got deleted: 
-
-  ```
-  {'_index':'products','updated':1}
-  ```
-
-
-### Example
-
-```java
-// Import classes:
-import com.manticoresearch.client.ApiClient;
-import com.manticoresearch.client.ApiException;
-import com.manticoresearch.client.Configuration;
-import com.manticoresearch.client.model.*;
-import com.manticoresearch.client.api.IndexApi;
-
-public class Example {
-    public static void main(String[] args) {
-        ApiClient defaultClient = Configuration.getDefaultApiClient();
-        defaultClient.setBasePath("http://127.0.0.1:9308");
-
-        IndexApi indexApi = new IndexApi(defaultClient);
-
-        try {
-            DeleteDocumentRequest deleteRequest = new DeleteDocumentRequest();
-            query = new HashMap<String,Object>();
-            query.put("match",new HashMap<String,Object>(){{
-                put("*","dummy");
-            }});
-            deleteRequest.index("products").setQuery(query); 
-            Oject result = indexApi.delete(deleteRequest);
-            System.out.println(result);      
-        } catch (ApiException e) {
-            System.err.println("Exception when calling IndexApi#delete");
-            System.err.println("Status code: " + e.getCode());
-            System.err.println("Reason: " + e.getResponseBody());
-            System.err.println("Response headers: " + e.getResponseHeaders());
-            e.printStackTrace();
-        }
-    }
-}
-```
-
-### Parameters
-
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **deleteDocumentRequest** | [**DeleteDocumentRequest**](DeleteDocumentRequest.md)|  |
-
-### Return type
-
-[**DeleteResponse**](DeleteResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: application/json
-- **Accept**: application/json
-
-### HTTP response details
-| Status code | Description | Response headers |
-|-------------|-------------|------------------|
-| **200** | item updated |  -  |
-| **0** | error |  -  |
-
-
-## insert
-
-> SuccessResponse insert(insertDocumentRequest)
-
-Create a new document in an index
-
-Insert a document. 
-Expects an object like:
- 
-  ```
-  {'index':'movies','id':701,'doc':{'title':'This is an old movie','plot':'A secret team goes to North Pole','year':1950,'rating':9.5,'lat':60.4,'lon':51.99,'advise':'PG-13','meta':'{"keywords":{"travel","ice"},"genre":{"adventure"}}','language':[2,3]}}
-  ```
- 
-The document id can also be missing, in which case an autogenerated one will be used:
-         
-  ```
-  {'index':'movies','doc':{'title':'This is a new movie','plot':'A secret team goes to North Pole','year':2020,'rating':9.5,'lat':60.4,'lon':51.99,'advise':'PG-13','meta':'{"keywords":{"travel","ice"},"genre":{"adventure"}}','language':[2,3]}}
-  ```
- 
-It responds with an object in format:
-  
-  ```
-  {'_index':'products','_id':701,'created':true,'result':'created','status':201}
-  ```
-
-
-### Example
-
-```java
-// Import classes:
-import com.manticoresearch.client.ApiClient;
-import com.manticoresearch.client.ApiException;
-import com.manticoresearch.client.Configuration;
-import com.manticoresearch.client.model.*;
-import com.manticoresearch.client.api.IndexApi;
-
-public class Example {
-    public static void main(String[] args) {
-        ApiClient defaultClient = Configuration.getDefaultApiClient();
-        defaultClient.setBasePath("http://127.0.0.1:9308");
-
-        IndexApi indexApi = new IndexApi(defaultClient);
-        try {
-            InsertDocumentRequest newdoc = new InsertDocumentRequest();
-            HashMap<String,Object> doc = new HashMap<String,Object>(){{
-                put("title","first");
-                put("tags1",new int[] {4,2,1,3});
-            }};
-            newdoc.index("products").id(1L).setDoc(doc); 
-            Object result = indexApi.insert(newdoc);
-            System.out.println(result);
-        } catch (ApiException e) {
-            System.err.println("Exception when calling IndexApi#insert");
-            System.err.println("Status code: " + e.getCode());
-            System.err.println("Reason: " + e.getResponseBody());
-            System.err.println("Response headers: " + e.getResponseHeaders());
-            e.printStackTrace();
-        }
-    }
-}
-```
-
-### Parameters
-
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **insertDocumentRequest** | [**InsertDocumentRequest**](InsertDocumentRequest.md)|  |
-
-### Return type
-
-[**SuccessResponse**](SuccessResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: application/json
-- **Accept**: application/json
-
-### HTTP response details
-| Status code | Description | Response headers |
-|-------------|-------------|------------------|
-| **200** | OK |  -  |
-| **0** | error |  -  |
-
-
-## replace
-
-> SuccessResponse replace(insertDocumentRequest)
-
-Replace new document in an index
-
-Replace an existing document. Input has same format as `insert` operation. <br/>
-Responds with an object in format: <br/>
-
-  ```
-  {'_index':'products','_id':1,'created':false,'result':'updated','status':200}
-  ```
-
-
-### Example
-
-```java
-// Import classes:
-import com.manticoresearch.client.ApiClient;
-import com.manticoresearch.client.ApiException;
-import com.manticoresearch.client.Configuration;
-import com.manticoresearch.client.model.*;
-import com.manticoresearch.client.api.IndexApi;
-
-public class Example {
-    public static void main(String[] args) {
-        ApiClient defaultClient = Configuration.getDefaultApiClient();
-        defaultClient.setBasePath("http://127.0.0.1:9308");
-
-        IndexApi indexApi = new IndexApi(defaultClient);
-
-        try {
-            InsertDocumentRequest docRequest = new InsertDocumentRequest();
-            doc = new HashMap<String,Object>(){{
-                put("title","document one");
-                put("price",10);
-            }};
-            docRequest.index("products").id(1L).setDoc(doc); 
-            Object result = indexApi.replace(docRequest);
-        } catch (ApiException e) {
-            System.err.println("Exception when calling IndexApi#replace");
-            System.err.println("Status code: " + e.getCode());
-            System.err.println("Reason: " + e.getResponseBody());
-            System.err.println("Response headers: " + e.getResponseHeaders());
-            e.printStackTrace();
-        }
-    }
-}
-```
-
-### Parameters
-
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **insertDocumentRequest** | [**InsertDocumentRequest**](InsertDocumentRequest.md)|  |
-
-### Return type
-
-[**SuccessResponse**](SuccessResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: application/json
-- **Accept**: application/json
-
-### HTTP response details
-| Status code | Description | Response headers |
-|-------------|-------------|------------------|
-| **200** | OK |  -  |
-| **0** | error |  -  |
-
-
-## update
-
-> UpdateResponse update(updateDocumentRequest)
-
-Update a document in an index
-
-Update one or several documents.
-The update can be made by passing the id or by using a match query in case multiple documents can be updated.  For example update a document using document id:
-
-  ```
-  {'index':'movies','doc':{'rating':9.49},'id':100}
-  ```
-
-And update by using a match query:
-
-  ```
-  {'index':'movies','doc':{'rating':9.49},'query':{'bool':{'must':[{'query_string':'new movie'}]}}}
-  ``` 
-
-The match query has same syntax as for searching.
-Responds with an object that tells how many documents where updated in format: 
-
-  ```
-  {'_index':'products','updated':1}
-  ```
-
-
-### Example
-
-```java
-// Import classes:
-import com.manticoresearch.client.ApiClient;
-import com.manticoresearch.client.ApiException;
-import com.manticoresearch.client.Configuration;
-import com.manticoresearch.client.model.*;
-import com.manticoresearch.client.api.IndexApi;
-
-public class Example {
-    public static void main(String[] args) {
-        ApiClient defaultClient = Configuration.getDefaultApiClient();
-        defaultClient.setBasePath("http://127.0.0.1:9308");
-
-        IndexApi indexApi = new IndexApi(defaultClient);
-        
-        try {
-            UpdateDocumentRequest updatedoc = new UpdateDocumentRequest();
-            doc = new HashMap<String,Object >(){{
-                put("price",10);
-            }};
-            updatedoc.index("products").id(1L).setDoc(doc); 
-            Object result =  indexApi.update(updatedoc);
-        } catch (ApiException e) {
-            System.err.println("Exception when calling IndexApi#update");
-            System.err.println("Status code: " + e.getCode());
-            System.err.println("Reason: " + e.getResponseBody());
-            System.err.println("Response headers: " + e.getResponseHeaders());
-            e.printStackTrace();
-        }
-    }
-}
-```
-
-### Parameters
-
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **updateDocumentRequest** | [**UpdateDocumentRequest**](UpdateDocumentRequest.md)|  |
-
-### Return type
-
-[**UpdateResponse**](UpdateResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: application/json
-- **Accept**: application/json
-
-### HTTP response details
-| Status code | Description | Response headers |
-|-------------|-------------|------------------|
-| **200** | item updated |  -  |
-| **0** | error |  -  |
-
diff --git a/out/manticoresearch-java-actual/docs/InsertDocumentRequest.md b/out/manticoresearch-java-actual/docs/InsertDocumentRequest.md
deleted file mode 100644
index e35c809..0000000
--- a/out/manticoresearch-java-actual/docs/InsertDocumentRequest.md
+++ /dev/null
@@ -1,19 +0,0 @@
-
-
-# InsertDocumentRequest
-
-Object with document data. 
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**index** | **String** | Name of the index |  |
-|**cluster** | **String** | cluster name |  [optional] |
-|**id** | **Long** | Document ID.  |  [optional] |
-|**doc** | **Map&lt;String, Object&gt;** | Object with document data  |  |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/MatchFilter.md b/out/manticoresearch-java-actual/docs/MatchFilter.md
deleted file mode 100644
index c2629ef..0000000
--- a/out/manticoresearch-java-actual/docs/MatchFilter.md
+++ /dev/null
@@ -1,18 +0,0 @@
-
-
-# MatchFilter
-
-Query match filter
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**queryString** | **String** |  |  |
-|**queryFields** | **String** |  |  |
-
-[[Using in search requests]](SearchRequest.md#MatchFilter)
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/MatchOp.md b/out/manticoresearch-java-actual/docs/MatchOp.md
deleted file mode 100644
index c8009b6..0000000
--- a/out/manticoresearch-java-actual/docs/MatchOp.md
+++ /dev/null
@@ -1,16 +0,0 @@
-
-
-# MatchOp
-
-Query match expression with logical operator
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**queryInfo** | **Object** |  |  |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/MatchOpFilter.md b/out/manticoresearch-java-actual/docs/MatchOpFilter.md
deleted file mode 100644
index 887fe70..0000000
--- a/out/manticoresearch-java-actual/docs/MatchOpFilter.md
+++ /dev/null
@@ -1,27 +0,0 @@
-
-
-# MatchOpFilter
-
-Query match expression
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**queryString** | **String** |  |  |
-|**queryFields** | **String** |  |  |
-|**operator** | [**OperatorEnum**](#OperatorEnum) |  |  |
-
-[[Using in search requests]](SearchRequest.md#MatchOpFilter)
-
-
-
-## Enum: OperatorEnum
-
-| Name | Value |
-|---- | -----|
-| OR | &quot;or&quot; |
-| AND | &quot;and&quot; |
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/MatchPhraseFilter.md b/out/manticoresearch-java-actual/docs/MatchPhraseFilter.md
deleted file mode 100644
index 14eeed0..0000000
--- a/out/manticoresearch-java-actual/docs/MatchPhraseFilter.md
+++ /dev/null
@@ -1,18 +0,0 @@
-
-
-# MatchPhraseFilter
-
-Query match expression
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**queryPhrase** | **String** |  |  |
-|**queryFields** | **String** |  |  |
-
-[[Using in search requests]](SearchRequest.md#MatchPhraseFilter)
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/NotFilterBoolean.md b/out/manticoresearch-java-actual/docs/NotFilterBoolean.md
deleted file mode 100644
index d360fe2..0000000
--- a/out/manticoresearch-java-actual/docs/NotFilterBoolean.md
+++ /dev/null
@@ -1,18 +0,0 @@
-
-
-# NotFilterBoolean
-
-Query filter
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**filterField** | **String** |  |  |
-|**operation** | **String** |  |  |
-|**filterValue** | **Boolean** |  |  |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/NotFilterNumber.md b/out/manticoresearch-java-actual/docs/NotFilterNumber.md
deleted file mode 100644
index 66b0602..0000000
--- a/out/manticoresearch-java-actual/docs/NotFilterNumber.md
+++ /dev/null
@@ -1,18 +0,0 @@
-
-
-# NotFilterNumber
-
-Query filter
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**filterField** | **String** |  |  |
-|**operation** | **String** |  |  |
-|**filterValue** | **BigDecimal** |  |  |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/NotFilterString.md b/out/manticoresearch-java-actual/docs/NotFilterString.md
deleted file mode 100644
index c6d324c..0000000
--- a/out/manticoresearch-java-actual/docs/NotFilterString.md
+++ /dev/null
@@ -1,18 +0,0 @@
-
-
-# NotFilterString
-
-Query filter
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**filterField** | **String** |  |  |
-|**operation** | **String** |  |  |
-|**filterValue** | **String** |  |  |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/PercolateRequest.md b/out/manticoresearch-java-actual/docs/PercolateRequest.md
deleted file mode 100644
index 67bfad6..0000000
--- a/out/manticoresearch-java-actual/docs/PercolateRequest.md
+++ /dev/null
@@ -1,16 +0,0 @@
-
-
-# PercolateRequest
-
-Object with documents to percolate
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**query** | **PercolateRequestQuery** |  |  |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/PercolateRequestQuery.md b/out/manticoresearch-java-actual/docs/PercolateRequestQuery.md
deleted file mode 100644
index 28ca34c..0000000
--- a/out/manticoresearch-java-actual/docs/PercolateRequestQuery.md
+++ /dev/null
@@ -1,15 +0,0 @@
-
-
-# PercolateRequestQuery
-
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**percolate** | **Object** |  |  |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/QueryFilter.md b/out/manticoresearch-java-actual/docs/QueryFilter.md
deleted file mode 100644
index 569fa59..0000000
--- a/out/manticoresearch-java-actual/docs/QueryFilter.md
+++ /dev/null
@@ -1,16 +0,0 @@
-
-
-# QueryFilter
-
-Query string filter
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**queryString** | **String** |  |  |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/RangeFilter.md b/out/manticoresearch-java-actual/docs/RangeFilter.md
deleted file mode 100644
index a3ce218..0000000
--- a/out/manticoresearch-java-actual/docs/RangeFilter.md
+++ /dev/null
@@ -1,21 +0,0 @@
-
-
-# RangeFilter
-
-Range attribute filter
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**field** | **String** |  |  |
-|**lte** | **BigDecimal** |  |  [optional] |
-|**gte** | **BigDecimal** |  |  [optional] |
-|**lt** | **BigDecimal** |  |  [optional] |
-|**gt** | **BigDecimal** |  |  [optional] |
-
-[[Using in search requests]](SearchRequest.md#RangeFilter)
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/SearchApi.md b/out/manticoresearch-java-actual/docs/SearchApi.md
deleted file mode 100644
index b5f0c5f..0000000
--- a/out/manticoresearch-java-actual/docs/SearchApi.md
+++ /dev/null
@@ -1,281 +0,0 @@
-# SearchApi
-
-All URIs are relative to *http://127.0.0.1:9308*
-
-Method | HTTP request | Description
-------------- | ------------- | -------------
-[**search**](SearchApi.md#search) | **POST** /search | Performs a search
-[**percolate**](SearchApi.md#percolate) | **POST** /pq/{index}/search | Perform a reverse search on a percolate index
-
-## search
-
-> SearchResponse search(searchRequest)
-
-Performs a search on an index. 
-
-The method expects a SearchRequest object with the following mandatory properties:
-        
-* the name of the index to search | string
-        
-For details, see the documentation on [**SearchRequest**](SearchRequest.md)
-
-The method returns an object with the following properties:
-        
-- hits: an object with the following properties:
-  - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:
-    - _id: the ID of the matched document.
-    - _score: the score of the matched document.
-    - _source: the source data of the matched document.
-  - total: the total number of hits found.
-- timed_out: a boolean indicating whether the query timed out.
-- took: the time taken to execute the search query.
-
-In addition, if profiling is enabled, the response will include an additional array with profiling information attached.
-
-Here is an example search response:
-```
-{
-  'took':10,
-  'timed_out':false,
-  'hits':
-  {
-    'total':2,
-    'hits':
-    [
-      {
-        '_id':'1',
-        '_score':1,
-        '_source':{'gid':11}
-      },
-      {
-        '_id':'2',
-        '_score':1,
-        '_source':{'gid':12}
-      }
-    ]
-  }
-}
-```
-
-For more information about the match query syntax, additional parameters that can be set to request and response, please check: https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON.
-
-
-### Example
-```java
-
-import java.util.*;
-import com.manticoresearch.client.ApiClient;
-import com.manticoresearch.client.ApiException;
-import com.manticoresearch.client.Configuration;
-import com.manticoresearch.client.model.*;
-import com.manticoresearch.client.api.SearchApi;
-
-public class SearchApiExample {
-
-    public static void main(String[] args) {
-        ApiClient client = Configuration.getDefaultApiClient();
-        client.setBasePath("http://127.0.0.1:9308");
-        SearchApi searchApi = new SearchApi(client);
-        try {
-            // Create SearchRequest
-            SearchRequest searchRequest = new SearchRequest();
-            searchRequest.setIndex("test");
-            QueryFilter queryFilter = new QueryFilter();
-			queryFilter.setQueryString("Title 1");								
-			searchRequest.setFulltextFilter(queryFilter);
-			
-			// Perform a search
-			SearchResponse searchResponse = searchApi.search(searchRequest);
-			System.out.println( searchResponse.toString() );
-        } catch (ApiException e) {
-            System.err.println("Exception when calling SearchApi#search");
-            System.err.println("Status code: " + e.getCode());
-            System.err.println("Reason: " + e.getResponseBody());
-            System.err.println("Response headers: " + e.getResponseHeaders());
-            e.printStackTrace();
-        }
-    }
-}
-
-```
-
-### Parameters
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **searchRequest** | [**SearchRequest**](SearchRequest.md)|  |
-
-### Return type
-
-[**SearchResponse**](SearchResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: application/json
-- **Accept**: application/json
-
-### HTTP response details
-| Status code | Description |
-|-------------|-------------|
-| **200** | Success, query processed |
-| **500** | Server error |
-
-
-## percolate
-
-> SearchResponse percolate(index, percolateRequest)
-
-Perform a reverse search on a percolate index
-
-This method must be used only on percolate indexes.
-
-Expects two parameters: the index name and an object with a document or an array of documents to search by.
-Here is an example of the object with a single document:
-
-```
-{
-  "query":
-  {
-    "percolate":
-    {
-      "document":
-      {
-        "content":"sample content"
-      }
-    }
-  }
-}
-```
-
-Responds with an object with matched stored queries: 
-
-```
-{
-  'timed_out':false,
-  'hits':
-  {
-    'total':2,
-    'max_score':1,
-    'hits':
-    [
-      {
-        '_index':'idx_pq_1',
-        '_type':'doc',
-        '_id':'2',
-        '_score':'1',
-        '_source':
-        {
-          'query':
-          {
-            'match':{'title':'some'}
-          }
-        }
-      },
-      {
-        '_index':'idx_pq_1',
-        '_type':'doc',
-        '_id':'5',
-        '_score':'1',
-        '_source':
-        {
-          'query':{'ql':'some | none'}
-        }
-      }
-    ]
-  }
-}
-```
-
-And here is an example of the object with multiple documents:
-
-```
-{
-  "query":
-  {
-    "percolate":
-    {
-      "documents": [
-        {
-          "content":"sample content"
-        },
-        {
-          "content":"another sample content"
-        }
-      ]
-    }
-  }
-}
-```
-
-
-### Example
-
-```java
-// Import classes:
-import java.util.*;
-import com.manticoresearch.client.ApiClient;
-import com.manticoresearch.client.ApiException;
-import com.manticoresearch.client.Configuration;
-import com.manticoresearch.client.model.*;
-import com.manticoresearch.client.api.SearchApi;
-
-public class Example {
-    public static void main(String[] args) {
-        ApiClient defaultClient = Configuration.getDefaultApiClient();
-        defaultClient.setBasePath("http://127.0.0.1:9308");
-
-        SearchApi searchApi = new SearchApi(defaultClient);
-
-        try {
-            PercolateRequest percolateRequest = new PercolateRequest();
-            Map<String,Object> query = new HashMap<String,Object>(){{
-                put("percolate",new HashMap<String,Object >(){{
-                    put("document", new HashMap<String,Object >(){{ 
-                        put("title","what a nice bag");
-                    }});
-                }});
-            }};
-            percolateRequest.query(query);
-            Object result =  searchApi.percolate("products",percolateRequest);
-        } catch (ApiException e) {
-            System.err.println("Exception when calling SearchApi#percolate");
-            System.err.println("Status code: " + e.getCode());
-            System.err.println("Reason: " + e.getResponseBody());
-            System.err.println("Response headers: " + e.getResponseHeaders());
-            e.printStackTrace();
-        }
-    }
-}
-```
-
-### Parameters
-
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **index** | **String**| Name of the percolate index |
- **percolateRequest** | [**PercolateRequest**](PercolateRequest.md)|  |
-
-### Return type
-
-[**SearchResponse**](SearchResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: application/json
-- **Accept**: application/json
-
-### HTTP response details
-| Status code | Description |
-|-------------|-------------|
-| **200** | Success, query processed |
-| **500** | Server error |
-
diff --git a/out/manticoresearch-java-actual/docs/SearchRequest.md b/out/manticoresearch-java-actual/docs/SearchRequest.md
deleted file mode 100644
index 2bb5319..0000000
--- a/out/manticoresearch-java-actual/docs/SearchRequest.md
+++ /dev/null
@@ -1,383 +0,0 @@
-
-
-# SearchRequest
-
-Request object for search operation
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**index** | **String** |  |  |
-|**query** | **Object** |  |  [optional] |
-|**fulltextFilter** | **Object** |  |  [optional] |
-|**attrFilter** | **Object** |  |  [optional] |
-|**limit** | **Integer** |  |  [optional] |
-|**offset** | **Integer** |  |  [optional] |
-|**maxMatches** | **Integer** |  |  [optional] |
-|**sort** | **List&lt;Object&gt;** |  |  [optional] |
-|**aggs** | [**Map&lt;String, Aggregation&gt;**](Aggregation.md) |  |  [optional] |
-|**expressions** | **Map&lt;String, String&gt;** |  |  [optional] |
-|**highlight** | [**Highlight**](Highlight.md) |  |  [optional] |
-|**source** | **Object** |  |  [optional] |
-|**options** | **Map&lt;String, Object&gt;** |  |  [optional] |
-|**profile** | **Boolean** |  |  [optional] |
-|**trackScores** | **Boolean** |  |  [optional] |
-
-
-## Building a search request
-
-[[Docs on search options in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Options#Search-options)
-```java
-
-searchRequest.setIndex("movies");
-
-Map<String,Object> query = new HashMap<>();
-query.put("query_string", "Star");
-searchRequest.setQuery(query);
-
-searchRequest.setLimit(10);
-searchRequest.setTrackScores(false);
-
-Map<String,Object> options = new HashMap<String,Object>();
-options.put("cutoff", 2);
-options.put("ranker", "bm25");
-searchRequest.setOptions(options);
-
-searchRequest.setSource("title");
-
-SearchResponse searchResponse = searchApi.search(searchRequest);
-System.out.println( searchResponse.toString() );
-```
-
-
-### SourceByRules
-
-[[SourceByRules - input parameters]](SourceByRules.md)
-
-[[Docs on the `source` property in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Search_results#Source-selection)
-```java
-//Setting the `Source` property with an auxiliary object:
-List<String> includes = Arrays.asList("title", "year");
-List<String> excludes = Arrays.asList("code");
-SourceByRules source = new SourceByRules();
-source.setIncludes(includes);
-source.setExcludes(excludes);
-searchRequest.setSource(source);
-
-SearchResponse searchResponse = searchApi.search(searchRequest);
-System.out.println( searchResponse.toString() );
-```
-
-
-### Sort
-```java
-//Setting the `Sort` property:
-List<Object> sort = new ArrayList<Object>( Arrays.asList("year") );
-searchRequest.setSort(sort);
-
-SearchResponse searchResponse = searchApi.search(searchRequest);
-System.out.println( searchResponse.toString() );
-```
-
-### SortOrder
-
-[[SortOrder - input parameters]](SortOrder.md)
-
-### SortMVA
-
-[[SortMVA - input parameters](SortMVA.md)
-
-[[Docs on sorting in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Sorting_and_ranking#HTTP)
-```java
-//Setting the `Sort` property with an auxiliary object:
-List<Object> sort = new ArrayList<Object>();
-SortOrder sort1 = new SortOrder();
-sort1.setAttr("rating");
-sort1.setOrder(SortOrder.OrderEnum.ASC);
-sort.add(sort1);
-
-SortMVA sort2 = new SortMVA();
-sort2.setAttr("code");
-sort2.setOrder(SortMVA.OrderEnum.DESC);
-sort2.setMode(SortMVA.ModeEnum.MAX);
-sort.add(sort2);
-
-searchRequest.setSort(sort);
-
-SearchResponse searchResponse = searchApi.search(searchRequest);
-System.out.println( searchResponse.toString() );
-```
-
-### Expressions
-
-[[Docs on expressions in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Expressions#Expressions-in-HTTP-JSON)
-```java    
-//Setting the `expressions` property:
-Map<String,String> expr = new HashMap<String,String>();
-expr.put("expr1", "min(year,2900)");
-List<Object> expressions = new ArrayList<Object>();
-expressions.add(expr);
-expressions.add( 
-	new HashMap<String,String>()
-);
-searchRequest.setExpressions(expressions);
-					        	
-SearchResponse searchResponse = searchApi.search(searchRequest);
-System.out.println( searchResponse.toString() );
-```
-
-### Aggregation
-
-[[Aggregation - input parameters]](Aggregation.md)
-
-[[Docs on aggregations in Manticore Search Manual](https://manual.manticoresearch.com/Searching/Faceted_search#Aggregations)
-```java    
-//Setting the `aggs` property with an auxiliary object:
-Aggregation agg = new Aggregation();
-agg.setName("agg1");
-agg.setField("year");
-agg.setSize(10);
-searchRequest.setAggs( new ArrayList<Aggregation>( Arrays.asList(agg) ) );
-
-agg = new Aggregation();
-agg.setName("agg2");
-agg.setField("rating");
-List<Aggregation> aggs = searchRequest.getAggs();
-aggs.add(agg);
-searchRequest.setAggs(aggs);
-
-SearchResponse searchResponse = searchApi.search(searchRequest);
-System.out.println( searchResponse.toString() );
-```
-
-### Highlight
-
-[[Highlight - input parameters]](Highlight.md)
-
-[[Docs on highlighting in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Highlighting#Highlighting)
-```java
-//Settting the `highlight` property with an auxiliary object:
-Highlight highlight = new Highlight();
-highlight.setFieldnames( Arrays.asList("title") );
-highlight.setPostTags("</post_tag>");
-highlight.setEncoder(Highlight.EncoderEnum.DEFAULT);
-highlight.setSnippetBoundary(Highlight.SnippetBoundaryEnum.SENTENCE);
-searchRequest.setHighlight(highlight);
-
-SearchResponse searchResponse = searchApi.search(searchRequest);
-System.out.println( searchResponse.toString() );
-```
-
-#### HighlightField
-
-[[HighlightField - input parameters]](HighlightField.md)
-
-[[Docs on highlight fields in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Highlighting#Highlighting)
-```java
-// settting `highlight.fields` property with an auxiliary HighlightField object
-HighlightField highlightField = new HighlightField();
-highlightField.setName("title");
-highlightField.setLimit(5);
-List<HighlightField> highlightFields = new ArrayList<HighlightField>( Arrays.asList(highlightField) );
-highlight.setFields(highlightFields);
-searchRequest.setHighlight(highlight);
-
-SearchResponse searchResponse = searchApi.search(searchRequest);
-System.out.println( searchResponse.toString() );
-```
-
-### FulltextFilter
-#### QueryFilter
-
-[[Docs on fulltext filters in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON)
-
-[[QueryFilter - input parameters]](QueryFilter.md)
-```java    
-//Setting the `FulltextFilter` property using different fulltext filter objects:
-
-//Using a QueryFilter object
-QueryFilter queryFilter = new QueryFilter();
-queryFilter.setQueryString("Star Trek 2");								
-searchRequest.setFulltextFilter(queryFilter);
-
-SearchResponse searchResponse = searchApi.search(searchRequest);
-System.out.println( searchResponse.toString() );
-```
-
-#### MatchFilter
-
-[[MatchFilter - input parameters]](MatchFilter.md)
-```java    
-//Using a MatchFilter object
-MatchFilter matchFilter = new MatchFilter();
-matchFilter.setQueryString("Nemesis");
-matchFilter.setQueryFields("title");	
-searchRequest.setFulltextFilter(matchFilter);
-
-SearchResponse searchResponse = searchApi.search(searchRequest);
-System.out.println( searchResponse.toString() );
-```
-
-#### MatchPhraseFilter
-
-[[MatchPhraseFilter - input parameters]](MatchPhraseFilter.md)
-```java    
-//Using a MatchPhraseFilter object
-MatchPhraseFilter matchPhraseFilter = new MatchPhraseFilter();
-matchPhraseFilter.setQueryPhrase("Star Trek 2");
-matchPhraseFilter.setQueryFields("title");
-searchRequest.setFulltextFilter(matchPhraseFilter);
-
-SearchResponse searchResponse = searchApi.search(searchRequest);
-System.out.println( searchResponse.toString() );
-```
-
-#### MatchOpFilter
-
-[[MatchOpFilter - input parameters]](MatchOpFilter.md)
-```java
-//Using a MatchOpFilter object
-MatchOpFilter matchOpFilter = new MatchOpFilter();
-matchOpFilter.setQueryString("Enterprise test");
-matchOpFilter.setQueryFields("title,plot");
-matchOpFilter.setOperator(MatchOpFilter.OperatorEnum.OR);
-searchRequest.setFulltextFilter(matchOpFilter);
-
-SearchResponse searchResponse = searchApi.search(searchRequest);
-System.out.println( searchResponse.toString() );
-```    
-
-
-### AttrFilter
-#### EqualsFilter
-
-[[EqualsFilter - input parameters]](EqualsFilter.md)
-
-[[Docs on equality filters in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Filters#Equality-filters)
-```java
-//Setting the `AttrFilter` property using different attribute filter objects:
-
-//Using an EqualsFilter object
-EqualsFilter equalsFilter = new EqualsFilter();
-equalsFilter.setField("year");
-equalsFilter.setValue(2003);
-searchRequest.setAttrFilter(equalsFilter);
-
-SearchResponse searchResponse = searchApi.search(searchRequest);
-System.out.println( searchResponse.toString() );
-```
-
-#### InFilter
-
-[[InFilter - input parameters]](InFilter.md)
-
-[[Docs on set filters in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Filters#Set-filters)
-```java
-//Using InFilter object
-InFilter inFilter = new InFilter();
-inFilter.setField("year");
-inFilter.setValues( Arrays.asList(2001, 2002) );
-searchRequest.setAttrFilter(inFilter);
-
-SearchResponse searchResponse = searchApi.search(searchRequest);
-System.out.println( searchResponse.toString() );
-```
-
-#### RangeFilter
-
-[[RangeFilter - input parameters]](RangeFilter.md)
-
-[[Docs on range filters in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Filters#Range-filters)
-```java
-//Using a RangeFilter object
-RangeFilter rangeFilter = new RangeFilter();
-rangeFilter.setField("year");
-rangeFilter.setLte(BigDecimal.valueOf(2001));
-rangeFilter.setGte(BigDecimal.valueOf(1000));
-searchRequest.setAttrFilter(rangeFilter);
-
-SearchResponse searchResponse = searchApi.search(searchRequest);
-System.out.println( searchResponse.toString() );
-```
-
-#### GeoDistanceFilter
-
-[[GeoDistanceFilter - input parameters]](GeoDistanceFilter.md)
-
-[[Docs on geo distance filters in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Filters#Geo-distance-filters)
-```java
-//Using a GeoDistanceFilter object
-searchRequest.setIndex("geo");
-
-GeoDistanceFilter geoFilter = new GeoDistanceFilter();
-GeoDistanceFilterLocationAnchor locAnchor = new GeoDistanceFilterLocationAnchor();
-locAnchor.setLat(10);
-locAnchor.setLon(20);
-geoFilter.setLocationAnchor(locAnchor);
-geoFilter.setLocationSource("field3,field4");
-geoFilter.setDistanceType(GeoDistanceFilter.DistanceTypeEnum.ADAPTIVE);
-geoFilter.setDistance("100km");
-
-SearchResponse searchResponse = searchApi.search(searchRequest);
-System.out.println( searchResponse.toString() );
-```
-
-#### BoolFilter
-
-[[BoolFilter - input parameters]](BoolFilter.md)
-
-[[Docs on bool queries in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Filters#bool-query)
-```java
-//Setting the `AttrFilter` property using a bool filter object:
-searchRequest.setIndex("movies");
-
-BoolFilter boolFilter = new BoolFilter();
-EqualsFilter equalsFilter = new EqualsFilter();
-equalsFilter.setField("year");
-equalsFilter.setValue(2003);
-boolFilter.setMust( new ArrayList<Object>( Arrays.asList(equalsFilter) ) );
-
-rangeFilter = new RangeFilter();
-rangeFilter.setField("rating");
-rangeFilter.setLte(BigDecimal.valueOf(6.5));
-List<Object> mustFilter = boolFilter.getMust();
-mustFilter.add(rangeFilter);
-boolFilter.setMust(mustFilter);
-
-searchRequest.setAttrFilter(boolFilter);
-
-SearchResponse searchResponse = searchApi.search(searchRequest);
-System.out.println( searchResponse.toString() );
-
-equalsFilter = new EqualsFilter();
-equalsFilter.setField("year");
-equalsFilter.setValue(2001);
-boolFilter.setMustNot( Arrays.asList(equalsFilter) );
-searchRequest.setAttrFilter(boolFilter);
-
-searchResponse = searchApi.search(searchRequest);
-System.out.println( searchResponse.toString() );
-
-//Using nested bool filters
-boolFilter = new BoolFilter();
-	
-MatchFilter fulltextFilter = new MatchFilter();
-fulltextFilter.setQueryString("Star");
-fulltextFilter.setQueryFields("title");
-BoolFilter nestedBoolFilter = new BoolFilter();
-equalsFilter = new EqualsFilter();
-equalsFilter.setField("rating");
-equalsFilter.setValue(6.5);
-nestedBoolFilter.setShould( Arrays.asList(equalsFilter, fulltextFilter) );
-boolFilter.setMust( Arrays.asList(nestedBoolFilter) );
-searchRequest.setAttrFilter(boolFilter);
-
-SearchResponse searchResponse = searchApi.search(searchRequest);
-System.out.println( searchResponse.toString() );
-```
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/SearchResponse.md b/out/manticoresearch-java-actual/docs/SearchResponse.md
deleted file mode 100644
index 10722ad..0000000
--- a/out/manticoresearch-java-actual/docs/SearchResponse.md
+++ /dev/null
@@ -1,21 +0,0 @@
-
-
-# SearchResponse
-
-Response object of a search request
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**took** | **Integer** |  |  [optional] |
-|**timedOut** | **Boolean** |  |  [optional] |
-|**aggregations** | **Map&lt;String, Object&gt;** |  |  [optional] |
-|**hits** | [**SearchResponseHits**](SearchResponseHits.md) |  |  [optional] |
-|**profile** | **Object** |  |  [optional] |
-|**warning** | **Map&lt;String, Object&gt;** |  |  [optional] |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/SearchResponseHits.md b/out/manticoresearch-java-actual/docs/SearchResponseHits.md
deleted file mode 100644
index 20bac20..0000000
--- a/out/manticoresearch-java-actual/docs/SearchResponseHits.md
+++ /dev/null
@@ -1,18 +0,0 @@
-
-
-# SearchResponseHits
-
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**maxScore** | **Integer** |  |  [optional] |
-|**total** | **Integer** |  |  [optional] |
-|**totalRelation** | **String** |  |  [optional] |
-|**hits** | **List&lt;Object&gt;** |  |  [optional] |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/SortMVA.md b/out/manticoresearch-java-actual/docs/SortMVA.md
deleted file mode 100644
index 9bcbf61..0000000
--- a/out/manticoresearch-java-actual/docs/SortMVA.md
+++ /dev/null
@@ -1,35 +0,0 @@
-
-
-# SortMVA
-
-Query sort expression for MVA attributes
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**attr** | **String** |  |  |
-|**order** | [**OrderEnum**](#OrderEnum) |  |  |
-|**mode** | [**ModeEnum**](#ModeEnum) |  |  |
-
-[[Using in search requests]](SearchRequest.md#SortMVA)
-
-
-
-## Enum: OrderEnum
-
-| Name | Value |
-|---- | -----|
-| ASC | &quot;asc&quot; |
-| DESC | &quot;desc&quot; |
-
-
-## Enum: ModeEnum
-
-| Name | Value |
-|---- | -----|
-| MIN | &quot;min&quot; |
-| MAX | &quot;max&quot; |
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/SortMultiple.md b/out/manticoresearch-java-actual/docs/SortMultiple.md
deleted file mode 100644
index 3b91ec3..0000000
--- a/out/manticoresearch-java-actual/docs/SortMultiple.md
+++ /dev/null
@@ -1,17 +0,0 @@
-
-
-# SortMultiple
-
-Query sort expression for multiple attributes
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**attrs** | **Map&lt;String, Object&gt;** |  |  |
-|**replace** | **Boolean** |  |  |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/SortOrder.md b/out/manticoresearch-java-actual/docs/SortOrder.md
deleted file mode 100644
index 570c3a8..0000000
--- a/out/manticoresearch-java-actual/docs/SortOrder.md
+++ /dev/null
@@ -1,26 +0,0 @@
-
-
-# SortOrder
-
-Query sort expression
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**attr** | **String** |  |  |
-|**order** | [**OrderEnum**](#OrderEnum) |  |  |
-
-[[Using in search requests]](SearchRequest.md#SortOrder)
-
-
-
-## Enum: OrderEnum
-
-| Name | Value |
-|---- | -----|
-| ASC | &quot;asc&quot; |
-| DESC | &quot;desc&quot; |
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/SourceByRules.md b/out/manticoresearch-java-actual/docs/SourceByRules.md
deleted file mode 100644
index 6ccd9de..0000000
--- a/out/manticoresearch-java-actual/docs/SourceByRules.md
+++ /dev/null
@@ -1,18 +0,0 @@
-
-
-# SourceByRules
-
-Query fields to be included/excluded to/from response
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**includes** | **List&lt;String&gt;** |  |  |
-|**excludes** | **List&lt;String&gt;** |  |  |
-
-[[Using in search requests]](SearchRequest.md#SourceByRules)
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/SuccessResponse.md b/out/manticoresearch-java-actual/docs/SuccessResponse.md
deleted file mode 100644
index 097da3b..0000000
--- a/out/manticoresearch-java-actual/docs/SuccessResponse.md
+++ /dev/null
@@ -1,20 +0,0 @@
-
-
-# SuccessResponse
-
-Success response
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**index** | **String** |  |  [optional] |
-|**id** | **Long** |  |  [optional] |
-|**created** | **Boolean** |  |  [optional] |
-|**result** | **String** |  |  [optional] |
-|**found** | **Boolean** |  |  [optional] |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/UpdateDocumentRequest.md b/out/manticoresearch-java-actual/docs/UpdateDocumentRequest.md
deleted file mode 100644
index 5607756..0000000
--- a/out/manticoresearch-java-actual/docs/UpdateDocumentRequest.md
+++ /dev/null
@@ -1,19 +0,0 @@
-
-
-# UpdateDocumentRequest
-
-Payload for update document
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**index** | **String** |  |  |
-|**doc** | **Map&lt;String, Object&gt;** | Index name |  |
-|**id** | **Long** | Document ID |  [optional] |
-|**query** | **Map&lt;String, Object&gt;** | Query tree object |  [optional] |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/UpdateResponse.md b/out/manticoresearch-java-actual/docs/UpdateResponse.md
deleted file mode 100644
index 155375f..0000000
--- a/out/manticoresearch-java-actual/docs/UpdateResponse.md
+++ /dev/null
@@ -1,19 +0,0 @@
-
-
-# UpdateResponse
-
-Success response
-
-## Properties
-
-| Name | Type | Description | Notes |
-|------------ | ------------- | ------------- | -------------|
-|**index** | **String** |  |  [optional] |
-|**updated** | **Integer** |  |  [optional] |
-|**id** | **Long** |  |  [optional] |
-|**result** | **String** |  |  [optional] |
-
-
-
-
-
diff --git a/out/manticoresearch-java-actual/docs/UtilsApi.md b/out/manticoresearch-java-actual/docs/UtilsApi.md
deleted file mode 100644
index facfd6b..0000000
--- a/out/manticoresearch-java-actual/docs/UtilsApi.md
+++ /dev/null
@@ -1,82 +0,0 @@
-# UtilsApi
-
-All URIs are relative to *http://127.0.0.1:9308*
-
-Method | HTTP request | Description
-------------- | ------------- | -------------
-[**sql**](UtilsApi.md#sql) | **POST** /sql | Perform SQL requests
-
-
-
-## sql
-
-> Map&lt;String, Array&gt; sql(body, rawResponse)
-
-Perform SQL requests
-
-Run a query in SQL format.
-Expects a query string passed through `body` parameter and `rawResponse` parameter that defines a format of response:
-* `rawResponse` parameter can be set to false for Select only queries, e.g., `SELECT * FROM myindex`.  
-* `rawResponse` parameter can be set to true for any type of query (including Select qieries as well) , e.g., `SHOW TABLES`.
-The query string must stay as it is, no URL encoding is needed.  
-The response object depends on the query executed. In select mode the response has same format as `/search` operation.
-
-
-### Example
-
-```java
-// Import classes:
-import com.manticoresearch.client.ApiClient;
-import com.manticoresearch.client.ApiException;
-import com.manticoresearch.client.Configuration;
-import com.manticoresearch.client.model.*;
-import com.manticoresearch.client.api.UtilsApi;
-
-public class Example {
-    public static void main(String[] args) {
-        ApiClient defaultClient = Configuration.getDefaultApiClient();
-        defaultClient.setBasePath("http://127.0.0.1:9308");
-
-        UtilsApi utilsApi = new UtilsApi(defaultClient);
- 
-        try {
-            Object sqlresult =  utilsApi.sql("SHOW TABLES");
-            System.out.println(sqlresult);  
-        } catch (ApiException e) {
-            System.err.println("Exception when calling UtilsApi#sql");
-            System.err.println("Status code: " + e.getCode());
-            System.err.println("Reason: " + e.getResponseBody());
-            System.err.println("Response headers: " + e.getResponseHeaders());
-            e.printStackTrace();
-        }
-    }
-}
-```
-
-### Parameters
-
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **body** | **String**| A query string.  |
- **rawResponse** | **Boolean**| Defines a format of response. Can be set to false for Select only queries or set to true for any queries (including Select queries).  |
-
-### Return type
-
-**Map&lt;String, Array&gt;**
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: text/plain
-- **Accept**: application/json
-
-### HTTP response details
-| Status code | Description | Response headers |
-|-------------|-------------|------------------|
-| **200** | In case of SELECT-only in mode none the response schema is the same as of &#x60;search&#x60;. In case of &#x60;mode&#x3D;raw&#x60; the response depends on the query executed.  |  -  |
-| **0** | error |  -  |
-
diff --git a/out/manticoresearch-java-actual/git_push.sh b/out/manticoresearch-java-actual/git_push.sh
deleted file mode 100644
index eb9790f..0000000
--- a/out/manticoresearch-java-actual/git_push.sh
+++ /dev/null
@@ -1,57 +0,0 @@
-#!/bin/sh
-# ref: https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/
-#
-# Usage example: /bin/sh ./git_push.sh wing328 openapi-petstore-perl "minor update" "gitlab.com"
-
-git_user_id=$1
-git_repo_id=$2
-release_note=$3
-git_host=$4
-
-if [ "$git_host" = "" ]; then
-    git_host="github.com"
-    echo "[INFO] No command line input provided. Set \$git_host to $git_host"
-fi
-
-if [ "$git_user_id" = "" ]; then
-    git_user_id="manticoresoftware"
-    echo "[INFO] No command line input provided. Set \$git_user_id to $git_user_id"
-fi
-
-if [ "$git_repo_id" = "" ]; then
-    git_repo_id="manticoresearch-java"
-    echo "[INFO] No command line input provided. Set \$git_repo_id to $git_repo_id"
-fi
-
-if [ "$release_note" = "" ]; then
-    release_note="Minor update"
-    echo "[INFO] No command line input provided. Set \$release_note to $release_note"
-fi
-
-# Initialize the local directory as a Git repository
-git init
-
-# Adds the files in the local repository and stages them for commit.
-git add .
-
-# Commits the tracked changes and prepares them to be pushed to a remote repository.
-git commit -m "$release_note"
-
-# Sets the new remote
-git_remote=$(git remote)
-if [ "$git_remote" = "" ]; then # git remote not defined
-
-    if [ "$GIT_TOKEN" = "" ]; then
-        echo "[INFO] \$GIT_TOKEN (environment variable) is not set. Using the git credential in your environment."
-        git remote add origin https://${git_host}/${git_user_id}/${git_repo_id}.git
-    else
-        git remote add origin https://${git_user_id}:"${GIT_TOKEN}"@${git_host}/${git_user_id}/${git_repo_id}.git
-    fi
-
-fi
-
-git pull origin master
-
-# Pushes (Forces) the changes in the local repository up to the remote repository
-echo "Git pushing to https://${git_host}/${git_user_id}/${git_repo_id}.git"
-git push origin master 2>&1 | grep -v 'To https'
diff --git a/out/manticoresearch-java-actual/gradle.properties b/out/manticoresearch-java-actual/gradle.properties
deleted file mode 100644
index a340857..0000000
--- a/out/manticoresearch-java-actual/gradle.properties
+++ /dev/null
@@ -1,6 +0,0 @@
-# This file is automatically generated by OpenAPI Generator (https://github.com/openAPITools/openapi-generator).
-# To include other gradle properties as part of the code generation process, please use the `gradleProperties` option.
-#
-# Gradle properties reference: https://docs.gradle.org/current/userguide/build_environment.html#sec:gradle_configuration_properties
-# For example, uncomment below to build for Android
-#target = android
diff --git a/out/manticoresearch-java-actual/gradle/wrapper/gradle-wrapper.jar b/out/manticoresearch-java-actual/gradle/wrapper/gradle-wrapper.jar
deleted file mode 100644
index 7454180..0000000
Binary files a/out/manticoresearch-java-actual/gradle/wrapper/gradle-wrapper.jar and /dev/null differ
diff --git a/out/manticoresearch-java-actual/gradle/wrapper/gradle-wrapper.properties b/out/manticoresearch-java-actual/gradle/wrapper/gradle-wrapper.properties
deleted file mode 100644
index ffed3a2..0000000
--- a/out/manticoresearch-java-actual/gradle/wrapper/gradle-wrapper.properties
+++ /dev/null
@@ -1,5 +0,0 @@
-distributionBase=GRADLE_USER_HOME
-distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-7.2-bin.zip
-zipStoreBase=GRADLE_USER_HOME
-zipStorePath=wrapper/dists
diff --git a/out/manticoresearch-java-actual/gradlew b/out/manticoresearch-java-actual/gradlew
deleted file mode 100644
index 005bcde..0000000
--- a/out/manticoresearch-java-actual/gradlew
+++ /dev/null
@@ -1,234 +0,0 @@
-#!/bin/sh
-
-#
-# Copyright © 2015-2021 the original authors.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      https://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-
-##############################################################################
-#
-#   Gradle start up script for POSIX generated by Gradle.
-#
-#   Important for running:
-#
-#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is
-#       noncompliant, but you have some other compliant shell such as ksh or
-#       bash, then to run this script, type that shell name before the whole
-#       command line, like:
-#
-#           ksh Gradle
-#
-#       Busybox and similar reduced shells will NOT work, because this script
-#       requires all of these POSIX shell features:
-#         * functions;
-#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,
-#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;
-#         * compound commands having a testable exit status, especially «case»;
-#         * various built-in commands including «command», «set», and «ulimit».
-#
-#   Important for patching:
-#
-#   (2) This script targets any POSIX shell, so it avoids extensions provided
-#       by Bash, Ksh, etc; in particular arrays are avoided.
-#
-#       The "traditional" practice of packing multiple parameters into a
-#       space-separated string is a well documented source of bugs and security
-#       problems, so this is (mostly) avoided, by progressively accumulating
-#       options in "$@", and eventually passing that to Java.
-#
-#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,
-#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;
-#       see the in-line comments for details.
-#
-#       There are tweaks for specific operating systems such as AIX, CygWin,
-#       Darwin, MinGW, and NonStop.
-#
-#   (3) This script is generated from the Groovy template
-#       https://github.com/gradle/gradle/blob/master/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt
-#       within the Gradle project.
-#
-#       You can find Gradle at https://github.com/gradle/gradle/.
-#
-##############################################################################
-
-# Attempt to set APP_HOME
-
-# Resolve links: $0 may be a link
-app_path=$0
-
-# Need this for daisy-chained symlinks.
-while
-    APP_HOME=${app_path%"${app_path##*/}"}  # leaves a trailing /; empty if no leading path
-    [ -h "$app_path" ]
-do
-    ls=$( ls -ld "$app_path" )
-    link=${ls#*' -> '}
-    case $link in             #(
-      /*)   app_path=$link ;; #(
-      *)    app_path=$APP_HOME$link ;;
-    esac
-done
-
-APP_HOME=$( cd "${APP_HOME:-./}" && pwd -P ) || exit
-
-APP_NAME="Gradle"
-APP_BASE_NAME=${0##*/}
-
-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS='-Dfile.encoding=UTF-8 "-Xmx64m" "-Xms64m"'
-
-# Use the maximum available, or set MAX_FD != -1 to use that value.
-MAX_FD=maximum
-
-warn () {
-    echo "$*"
-} >&2
-
-die () {
-    echo
-    echo "$*"
-    echo
-    exit 1
-} >&2
-
-# OS specific support (must be 'true' or 'false').
-cygwin=false
-msys=false
-darwin=false
-nonstop=false
-case "$( uname )" in                #(
-  CYGWIN* )         cygwin=true  ;; #(
-  Darwin* )         darwin=true  ;; #(
-  MSYS* | MINGW* )  msys=true    ;; #(
-  NONSTOP* )        nonstop=true ;;
-esac
-
-CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
-
-
-# Determine the Java command to use to start the JVM.
-if [ -n "$JAVA_HOME" ] ; then
-    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
-        # IBM's JDK on AIX uses strange locations for the executables
-        JAVACMD=$JAVA_HOME/jre/sh/java
-    else
-        JAVACMD=$JAVA_HOME/bin/java
-    fi
-    if [ ! -x "$JAVACMD" ] ; then
-        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
-
-Please set the JAVA_HOME variable in your environment to match the
-location of your Java installation."
-    fi
-else
-    JAVACMD=java
-    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-
-Please set the JAVA_HOME variable in your environment to match the
-location of your Java installation."
-fi
-
-# Increase the maximum file descriptors if we can.
-if ! "$cygwin" && ! "$darwin" && ! "$nonstop" ; then
-    case $MAX_FD in #(
-      max*)
-        MAX_FD=$( ulimit -H -n ) ||
-            warn "Could not query maximum file descriptor limit"
-    esac
-    case $MAX_FD in  #(
-      '' | soft) :;; #(
-      *)
-        ulimit -n "$MAX_FD" ||
-            warn "Could not set maximum file descriptor limit to $MAX_FD"
-    esac
-fi
-
-# Collect all arguments for the java command, stacking in reverse order:
-#   * args from the command line
-#   * the main class name
-#   * -classpath
-#   * -D...appname settings
-#   * --module-path (only if needed)
-#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.
-
-# For Cygwin or MSYS, switch paths to Windows format before running java
-if "$cygwin" || "$msys" ; then
-    APP_HOME=$( cygpath --path --mixed "$APP_HOME" )
-    CLASSPATH=$( cygpath --path --mixed "$CLASSPATH" )
-
-    JAVACMD=$( cygpath --unix "$JAVACMD" )
-
-    # Now convert the arguments - kludge to limit ourselves to /bin/sh
-    for arg do
-        if
-            case $arg in                                #(
-              -*)   false ;;                            # don't mess with options #(
-              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath
-                    [ -e "$t" ] ;;                      #(
-              *)    false ;;
-            esac
-        then
-            arg=$( cygpath --path --ignore --mixed "$arg" )
-        fi
-        # Roll the args list around exactly as many times as the number of
-        # args, so each arg winds up back in the position where it started, but
-        # possibly modified.
-        #
-        # NB: a `for` loop captures its iteration list before it begins, so
-        # changing the positional parameters here affects neither the number of
-        # iterations, nor the values presented in `arg`.
-        shift                   # remove old arg
-        set -- "$@" "$arg"      # push replacement arg
-    done
-fi
-
-# Collect all arguments for the java command;
-#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of
-#     shell script including quotes and variable substitutions, so put them in
-#     double quotes to make sure that they get re-expanded; and
-#   * put everything else in single quotes, so that it's not re-expanded.
-
-set -- \
-        "-Dorg.gradle.appname=$APP_BASE_NAME" \
-        -classpath "$CLASSPATH" \
-        org.gradle.wrapper.GradleWrapperMain \
-        "$@"
-
-# Use "xargs" to parse quoted args.
-#
-# With -n1 it outputs one arg per line, with the quotes and backslashes removed.
-#
-# In Bash we could simply go:
-#
-#   readarray ARGS < <( xargs -n1 <<<"$var" ) &&
-#   set -- "${ARGS[@]}" "$@"
-#
-# but POSIX shell has neither arrays nor command substitution, so instead we
-# post-process each arg (as a line of input to sed) to backslash-escape any
-# character that might be a shell metacharacter, then use eval to reverse
-# that process (while maintaining the separation between arguments), and wrap
-# the whole thing up as a single "set" statement.
-#
-# This will of course break if any of these variables contains a newline or
-# an unmatched quote.
-#
-
-eval "set -- $(
-        printf '%s\n' "$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS" |
-        xargs -n1 |
-        sed ' s~[^-[:alnum:]+,./:=@_]~\\&~g; ' |
-        tr '\n' ' '
-    )" '"$@"'
-
-exec "$JAVACMD" "$@"
diff --git a/out/manticoresearch-java-actual/gradlew.bat b/out/manticoresearch-java-actual/gradlew.bat
deleted file mode 100644
index 6a68175..0000000
--- a/out/manticoresearch-java-actual/gradlew.bat
+++ /dev/null
@@ -1,89 +0,0 @@
-@rem
-@rem Copyright 2015 the original author or authors.
-@rem
-@rem Licensed under the Apache License, Version 2.0 (the "License");
-@rem you may not use this file except in compliance with the License.
-@rem You may obtain a copy of the License at
-@rem
-@rem      https://www.apache.org/licenses/LICENSE-2.0
-@rem
-@rem Unless required by applicable law or agreed to in writing, software
-@rem distributed under the License is distributed on an "AS IS" BASIS,
-@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-@rem See the License for the specific language governing permissions and
-@rem limitations under the License.
-@rem
-
-@if "%DEBUG%" == "" @echo off
-@rem ##########################################################################
-@rem
-@rem  Gradle startup script for Windows
-@rem
-@rem ##########################################################################
-
-@rem Set local scope for the variables with windows NT shell
-if "%OS%"=="Windows_NT" setlocal
-
-set DIRNAME=%~dp0
-if "%DIRNAME%" == "" set DIRNAME=.
-set APP_BASE_NAME=%~n0
-set APP_HOME=%DIRNAME%
-
-@rem Resolve any "." and ".." in APP_HOME to make it shorter.
-for %%i in ("%APP_HOME%") do set APP_HOME=%%~fi
-
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=-Dfile.encoding=UTF-8 "-Xmx64m" "-Xms64m"
-
-@rem Find java.exe
-if defined JAVA_HOME goto findJavaFromJavaHome
-
-set JAVA_EXE=java.exe
-%JAVA_EXE% -version >NUL 2>&1
-if "%ERRORLEVEL%" == "0" goto execute
-
-echo.
-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:findJavaFromJavaHome
-set JAVA_HOME=%JAVA_HOME:"=%
-set JAVA_EXE=%JAVA_HOME%/bin/java.exe
-
-if exist "%JAVA_EXE%" goto execute
-
-echo.
-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:execute
-@rem Setup the command line
-
-set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
-
-
-@rem Execute Gradle
-"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %*
-
-:end
-@rem End local scope for the variables with windows NT shell
-if "%ERRORLEVEL%"=="0" goto mainEnd
-
-:fail
-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
-rem the _cmd.exe /c_ return code!
-if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
-exit /b 1
-
-:mainEnd
-if "%OS%"=="Windows_NT" endlocal
-
-:omega
diff --git a/out/manticoresearch-java-actual/pom.xml b/out/manticoresearch-java-actual/pom.xml
deleted file mode 100644
index 3e3cf71..0000000
--- a/out/manticoresearch-java-actual/pom.xml
+++ /dev/null
@@ -1,382 +0,0 @@
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <groupId>com.manticoresearch</groupId>
-    <artifactId>manticoresearch</artifactId>
-    <packaging>jar</packaging>
-    <name>manticoresearch</name>
-    <version>5.0.0</version>
-    <url>https://github.com/manticoresoftware/manticoresearch-java</url>
-    <description>Client for Manticore Search</description>
-    <scm>
-        <connection>scm:git:git@github.com:openapitools/openapi-generator.git</connection>
-        <developerConnection>scm:git:git@github.com:openapitools/openapi-generator.git</developerConnection>
-        <url>https://github.com/openapitools/openapi-generator</url>
-    </scm>
-
-    <licenses>
-        <license>
-            <name>Apache 2.0</name>
-            <url>http://opensource.org/licenses/MIT</url>
-            <distribution>repo</distribution>
-        </license>
-    </licenses>
-
-    <developers>
-        <developer>
-            <name>Manticore Software</name>
-            <email>info@manticosearch.com</email>
-            <organization>manticoresearch.com</organization>
-            <organizationUrl>https://github.com/manticoresoftware/manticoresearch-java</organizationUrl>
-        </developer>
-    </developers>
-
-    <build>
-        <plugins>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-enforcer-plugin</artifactId>
-                <version>3.0.0</version>
-                <executions>
-                    <execution>
-                        <id>enforce-maven</id>
-                        <goals>
-                            <goal>enforce</goal>
-                        </goals>
-                        <configuration>
-                            <rules>
-                                <requireMavenVersion>
-                                    <version>2.2.0</version>
-                                </requireMavenVersion>
-                            </rules>
-                        </configuration>
-                    </execution>
-                </executions>
-            </plugin>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-surefire-plugin</artifactId>
-                <version>3.0.0-M5</version>
-                <configuration>
-                    <systemProperties>
-                        <property>
-                            <name>loggerPath</name>
-                            <value>conf/log4j.properties</value>
-                        </property>
-                    </systemProperties>
-                    <argLine>-Xms512m -Xmx1500m</argLine>
-                    <parallel>methods</parallel>
-                    <threadCount>10</threadCount>
-                    <trimStackTrace>false</trimStackTrace>
-                </configuration>
-            </plugin>
-            <plugin>
-                <artifactId>maven-dependency-plugin</artifactId>
-                <executions>
-                    <execution>
-                        <phase>package</phase>
-                        <goals>
-                            <goal>copy-dependencies</goal>
-                        </goals>
-                        <configuration>
-                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
-                        </configuration>
-                    </execution>
-                </executions>
-            </plugin>
-            <!-- attach test jar -->
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-jar-plugin</artifactId>
-                <version>3.2.2</version>
-                <executions>
-                    <execution>
-                        <goals>
-                            <goal>test-jar</goal>
-                        </goals>
-                    </execution>
-                </executions>
-                <configuration>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>org.codehaus.mojo</groupId>
-                <artifactId>build-helper-maven-plugin</artifactId>
-                <version>3.3.0</version>
-                <executions>
-                    <execution>
-                        <id>add_sources</id>
-                        <phase>generate-sources</phase>
-                        <goals>
-                            <goal>add-source</goal>
-                        </goals>
-                        <configuration>
-                            <sources>
-                                <source>src/main/java</source>
-                            </sources>
-                        </configuration>
-                    </execution>
-                    <execution>
-                        <id>add_test_sources</id>
-                        <phase>generate-test-sources</phase>
-                        <goals>
-                            <goal>add-test-source</goal>
-                        </goals>
-                        <configuration>
-                            <sources>
-                                <source>src/test/java</source>
-                            </sources>
-                        </configuration>
-                    </execution>
-                </executions>
-            </plugin>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-compiler-plugin</artifactId>
-                <version>3.10.1</version>
-                <configuration>
-                    <source>1.8</source>
-                    <target>1.8</target>
-                    <fork>true</fork>
-                    <meminitial>128m</meminitial>
-                    <maxmem>512m</maxmem>
-                    <compilerArgs>
-                        <arg>-Xlint:all</arg>
-                        <arg>-J-Xss4m</arg><!-- Compiling the generated JSON.java file may require larger stack size. -->
-                    </compilerArgs>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-javadoc-plugin</artifactId>
-                <version>3.3.2</version>
-                <executions>
-                    <execution>
-                        <id>attach-javadocs</id>
-                        <goals>
-                            <goal>jar</goal>
-                        </goals>
-                    </execution>
-                </executions>
-                <configuration>
-                    <doclint>none</doclint>
-                    <source>1.8</source>
-                    <tags>
-                        <tag>
-                            <name>http.response.details</name>
-                            <placement>a</placement>
-                            <head>Http Response Details:</head>
-                        </tag>
-                    </tags>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-source-plugin</artifactId>
-                <version>3.2.0</version>
-                <executions>
-                    <execution>
-                        <id>attach-sources</id>
-                        <goals>
-                            <goal>jar-no-fork</goal>
-                        </goals>
-                    </execution>
-                </executions>
-            </plugin>
-            <plugin>
-                <groupId>org.sonatype.plugins</groupId>
-                <artifactId>nexus-staging-maven-plugin</artifactId>
-                <version>1.6.7</version>
-                <extensions>true</extensions>
-                <configuration>
-                    <serverId>ossrh</serverId>
-                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
-                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-gpg-plugin</artifactId>
-                <version>1.6</version>
-                <executions>
-                    <execution>
-                        <id>sign-artifacts</id>
-                        <phase>verify</phase>
-                        <goals>
-                            <goal>sign</goal>
-                        </goals>
-                        <configuration>
-                            <executable>gpg2</executable>
-                            <passphrase>${gpg.passphrase}</passphrase>
-                            <gpgArguments>
-                                <arg>--pinentry-mode</arg>
-                                <arg>loopback</arg>
-                            </gpgArguments>
-                        </configuration>
-                    </execution>
-                </executions>
-            </plugin>
-            <!-- Use spotless plugin to automatically format code, remove unused import, etc
-                 To apply changes directly to the file, run `mvn spotless:apply`
-                 Ref: https://github.com/diffplug/spotless/tree/main/plugin-maven
-            -->
-            <plugin>
-              <groupId>com.diffplug.spotless</groupId>
-              <artifactId>spotless-maven-plugin</artifactId>
-              <version>${spotless.version}</version>
-              <configuration>
-                <formats>
-                  <!-- you can define as many formats as you want, each is independent -->
-                  <format>
-                    <!-- define the files to apply to -->
-                    <includes>
-                      <include>.gitignore</include>
-                    </includes>
-                    <!-- define the steps to apply to those files -->
-                    <trimTrailingWhitespace/>
-                    <endWithNewline/>
-                    <indent>
-                      <spaces>true</spaces> <!-- or <tabs>true</tabs> -->
-                      <spacesPerTab>4</spacesPerTab> <!-- optional, default is 4 -->
-                    </indent>
-                  </format>
-                </formats>
-                <!-- define a language-specific format -->
-                <java>
-                  <!-- no need to specify files, inferred automatically, but you can if you want -->
-
-                  <!-- apply a specific flavor of google-java-format and reflow long strings -->
-                  <googleJavaFormat>
-                    <version>1.8</version>
-                    <style>AOSP</style>
-                    <reflowLongStrings>true</reflowLongStrings>
-                  </googleJavaFormat>
-                  <removeUnusedImports/>
-                  <importOrder/>
-                </java>
-              </configuration>
-            </plugin>
-        </plugins>
-    </build>
-
-    <profiles>
-        <profile>
-            <id>sign-artifacts</id>
-            <build>
-                <plugins>
-                    <plugin>
-                        <groupId>org.apache.maven.plugins</groupId>
-                        <artifactId>maven-gpg-plugin</artifactId>
-                        <version>3.0.1</version>
-                        <executions>
-                            <execution>
-                                <id>sign-artifacts</id>
-                                <phase>verify</phase>
-                                <goals>
-                                    <goal>sign</goal>
-                                </goals>
-                            </execution>
-                        </executions>
-                    </plugin>
-                </plugins>
-            </build>
-        </profile>
-    </profiles>
-
-    <dependencies>
-
-        <!-- @Nullable annotation -->
-        <dependency>
-            <groupId>com.google.code.findbugs</groupId>
-            <artifactId>jsr305</artifactId>
-            <version>3.0.2</version>
-        </dependency>
-
-        <!-- HTTP client: jersey-client -->
-        <dependency>
-            <groupId>org.glassfish.jersey.core</groupId>
-            <artifactId>jersey-client</artifactId>
-            <version>${jersey-version}</version>
-        </dependency>
-        <dependency>
-            <groupId>org.glassfish.jersey.inject</groupId>
-            <artifactId>jersey-hk2</artifactId>
-            <version>${jersey-version}</version>
-        </dependency>
-        <dependency>
-            <groupId>org.glassfish.jersey.media</groupId>
-            <artifactId>jersey-media-multipart</artifactId>
-            <version>${jersey-version}</version>
-        </dependency>
-        <dependency>
-            <groupId>org.glassfish.jersey.media</groupId>
-            <artifactId>jersey-media-json-jackson</artifactId>
-            <version>${jersey-version}</version>
-        </dependency>
-
-        <!-- JSON processing: jackson -->
-        <dependency>
-            <groupId>com.fasterxml.jackson.core</groupId>
-            <artifactId>jackson-core</artifactId>
-            <version>${jackson-version}</version>
-        </dependency>
-        <dependency>
-            <groupId>com.fasterxml.jackson.core</groupId>
-            <artifactId>jackson-annotations</artifactId>
-            <version>${jackson-version}</version>
-        </dependency>
-        <dependency>
-            <groupId>com.fasterxml.jackson.core</groupId>
-            <artifactId>jackson-databind</artifactId>
-            <version>${jackson-databind-version}</version>
-        </dependency>
-        <dependency>
-            <groupId>org.openapitools</groupId>
-            <artifactId>jackson-databind-nullable</artifactId>
-            <version>${jackson-databind-nullable-version}</version>
-        </dependency>
-        <dependency>
-            <groupId>com.fasterxml.jackson.datatype</groupId>
-            <artifactId>jackson-datatype-jsr310</artifactId>
-            <version>${jackson-version}</version>
-        </dependency>
-        <dependency>
-            <groupId>jakarta.annotation</groupId>
-            <artifactId>jakarta.annotation-api</artifactId>
-            <version>${jakarta-annotation-version}</version>
-            <scope>provided</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.glassfish.jersey.connectors</groupId>
-            <artifactId>jersey-apache-connector</artifactId>
-            <version>${jersey-version}</version>
-        </dependency>
-        <!-- test dependencies -->
-        <dependency>
-            <groupId>org.junit.jupiter</groupId>
-            <artifactId>junit-jupiter-api</artifactId>
-            <version>${junit-version}</version>
-            <scope>test</scope>
-        </dependency>
-    </dependencies>
-    <properties>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-        <jersey-version>3.1.1</jersey-version>
-        <jackson-version>2.15.2</jackson-version>
-        <jackson-databind-version>2.15.2</jackson-databind-version>
-        <jackson-databind-nullable-version>0.2.6</jackson-databind-nullable-version>
-        <jakarta-annotation-version>2.1.1</jakarta-annotation-version>
-        <junit-version>5.10.0</junit-version>
-        <spotless.version>2.21.0</spotless.version>
-    </properties>
-    <distributionManagement>
-        <snapshotRepository>
-            <id>ossrh</id>
-            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
-        </snapshotRepository>
-        <repository>
-            <id>ossrh</id>
-            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
-        </repository>
-    </distributionManagement>
-</project>
diff --git a/out/manticoresearch-java-actual/settings.gradle b/out/manticoresearch-java-actual/settings.gradle
deleted file mode 100644
index f7b6a46..0000000
--- a/out/manticoresearch-java-actual/settings.gradle
+++ /dev/null
@@ -1 +0,0 @@
-rootProject.name = "manticoresearch"
\ No newline at end of file
diff --git a/out/manticoresearch-java-actual/src/main/AndroidManifest.xml b/out/manticoresearch-java-actual/src/main/AndroidManifest.xml
deleted file mode 100644
index d9059db..0000000
--- a/out/manticoresearch-java-actual/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,3 +0,0 @@
-<manifest package="com.manticoresearch.client" xmlns:android="http://schemas.android.com/apk/res/android">
-    <application />
-</manifest>
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/ApiClient.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/ApiClient.java
deleted file mode 100644
index d92f902..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/ApiClient.java
+++ /dev/null
@@ -1,1413 +0,0 @@
-package com.manticoresearch.client;
-
-import com.fasterxml.jackson.databind.ObjectMapper;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import org.openapitools.jackson.nullable.JsonNullableModule;
-
-import jakarta.ws.rs.client.Client;
-import jakarta.ws.rs.client.ClientBuilder;
-import jakarta.ws.rs.client.Entity;
-import jakarta.ws.rs.client.Invocation;
-import jakarta.ws.rs.client.WebTarget;
-import jakarta.ws.rs.core.Form;
-import jakarta.ws.rs.core.GenericType;
-import jakarta.ws.rs.core.MediaType;
-import jakarta.ws.rs.core.Response;
-import jakarta.ws.rs.core.Response.Status;
-
-import org.glassfish.jersey.client.ClientConfig;
-import org.glassfish.jersey.client.ClientProperties;
-import org.glassfish.jersey.client.HttpUrlConnectorProvider;
-import org.glassfish.jersey.jackson.JacksonFeature;
-import org.glassfish.jersey.media.multipart.FormDataBodyPart;
-import org.glassfish.jersey.media.multipart.FormDataContentDisposition;
-import org.glassfish.jersey.media.multipart.MultiPart;
-import org.glassfish.jersey.media.multipart.MultiPartFeature;
-
-import java.io.IOException;
-import java.io.InputStream;
-
-import java.net.URI;
-import javax.net.ssl.SSLContext;
-import javax.net.ssl.TrustManager;
-import javax.net.ssl.X509TrustManager;
-import java.security.cert.X509Certificate;
-import java.security.KeyManagementException;
-import java.security.NoSuchAlgorithmException;
-import java.security.SecureRandom;
-import java.nio.file.Files;
-import java.nio.file.Paths;
-import java.nio.file.StandardCopyOption;
-import org.glassfish.jersey.logging.LoggingFeature;
-import java.util.AbstractMap.SimpleEntry;
-import java.util.logging.Level;
-import java.util.logging.Logger;
-import java.util.Collection;
-import java.util.Collections;
-import java.util.Map;
-import java.util.Map.Entry;
-import java.util.HashMap;
-import java.util.LinkedHashMap;
-import java.util.LinkedHashSet;
-import java.util.List;
-import java.util.Arrays;
-import java.util.ArrayList;
-import java.util.Date;
-import java.util.stream.Collectors;
-import java.util.stream.Stream;
-import java.time.OffsetDateTime;
-
-import java.net.URLEncoder;
-
-import java.io.File;
-import java.io.UnsupportedEncodingException;
-
-import java.text.DateFormat;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-import com.manticoresearch.client.auth.Authentication;
-import com.manticoresearch.client.auth.HttpBasicAuth;
-import com.manticoresearch.client.auth.HttpBearerAuth;
-import com.manticoresearch.client.auth.ApiKeyAuth;
-import com.manticoresearch.client.model.SearchRequest;
-
-/**
- * <p>ApiClient class.</p>
- */
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class ApiClient extends JavaTimeFormatter {
-  private static final Pattern JSON_MIME_PATTERN = Pattern.compile("(?i)^(application/json|[^;/ \t]+/[^;/ \t]+[+]json)[ \t]*(;.*)?$");
-
-  protected Map<String, String> defaultHeaderMap = new HashMap<>();
-  protected Map<String, String> defaultCookieMap = new HashMap<>();
-  protected String basePath = "http://127.0.0.1:9308";
-  protected String userAgent;
-  private static final Logger log = Logger.getLogger(ApiClient.class.getName());
-
-  protected List<ServerConfiguration> servers = new ArrayList<>(Arrays.asList(
-          new ServerConfiguration(
-                  "http://127.0.0.1:9308",
-                  "Default Manticore Search HTTP",
-                  new LinkedHashMap<>()
-          )
-  ));
-  protected Integer serverIndex = 0;
-  protected Map<String, String> serverVariables = null;
-  protected Map<String, List<ServerConfiguration>> operationServers = new LinkedHashMap<>();
-  protected Map<String, Integer> operationServerIndex = new HashMap<>();
-  protected Map<String, Map<String, String>> operationServerVariables = new HashMap<>();
-  protected boolean debugging = false;
-  protected ClientConfig clientConfig;
-  protected int connectionTimeout = 0;
-  private int readTimeout = 0;
-
-  protected Client httpClient;
-  protected JSON json;
-  protected String tempFolderPath = null;
-
-  protected Map<String, Authentication> authentications;
-  protected Map<String, String> authenticationLookup;
-
-  protected DateFormat dateFormat;
-
-  /**
-   * Constructs a new ApiClient with default parameters.
-   */
-  public ApiClient() {
-    this(null);
-  }
-
-  /**
-   * Constructs a new ApiClient with the specified authentication parameters.
-   *
-   * @param authMap A hash map containing authentication parameters.
-   */
-  public ApiClient(Map<String, Authentication> authMap) {
-    json = new JSON();
-    httpClient = buildHttpClient();
-
-    this.dateFormat = new RFC3339DateFormat();
-
-    // Set default User-Agent.
-    setUserAgent("OpenAPI-Generator/5.0.0/java");
-
-    // Setup authentications (key: authentication name, value: authentication).
-    authentications = new HashMap<>();
-    Authentication auth = null;
-    // Prevent the authentications from being modified.
-    authentications = Collections.unmodifiableMap(authentications);
-
-    // Setup authentication lookup (key: authentication alias, value: authentication name)
-    authenticationLookup = new HashMap<>();
-  }
-
-  /**
-   * Gets the JSON instance to do JSON serialization and deserialization.
-   *
-   * @return JSON
-   */
-  public JSON getJSON() {
-    return json;
-  }
-
-  /**
-   * <p>Getter for the field <code>httpClient</code>.</p>
-   *
-   * @return a {@link jakarta.ws.rs.client.Client} object.
-   */
-  public Client getHttpClient() {
-    return httpClient;
-  }
-
-  /**
-   * <p>Setter for the field <code>httpClient</code>.</p>
-   *
-   * @param httpClient a {@link jakarta.ws.rs.client.Client} object.
-   * @return a {@link org.openapitools.client.ApiClient} object.
-   */
-  public ApiClient setHttpClient(Client httpClient) {
-    this.httpClient = httpClient;
-    return this;
-  }
-
-  /**
-   * Returns the base URL to the location where the OpenAPI document is being served.
-   *
-   * @return The base URL to the target host.
-   */
-  public String getBasePath() {
-    return basePath;
-  }
-
-  /**
-   * Sets the base URL to the location where the OpenAPI document is being served.
-   *
-   * @param basePath The base URL to the target host.
-   * @return a {@link org.openapitools.client.ApiClient} object.
-   */
-  public ApiClient setBasePath(String basePath) {
-    this.basePath = basePath;
-    return this;
-  }
-
-  /**
-   * <p>Getter for the field <code>servers</code>.</p>
-   *
-   * @return a {@link java.util.List} of servers.
-   */
-  public List<ServerConfiguration> getServers() {
-    return servers;
-  }
-
-  /**
-   * <p>Setter for the field <code>servers</code>.</p>
-   *
-   * @param servers a {@link java.util.List} of servers.
-   * @return a {@link org.openapitools.client.ApiClient} object.
-   */
-  public ApiClient setServers(List<ServerConfiguration> servers) {
-    this.servers = servers;
-    updateBasePath();
-    return this;
-  }
-
-  /**
-   * <p>Getter for the field <code>serverIndex</code>.</p>
-   *
-   * @return a {@link java.lang.Integer} object.
-   */
-  public Integer getServerIndex() {
-    return serverIndex;
-  }
-
-  /**
-   * <p>Setter for the field <code>serverIndex</code>.</p>
-   *
-   * @param serverIndex the server index
-   * @return a {@link org.openapitools.client.ApiClient} object.
-   */
-  public ApiClient setServerIndex(Integer serverIndex) {
-    this.serverIndex = serverIndex;
-    updateBasePath();
-    return this;
-  }
-
-  /**
-   * <p>Getter for the field <code>serverVariables</code>.</p>
-   *
-   * @return a {@link java.util.Map} of server variables.
-   */
-  public Map<String, String> getServerVariables() {
-    return serverVariables;
-  }
-
-  /**
-   * <p>Setter for the field <code>serverVariables</code>.</p>
-   *
-   * @param serverVariables a {@link java.util.Map} of server variables.
-   * @return a {@link org.openapitools.client.ApiClient} object.
-   */
-  public ApiClient setServerVariables(Map<String, String> serverVariables) {
-    this.serverVariables = serverVariables;
-    updateBasePath();
-    return this;
-  }
-
-  private void updateBasePath() {
-    if (serverIndex != null) {
-        setBasePath(servers.get(serverIndex).URL(serverVariables));
-    }
-  }
-
-  /**
-   * Get authentications (key: authentication name, value: authentication).
-   *
-   * @return Map of authentication object
-   */
-  public Map<String, Authentication> getAuthentications() {
-    return authentications;
-  }
-
-  /**
-   * Get authentication for the given name.
-   *
-   * @param authName The authentication name
-   * @return The authentication, null if not found
-   */
-  public Authentication getAuthentication(String authName) {
-    return authentications.get(authName);
-  }
-
-  /**
-   * Helper method to set username for the first HTTP basic authentication.
-   *
-   * @param username Username
-   * @return a {@link org.openapitools.client.ApiClient} object.
-   */
-  public ApiClient setUsername(String username) {
-    for (Authentication auth : authentications.values()) {
-      if (auth instanceof HttpBasicAuth) {
-        ((HttpBasicAuth) auth).setUsername(username);
-        return this;
-      }
-    }
-    throw new RuntimeException("No HTTP basic authentication configured!");
-  }
-
-  /**
-   * Helper method to set password for the first HTTP basic authentication.
-   *
-   * @param password Password
-   * @return a {@link org.openapitools.client.ApiClient} object.
-   */
-  public ApiClient setPassword(String password) {
-    for (Authentication auth : authentications.values()) {
-      if (auth instanceof HttpBasicAuth) {
-        ((HttpBasicAuth) auth).setPassword(password);
-        return this;
-      }
-    }
-    throw new RuntimeException("No HTTP basic authentication configured!");
-  }
-
-  /**
-   * Helper method to set API key value for the first API key authentication.
-   *
-   * @param apiKey API key
-   * @return a {@link org.openapitools.client.ApiClient} object.
-   */
-  public ApiClient setApiKey(String apiKey) {
-    for (Authentication auth : authentications.values()) {
-      if (auth instanceof ApiKeyAuth) {
-        ((ApiKeyAuth) auth).setApiKey(apiKey);
-        return this;
-      }
-    }
-    throw new RuntimeException("No API key authentication configured!");
-  }
-
-  /**
-   * Helper method to configure authentications which respects aliases of API keys.
-   *
-   * @param secrets Hash map from authentication name to its secret.
-   * @return a {@link org.openapitools.client.ApiClient} object.
-   */
-  public ApiClient configureApiKeys(Map<String, String> secrets) {
-    for (Map.Entry<String, Authentication> authEntry : authentications.entrySet()) {
-      Authentication auth = authEntry.getValue();
-      if (auth instanceof ApiKeyAuth) {
-        String name = authEntry.getKey();
-        // respect x-auth-id-alias property
-        name = authenticationLookup.getOrDefault(name, name);
-        String secret = secrets.get(name);
-        if (secret != null) {
-          ((ApiKeyAuth) auth).setApiKey(secret);
-        }
-      }
-    }
-    return this;
-  }
-
-  /**
-   * Helper method to set API key prefix for the first API key authentication.
-   *
-   * @param apiKeyPrefix API key prefix
-   * @return a {@link org.openapitools.client.ApiClient} object.
-   */
-  public ApiClient setApiKeyPrefix(String apiKeyPrefix) {
-    for (Authentication auth : authentications.values()) {
-      if (auth instanceof ApiKeyAuth) {
-        ((ApiKeyAuth) auth).setApiKeyPrefix(apiKeyPrefix);
-        return this;
-      }
-    }
-    throw new RuntimeException("No API key authentication configured!");
-  }
-
-  /**
-   * Helper method to set bearer token for the first Bearer authentication.
-   *
-   * @param bearerToken Bearer token
-   * @return a {@link org.openapitools.client.ApiClient} object.
-   */
-  public ApiClient setBearerToken(String bearerToken) {
-    for (Authentication auth : authentications.values()) {
-      if (auth instanceof HttpBearerAuth) {
-        ((HttpBearerAuth) auth).setBearerToken(bearerToken);
-        return this;
-      }
-    }
-    throw new RuntimeException("No Bearer authentication configured!");
-  }
-
-  /**
-   * Set the User-Agent header's value (by adding to the default header map).
-   *
-   * @param userAgent Http user agent
-   * @return a {@link org.openapitools.client.ApiClient} object.
-   */
-  public ApiClient setUserAgent(String userAgent) {
-    this.userAgent = userAgent;
-    addDefaultHeader("User-Agent", userAgent);
-    return this;
-  }
-
-  /**
-   * Get the User-Agent header's value.
-   *
-   * @return User-Agent string
-   */
-  public String getUserAgent(){
-    return userAgent;
-  }
-
-  /**
-   * Add a default header.
-   *
-   * @param key The header's key
-   * @param value The header's value
-   * @return a {@link org.openapitools.client.ApiClient} object.
-   */
-  public ApiClient addDefaultHeader(String key, String value) {
-    defaultHeaderMap.put(key, value);
-    return this;
-  }
-
-  /**
-   * Add a default cookie.
-   *
-   * @param key The cookie's key
-   * @param value The cookie's value
-   * @return a {@link org.openapitools.client.ApiClient} object.
-   */
-  public ApiClient addDefaultCookie(String key, String value) {
-    defaultCookieMap.put(key, value);
-    return this;
-  }
-
-  /**
-   * Gets the client config.
-   *
-   * @return Client config
-   */
-  public ClientConfig getClientConfig() {
-    return clientConfig;
-  }
-
-  /**
-   * Set the client config.
-   *
-   * @param clientConfig Set the client config
-   * @return a {@link org.openapitools.client.ApiClient} object.
-   */
-  public ApiClient setClientConfig(ClientConfig clientConfig) {
-    this.clientConfig = clientConfig;
-    // Rebuild HTTP Client according to the new "clientConfig" value.
-    this.httpClient = buildHttpClient();
-    return this;
-  }
-
-  /**
-   * Check that whether debugging is enabled for this API client.
-   *
-   * @return True if debugging is switched on
-   */
-  public boolean isDebugging() {
-    return debugging;
-  }
-
-  /**
-   * Enable/disable debugging for this API client.
-   *
-   * @param debugging To enable (true) or disable (false) debugging
-   * @return a {@link org.openapitools.client.ApiClient} object.
-   */
-  public ApiClient setDebugging(boolean debugging) {
-    this.debugging = debugging;
-    // Rebuild HTTP Client according to the new "debugging" value.
-    this.httpClient = buildHttpClient();
-    return this;
-  }
-
-  /**
-   * The path of temporary folder used to store downloaded files from endpoints
-   * with file response. The default value is <code>null</code>, i.e. using
-   * the system's default temporary folder.
-   *
-   * @return Temp folder path
-   */
-  public String getTempFolderPath() {
-    return tempFolderPath;
-  }
-
-  /**
-   * Set temp folder path
-   *
-   * @param tempFolderPath Temp folder path
-   * @return a {@link org.openapitools.client.ApiClient} object.
-   */
-  public ApiClient setTempFolderPath(String tempFolderPath) {
-    this.tempFolderPath = tempFolderPath;
-    return this;
-  }
-
-  /**
-   * Connect timeout (in milliseconds).
-   *
-   * @return Connection timeout
-   */
-  public int getConnectTimeout() {
-    return connectionTimeout;
-  }
-
-  /**
-   * Set the connect timeout (in milliseconds).
-   * A value of 0 means no timeout, otherwise values must be between 1 and
-   * {@link Integer#MAX_VALUE}.
-   *
-   * @param connectionTimeout Connection timeout in milliseconds
-   * @return a {@link org.openapitools.client.ApiClient} object.
-   */
-  public ApiClient setConnectTimeout(int connectionTimeout) {
-    this.connectionTimeout = connectionTimeout;
-    httpClient.property(ClientProperties.CONNECT_TIMEOUT, connectionTimeout);
-    return this;
-  }
-
-  /**
-   * read timeout (in milliseconds).
-   *
-   * @return Read timeout
-   */
-  public int getReadTimeout() {
-    return readTimeout;
-  }
-
-  /**
-   * Set the read timeout (in milliseconds).
-   * A value of 0 means no timeout, otherwise values must be between 1 and
-   * {@link Integer#MAX_VALUE}.
-   *
-   * @param readTimeout Read timeout in milliseconds
-   * @return a {@link org.openapitools.client.ApiClient} object.
-   */
-  public ApiClient setReadTimeout(int readTimeout) {
-    this.readTimeout = readTimeout;
-    httpClient.property(ClientProperties.READ_TIMEOUT, readTimeout);
-    return this;
-  }
-
-  /**
-   * Get the date format used to parse/format date parameters.
-   *
-   * @return Date format
-   */
-  public DateFormat getDateFormat() {
-    return dateFormat;
-  }
-
-  /**
-   * Set the date format used to parse/format date parameters.
-   *
-   * @param dateFormat Date format
-   * @return a {@link org.openapitools.client.ApiClient} object.
-   */
-  public ApiClient setDateFormat(DateFormat dateFormat) {
-    this.dateFormat = dateFormat;
-    // also set the date format for model (de)serialization with Date properties
-    this.json.setDateFormat((DateFormat) dateFormat.clone());
-    return this;
-  }
-
-  /**
-   * Parse the given string into Date object.
-   *
-   * @param str String
-   * @return Date
-   */
-  public Date parseDate(String str) {
-    try {
-      return dateFormat.parse(str);
-    } catch (java.text.ParseException e) {
-      throw new RuntimeException(e);
-    }
-  }
-
-  /**
-   * Format the given Date object into string.
-   *
-   * @param date Date
-   * @return Date in string format
-   */
-  public String formatDate(Date date) {
-    return dateFormat.format(date);
-  }
-
-  /**
-   * Format the given parameter object into string.
-   *
-   * @param param Object
-   * @return Object in string format
-   */
-  public String parameterToString(Object param) {
-    if (param == null) {
-      return "";
-    } else if (param instanceof Date) {
-      return formatDate((Date) param);
-    } else if (param instanceof OffsetDateTime) {
-      return formatOffsetDateTime((OffsetDateTime) param);
-    } else if (param instanceof Collection) {
-      StringBuilder b = new StringBuilder();
-      for(Object o : (Collection)param) {
-        if(b.length() > 0) {
-          b.append(',');
-        }
-        b.append(String.valueOf(o));
-      }
-      return b.toString();
-    } else {
-      return String.valueOf(param);
-    }
-  }
-
-  /*
-   * Format to {@code Pair} objects.
-   *
-   * @param collectionFormat Collection format
-   * @param name Name
-   * @param value Value
-   * @return List of pairs
-   */
-  public List<Pair> parameterToPairs(String collectionFormat, String name, Object value){
-    List<Pair> params = new ArrayList<>();
-
-    // preconditions
-    if (name == null || name.isEmpty() || value == null) return params;
-
-    Collection valueCollection;
-    if (value instanceof Collection) {
-      valueCollection = (Collection) value;
-    } else {
-      params.add(new Pair(name, parameterToString(value)));
-      return params;
-    }
-
-    if (valueCollection.isEmpty()){
-      return params;
-    }
-
-    // get the collection format (default: csv)
-    String format = (collectionFormat == null || collectionFormat.isEmpty() ? "csv" : collectionFormat);
-
-    // create the params based on the collection format
-    if ("multi".equals(format)) {
-      for (Object item : valueCollection) {
-        params.add(new Pair(name, parameterToString(item)));
-      }
-
-      return params;
-    }
-
-    String delimiter = ",";
-
-    if ("csv".equals(format)) {
-      delimiter = ",";
-    } else if ("ssv".equals(format)) {
-      delimiter = " ";
-    } else if ("tsv".equals(format)) {
-      delimiter = "\t";
-    } else if ("pipes".equals(format)) {
-      delimiter = "|";
-    }
-
-    StringBuilder sb = new StringBuilder() ;
-    for (Object item : valueCollection) {
-      sb.append(delimiter);
-      sb.append(parameterToString(item));
-    }
-
-    params.add(new Pair(name, sb.substring(1)));
-
-    return params;
-  }
-
-  /**
-   * Check if the given MIME is a JSON MIME.
-   * JSON MIME examples:
-   *   application/json
-   *   application/json; charset=UTF8
-   *   APPLICATION/JSON
-   *   application/vnd.company+json
-   * "*{@literal /}*" is also considered JSON by this method.
-   *
-   * @param mime MIME
-   * @return True if the MIME type is JSON
-   */
-  public boolean isJsonMime(String mime) {
-    return mime != null && (mime.equals("*/*") || JSON_MIME_PATTERN.matcher(mime).matches());
-  }
-
-  /**
-   * Select the Accept header's value from the given accepts array:
-   *   if JSON exists in the given array, use it;
-   *   otherwise use all of them (joining into a string)
-   *
-   * @param accepts The accepts array to select from
-   * @return The Accept header to use. If the given array is empty,
-   *   null will be returned (not to set the Accept header explicitly).
-   */
-  public String selectHeaderAccept(String... accepts) {
-    if (accepts == null || accepts.length == 0) {
-      return null;
-    }
-    for (String accept : accepts) {
-      if (isJsonMime(accept)) {
-        return accept;
-      }
-    }
-    return StringUtil.join(accepts, ",");
-  }
-
-  /**
-   * Select the Content-Type header's value from the given array:
-   *   if JSON exists in the given array, use it;
-   *   otherwise use the first one of the array.
-   *
-   * @param contentTypes The Content-Type array to select from
-   * @return The Content-Type header to use. If the given array is empty,
-   *   JSON will be used.
-   */
-  public String selectHeaderContentType(String... contentTypes) {
-    if (contentTypes == null || contentTypes.length == 0) {
-      return "application/json";
-    }
-    for (String contentType : contentTypes) {
-      if (isJsonMime(contentType)) {
-        return contentType;
-      }
-    }
-    return contentTypes[0];
-  }
-
-  /**
-   * Escape the given string to be used as URL query value.
-   *
-   * @param str String
-   * @return Escaped string
-   */
-  public String escapeString(String str) {
-    try {
-      return URLEncoder.encode(str, "utf8").replaceAll("\\+", "%20");
-    } catch (UnsupportedEncodingException e) {
-      return str;
-    }
-  }
-
-  /**
-   * Serialize the given Java object into string entity according the given
-   * Content-Type (only JSON is supported for now).
-   *
-   * @param obj Object
-   * @param formParams Form parameters
-   * @param contentType Context type
-   * @return Entity
-   * @throws ApiException API exception
-   */
-  public Entity<?> serialize(Object obj, Map<String, Object> formParams, String contentType, boolean isBodyNullable) throws ApiException {
-    Entity<?> entity;
-    if (contentType.startsWith("multipart/form-data")) {
-      MultiPart multiPart = new MultiPart();
-      for (Entry<String, Object> param: formParams.entrySet()) {
-        if (param.getValue() instanceof File) {
-          File file = (File) param.getValue();
-          FormDataContentDisposition contentDisp = FormDataContentDisposition.name(param.getKey())
-              .fileName(file.getName()).size(file.length()).build();
-
-          // Attempt to probe the content type for the file so that the form part is more correctly
-          // and precisely identified, but fall back to application/octet-stream if that fails.      
-          MediaType type;
-          try {
-            type = MediaType.valueOf(Files.probeContentType(file.toPath()));
-          } catch (IOException | IllegalArgumentException e) {
-            type = MediaType.APPLICATION_OCTET_STREAM_TYPE;
-          }
-        
-          multiPart.bodyPart(new FormDataBodyPart(contentDisp, file, type));
-        } else {
-          FormDataContentDisposition contentDisp = FormDataContentDisposition.name(param.getKey()).build();
-          multiPart.bodyPart(new FormDataBodyPart(contentDisp, parameterToString(param.getValue())));
-        }
-      }
-      entity = Entity.entity(multiPart, MediaType.MULTIPART_FORM_DATA_TYPE);
-    } else if (contentType.startsWith("application/x-www-form-urlencoded")) {
-      Form form = new Form();
-      for (Entry<String, Object> param: formParams.entrySet()) {
-        form.param(param.getKey(), parameterToString(param.getValue()));
-      }
-      entity = Entity.entity(form, MediaType.APPLICATION_FORM_URLENCODED_TYPE);
-    } else {
-      // We let jersey handle the serialization
-      if (isBodyNullable) { // payload is nullable
-        if (obj instanceof String) {
-          entity = Entity.entity(obj == null ? "null" : "\"" + ((String)obj).replaceAll("\"", Matcher.quoteReplacement("\\\"")) + "\"", contentType);
-        } else {
-          entity = Entity.entity(obj == null ? "null" : obj, contentType);
-        }
-      } else {
-          if (obj instanceof SearchRequest) {
-           ObjectMapper oMapper = new ObjectMapper();
-           oMapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);
-           oMapper.registerModule(new JsonNullableModule());
-
-           Map<String, Object> map = oMapper.convertValue(obj, Map.class);
-           entity = Entity.entity(map, contentType);
-			
-           class SearchRequestRestruct {
-				public Map<String, Object> restructObj(Map<String, Object> obj, String objType)
-	 			{
-	 			    if (!obj.containsKey("attr") && !obj.containsKey("name") && !obj.containsKey("query_fields") && !obj.containsKey("value") && !obj.containsKey("values")
-	 			        && !obj.containsKey("field") && !obj.containsKey("location_anchor") && !obj.containsKey("must") && !obj.containsKey("must_not") && !obj.containsKey("should"))
-	 			    {
-	 			        return obj;
-	 			    }
-	 			    
-	 			    Map<String, Object> newObj = new HashMap<String, Object>();
-	 			    String keyPropVal;
-	 			    
-	 			    if (objType == "fulltext_filter") {
-					    if (obj.containsKey("query_fields")) {
-					        keyPropVal = (String)obj.get("query_fields");
-					        if (obj.containsKey("query_phrase")) {
-					            HashMap<String, Object> matchPhraseObj = new HashMap<String, Object>();
-					            matchPhraseObj.put(keyPropVal, obj.get("query_phrase"));
-					            newObj.put("match_phrase", matchPhraseObj);
-					        } else  {
-					            Map<String, Object> matchObj = new HashMap<String, Object>();
-					            Object matchProp; 
-					            if (obj.containsKey("operator")) {
-					            	Map<String, Object> matchPropMap = new HashMap<String, Object>();
-					            	matchPropMap.put("query", obj.get("query_string"));
-					               	matchPropMap.put("operator", obj.get("operator"));
-					               	matchProp = matchPropMap;
-					            } else {
-					            	matchProp = obj.get("query_string");
-					            }
-					            matchObj.put(keyPropVal, matchProp);
-					            newObj.put("match", matchObj);
-					        }
-					    } else {
-					        newObj = obj;
-					    }
-	 			    } else if (objType == "attr_filter") {
-				        if (obj.containsKey("field")) {
-				            keyPropVal = (String)obj.get("field");
-				            if (obj.containsKey("value")) {
-				                Map<String, Object> equalsObj = new HashMap<String, Object>();
-				                equalsObj.put(keyPropVal, obj.get("value"));
-				                newObj.put("equals", equalsObj);
-				            } else if (obj.containsKey("values")) {
-				                Map<String, Object> inObj = new HashMap<String, Object>();
-				                inObj.put(keyPropVal, obj.get("values"));
-				                newObj.put("in", inObj);
-				            } else {
-				            	Map<String, Object> rangeObj = new HashMap<String, Object>();
-				            	rangeObj.put(keyPropVal, obj);
-								rangeObj.remove("field");
-				                newObj.put("range", rangeObj);
-				            }
-				        } else {
-				        	if (!obj.containsKey("must") && !obj.containsKey("must_not") && !obj.containsKey("should")) {
-								newObj.put("geo_distance", obj);
-							} else {
-								Map<String, Object> filterObj = new HashMap<String, Object>();
-								
-								for (String propName : new String[]{"must", "must_not", "should"} ) {
-									if (obj.containsKey(propName) && obj.get(propName) != null) {
-										List<Map<String, Object>> subFilterObj = (List<Map<String, Object>>)obj.get(propName);
-										List<Map<String, Object>> restrSubFilterObj = new ArrayList();
-										for (Map<String, Object> subProp : subFilterObj) {
-											if (subProp.containsKey("query_fields") || subProp.containsKey("query_string")) {
-												restrSubFilterObj.add(this.restructObj(subProp, "fulltext_filter"));
-											}  else { 
-												restrSubFilterObj.add(this.restructObj(subProp, "attr_filter"));
-											}
-										}
-										filterObj.put(propName, restrSubFilterObj);
-									}
-								}
-								
-								newObj.put("bool", filterObj);
-							}
-				        }
-			        } else {
-	 			    	String keyPropName = obj.containsKey("attr") ? "attr" : "name";
-		 		        keyPropVal = (String) obj.get(keyPropName);
-		 		        obj.remove(keyPropName);
-		 		        if (objType == "aggs") {
-		 		        	Map<String,Object> aggsObj = new HashMap<String, Object>();
-		 		        	aggsObj.put("terms", obj);
-		 		            newObj.put(keyPropVal, aggsObj);
-		 		        } else {
-				        	newObj.put(keyPropVal, obj);
-		 		        }
-	 		        }
-	 		        
- 			    	return newObj;
-	 			}
- 			
-				public Map<String, Object> restructNestedObj(List<Object> nestedObj, List<String> propNames) {
-				
-					Map<String, Object> newProp = new HashMap<String, Object>();
-					List<Map<String, Object>> nestedArray = (List<Map<String, Object>>) nestedObj.get(nestedObj.size() - 1);
-					for (int i = 0; i < nestedArray.size(); i++) {
-					    Map<String, Object> propVal = nestedArray.get(i);
-					    Map<String, Object> oldProp = this.restructObj(propVal, propNames.get(propNames.size() - 1));
-					    newProp.putAll(oldProp);
-					}
-					
-					nestedObj.set(nestedObj.size() - 1, newProp);
-					
-					for (int i = propNames.size() - 1; i >= 0; i--) {
-						Map<String, Object> subObj = (Map<String, Object>) nestedObj.get(i);
-						subObj.put(propNames.get(i), nestedObj.get(i + 1));
-						nestedObj.set(i, subObj);
-					}
-
-	                return (Map<String, Object>) nestedObj.get(0);
-	            }
-        	};
-
-			SearchRequestRestruct restruct = new SearchRequestRestruct();
-			        	
-        	if (map.containsKey("source")) {
- 				map.put("_source", map.get("source"));
- 				map.remove("source");
- 			}
- 			
- 			if (map.containsKey("sort") && map.get("sort") instanceof List) {
-	 		    List<Object> restrSortList = new ArrayList<>();
-	 		    List<Object> sortList = (List<Object>)map.get("sort");
-	 		    for (Object sort : sortList) {
-	 		    	if (sort instanceof Map) {
-	 		        	restrSortList.add( restruct.restructObj((Map<String, Object>)sort, "sort") );
-	 		        } else {
-	 		        	restrSortList.add(sort);
-	 		        } 
-	 		    }
-	 		    map.put("sort", restrSortList);
-	 		}
-	 		
-	 		Boolean hasFilterSet = (map.containsKey("fulltext_filter") && map.get("fulltext_filter") != null) ||
-	 			(map.containsKey("attr_filter") && map.get("attr_filter") != null);
-	 		if (hasFilterSet) {
-				Map<String, Object> query = new HashMap<String, Object>();
-				
-				for (String propName : new String[]{"fulltext_filter", "attr_filter"} ) {
-					if (map.containsKey(propName) && map.get(propName) != null ) {
-						Map<String, Object> filterObj = restruct.restructObj((Map<String, Object>)map.get(propName), propName);
-						query.putAll(filterObj);
-						map.remove(propName);
-					}
-				}
-				
-				map.put("query", query);
-			}
-        	
-			List<String> propSignList = Arrays.asList("highlight.fields");
-			propSignList.forEach(propSign -> {
-			    List<String> propNames = Arrays.asList(propSign.split("\\."));
-			    List<Object> nestedObj = new ArrayList<>();
-			    Map<String, Object> map0 = map;
-			    nestedObj.add(map0);
-			    for (int i = 0; i < propNames.size(); i++) {
-			        Map<String, Object> subObj = oMapper.convertValue(nestedObj.get(i), Map.class);
-			        if (!subObj.containsKey(propNames.get(i)))
-			            return;
-			        Object subProp = subObj.get(propNames.get(i));
-			        if (subProp == null)
-			        	return;
-			        nestedObj.add((subProp instanceof List) ? subProp : oMapper.convertValue(subProp, Map.class));
-			    }
-			    map.putAll(restruct.restructNestedObj(nestedObj, propNames));
-			});
-						
-        } else {
-          entity = Entity.entity(obj == null ? "" :  obj, contentType);
-        }
-      }
-    }
-    return entity;
-  }
-
-  /**
-   * Serialize the given Java object into string according the given
-   * Content-Type (only JSON, HTTP form is supported for now).
-   *
-   * @param obj Object
-   * @param formParams Form parameters
-   * @param contentType Context type
-   * @param isBodyNullable True if the body is nullable
-   * @return String
-   * @throws ApiException API exception
-   */
-  public String serializeToString(Object obj, Map<String, Object> formParams, String contentType, boolean isBodyNullable) throws ApiException {
-    try {
-      if (contentType.startsWith("multipart/form-data")) {
-        throw new ApiException("multipart/form-data not yet supported for serializeToString (http signature authentication)");
-      } else if (contentType.startsWith("application/x-www-form-urlencoded")) {
-        String formString = "";
-        for (Entry<String, Object> param : formParams.entrySet()) {
-          formString = param.getKey() + "=" + URLEncoder.encode(parameterToString(param.getValue()), "UTF-8") + "&";
-        }
-
-        if (formString.length() == 0) { // empty string
-          return formString;
-        } else {
-          return formString.substring(0, formString.length() - 1);
-        }
-      } else {
-        if (isBodyNullable) {
-          return obj == null ? "null" : json.getMapper().writeValueAsString(obj);
-        } else {
-          return obj == null ? "" : json.getMapper().writeValueAsString(obj);
-        }
-      }
-    } catch (Exception ex) {
-      throw new ApiException("Failed to perform serializeToString: " + ex.toString());
-    }
-  }
-
-  /**
-   * Deserialize response body to Java object according to the Content-Type.
-   *
-   * @param <T> Type
-   * @param response Response
-   * @param returnType Return type
-   * @return Deserialize object
-   * @throws ApiException API exception
-   */
-  @SuppressWarnings("unchecked")
-  public <T> T deserialize(Response response, GenericType<T> returnType) throws ApiException {
-    if (response == null || returnType == null) {
-      return null;
-    }
-
-    if ("byte[]".equals(returnType.toString())) {
-      // Handle binary response (byte array).
-      return (T) response.readEntity(byte[].class);
-    } else if (returnType.getRawType() == File.class) {
-      // Handle file downloading.
-      T file = (T) downloadFileFromResponse(response);
-      return file;
-    }
-
-    // read the entity stream multiple times
-    response.bufferEntity();
-
-    return response.readEntity(returnType);
-  }
-
-  /**
-   * Download file from the given response.
-   *
-   * @param response Response
-   * @return File
-   * @throws ApiException If fail to read file content from response and write to disk
-   */
-  public File downloadFileFromResponse(Response response) throws ApiException {
-    try {
-      File file = prepareDownloadFile(response);
-      Files.copy(response.readEntity(InputStream.class), file.toPath(), StandardCopyOption.REPLACE_EXISTING);
-      return file;
-    } catch (IOException e) {
-      throw new ApiException(e);
-    }
-  }
-
-  /**
-   * <p>Prepare the file for download from the response.</p>
-   *
-   * @param response a {@link jakarta.ws.rs.core.Response} object.
-   * @return a {@link java.io.File} object.
-   * @throws java.io.IOException if any.
-   */
-  public File prepareDownloadFile(Response response) throws IOException {
-    String filename = null;
-    String contentDisposition = (String) response.getHeaders().getFirst("Content-Disposition");
-    if (contentDisposition != null && !"".equals(contentDisposition)) {
-      // Get filename from the Content-Disposition header.
-      Pattern pattern = Pattern.compile("filename=['\"]?([^'\"\\s]+)['\"]?");
-      Matcher matcher = pattern.matcher(contentDisposition);
-      if (matcher.find())
-        filename = matcher.group(1);
-    }
-
-    String prefix;
-    String suffix = null;
-    if (filename == null) {
-      prefix = "download-";
-      suffix = "";
-    } else {
-      int pos = filename.lastIndexOf('.');
-      if (pos == -1) {
-        prefix = filename + "-";
-      } else {
-        prefix = filename.substring(0, pos) + "-";
-        suffix = filename.substring(pos);
-      }
-      // Files.createTempFile requires the prefix to be at least three characters long
-      if (prefix.length() < 3)
-        prefix = "download-";
-    }
-
-    if (tempFolderPath == null)
-      return Files.createTempFile(prefix, suffix).toFile();
-    else
-      return Files.createTempFile(Paths.get(tempFolderPath), prefix, suffix).toFile();
-  }
-
-  /**
-   * Invoke API by sending HTTP request with the given options.
-   *
-   * @param <T> Type
-   * @param operation The qualified name of the operation
-   * @param path The sub-path of the HTTP URL
-   * @param method The request method, one of "GET", "POST", "PUT", "HEAD" and "DELETE"
-   * @param queryParams The query parameters
-   * @param body The request body object
-   * @param headerParams The header parameters
-   * @param cookieParams The cookie parameters
-   * @param formParams The form parameters
-   * @param accept The request's Accept header
-   * @param contentType The request's Content-Type header
-   * @param authNames The authentications to apply
-   * @param returnType The return type into which to deserialize the response
-   * @param isBodyNullable True if the body is nullable
-   * @return The response body in type of string
-   * @throws ApiException API exception
-   */
-  public <T> ApiResponse<T> invokeAPI(
-      String operation,
-      String path,
-      String method,
-      List<Pair> queryParams,
-      Object body,
-      Map<String, String> headerParams,
-      Map<String, String> cookieParams,
-      Map<String, Object> formParams,
-      String accept,
-      String contentType,
-      String[] authNames,
-      GenericType<T> returnType,
-      boolean isBodyNullable)
-      throws ApiException {
-
-    String targetURL;
-    List<ServerConfiguration> serverConfigurations;
-    if (serverIndex != null && (serverConfigurations = operationServers.get(operation)) != null) {
-      int index = operationServerIndex.getOrDefault(operation, serverIndex).intValue();
-      Map<String, String> variables = operationServerVariables.getOrDefault(operation, serverVariables);
-      if (index < 0 || index >= serverConfigurations.size()) {
-        throw new ArrayIndexOutOfBoundsException(
-            String.format(
-                "Invalid index %d when selecting the host settings. Must be less than %d",
-                index, serverConfigurations.size()));
-      }
-      targetURL = serverConfigurations.get(index).URL(variables) + path;
-    } else {
-      targetURL = this.basePath + path;
-    }
-    // Not using `.target(targetURL).path(path)` below,
-    // to support (constant) query string in `path`, e.g. "/posts?draft=1"
-    WebTarget target = httpClient.target(targetURL);
-
-    if (queryParams != null) {
-      for (Pair queryParam : queryParams) {
-        if (queryParam.getValue() != null) {
-          target = target.queryParam(queryParam.getName(), escapeString(queryParam.getValue()));
-        }
-      }
-    }
-
-    Invocation.Builder invocationBuilder = target.request();
-
-    if (accept != null) {
-      invocationBuilder = invocationBuilder.accept(accept);
-    }
-
-    for (Entry<String, String> entry : cookieParams.entrySet()) {
-      String value = entry.getValue();
-      if (value != null) {
-        invocationBuilder = invocationBuilder.cookie(entry.getKey(), value);
-      }
-    }
-
-    for (Entry<String, String> entry : defaultCookieMap.entrySet()) {
-      String value = entry.getValue();
-      if (value != null) {
-        invocationBuilder = invocationBuilder.cookie(entry.getKey(), value);
-      }
-    }
-
-    Entity<?> entity = serialize(body, formParams, contentType, isBodyNullable);
-
-    // put all headers in one place
-    Map<String, String> allHeaderParams = new HashMap<>(defaultHeaderMap);
-    allHeaderParams.putAll(headerParams);
-
-    if (authNames != null) {
-      // update different parameters (e.g. headers) for authentication
-      updateParamsForAuth(
-          authNames,
-          queryParams,
-          allHeaderParams,
-          cookieParams,
-          null,
-          method,
-          target.getUri());
-    }
-
-    for (Entry<String, String> entry : allHeaderParams.entrySet()) {
-      String value = entry.getValue();
-      if (value != null) {
-        invocationBuilder = invocationBuilder.header(entry.getKey(), value);
-      }
-    }
-
-    Response response = null;
-
-    try {
-      response = sendRequest(method, invocationBuilder, entity);
-
-      final int statusCode = response.getStatusInfo().getStatusCode();
-
-      Map<String, List<String>> responseHeaders = buildResponseHeaders(response);
-
-      if (statusCode == Status.NO_CONTENT.getStatusCode()) {
-        return new ApiResponse<T>(statusCode, responseHeaders);
-      } else if (response.getStatusInfo().getFamily() == Status.Family.SUCCESSFUL) {
-        if (returnType == null) {
-          return new ApiResponse<T>(statusCode, responseHeaders);
-        } else {
-          return new ApiResponse<T>(statusCode, responseHeaders, deserialize(response, returnType));
-        }
-      } else {
-        String message = "error";
-        String respBody = null;
-        if (response.hasEntity()) {
-          try {
-            respBody = String.valueOf(response.readEntity(String.class));
-            message = respBody;
-          } catch (RuntimeException e) {
-            // e.printStackTrace();
-          }
-        }
-        throw new ApiException(
-            response.getStatus(), message, buildResponseHeaders(response), respBody);
-      }
-    } finally {
-      try {
-        response.close();
-      } catch (Exception e) {
-        // it's not critical, since the response object is local in method invokeAPI; that's fine,
-        // just continue
-      }
-    }
-  }
-
-  private Response sendRequest(String method, Invocation.Builder invocationBuilder, Entity<?> entity) {
-    Response response;
-    if ("POST".equals(method)) {
-      response = invocationBuilder.post(entity);
-    } else if ("PUT".equals(method)) {
-      response = invocationBuilder.put(entity);
-    } else if ("DELETE".equals(method)) {
-      response = invocationBuilder.method("DELETE", entity);
-    } else if ("PATCH".equals(method)) {
-      response = invocationBuilder.method("PATCH", entity);
-    } else {
-      response = invocationBuilder.method(method);
-    }
-    return response;
-  }
-
-  /**
-   * @deprecated Add qualified name of the operation as a first parameter.
-   */
-  @Deprecated
-  public <T> ApiResponse<T> invokeAPI(String path, String method, List<Pair> queryParams, Object body, Map<String, String> headerParams, Map<String, String> cookieParams, Map<String, Object> formParams, String accept, String contentType, String[] authNames, GenericType<T> returnType, boolean isBodyNullable) throws ApiException {
-    return invokeAPI(null, path, method, queryParams, body, headerParams, cookieParams, formParams, accept, contentType, authNames, returnType, isBodyNullable);
-  }
-
-  /**
-   * Build the Client used to make HTTP requests.
-   *
-   * @return Client
-   */
-  protected Client buildHttpClient() {
-    // recreate the client config to pickup changes
-    clientConfig = getDefaultClientConfig();
-
-    ClientBuilder clientBuilder = ClientBuilder.newBuilder();
-    clientBuilder = clientBuilder.withConfig(clientConfig);
-    customizeClientBuilder(clientBuilder);
-    return clientBuilder.build();
-  }
-
-  /**
-   * Get the default client config.
-   *
-   * @return Client config
-   */
-  public ClientConfig getDefaultClientConfig() {
-    ClientConfig clientConfig = new ClientConfig();
-    clientConfig.register(MultiPartFeature.class);
-    clientConfig.register(json);
-    clientConfig.register(JacksonFeature.class);
-    clientConfig.property(HttpUrlConnectorProvider.SET_METHOD_WORKAROUND, true);
-    // turn off compliance validation to be able to send payloads with DELETE calls
-    clientConfig.property(ClientProperties.SUPPRESS_HTTP_COMPLIANCE_VALIDATION, true);
-    if (debugging) {
-      clientConfig.register(new LoggingFeature(java.util.logging.Logger.getLogger(LoggingFeature.DEFAULT_LOGGER_NAME), java.util.logging.Level.INFO, LoggingFeature.Verbosity.PAYLOAD_ANY, 1024*50 /* Log payloads up to 50K */));
-      clientConfig.property(LoggingFeature.LOGGING_FEATURE_VERBOSITY, LoggingFeature.Verbosity.PAYLOAD_ANY);
-      // Set logger to ALL
-      java.util.logging.Logger.getLogger(LoggingFeature.DEFAULT_LOGGER_NAME).setLevel(java.util.logging.Level.ALL);
-    } else {
-      // suppress warnings for payloads with DELETE calls:
-      java.util.logging.Logger.getLogger("org.glassfish.jersey.client").setLevel(java.util.logging.Level.SEVERE);
-    }
-
-    return clientConfig;
-  }
-
-  /**
-   * Customize the client builder.
-   *
-   * This method can be overridden to customize the API client. For example, this can be used to:
-   * 1. Set the hostname verifier to be used by the client to verify the endpoint's hostname
-   *    against its identification information.
-   * 2. Set the client-side key store.
-   * 3. Set the SSL context that will be used when creating secured transport connections to
-   *    server endpoints from web targets created by the client instance that is using this SSL context.
-   * 4. Set the client-side trust store.
-   *
-   * To completely disable certificate validation (at your own risk), you can
-   * override this method and invoke disableCertificateValidation(clientBuilder).
-   *
-   * @param clientBuilder a {@link jakarta.ws.rs.client.ClientBuilder} object.
-   */
-  protected void customizeClientBuilder(ClientBuilder clientBuilder) {
-    // No-op extension point
-  }
-
-  /**
-   * Disable X.509 certificate validation in TLS connections.
-   *
-   * Please note that trusting all certificates is extremely risky.
-   * This may be useful in a development environment with self-signed certificates.
-   *
-   * @param clientBuilder a {@link jakarta.ws.rs.client.ClientBuilder} object.
-   * @throws java.security.KeyManagementException if any.
-   * @throws java.security.NoSuchAlgorithmException if any.
-   */
-  protected void disableCertificateValidation(ClientBuilder clientBuilder) throws KeyManagementException, NoSuchAlgorithmException {
-    TrustManager[] trustAllCerts = new X509TrustManager[] {
-      new X509TrustManager() {
-        @Override
-        public X509Certificate[] getAcceptedIssuers() {
-          return null;
-        }
-        @Override
-        public void checkClientTrusted(X509Certificate[] certs, String authType) {
-        }
-        @Override
-        public void checkServerTrusted(X509Certificate[] certs, String authType) {
-        }
-      }
-    };
-    SSLContext sslContext = SSLContext.getInstance("TLS");
-    sslContext.init(null, trustAllCerts, new SecureRandom());
-    clientBuilder.sslContext(sslContext);
-  }
-
-  /**
-   * <p>Build the response headers.</p>
-   *
-   * @param response a {@link jakarta.ws.rs.core.Response} object.
-   * @return a {@link java.util.Map} of response headers.
-   */
-  protected Map<String, List<String>> buildResponseHeaders(Response response) {
-    Map<String, List<String>> responseHeaders = new HashMap<>();
-    for (Entry<String, List<Object>> entry: response.getHeaders().entrySet()) {
-      List<Object> values = entry.getValue();
-      List<String> headers = new ArrayList<>();
-      for (Object o : values) {
-        headers.add(String.valueOf(o));
-      }
-      responseHeaders.put(entry.getKey(), headers);
-    }
-    return responseHeaders;
-  }
-
-  /**
-   * Update query and header parameters based on authentication settings.
-   *
-   * @param authNames The authentications to apply
-   * @param queryParams List of query parameters
-   * @param headerParams Map of header parameters
-   * @param cookieParams Map of cookie parameters
-   * @param method HTTP method (e.g. POST)
-   * @param uri HTTP URI
-   */
-  protected void updateParamsForAuth(String[] authNames, List<Pair> queryParams, Map<String, String> headerParams,
-                                     Map<String, String> cookieParams, String payload, String method, URI uri) throws ApiException {
-    for (String authName : authNames) {
-      Authentication auth = authentications.get(authName);
-      if (auth == null) {
-        continue;
-      }
-      auth.applyToParams(queryParams, headerParams, cookieParams, payload, method, uri);
-    }
-  }
-}
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/ApiException.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/ApiException.java
deleted file mode 100644
index 2719af3..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/ApiException.java
+++ /dev/null
@@ -1,94 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client;
-
-import java.util.Map;
-import java.util.List;
-
-/**
- * API Exception
- */
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class ApiException extends Exception {
-    private int code = 0;
-    private Map<String, List<String>> responseHeaders = null;
-    private String responseBody = null;
-
-    public ApiException() {}
-
-    public ApiException(Throwable throwable) {
-        super(throwable);
-    }
-
-    public ApiException(String message) {
-        super(message);
-    }
-
-    public ApiException(String message, Throwable throwable, int code, Map<String, List<String>> responseHeaders, String responseBody) {
-        super(message, throwable);
-        this.code = code;
-        this.responseHeaders = responseHeaders;
-        this.responseBody = responseBody;
-    }
-
-    public ApiException(String message, int code, Map<String, List<String>> responseHeaders, String responseBody) {
-        this(message, (Throwable) null, code, responseHeaders, responseBody);
-    }
-
-    public ApiException(String message, Throwable throwable, int code, Map<String, List<String>> responseHeaders) {
-        this(message, throwable, code, responseHeaders, null);
-    }
-
-    public ApiException(int code, Map<String, List<String>> responseHeaders, String responseBody) {
-        this((String) null, (Throwable) null, code, responseHeaders, responseBody);
-    }
-
-    public ApiException(int code, String message) {
-        super(message);
-        this.code = code;
-    }
-
-    public ApiException(int code, String message, Map<String, List<String>> responseHeaders, String responseBody) {
-        this(code, message);
-        this.responseHeaders = responseHeaders;
-        this.responseBody = responseBody;
-    }
-
-    /**
-     * Get the HTTP status code.
-     *
-     * @return HTTP status code
-     */
-    public int getCode() {
-        return code;
-    }
-
-    /**
-     * Get the HTTP response headers.
-     *
-     * @return A map of list of string
-     */
-    public Map<String, List<String>> getResponseHeaders() {
-        return responseHeaders;
-    }
-
-    /**
-     * Get the HTTP response body.
-     *
-     * @return Response body in the form of string
-     */
-    public String getResponseBody() {
-        return responseBody;
-    }
-}
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/ApiResponse.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/ApiResponse.java
deleted file mode 100644
index bc226ea..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/ApiResponse.java
+++ /dev/null
@@ -1,74 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client;
-
-import java.util.List;
-import java.util.Map;
-
-/**
- * API response returned by API call.
- *
- * @param <T> The type of data that is deserialized from response body
- */
-public class ApiResponse<T> {
-    private final int statusCode;
-    private final Map<String, List<String>> headers;
-    private final T data;
-
-    /**
-     * @param statusCode The status code of HTTP response
-     * @param headers The headers of HTTP response
-     */
-    public ApiResponse(int statusCode, Map<String, List<String>> headers) {
-        this(statusCode, headers, null);
-    }
-
-    /**
-     * @param statusCode The status code of HTTP response
-     * @param headers The headers of HTTP response
-     * @param data The object deserialized from response bod
-     */
-    public ApiResponse(int statusCode, Map<String, List<String>> headers, T data) {
-        this.statusCode = statusCode;
-        this.headers = headers;
-        this.data = data;
-    }
-
-    /**
-     * Get the status code
-     *
-     * @return status code
-     */
-    public int getStatusCode() {
-        return statusCode;
-    }
-
-    /**
-     * Get the headers
-     *
-     * @return map of headers
-     */
-    public Map<String, List<String>> getHeaders() {
-        return headers;
-    }
-
-    /**
-     * Get the data
-     *
-     * @return data
-     */
-    public T getData() {
-        return data;
-    }
-}
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/Configuration.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/Configuration.java
deleted file mode 100644
index bf2d400..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/Configuration.java
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client;
-
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class Configuration {
-    private static ApiClient defaultApiClient = new ApiClient();
-
-    /**
-     * Get the default API client, which would be used when creating API
-     * instances without providing an API client.
-     *
-     * @return Default API client
-     */
-    public static ApiClient getDefaultApiClient() {
-        return defaultApiClient;
-    }
-
-    /**
-     * Set the default API client, which would be used when creating API
-     * instances without providing an API client.
-     *
-     * @param apiClient API client
-     */
-    public static void setDefaultApiClient(ApiClient apiClient) {
-        defaultApiClient = apiClient;
-    }
-}
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/JSON.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/JSON.java
deleted file mode 100644
index de5fd47..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/JSON.java
+++ /dev/null
@@ -1,249 +0,0 @@
-package com.manticoresearch.client;
-
-import com.fasterxml.jackson.annotation.*;
-import com.fasterxml.jackson.databind.*;
-import com.fasterxml.jackson.databind.json.JsonMapper;
-import org.openapitools.jackson.nullable.JsonNullableModule;
-import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;
-import com.manticoresearch.client.model.*;
-
-import java.text.DateFormat;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Map;
-import java.util.Set;
-import jakarta.ws.rs.core.GenericType;
-import jakarta.ws.rs.ext.ContextResolver;
-
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class JSON implements ContextResolver<ObjectMapper> {
-  private ObjectMapper mapper;
-
-  public JSON() {
-    mapper = JsonMapper.builder()
-            .serializationInclusion(JsonInclude.Include.NON_NULL)
-            .configure(MapperFeature.ALLOW_COERCION_OF_SCALARS, false)
-            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, true)
-            .configure(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE, true)
-            .disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)
-            .enable(SerializationFeature.WRITE_ENUMS_USING_TO_STRING)
-            .enable(DeserializationFeature.READ_ENUMS_USING_TO_STRING)
-            .defaultDateFormat(new RFC3339DateFormat())
-            .addModule(new JavaTimeModule())
-            .addModule(new JsonNullableModule())
-            .build();
-  }
-
-  /**
-   * Set the date format for JSON (de)serialization with Date properties.
-   * @param dateFormat Date format
-   */
-  public void setDateFormat(DateFormat dateFormat) {
-    mapper.setDateFormat(dateFormat);
-  }
-
-  @Override
-  public ObjectMapper getContext(Class<?> type) {
-    return mapper;
-  }
-
-  /**
-   * Get the object mapper
-   *
-   * @return object mapper
-   */
-  public ObjectMapper getMapper() { return mapper; }
-
-  /**
-   * Returns the target model class that should be used to deserialize the input data.
-   * The discriminator mappings are used to determine the target model class.
-   *
-   * @param node The input data.
-   * @param modelClass The class that contains the discriminator mappings.
-   */
-  public static Class<?> getClassForElement(JsonNode node, Class<?> modelClass) {
-    ClassDiscriminatorMapping cdm = modelDiscriminators.get(modelClass);
-    if (cdm != null) {
-      return cdm.getClassForElement(node, new HashSet<>());
-    }
-    return null;
-  }
-
-  /**
-   * Helper class to register the discriminator mappings.
-   */
-  private static class ClassDiscriminatorMapping {
-    // The model class name.
-    Class<?> modelClass;
-    // The name of the discriminator property.
-    String discriminatorName;
-    // The discriminator mappings for a model class.
-    Map<String, Class<?>> discriminatorMappings;
-
-    // Constructs a new class discriminator.
-    ClassDiscriminatorMapping(Class<?> cls, String propertyName, Map<String, Class<?>> mappings) {
-      modelClass = cls;
-      discriminatorName = propertyName;
-      discriminatorMappings = new HashMap<>();
-      if (mappings != null) {
-        discriminatorMappings.putAll(mappings);
-      }
-    }
-
-    // Return the name of the discriminator property for this model class.
-    String getDiscriminatorPropertyName() {
-      return discriminatorName;
-    }
-
-    // Return the discriminator value or null if the discriminator is not
-    // present in the payload.
-    String getDiscriminatorValue(JsonNode node) {
-      // Determine the value of the discriminator property in the input data.
-      if (discriminatorName != null) {
-        // Get the value of the discriminator property, if present in the input payload.
-        node = node.get(discriminatorName);
-        if (node != null && node.isValueNode()) {
-          String discrValue = node.asText();
-          if (discrValue != null) {
-            return discrValue;
-          }
-        }
-      }
-      return null;
-    }
-
-    /**
-     * Returns the target model class that should be used to deserialize the input data.
-     * This function can be invoked for anyOf/oneOf composed models with discriminator mappings.
-     * The discriminator mappings are used to determine the target model class.
-     *
-     * @param node The input data.
-     * @param visitedClasses The set of classes that have already been visited.
-     */
-    Class<?> getClassForElement(JsonNode node, Set<Class<?>> visitedClasses) {
-      if (visitedClasses.contains(modelClass)) {
-        // Class has already been visited.
-        return null;
-      }
-      // Determine the value of the discriminator property in the input data.
-      String discrValue = getDiscriminatorValue(node);
-      if (discrValue == null) {
-        return null;
-      }
-      Class<?> cls = discriminatorMappings.get(discrValue);
-      // It may not be sufficient to return this cls directly because that target class
-      // may itself be a composed schema, possibly with its own discriminator.
-      visitedClasses.add(modelClass);
-      for (Class<?> childClass : discriminatorMappings.values()) {
-        ClassDiscriminatorMapping childCdm = modelDiscriminators.get(childClass);
-        if (childCdm == null) {
-          continue;
-        }
-        if (!discriminatorName.equals(childCdm.discriminatorName)) {
-          discrValue = getDiscriminatorValue(node);
-          if (discrValue == null) {
-            continue;
-          }
-        }
-        if (childCdm != null) {
-          // Recursively traverse the discriminator mappings.
-          Class<?> childDiscr = childCdm.getClassForElement(node, visitedClasses);
-          if (childDiscr != null) {
-            return childDiscr;
-          }
-        }
-      }
-      return cls;
-    }
-  }
-
-  /**
-   * Returns true if inst is an instance of modelClass in the OpenAPI model hierarchy.
-   *
-   * The Java class hierarchy is not implemented the same way as the OpenAPI model hierarchy,
-   * so it's not possible to use the instanceof keyword.
-   *
-   * @param modelClass A OpenAPI model class.
-   * @param inst The instance object.
-   */
-  public static boolean isInstanceOf(Class<?> modelClass, Object inst, Set<Class<?>> visitedClasses) {
-    if (modelClass.isInstance(inst)) {
-      // This handles the 'allOf' use case with single parent inheritance.
-      return true;
-    }
-    if (visitedClasses.contains(modelClass)) {
-      // This is to prevent infinite recursion when the composed schemas have
-      // a circular dependency.
-      return false;
-    }
-    visitedClasses.add(modelClass);
-
-    // Traverse the oneOf/anyOf composed schemas.
-    Map<String, GenericType> descendants = modelDescendants.get(modelClass);
-    if (descendants != null) {
-      for (GenericType childType : descendants.values()) {
-        if (isInstanceOf(childType.getRawType(), inst, visitedClasses)) {
-          return true;
-        }
-      }
-    }
-    return false;
-  }
-
-  /**
-   * A map of discriminators for all model classes.
-   */
-  private static Map<Class<?>, ClassDiscriminatorMapping> modelDiscriminators = new HashMap<>();
-
-  /**
-   * A map of oneOf/anyOf descendants for each model class.
-   */
-  private static Map<Class<?>, Map<String, GenericType>> modelDescendants = new HashMap<>();
-
-  /**
-    * Register a model class discriminator.
-    *
-    * @param modelClass the model class
-    * @param discriminatorPropertyName the name of the discriminator property
-    * @param mappings a map with the discriminator mappings.
-    */
-  public static void registerDiscriminator(Class<?> modelClass, String discriminatorPropertyName, Map<String, Class<?>> mappings) {
-    ClassDiscriminatorMapping m = new ClassDiscriminatorMapping(modelClass, discriminatorPropertyName, mappings);
-    modelDiscriminators.put(modelClass, m);
-  }
-
-  /**
-    * Register the oneOf/anyOf descendants of the modelClass.
-    *
-    * @param modelClass the model class
-    * @param descendants a map of oneOf/anyOf descendants.
-    */
-  public static void registerDescendants(Class<?> modelClass, Map<String, GenericType> descendants) {
-    modelDescendants.put(modelClass, descendants);
-  }
-
-  private static JSON json;
-
-  static
-  {
-    json = new JSON();
-  }
-
-  /**
-    * Get the default JSON instance.
-    *
-    * @return the default JSON instance
-    */
-  public static JSON getDefault() {
-    return json;
-  }
-
-  /**
-    * Set the default JSON instance.
-    *
-    * @param json JSON instance to be used
-    */
-  public static void setDefault(JSON json) {
-    JSON.json = json;
-  }
-}
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/JavaTimeFormatter.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/JavaTimeFormatter.java
deleted file mode 100644
index 8f810c5..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/JavaTimeFormatter.java
+++ /dev/null
@@ -1,64 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-package com.manticoresearch.client;
-
-import java.time.OffsetDateTime;
-import java.time.format.DateTimeFormatter;
-import java.time.format.DateTimeParseException;
-
-/**
- * Class that add parsing/formatting support for Java 8+ {@code OffsetDateTime} class.
- * It's generated for java clients when {@code AbstractJavaCodegen#dateLibrary} specified as {@code java8}.
- */
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class JavaTimeFormatter {
-
-    private DateTimeFormatter offsetDateTimeFormatter = DateTimeFormatter.ISO_OFFSET_DATE_TIME;
-
-    /**
-     * Get the date format used to parse/format {@code OffsetDateTime} parameters.
-     * @return DateTimeFormatter
-     */
-    public DateTimeFormatter getOffsetDateTimeFormatter() {
-        return offsetDateTimeFormatter;
-    }
-
-    /**
-     * Set the date format used to parse/format {@code OffsetDateTime} parameters.
-     * @param offsetDateTimeFormatter {@code DateTimeFormatter}
-     */
-    public void setOffsetDateTimeFormatter(DateTimeFormatter offsetDateTimeFormatter) {
-        this.offsetDateTimeFormatter = offsetDateTimeFormatter;
-    }
-
-    /**
-     * Parse the given string into {@code OffsetDateTime} object.
-     * @param str String
-     * @return {@code OffsetDateTime}
-     */
-    public OffsetDateTime parseOffsetDateTime(String str) {
-        try {
-            return OffsetDateTime.parse(str, offsetDateTimeFormatter);
-        } catch (DateTimeParseException e) {
-            throw new RuntimeException(e);
-        }
-    }
-    /**
-     * Format the given {@code OffsetDateTime} object into string.
-     * @param offsetDateTime {@code OffsetDateTime}
-     * @return {@code OffsetDateTime} in string format
-     */
-    public String formatOffsetDateTime(OffsetDateTime offsetDateTime) {
-        return offsetDateTimeFormatter.format(offsetDateTime);
-    }
-}
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/Pair.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/Pair.java
deleted file mode 100644
index 75c0bab..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/Pair.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client;
-
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class Pair {
-    private String name = "";
-    private String value = "";
-
-    public Pair (String name, String value) {
-        setName(name);
-        setValue(value);
-    }
-
-    private void setName(String name) {
-        if (!isValidString(name)) {
-            return;
-        }
-
-        this.name = name;
-    }
-
-    private void setValue(String value) {
-        if (!isValidString(value)) {
-            return;
-        }
-
-        this.value = value;
-    }
-
-    public String getName() {
-        return this.name;
-    }
-
-    public String getValue() {
-        return this.value;
-    }
-
-    private boolean isValidString(String arg) {
-        if (arg == null) {
-            return false;
-        }
-
-        return true;
-    }
-}
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/RFC3339DateFormat.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/RFC3339DateFormat.java
deleted file mode 100644
index 47ae16b..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/RFC3339DateFormat.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-package com.manticoresearch.client;
-
-import com.fasterxml.jackson.databind.util.StdDateFormat;
-
-import java.text.DateFormat;
-import java.text.FieldPosition;
-import java.text.ParsePosition;
-import java.util.Date;
-import java.text.DecimalFormat;
-import java.util.GregorianCalendar;
-import java.util.TimeZone;
-
-public class RFC3339DateFormat extends DateFormat {
-  private static final long serialVersionUID = 1L;
-  private static final TimeZone TIMEZONE_Z = TimeZone.getTimeZone("UTC");
-
-  private final StdDateFormat fmt = new StdDateFormat()
-          .withTimeZone(TIMEZONE_Z)
-          .withColonInTimeZone(true);
-
-  public RFC3339DateFormat() {
-    this.calendar = new GregorianCalendar();
-    this.numberFormat = new DecimalFormat();
-  }
-
-  @Override
-  public Date parse(String source) {
-    return parse(source, new ParsePosition(0));
-  }
-
-  @Override
-  public Date parse(String source, ParsePosition pos) {
-    return fmt.parse(source, pos);
-  }
-
-  @Override
-  public StringBuffer format(Date date, StringBuffer toAppendTo, FieldPosition fieldPosition) {
-    return fmt.format(date, toAppendTo, fieldPosition);
-  }
-
-  @Override
-  public Object clone() {
-    return super.clone();
-  }
-}
\ No newline at end of file
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/ServerConfiguration.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/ServerConfiguration.java
deleted file mode 100644
index c8a8888..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/ServerConfiguration.java
+++ /dev/null
@@ -1,58 +0,0 @@
-package com.manticoresearch.client;
-
-import java.util.Map;
-
-/**
- * Representing a Server configuration.
- */
-public class ServerConfiguration {
-    public String URL;
-    public String description;
-    public Map<String, ServerVariable> variables;
-
-    /**
-     * @param URL A URL to the target host.
-     * @param description A description of the host designated by the URL.
-     * @param variables A map between a variable name and its value. The value is used for substitution in the server's URL template.
-     */
-    public ServerConfiguration(String URL, String description, Map<String, ServerVariable> variables) {
-        this.URL = URL;
-        this.description = description;
-        this.variables = variables;
-    }
-
-    /**
-     * Format URL template using given variables.
-     *
-     * @param variables A map between a variable name and its value.
-     * @return Formatted URL.
-     */
-    public String URL(Map<String, String> variables) {
-        String url = this.URL;
-
-        // go through variables and replace placeholders
-        for (Map.Entry<String, ServerVariable> variable: this.variables.entrySet()) {
-            String name = variable.getKey();
-            ServerVariable serverVariable = variable.getValue();
-            String value = serverVariable.defaultValue;
-
-            if (variables != null && variables.containsKey(name)) {
-                value = variables.get(name);
-                if (serverVariable.enumValues.size() > 0 && !serverVariable.enumValues.contains(value)) {
-                    throw new IllegalArgumentException("The variable " + name + " in the server URL has invalid value " + value + ".");
-                }
-            }
-            url = url.replace("{" + name + "}", value);
-        }
-        return url;
-    }
-
-    /**
-     * Format URL template using default server variables.
-     *
-     * @return Formatted URL.
-     */
-    public String URL() {
-        return URL(null);
-    }
-}
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/ServerVariable.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/ServerVariable.java
deleted file mode 100644
index 09c86c1..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/ServerVariable.java
+++ /dev/null
@@ -1,23 +0,0 @@
-package com.manticoresearch.client;
-
-import java.util.HashSet;
-
-/**
- * Representing a Server Variable for server URL template substitution.
- */
-public class ServerVariable {
-    public String description;
-    public String defaultValue;
-    public HashSet<String> enumValues = null;
-
-    /**
-     * @param description A description for the server variable.
-     * @param defaultValue The default value to use for substitution.
-     * @param enumValues An enumeration of string values to be used if the substitution options are from a limited set.
-     */
-    public ServerVariable(String description, String defaultValue, HashSet<String> enumValues) {
-        this.description = description;
-        this.defaultValue = defaultValue;
-        this.enumValues = enumValues;
-    }
-}
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/StringUtil.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/StringUtil.java
deleted file mode 100644
index 49bd0c8..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/StringUtil.java
+++ /dev/null
@@ -1,83 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client;
-
-import java.util.Collection;
-import java.util.Iterator;
-
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class StringUtil {
-  /**
-   * Check if the given array contains the given value (with case-insensitive comparison).
-   *
-   * @param array The array
-   * @param value The value to search
-   * @return true if the array contains the value
-   */
-  public static boolean containsIgnoreCase(String[] array, String value) {
-    for (String str : array) {
-      if (value == null && str == null) {
-        return true;
-      }
-      if (value != null && value.equalsIgnoreCase(str)) {
-        return true;
-      }
-    }
-    return false;
-  }
-
-  /**
-   * Join an array of strings with the given separator.
-   * <p>
-   * Note: This might be replaced by utility method from commons-lang or guava someday
-   * if one of those libraries is added as dependency.
-   * </p>
-   *
-   * @param array     The array of strings
-   * @param separator The separator
-   * @return the resulting string
-   */
-  public static String join(String[] array, String separator) {
-    int len = array.length;
-    if (len == 0) {
-      return "";
-    }
-
-    StringBuilder out = new StringBuilder();
-    out.append(array[0]);
-    for (int i = 1; i < len; i++) {
-      out.append(separator).append(array[i]);
-    }
-    return out.toString();
-  }
-
-  /**
-   * Join a list of strings with the given separator.
-   *
-   * @param list      The list of strings
-   * @param separator The separator
-   * @return the resulting string
-   */
-  public static String join(Collection<String> list, String separator) {
-    Iterator<String> iterator = list.iterator();
-    StringBuilder out = new StringBuilder();
-    if (iterator.hasNext()) {
-      out.append(iterator.next());
-    }
-    while (iterator.hasNext()) {
-      out.append(separator).append(iterator.next());
-    }
-    return out.toString();
-  }
-}
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/api/IndexApi.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/api/IndexApi.java
deleted file mode 100644
index 39fe6f4..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/api/IndexApi.java
+++ /dev/null
@@ -1,296 +0,0 @@
-package com.manticoresearch.client.api;
-
-import com.manticoresearch.client.ApiException;
-import com.manticoresearch.client.ApiClient;
-import com.manticoresearch.client.ApiResponse;
-import com.manticoresearch.client.Configuration;
-import com.manticoresearch.client.Pair;
-
-import jakarta.ws.rs.core.GenericType;
-
-import com.manticoresearch.client.model.BulkResponse;
-import com.manticoresearch.client.model.DeleteDocumentRequest;
-import com.manticoresearch.client.model.DeleteResponse;
-import com.manticoresearch.client.model.ErrorResponse;
-import com.manticoresearch.client.model.InsertDocumentRequest;
-import com.manticoresearch.client.model.SuccessResponse;
-import com.manticoresearch.client.model.UpdateDocumentRequest;
-import com.manticoresearch.client.model.UpdateResponse;
-
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.LinkedHashMap;
-import java.util.List;
-import java.util.Map;
-
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class IndexApi {
-  private ApiClient apiClient;
-
-  public IndexApi() {
-    this(Configuration.getDefaultApiClient());
-  }
-
-  public IndexApi(ApiClient apiClient) {
-    this.apiClient = apiClient;
-  }
-
-  /**
-   * Get the API client
-   *
-   * @return API client
-   */
-  public ApiClient getApiClient() {
-    return apiClient;
-  }
-
-  /**
-   * Set the API client
-   *
-   * @param apiClient an instance of API client
-   */
-  public void setApiClient(ApiClient apiClient) {
-    this.apiClient = apiClient;
-  }
-
-  /**
-   * Bulk index operations
-   * Sends multiple operatons like inserts, updates, replaces or deletes.  For each operation it&#39;s object must have same format as in their dedicated method.  The method expects a raw string as the batch in NDJSON.  Each operation object needs to be serialized to   JSON and separated by endline (\\n).      An example of raw input:      &#x60;&#x60;&#x60;   {\&quot;insert\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;, \&quot;doc\&quot;: {\&quot;plot\&quot;: \&quot;A secret team goes to North Pole\&quot;, \&quot;rating\&quot;: 9.5, \&quot;language\&quot;: [2, 3], \&quot;title\&quot;: \&quot;This is an older movie\&quot;, \&quot;lon\&quot;: 51.99, \&quot;meta\&quot;: {\&quot;keywords\&quot;:[\&quot;travel\&quot;,\&quot;ice\&quot;],\&quot;genre\&quot;:[\&quot;adventure\&quot;]}, \&quot;year\&quot;: 1950, \&quot;lat\&quot;: 60.4, \&quot;advise\&quot;: \&quot;PG-13\&quot;}}}   \\n   {\&quot;delete\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;,\&quot;id\&quot;:700}}   &#x60;&#x60;&#x60;      Responds with an object telling whenever any errors occured and an array with status for each operation:      &#x60;&#x60;&#x60;   {     &#39;items&#39;:     [       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;result&#39;:&#39;updated&#39;}       },       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:2,&#39;result&#39;:&#39;updated&#39;}       }     ],     &#39;errors&#39;:false   }   &#x60;&#x60;&#x60;   
-   * @param body  (required)
-   * @return BulkResponse
-   * @throws ApiException if fails to make API call
-   * @http.response.details
-     <table summary="Response Details" border="1">
-       <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
-       <tr><td> 200 </td><td> item updated </td><td>  -  </td></tr>
-       <tr><td> 0 </td><td> error </td><td>  -  </td></tr>
-     </table>
-   * 
-   * @see <a href="https://manual.manticoresearch.com/Updating_documents/UPDATE">Bulk index operations Documentation</a>
-   */
-  public BulkResponse bulk(String body) throws ApiException {
-    return bulkWithHttpInfo(body).getData();
-  }
-
-  /**
-   * Bulk index operations
-   * Sends multiple operatons like inserts, updates, replaces or deletes.  For each operation it&#39;s object must have same format as in their dedicated method.  The method expects a raw string as the batch in NDJSON.  Each operation object needs to be serialized to   JSON and separated by endline (\\n).      An example of raw input:      &#x60;&#x60;&#x60;   {\&quot;insert\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;, \&quot;doc\&quot;: {\&quot;plot\&quot;: \&quot;A secret team goes to North Pole\&quot;, \&quot;rating\&quot;: 9.5, \&quot;language\&quot;: [2, 3], \&quot;title\&quot;: \&quot;This is an older movie\&quot;, \&quot;lon\&quot;: 51.99, \&quot;meta\&quot;: {\&quot;keywords\&quot;:[\&quot;travel\&quot;,\&quot;ice\&quot;],\&quot;genre\&quot;:[\&quot;adventure\&quot;]}, \&quot;year\&quot;: 1950, \&quot;lat\&quot;: 60.4, \&quot;advise\&quot;: \&quot;PG-13\&quot;}}}   \\n   {\&quot;delete\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;,\&quot;id\&quot;:700}}   &#x60;&#x60;&#x60;      Responds with an object telling whenever any errors occured and an array with status for each operation:      &#x60;&#x60;&#x60;   {     &#39;items&#39;:     [       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;result&#39;:&#39;updated&#39;}       },       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:2,&#39;result&#39;:&#39;updated&#39;}       }     ],     &#39;errors&#39;:false   }   &#x60;&#x60;&#x60;   
-   * @param body  (required)
-   * @return ApiResponse&lt;BulkResponse&gt;
-   * @throws ApiException if fails to make API call
-   * @http.response.details
-     <table summary="Response Details" border="1">
-       <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
-       <tr><td> 200 </td><td> item updated </td><td>  -  </td></tr>
-       <tr><td> 0 </td><td> error </td><td>  -  </td></tr>
-     </table>
-   * 
-   * @see <a href="https://manual.manticoresearch.com/Updating_documents/UPDATE">Bulk index operations Documentation</a>
-   */
-  public ApiResponse<BulkResponse> bulkWithHttpInfo(String body) throws ApiException {
-      Object localVarPostBody = body;
-    // Check required parameters
-    if (body == null) {
-      throw new ApiException(400, "Missing the required parameter 'body' when calling bulk");
-    }
-
-    String localVarAccept = apiClient.selectHeaderAccept("application/json");
-    String localVarContentType = apiClient.selectHeaderContentType("application/x-ndjson");
-    GenericType<BulkResponse> localVarReturnType = new GenericType<BulkResponse>() {};
-    return apiClient.invokeAPI("IndexApi.bulk", "/bulk", "POST", new ArrayList<>(), localVarPostBody,
-                               new LinkedHashMap<>(), new LinkedHashMap<>(), new LinkedHashMap<>(), localVarAccept, localVarContentType,
-                               null, localVarReturnType, false);
-  }
-  /**
-   * Delete a document in an index
-   * Delete one or several documents. The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a  match query, in which case multiple documents can be delete . Example of input to delete by id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;id&#39;:100}   &#x60;&#x60;&#x60;  Example of input to delete using a query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;  The match query has same syntax as in for searching. Responds with an object telling how many documents got deleted:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-   * @param deleteDocumentRequest  (required)
-   * @return DeleteResponse
-   * @throws ApiException if fails to make API call
-   * @http.response.details
-     <table summary="Response Details" border="1">
-       <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
-       <tr><td> 200 </td><td> item updated </td><td>  -  </td></tr>
-       <tr><td> 0 </td><td> error </td><td>  -  </td></tr>
-     </table>
-   * 
-   * @see <a href="https://manual.manticoresearch.com/Updating_documents/UPDATE">Delete a document in an index Documentation</a>
-   */
-  public DeleteResponse delete(DeleteDocumentRequest deleteDocumentRequest) throws ApiException {
-    return deleteWithHttpInfo(deleteDocumentRequest).getData();
-  }
-
-  /**
-   * Delete a document in an index
-   * Delete one or several documents. The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a  match query, in which case multiple documents can be delete . Example of input to delete by id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;id&#39;:100}   &#x60;&#x60;&#x60;  Example of input to delete using a query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;  The match query has same syntax as in for searching. Responds with an object telling how many documents got deleted:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-   * @param deleteDocumentRequest  (required)
-   * @return ApiResponse&lt;DeleteResponse&gt;
-   * @throws ApiException if fails to make API call
-   * @http.response.details
-     <table summary="Response Details" border="1">
-       <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
-       <tr><td> 200 </td><td> item updated </td><td>  -  </td></tr>
-       <tr><td> 0 </td><td> error </td><td>  -  </td></tr>
-     </table>
-   * 
-   * @see <a href="https://manual.manticoresearch.com/Updating_documents/UPDATE">Delete a document in an index Documentation</a>
-   */
-  public ApiResponse<DeleteResponse> deleteWithHttpInfo(DeleteDocumentRequest deleteDocumentRequest) throws ApiException {
-      Object localVarPostBody = deleteDocumentRequest;
-    // Check required parameters
-    if (deleteDocumentRequest == null) {
-      throw new ApiException(400, "Missing the required parameter 'deleteDocumentRequest' when calling delete");
-    }
-
-    String localVarAccept = apiClient.selectHeaderAccept("application/json");
-    String localVarContentType = apiClient.selectHeaderContentType("application/json");
-    GenericType<DeleteResponse> localVarReturnType = new GenericType<DeleteResponse>() {};
-    return apiClient.invokeAPI("IndexApi.delete", "/delete", "POST", new ArrayList<>(), localVarPostBody,
-                               new LinkedHashMap<>(), new LinkedHashMap<>(), new LinkedHashMap<>(), localVarAccept, localVarContentType,
-                               null, localVarReturnType, false);
-  }
-  /**
-   * Create a new document in an index
-   * Insert a document.  Expects an object like:     &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;id&#39;:701,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is an old movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:1950,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   The document id can also be missing, in which case an autogenerated one will be used:             &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is a new movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:2020,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   It responds with an object in format:      &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:701,&#39;created&#39;:true,&#39;result&#39;:&#39;created&#39;,&#39;status&#39;:201}   &#x60;&#x60;&#x60; 
-   * @param insertDocumentRequest  (required)
-   * @return SuccessResponse
-   * @throws ApiException if fails to make API call
-   * @http.response.details
-     <table summary="Response Details" border="1">
-       <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
-       <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
-       <tr><td> 0 </td><td> error </td><td>  -  </td></tr>
-     </table>
-   * 
-   * @see <a href="https://manual.manticoresearch.com/Adding_documents_to_an_index/Adding_documents_to_a_real-time_index#Adding-documents-to-a-real-time-index">Create a new document in an index Documentation</a>
-   */
-  public SuccessResponse insert(InsertDocumentRequest insertDocumentRequest) throws ApiException {
-    return insertWithHttpInfo(insertDocumentRequest).getData();
-  }
-
-  /**
-   * Create a new document in an index
-   * Insert a document.  Expects an object like:     &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;id&#39;:701,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is an old movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:1950,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   The document id can also be missing, in which case an autogenerated one will be used:             &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is a new movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:2020,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   It responds with an object in format:      &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:701,&#39;created&#39;:true,&#39;result&#39;:&#39;created&#39;,&#39;status&#39;:201}   &#x60;&#x60;&#x60; 
-   * @param insertDocumentRequest  (required)
-   * @return ApiResponse&lt;SuccessResponse&gt;
-   * @throws ApiException if fails to make API call
-   * @http.response.details
-     <table summary="Response Details" border="1">
-       <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
-       <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
-       <tr><td> 0 </td><td> error </td><td>  -  </td></tr>
-     </table>
-   * 
-   * @see <a href="https://manual.manticoresearch.com/Adding_documents_to_an_index/Adding_documents_to_a_real-time_index#Adding-documents-to-a-real-time-index">Create a new document in an index Documentation</a>
-   */
-  public ApiResponse<SuccessResponse> insertWithHttpInfo(InsertDocumentRequest insertDocumentRequest) throws ApiException {
-      Object localVarPostBody = insertDocumentRequest;
-    // Check required parameters
-    if (insertDocumentRequest == null) {
-      throw new ApiException(400, "Missing the required parameter 'insertDocumentRequest' when calling insert");
-    }
-
-    String localVarAccept = apiClient.selectHeaderAccept("application/json");
-    String localVarContentType = apiClient.selectHeaderContentType("application/json");
-    GenericType<SuccessResponse> localVarReturnType = new GenericType<SuccessResponse>() {};
-    return apiClient.invokeAPI("IndexApi.insert", "/insert", "POST", new ArrayList<>(), localVarPostBody,
-                               new LinkedHashMap<>(), new LinkedHashMap<>(), new LinkedHashMap<>(), localVarAccept, localVarContentType,
-                               null, localVarReturnType, false);
-  }
-  /**
-   * Replace new document in an index
-   * Replace an existing document. Input has same format as &#x60;insert&#x60; operation. &lt;br/&gt; Responds with an object in format: &lt;br/&gt;    &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;created&#39;:false,&#39;result&#39;:&#39;updated&#39;,&#39;status&#39;:200}   &#x60;&#x60;&#x60; 
-   * @param insertDocumentRequest  (required)
-   * @return SuccessResponse
-   * @throws ApiException if fails to make API call
-   * @http.response.details
-     <table summary="Response Details" border="1">
-       <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
-       <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
-       <tr><td> 0 </td><td> error </td><td>  -  </td></tr>
-     </table>
-   * 
-   * @see <a href="https://manual.manticoresearch.com/Adding_documents_to_an_index/Adding_documents_to_a_real-time_index#Adding-documents-to-a-real-time-index">Replace new document in an index Documentation</a>
-   */
-  public SuccessResponse replace(InsertDocumentRequest insertDocumentRequest) throws ApiException {
-    return replaceWithHttpInfo(insertDocumentRequest).getData();
-  }
-
-  /**
-   * Replace new document in an index
-   * Replace an existing document. Input has same format as &#x60;insert&#x60; operation. &lt;br/&gt; Responds with an object in format: &lt;br/&gt;    &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;created&#39;:false,&#39;result&#39;:&#39;updated&#39;,&#39;status&#39;:200}   &#x60;&#x60;&#x60; 
-   * @param insertDocumentRequest  (required)
-   * @return ApiResponse&lt;SuccessResponse&gt;
-   * @throws ApiException if fails to make API call
-   * @http.response.details
-     <table summary="Response Details" border="1">
-       <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
-       <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
-       <tr><td> 0 </td><td> error </td><td>  -  </td></tr>
-     </table>
-   * 
-   * @see <a href="https://manual.manticoresearch.com/Adding_documents_to_an_index/Adding_documents_to_a_real-time_index#Adding-documents-to-a-real-time-index">Replace new document in an index Documentation</a>
-   */
-  public ApiResponse<SuccessResponse> replaceWithHttpInfo(InsertDocumentRequest insertDocumentRequest) throws ApiException {
-      Object localVarPostBody = insertDocumentRequest;
-    // Check required parameters
-    if (insertDocumentRequest == null) {
-      throw new ApiException(400, "Missing the required parameter 'insertDocumentRequest' when calling replace");
-    }
-
-    String localVarAccept = apiClient.selectHeaderAccept("application/json");
-    String localVarContentType = apiClient.selectHeaderContentType("application/json");
-    GenericType<SuccessResponse> localVarReturnType = new GenericType<SuccessResponse>() {};
-    return apiClient.invokeAPI("IndexApi.replace", "/replace", "POST", new ArrayList<>(), localVarPostBody,
-                               new LinkedHashMap<>(), new LinkedHashMap<>(), new LinkedHashMap<>(), localVarAccept, localVarContentType,
-                               null, localVarReturnType, false);
-  }
-  /**
-   * Update a document in an index
-   * Update one or several documents. The update can be made by passing the id or by using a match query in case multiple documents can be updated.  For example update a document using document id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;doc&#39;:{&#39;rating&#39;:9.49},&#39;id&#39;:100}   &#x60;&#x60;&#x60;  And update by using a match query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:{&#39;rating&#39;:9.49},     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;   The match query has same syntax as for searching. Responds with an object that tells how many documents where updated in format:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-   * @param updateDocumentRequest  (required)
-   * @return UpdateResponse
-   * @throws ApiException if fails to make API call
-   * @http.response.details
-     <table summary="Response Details" border="1">
-       <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
-       <tr><td> 200 </td><td> item updated </td><td>  -  </td></tr>
-       <tr><td> 0 </td><td> error </td><td>  -  </td></tr>
-     </table>
-   * 
-   * @see <a href="https://manual.manticoresearch.com/Updating_documents/UPDATE">Update a document in an index Documentation</a>
-   */
-  public UpdateResponse update(UpdateDocumentRequest updateDocumentRequest) throws ApiException {
-    return updateWithHttpInfo(updateDocumentRequest).getData();
-  }
-
-  /**
-   * Update a document in an index
-   * Update one or several documents. The update can be made by passing the id or by using a match query in case multiple documents can be updated.  For example update a document using document id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;doc&#39;:{&#39;rating&#39;:9.49},&#39;id&#39;:100}   &#x60;&#x60;&#x60;  And update by using a match query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:{&#39;rating&#39;:9.49},     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;   The match query has same syntax as for searching. Responds with an object that tells how many documents where updated in format:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-   * @param updateDocumentRequest  (required)
-   * @return ApiResponse&lt;UpdateResponse&gt;
-   * @throws ApiException if fails to make API call
-   * @http.response.details
-     <table summary="Response Details" border="1">
-       <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
-       <tr><td> 200 </td><td> item updated </td><td>  -  </td></tr>
-       <tr><td> 0 </td><td> error </td><td>  -  </td></tr>
-     </table>
-   * 
-   * @see <a href="https://manual.manticoresearch.com/Updating_documents/UPDATE">Update a document in an index Documentation</a>
-   */
-  public ApiResponse<UpdateResponse> updateWithHttpInfo(UpdateDocumentRequest updateDocumentRequest) throws ApiException {
-      Object localVarPostBody = updateDocumentRequest;
-    // Check required parameters
-    if (updateDocumentRequest == null) {
-      throw new ApiException(400, "Missing the required parameter 'updateDocumentRequest' when calling update");
-    }
-
-    String localVarAccept = apiClient.selectHeaderAccept("application/json");
-    String localVarContentType = apiClient.selectHeaderContentType("application/json");
-    GenericType<UpdateResponse> localVarReturnType = new GenericType<UpdateResponse>() {};
-    return apiClient.invokeAPI("IndexApi.update", "/update", "POST", new ArrayList<>(), localVarPostBody,
-                               new LinkedHashMap<>(), new LinkedHashMap<>(), new LinkedHashMap<>(), localVarAccept, localVarContentType,
-                               null, localVarReturnType, false);
-  }
-}
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/api/SearchApi.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/api/SearchApi.java
deleted file mode 100644
index 94a334b..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/api/SearchApi.java
+++ /dev/null
@@ -1,157 +0,0 @@
-package com.manticoresearch.client.api;
-
-import com.manticoresearch.client.ApiException;
-import com.manticoresearch.client.ApiClient;
-import com.manticoresearch.client.ApiResponse;
-import com.manticoresearch.client.Configuration;
-import com.manticoresearch.client.Pair;
-
-import jakarta.ws.rs.core.GenericType;
-
-import com.manticoresearch.client.model.ErrorResponse;
-import com.manticoresearch.client.model.PercolateRequest;
-import com.manticoresearch.client.model.SearchRequest;
-import com.manticoresearch.client.model.SearchResponse;
-
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.LinkedHashMap;
-import java.util.List;
-import java.util.Map;
-
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class SearchApi {
-  private ApiClient apiClient;
-
-  public SearchApi() {
-    this(Configuration.getDefaultApiClient());
-  }
-
-  public SearchApi(ApiClient apiClient) {
-    this.apiClient = apiClient;
-  }
-
-  /**
-   * Get the API client
-   *
-   * @return API client
-   */
-  public ApiClient getApiClient() {
-    return apiClient;
-  }
-
-  /**
-   * Set the API client
-   *
-   * @param apiClient an instance of API client
-   */
-  public void setApiClient(ApiClient apiClient) {
-    this.apiClient = apiClient;
-  }
-
-  /**
-   * Perform reverse search on a percolate index
-   * Performs a percolate search.  This method must be used only on percolate indexes.  Expects two parameters: the index name and an object with array of documents to be tested. An example of the documents object:    &#x60;&#x60;&#x60;   {     \&quot;query\&quot;:     {       \&quot;percolate\&quot;:       {         \&quot;document\&quot;:         {           \&quot;content\&quot;:\&quot;sample content\&quot;         }       }     }   }   &#x60;&#x60;&#x60;  Responds with an object with matched stored queries:     &#x60;&#x60;&#x60;   {     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;max_score&#39;:1,       &#39;hits&#39;:       [         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;2&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;match&#39;:{&#39;title&#39;:&#39;some&#39;}             }           }         },         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;5&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;ql&#39;:&#39;some | none&#39;             }           }         }       ]     }   }   &#x60;&#x60;&#x60; 
-   * @param index Name of the percolate index (required)
-   * @param percolateRequest  (required)
-   * @return SearchResponse
-   * @throws ApiException if fails to make API call
-   * @http.response.details
-     <table summary="Response Details" border="1">
-       <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
-       <tr><td> 200 </td><td> items found </td><td>  -  </td></tr>
-       <tr><td> 0 </td><td> error </td><td>  -  </td></tr>
-     </table>
-   * 
-   * @see <a href="https://manual.manticoresearch.com/Updating_documents/UPDATE">Perform reverse search on a percolate index Documentation</a>
-   */
-  public SearchResponse percolate(String index, PercolateRequest percolateRequest) throws ApiException {
-    return percolateWithHttpInfo(index, percolateRequest).getData();
-  }
-
-  /**
-   * Perform reverse search on a percolate index
-   * Performs a percolate search.  This method must be used only on percolate indexes.  Expects two parameters: the index name and an object with array of documents to be tested. An example of the documents object:    &#x60;&#x60;&#x60;   {     \&quot;query\&quot;:     {       \&quot;percolate\&quot;:       {         \&quot;document\&quot;:         {           \&quot;content\&quot;:\&quot;sample content\&quot;         }       }     }   }   &#x60;&#x60;&#x60;  Responds with an object with matched stored queries:     &#x60;&#x60;&#x60;   {     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;max_score&#39;:1,       &#39;hits&#39;:       [         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;2&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;match&#39;:{&#39;title&#39;:&#39;some&#39;}             }           }         },         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;5&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;ql&#39;:&#39;some | none&#39;             }           }         }       ]     }   }   &#x60;&#x60;&#x60; 
-   * @param index Name of the percolate index (required)
-   * @param percolateRequest  (required)
-   * @return ApiResponse&lt;SearchResponse&gt;
-   * @throws ApiException if fails to make API call
-   * @http.response.details
-     <table summary="Response Details" border="1">
-       <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
-       <tr><td> 200 </td><td> items found </td><td>  -  </td></tr>
-       <tr><td> 0 </td><td> error </td><td>  -  </td></tr>
-     </table>
-   * 
-   * @see <a href="https://manual.manticoresearch.com/Updating_documents/UPDATE">Perform reverse search on a percolate index Documentation</a>
-   */
-  public ApiResponse<SearchResponse> percolateWithHttpInfo(String index, PercolateRequest percolateRequest) throws ApiException {
-      Object localVarPostBody = percolateRequest;
-    // Check required parameters
-    if (index == null) {
-      throw new ApiException(400, "Missing the required parameter 'index' when calling percolate");
-    }
-    if (percolateRequest == null) {
-      throw new ApiException(400, "Missing the required parameter 'percolateRequest' when calling percolate");
-    }
-
-    // Path parameters
-    String localVarPath = "/pq/{index}/search"
-            .replaceAll("\\{index}", apiClient.escapeString(index));
-
-    String localVarAccept = apiClient.selectHeaderAccept("application/json");
-    String localVarContentType = apiClient.selectHeaderContentType("application/json");
-    GenericType<SearchResponse> localVarReturnType = new GenericType<SearchResponse>() {};
-    return apiClient.invokeAPI("SearchApi.percolate", localVarPath, "POST", new ArrayList<>(), localVarPostBody,
-                               new LinkedHashMap<>(), new LinkedHashMap<>(), new LinkedHashMap<>(), localVarAccept, localVarContentType,
-                               null, localVarReturnType, false);
-  }
-  /**
-   * Performs a search on an index
-   *  The method expects an object with the following mandatory properties: * the name of the index to search * the match query object For details, see the documentation on [**SearchRequest**](SearchRequest.md) The method returns an object with the following properties: - took: the time taken to execute the search query. - timed_out: a boolean indicating whether the query timed out. - hits: an object with the following properties:    - total: the total number of hits found.    - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:      - _id: the ID of the matched document.      - _score: the score of the matched document.      - _source: the source data of the matched document.  In addition, if profiling is enabled, the response will include an additional array with profiling information attached. Here is an example search response:    &#x60;&#x60;&#x60;   {     &#39;took&#39;:10,     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;hits&#39;:       [         {&#39;_id&#39;:&#39;1&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:11}},         {&#39;_id&#39;:&#39;2&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:12}}       ]     }   }   &#x60;&#x60;&#x60;  For more information about the match query syntax and additional parameters that can be added to request and response, please see the documentation [here](https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON). 
-   * @param searchRequest  (required)
-   * @return SearchResponse
-   * @throws ApiException if fails to make API call
-   * @http.response.details
-     <table summary="Response Details" border="1">
-       <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
-       <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
-       <tr><td> 0 </td><td> error </td><td>  -  </td></tr>
-     </table>
-   * 
-   * @see <a href="https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON">Performs a search on an index Documentation</a>
-   */
-  public SearchResponse search(SearchRequest searchRequest) throws ApiException {
-    return searchWithHttpInfo(searchRequest).getData();
-  }
-
-  /**
-   * Performs a search on an index
-   *  The method expects an object with the following mandatory properties: * the name of the index to search * the match query object For details, see the documentation on [**SearchRequest**](SearchRequest.md) The method returns an object with the following properties: - took: the time taken to execute the search query. - timed_out: a boolean indicating whether the query timed out. - hits: an object with the following properties:    - total: the total number of hits found.    - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:      - _id: the ID of the matched document.      - _score: the score of the matched document.      - _source: the source data of the matched document.  In addition, if profiling is enabled, the response will include an additional array with profiling information attached. Here is an example search response:    &#x60;&#x60;&#x60;   {     &#39;took&#39;:10,     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;hits&#39;:       [         {&#39;_id&#39;:&#39;1&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:11}},         {&#39;_id&#39;:&#39;2&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:12}}       ]     }   }   &#x60;&#x60;&#x60;  For more information about the match query syntax and additional parameters that can be added to request and response, please see the documentation [here](https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON). 
-   * @param searchRequest  (required)
-   * @return ApiResponse&lt;SearchResponse&gt;
-   * @throws ApiException if fails to make API call
-   * @http.response.details
-     <table summary="Response Details" border="1">
-       <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
-       <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
-       <tr><td> 0 </td><td> error </td><td>  -  </td></tr>
-     </table>
-   * 
-   * @see <a href="https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON">Performs a search on an index Documentation</a>
-   */
-  public ApiResponse<SearchResponse> searchWithHttpInfo(SearchRequest searchRequest) throws ApiException {
-      Object localVarPostBody = searchRequest;
-    // Check required parameters
-    if (searchRequest == null) {
-      throw new ApiException(400, "Missing the required parameter 'searchRequest' when calling search");
-    }
-
-    String localVarAccept = apiClient.selectHeaderAccept("application/json");
-    String localVarContentType = apiClient.selectHeaderContentType("application/json");
-    GenericType<SearchResponse> localVarReturnType = new GenericType<SearchResponse>() {};
-    return apiClient.invokeAPI("SearchApi.search", "/search", "POST", new ArrayList<>(), localVarPostBody,
-                               new LinkedHashMap<>(), new LinkedHashMap<>(), new LinkedHashMap<>(), localVarAccept, localVarContentType,
-                               null, localVarReturnType, false);
-  }
-}
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/api/UtilsApi.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/api/UtilsApi.java
deleted file mode 100644
index bae8f44..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/api/UtilsApi.java
+++ /dev/null
@@ -1,119 +0,0 @@
-package com.manticoresearch.client.api;
-
-import com.manticoresearch.client.ApiException;
-import com.manticoresearch.client.ApiClient;
-import com.manticoresearch.client.ApiResponse;
-import com.manticoresearch.client.Configuration;
-import com.manticoresearch.client.Pair;
-
-import jakarta.ws.rs.core.GenericType;
-
-import com.manticoresearch.client.model.ErrorResponse;
-
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.LinkedHashMap;
-import java.util.List;
-import java.util.Map;
-
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class UtilsApi {
-  private ApiClient apiClient;
-
-  public UtilsApi() {
-    this(Configuration.getDefaultApiClient());
-  }
-
-  public UtilsApi(ApiClient apiClient) {
-    this.apiClient = apiClient;
-  }
-
-  /**
-   * Get the API client
-   *
-   * @return API client
-   */
-  public ApiClient getApiClient() {
-    return apiClient;
-  }
-
-  /**
-   * Set the API client
-   *
-   * @param apiClient an instance of API client
-   */
-  public void setApiClient(ApiClient apiClient) {
-    this.apiClient = apiClient;
-  }
-
-  /**
-   * Perform SQL requests
-   * Run a query in SQL format. Expects a query string passed through &#x60;body&#x60; parameter and optional &#x60;raw_response&#x60; parameter that defines a format of response. &#x60;raw_response&#x60; can be set to &#x60;False&#x60; for Select queries only, e.g., &#x60;SELECT * FROM myindex&#x60; The query string must stay as it is, no URL encoding is needed. The response object depends on the query executed. In select mode the response has same format as &#x60;/search&#x60; operation. 
-   * @param body A query parameter string.  (required)
-   * @param rawResponse Optional parameter, defines a format of response. Can be set to &#x60;False&#x60; for Select only queries and set to &#x60;True&#x60; or omitted for any type of queries:  (optional, default to true)
-   * @return List&lt;Object&gt;
-   * @throws ApiException if fails to make API call
-   * @http.response.details
-     <table summary="Response Details" border="1">
-       <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
-       <tr><td> 200 </td><td> In case of SELECT-only in mode none the response schema is the same as of &#x60;search&#x60;. In case of &#x60;mode&#x3D;raw&#x60; the response depends on the query executed.  </td><td>  -  </td></tr>
-       <tr><td> 0 </td><td> error </td><td>  -  </td></tr>
-     </table>
-   * 
-   * @see <a href="https://manual.manticoresearch.com/Connecting_to_the_server/HTTP#sql-api">Perform SQL requests Documentation</a>
-   */
-  public List<Object> sql(String body, Boolean rawResponse) throws ApiException {
-    return sqlWithHttpInfo(body, rawResponse).getData();
-  }
-
-  /**
-   * Perform SQL requests
-   * Run a query in SQL format. Expects a query string passed through &#x60;body&#x60; parameter and optional &#x60;raw_response&#x60; parameter that defines a format of response. &#x60;raw_response&#x60; can be set to &#x60;False&#x60; for Select queries only, e.g., &#x60;SELECT * FROM myindex&#x60; The query string must stay as it is, no URL encoding is needed. The response object depends on the query executed. In select mode the response has same format as &#x60;/search&#x60; operation. 
-   * @param body A query parameter string.  (required)
-   * @param rawResponse Optional parameter, defines a format of response. Can be set to &#x60;False&#x60; for Select only queries and set to &#x60;True&#x60; or omitted for any type of queries:  (optional, default to true)
-   * @return ApiResponse&lt;List&lt;Object&gt;&gt;
-   * @throws ApiException if fails to make API call
-   * @http.response.details
-     <table summary="Response Details" border="1">
-       <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
-       <tr><td> 200 </td><td> In case of SELECT-only in mode none the response schema is the same as of &#x60;search&#x60;. In case of &#x60;mode&#x3D;raw&#x60; the response depends on the query executed.  </td><td>  -  </td></tr>
-       <tr><td> 0 </td><td> error </td><td>  -  </td></tr>
-     </table>
-   * 
-   * @see <a href="https://manual.manticoresearch.com/Connecting_to_the_server/HTTP#sql-api">Perform SQL requests Documentation</a>
-   */
-  public ApiResponse<List<Object>> sqlWithHttpInfo(String body, Boolean rawResponse) throws ApiException {
-      Object localVarPostBody = body;
-      if  (localVarPostBody != null) {
-        if  (!rawResponse) {
-          localVarPostBody = "query=" + apiClient.escapeString( localVarPostBody.toString() ); 
-        } else {
-          localVarPostBody = "mode=raw&query=" + apiClient.escapeString( localVarPostBody.toString() );
-        }
-      }
-    // Check required parameters
-    if (body == null) {
-      throw new ApiException(400, "Missing the required parameter 'body' when calling sql");
-    }
-
-    // Query parameters
-    List<Pair> localVarQueryParams = new ArrayList<>(
-            apiClient.parameterToPairs("", "raw_response", rawResponse)
-    );
-
-    String localVarAccept = apiClient.selectHeaderAccept("application/json");
-    String localVarContentType = apiClient.selectHeaderContentType("text/plain");
-    GenericType<List<Object>> localVarReturnType = new GenericType<List<Object>>() {};
-    if (!rawResponse) {
-    	ApiResponse<Map<String, Object>> res = apiClient.invokeAPI("UtilsApi.sql", "/sql", "POST", localVarQueryParams, localVarPostBody,
-            new LinkedHashMap<>(), new LinkedHashMap<>(), new LinkedHashMap<>(), localVarAccept, localVarContentType,
-        	null, new GenericType<Map<String, Object>>() {}, false);
-        List<Object> resList = new ArrayList<Object>();
-        resList.add(res.getData());
-    	return new ApiResponse<List<Object>>(res.getStatusCode(), res.getHeaders(), resList);
-    } 
-    return apiClient.invokeAPI("UtilsApi.sql", "/sql", "POST", localVarQueryParams, localVarPostBody,
-                               new LinkedHashMap<>(), new LinkedHashMap<>(), new LinkedHashMap<>(), localVarAccept, localVarContentType,
-                               null, localVarReturnType, false);
-  }
-}
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/auth/ApiKeyAuth.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/auth/ApiKeyAuth.java
deleted file mode 100644
index 40f32ce..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/auth/ApiKeyAuth.java
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.auth;
-
-import com.manticoresearch.client.Pair;
-import com.manticoresearch.client.ApiException;
-
-import java.net.URI;
-import java.util.Map;
-import java.util.List;
-
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class ApiKeyAuth implements Authentication {
-  private final String location;
-  private final String paramName;
-
-  private String apiKey;
-  private String apiKeyPrefix;
-
-  public ApiKeyAuth(String location, String paramName) {
-    this.location = location;
-    this.paramName = paramName;
-  }
-
-  public String getLocation() {
-    return location;
-  }
-
-  public String getParamName() {
-    return paramName;
-  }
-
-  public String getApiKey() {
-    return apiKey;
-  }
-
-  public void setApiKey(String apiKey) {
-    this.apiKey = apiKey;
-  }
-
-  public String getApiKeyPrefix() {
-    return apiKeyPrefix;
-  }
-
-  public void setApiKeyPrefix(String apiKeyPrefix) {
-    this.apiKeyPrefix = apiKeyPrefix;
-  }
-
-  @Override
-  public void applyToParams(List<Pair> queryParams, Map<String, String> headerParams, Map<String, String> cookieParams, String payload, String method, URI uri) throws ApiException {
-    if (apiKey == null) {
-      return;
-    }
-    String value;
-    if (apiKeyPrefix != null) {
-      value = apiKeyPrefix + " " + apiKey;
-    } else {
-      value = apiKey;
-    }
-    if ("query".equals(location)) {
-      queryParams.add(new Pair(paramName, value));
-    } else if ("header".equals(location)) {
-      headerParams.put(paramName, value);
-    } else if ("cookie".equals(location)) {
-      cookieParams.put(paramName, value);
-    }
-  }
-}
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/auth/Authentication.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/auth/Authentication.java
deleted file mode 100644
index bd1555f..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/auth/Authentication.java
+++ /dev/null
@@ -1,33 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.auth;
-
-import com.manticoresearch.client.Pair;
-import com.manticoresearch.client.ApiException;
-
-import java.net.URI;
-import java.util.Map;
-import java.util.List;
-
-public interface Authentication {
-    /**
-     * Apply authentication settings to header and query params.
-     *
-     * @param queryParams List of query parameters
-     * @param headerParams Map of header parameters
-     * @param cookieParams Map of cookie parameters
-     */
-    void applyToParams(List<Pair> queryParams, Map<String, String> headerParams, Map<String, String> cookieParams, String payload, String method, URI uri) throws ApiException;
-
-}
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/auth/HttpBasicAuth.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/auth/HttpBasicAuth.java
deleted file mode 100644
index 84f0c36..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/auth/HttpBasicAuth.java
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.auth;
-
-import com.manticoresearch.client.Pair;
-import com.manticoresearch.client.ApiException;
-
-import java.util.Base64;
-import java.nio.charset.StandardCharsets;
-
-import java.net.URI;
-import java.util.Map;
-import java.util.List;
-
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class HttpBasicAuth implements Authentication {
-  private String username;
-  private String password;
-
-  public String getUsername() {
-    return username;
-  }
-
-  public void setUsername(String username) {
-    this.username = username;
-  }
-
-  public String getPassword() {
-    return password;
-  }
-
-  public void setPassword(String password) {
-    this.password = password;
-  }
-
-  @Override
-  public void applyToParams(List<Pair> queryParams, Map<String, String> headerParams, Map<String, String> cookieParams, String payload, String method, URI uri) throws ApiException {
-    if (username == null && password == null) {
-      return;
-    }
-    String str = (username == null ? "" : username) + ":" + (password == null ? "" : password);
-    headerParams.put("Authorization", "Basic " + Base64.getEncoder().encodeToString(str.getBytes(StandardCharsets.UTF_8)));
-  }
-}
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/auth/HttpBearerAuth.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/auth/HttpBearerAuth.java
deleted file mode 100644
index 4db4731..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/auth/HttpBearerAuth.java
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.auth;
-
-import com.manticoresearch.client.Pair;
-import com.manticoresearch.client.ApiException;
-
-import java.net.URI;
-import java.util.Map;
-import java.util.List;
-
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class HttpBearerAuth implements Authentication {
-  private final String scheme;
-  private String bearerToken;
-
-  public HttpBearerAuth(String scheme) {
-    this.scheme = scheme;
-  }
-
-  /**
-   * Gets the token, which together with the scheme, will be sent as the value of the Authorization header.
-   *
-   * @return The bearer token
-   */
-  public String getBearerToken() {
-    return bearerToken;
-  }
-
-  /**
-   * Sets the token, which together with the scheme, will be sent as the value of the Authorization header.
-   *
-   * @param bearerToken The bearer token to send in the Authorization header
-   */
-  public void setBearerToken(String bearerToken) {
-    this.bearerToken = bearerToken;
-  }
-
-  @Override
-  public void applyToParams(List<Pair> queryParams, Map<String, String> headerParams, Map<String, String> cookieParams, String payload, String method, URI uri) throws ApiException {
-    if(bearerToken == null) {
-      return;
-    }
-
-    headerParams.put("Authorization", (scheme != null ? upperCaseBearer(scheme) + " " : "") + bearerToken);
-  }
-
-  private static String upperCaseBearer(String scheme) {
-    return ("bearer".equalsIgnoreCase(scheme)) ? "Bearer" : scheme;
-  }
-}
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/AbstractOpenApiSchema.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/AbstractOpenApiSchema.java
deleted file mode 100644
index ce7c883..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/AbstractOpenApiSchema.java
+++ /dev/null
@@ -1,149 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.manticoresearch.client.ApiException;
-import java.util.Objects;
-import java.lang.reflect.Type;
-import java.util.Map;
-import jakarta.ws.rs.core.GenericType;
-
-import com.fasterxml.jackson.annotation.JsonValue;
-
-/**
- * Abstract class for oneOf,anyOf schemas defined in OpenAPI spec
- */
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public abstract class AbstractOpenApiSchema {
-
-    // store the actual instance of the schema/object
-    private Object instance;
-
-    // is nullable
-    private Boolean isNullable;
-
-    // schema type (e.g. oneOf, anyOf)
-    private final String schemaType;
-
-    public AbstractOpenApiSchema(String schemaType, Boolean isNullable) {
-        this.schemaType = schemaType;
-        this.isNullable = isNullable;
-    }
-
-    /**
-     * Get the list of oneOf/anyOf composed schemas allowed to be stored in this object
-     *
-     * @return an instance of the actual schema/object
-     */
-    public abstract Map<String, GenericType> getSchemas();
-
-    /**
-     * Get the actual instance
-     *
-     * @return an instance of the actual schema/object
-     */
-    @JsonValue
-    public Object getActualInstance() {return instance;}
-
-    /**
-     * Set the actual instance
-     *
-     * @param instance the actual instance of the schema/object
-     */
-    public void setActualInstance(Object instance) {this.instance = instance;}
-
-    /**
-     * Get the instant recursively when the schemas defined in oneOf/anyof happen to be oneOf/anyOf schema as well
-     *
-     * @return an instance of the actual schema/object
-     */
-    public Object getActualInstanceRecursively() {
-        return getActualInstanceRecursively(this);
-    }
-
-    private Object getActualInstanceRecursively(AbstractOpenApiSchema object) {
-        if (object.getActualInstance() == null) {
-            return null;
-        } else if (object.getActualInstance() instanceof AbstractOpenApiSchema) {
-            return getActualInstanceRecursively((AbstractOpenApiSchema)object.getActualInstance());
-        } else {
-            return object.getActualInstance();
-        }
-    }
-
-    /**
-     * Get the schema type (e.g. anyOf, oneOf)
-     *
-     * @return the schema type
-     */
-    public String getSchemaType() {
-        return schemaType;
-    }
-
-    @Override
-    public String toString() {
-        StringBuilder sb = new StringBuilder();
-        sb.append("class ").append(getClass()).append(" {\n");
-        sb.append("    instance: ").append(toIndentedString(instance)).append("\n");
-        sb.append("    isNullable: ").append(toIndentedString(isNullable)).append("\n");
-        sb.append("    schemaType: ").append(toIndentedString(schemaType)).append("\n");
-        sb.append("}");
-        return sb.toString();
-    }
-
-    /**
-     * Convert the given object to string with each line indented by 4 spaces
-     * (except the first line).
-     */
-    private String toIndentedString(Object o) {
-        if (o == null) {
-            return "null";
-        }
-        return o.toString().replace("\n", "\n    ");
-    }
-
-    public boolean equals(Object o) {
-        if (this == o) {
-            return true;
-        }
-        if (o == null || getClass() != o.getClass()) {
-            return false;
-        }
-        AbstractOpenApiSchema a = (AbstractOpenApiSchema) o;
-        return Objects.equals(this.instance, a.instance) &&
-            Objects.equals(this.isNullable, a.isNullable) &&
-            Objects.equals(this.schemaType, a.schemaType);
-    }
-
-    @Override
-    public int hashCode() {
-        return Objects.hash(instance, isNullable, schemaType);
-    }
-
-    /**
-     * Is nullable
-     *
-     * @return true if it's nullable
-     */
-    public Boolean isNullable() {
-        if (Boolean.TRUE.equals(isNullable)) {
-            return Boolean.TRUE;
-        } else {
-            return Boolean.FALSE;
-        }
-    }
-
-
-
-}
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/Aggregation.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/Aggregation.java
deleted file mode 100644
index f244837..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/Aggregation.java
+++ /dev/null
@@ -1,156 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import com.manticoresearch.client.model.AggregationSortInnerValue;
-import com.manticoresearch.client.model.AggregationTerms;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-import java.util.Map;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Aggregation Alias
- */
-@JsonPropertyOrder({
-  Aggregation.JSON_PROPERTY_TERMS,
-  Aggregation.JSON_PROPERTY_SORT
-})
-@JsonTypeName("aggregation")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class Aggregation {
-  public static final String JSON_PROPERTY_TERMS = "terms";
-  private AggregationTerms terms;
-
-  public static final String JSON_PROPERTY_SORT = "sort";
-  private List<Map<String, AggregationSortInnerValue>> sort;
-
-  public Aggregation() { 
-  }
-
-  public Aggregation terms(AggregationTerms terms) {
-    this.terms = terms;
-    return this;
-  }
-
-   /**
-   * Get terms
-   * @return terms
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_TERMS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public AggregationTerms getTerms() {
-    return terms;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_TERMS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setTerms(AggregationTerms terms) {
-    this.terms = terms;
-  }
-
-
-  public Aggregation sort(List<Map<String, AggregationSortInnerValue>> sort) {
-    this.sort = sort;
-    return this;
-  }
-
-  public Aggregation addSortItem(Map<String, AggregationSortInnerValue> sortItem) {
-    if (this.sort == null) {
-      this.sort = new ArrayList<>();
-    }
-    this.sort.add(sortItem);
-    return this;
-  }
-
-   /**
-   * Get sort
-   * @return sort
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_SORT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public List<Map<String, AggregationSortInnerValue>> getSort() {
-    return sort;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_SORT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setSort(List<Map<String, AggregationSortInnerValue>> sort) {
-    this.sort = sort;
-  }
-
-
-  /**
-   * Return true if this aggregation object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    Aggregation aggregation = (Aggregation) o;
-    return Objects.equals(this.terms, aggregation.terms) &&
-        Objects.equals(this.sort, aggregation.sort);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(terms, sort);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class Aggregation {\n");
-    sb.append("    terms: ").append(toIndentedString(terms)).append("\n");
-    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/AggregationSortInnerValue.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/AggregationSortInnerValue.java
deleted file mode 100644
index bf3768a..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/AggregationSortInnerValue.java
+++ /dev/null
@@ -1,112 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * AggregationSortInnerValue
- */
-@JsonPropertyOrder({
-  AggregationSortInnerValue.JSON_PROPERTY_ORDER
-})
-@JsonTypeName("aggregation_sort_inner_value")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class AggregationSortInnerValue {
-  public static final String JSON_PROPERTY_ORDER = "order";
-  private String order;
-
-  public AggregationSortInnerValue() { 
-  }
-
-  public AggregationSortInnerValue order(String order) {
-    this.order = order;
-    return this;
-  }
-
-   /**
-   * Get order
-   * @return order
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_ORDER)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public String getOrder() {
-    return order;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_ORDER)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setOrder(String order) {
-    this.order = order;
-  }
-
-
-  /**
-   * Return true if this aggregation_sort_inner_value object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    AggregationSortInnerValue aggregationSortInnerValue = (AggregationSortInnerValue) o;
-    return Objects.equals(this.order, aggregationSortInnerValue.order);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(order);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class AggregationSortInnerValue {\n");
-    sb.append("    order: ").append(toIndentedString(order)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/AggregationTerms.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/AggregationTerms.java
deleted file mode 100644
index 6d8a8cf..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/AggregationTerms.java
+++ /dev/null
@@ -1,143 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * AggregationTerms
- */
-@JsonPropertyOrder({
-  AggregationTerms.JSON_PROPERTY_FIELD,
-  AggregationTerms.JSON_PROPERTY_SIZE
-})
-@JsonTypeName("aggregation_terms")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class AggregationTerms {
-  public static final String JSON_PROPERTY_FIELD = "field";
-  private String field;
-
-  public static final String JSON_PROPERTY_SIZE = "size";
-  private Integer size;
-
-  public AggregationTerms() { 
-  }
-
-  public AggregationTerms field(String field) {
-    this.field = field;
-    return this;
-  }
-
-   /**
-   * Attribute Name to Aggregate
-   * @return field
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_FIELD)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public String getField() {
-    return field;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FIELD)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setField(String field) {
-    this.field = field;
-  }
-
-
-  public AggregationTerms size(Integer size) {
-    this.size = size;
-    return this;
-  }
-
-   /**
-   * Maximum Number of Buckets in the Result
-   * @return size
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_SIZE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Integer getSize() {
-    return size;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_SIZE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setSize(Integer size) {
-    this.size = size;
-  }
-
-
-  /**
-   * Return true if this aggregation_terms object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    AggregationTerms aggregationTerms = (AggregationTerms) o;
-    return Objects.equals(this.field, aggregationTerms.field) &&
-        Objects.equals(this.size, aggregationTerms.size);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(field, size);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class AggregationTerms {\n");
-    sb.append("    field: ").append(toIndentedString(field)).append("\n");
-    sb.append("    size: ").append(toIndentedString(size)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/BoolFilter.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/BoolFilter.java
deleted file mode 100644
index ef67ac5..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/BoolFilter.java
+++ /dev/null
@@ -1,200 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Boolean attribute filter
- */
-@JsonPropertyOrder({
-  BoolFilter.JSON_PROPERTY_SHOULD,
-  BoolFilter.JSON_PROPERTY_MUST,
-  BoolFilter.JSON_PROPERTY_MUST_NOT
-})
-@JsonTypeName("boolFilter")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class BoolFilter {
-  public static final String JSON_PROPERTY_SHOULD = "should";
-  private List<Object> should;
-
-  public static final String JSON_PROPERTY_MUST = "must";
-  private List<Object> must;
-
-  public static final String JSON_PROPERTY_MUST_NOT = "must_not";
-  private List<Object> mustNot;
-
-  public BoolFilter() { 
-  }
-
-  public BoolFilter should(List<Object> should) {
-    this.should = should;
-    return this;
-  }
-
-  public BoolFilter addShouldItem(Object shouldItem) {
-    if (this.should == null) {
-      this.should = new ArrayList<>();
-    }
-    this.should.add(shouldItem);
-    return this;
-  }
-
-   /**
-   * Get should
-   * @return should
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_SHOULD)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public List<Object> getShould() {
-    return should;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_SHOULD)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setShould(List<Object> should) {
-    this.should = should;
-  }
-
-
-  public BoolFilter must(List<Object> must) {
-    this.must = must;
-    return this;
-  }
-
-  public BoolFilter addMustItem(Object mustItem) {
-    if (this.must == null) {
-      this.must = new ArrayList<>();
-    }
-    this.must.add(mustItem);
-    return this;
-  }
-
-   /**
-   * Get must
-   * @return must
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_MUST)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public List<Object> getMust() {
-    return must;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_MUST)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setMust(List<Object> must) {
-    this.must = must;
-  }
-
-
-  public BoolFilter mustNot(List<Object> mustNot) {
-    this.mustNot = mustNot;
-    return this;
-  }
-
-  public BoolFilter addMustNotItem(Object mustNotItem) {
-    if (this.mustNot == null) {
-      this.mustNot = new ArrayList<>();
-    }
-    this.mustNot.add(mustNotItem);
-    return this;
-  }
-
-   /**
-   * Get mustNot
-   * @return mustNot
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_MUST_NOT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public List<Object> getMustNot() {
-    return mustNot;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_MUST_NOT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setMustNot(List<Object> mustNot) {
-    this.mustNot = mustNot;
-  }
-
-
-  /**
-   * Return true if this boolFilter object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    BoolFilter boolFilter = (BoolFilter) o;
-    return Objects.equals(this.should, boolFilter.should) &&
-        Objects.equals(this.must, boolFilter.must) &&
-        Objects.equals(this.mustNot, boolFilter.mustNot);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(should, must, mustNot);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class BoolFilter {\n");
-    sb.append("    should: ").append(toIndentedString(should)).append("\n");
-    sb.append("    must: ").append(toIndentedString(must)).append("\n");
-    sb.append("    mustNot: ").append(toIndentedString(mustNot)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/BulkResponse.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/BulkResponse.java
deleted file mode 100644
index 1d8662e..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/BulkResponse.java
+++ /dev/null
@@ -1,217 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonAnyGetter;
-import com.fasterxml.jackson.annotation.JsonAnySetter;
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Success bulk response
- */
-@JsonPropertyOrder({
-  BulkResponse.JSON_PROPERTY_ITEMS,
-  BulkResponse.JSON_PROPERTY_ERRORS,
-  BulkResponse.JSON_PROPERTY_ERROR
-})
-@JsonTypeName("bulkResponse")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class BulkResponse {
-  public static final String JSON_PROPERTY_ITEMS = "items";
-  private Object items;
-
-  public static final String JSON_PROPERTY_ERRORS = "errors";
-  private Boolean errors;
-
-  public static final String JSON_PROPERTY_ERROR = "error";
-  private String error;
-
-  public BulkResponse() { 
-  }
-
-  public BulkResponse items(Object items) {
-    this.items = items;
-    return this;
-  }
-
-   /**
-   * Get items
-   * @return items
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_ITEMS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Object getItems() {
-    return items;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_ITEMS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setItems(Object items) {
-    this.items = items;
-  }
-
-
-  public BulkResponse errors(Boolean errors) {
-    this.errors = errors;
-    return this;
-  }
-
-   /**
-   * Get errors
-   * @return errors
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_ERRORS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Boolean getErrors() {
-    return errors;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_ERRORS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setErrors(Boolean errors) {
-    this.errors = errors;
-  }
-
-
-  public BulkResponse error(String error) {
-    this.error = error;
-    return this;
-  }
-
-   /**
-   * Get error
-   * @return error
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_ERROR)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public String getError() {
-    return error;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_ERROR)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setError(String error) {
-    this.error = error;
-  }
-
-  /**
-   * A container for additional, undeclared properties.
-   * This is a holder for any undeclared properties as specified with
-   * the 'additionalProperties' keyword in the OAS document.
-   */
-  private Map<String, Object> additionalProperties;
-
-  /**
-   * Set the additional (undeclared) property with the specified name and value.
-   * If the property does not already exist, create it otherwise replace it.
-   */
-  @JsonAnySetter
-  public BulkResponse putAdditionalProperty(String key, Object value) {
-    if (this.additionalProperties == null) {
-        this.additionalProperties = new HashMap<>();
-    }
-    this.additionalProperties.put(key, value);
-    return this;
-  }
-
-  /**
-   * Return the additional (undeclared) property.
-   */
-  @JsonAnyGetter
-  public Map<String, Object> getAdditionalProperties() {
-    return additionalProperties;
-  }
-
-  /**
-   * Return the additional (undeclared) property with the specified name.
-   */
-  public Object getAdditionalProperty(String key) {
-    if (this.additionalProperties == null) {
-        return null;
-    }
-    return this.additionalProperties.get(key);
-  }
-
-  /**
-   * Return true if this bulkResponse object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    BulkResponse bulkResponse = (BulkResponse) o;
-    return Objects.equals(this.items, bulkResponse.items) &&
-        Objects.equals(this.errors, bulkResponse.errors) &&
-        Objects.equals(this.error, bulkResponse.error)&&
-        Objects.equals(this.additionalProperties, bulkResponse.additionalProperties);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(items, errors, error, additionalProperties);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class BulkResponse {\n");
-    sb.append("    items: ").append(toIndentedString(items)).append("\n");
-    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
-    sb.append("    error: ").append(toIndentedString(error)).append("\n");
-    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/DeleteDocumentRequest.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/DeleteDocumentRequest.java
deleted file mode 100644
index 8065f4a..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/DeleteDocumentRequest.java
+++ /dev/null
@@ -1,205 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Payload for delete request. Documents can be deleted either one by one by specifying the document id or by providing a query object. For more information see  [Delete API](https://manual.manticoresearch.com/Deleting_documents) 
- */
-@JsonPropertyOrder({
-  DeleteDocumentRequest.JSON_PROPERTY_INDEX,
-  DeleteDocumentRequest.JSON_PROPERTY_CLUSTER,
-  DeleteDocumentRequest.JSON_PROPERTY_ID,
-  DeleteDocumentRequest.JSON_PROPERTY_QUERY
-})
-@JsonTypeName("deleteDocumentRequest")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class DeleteDocumentRequest {
-  public static final String JSON_PROPERTY_INDEX = "index";
-  private String index;
-
-  public static final String JSON_PROPERTY_CLUSTER = "cluster";
-  private String cluster;
-
-  public static final String JSON_PROPERTY_ID = "id";
-  private Long id;
-
-  public static final String JSON_PROPERTY_QUERY = "query";
-  private Object query;
-
-  public DeleteDocumentRequest() { 
-  }
-
-  public DeleteDocumentRequest index(String index) {
-    this.index = index;
-    return this;
-  }
-
-   /**
-   * Index name
-   * @return index
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_INDEX)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getIndex() {
-    return index;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_INDEX)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setIndex(String index) {
-    this.index = index;
-  }
-
-
-  public DeleteDocumentRequest cluster(String cluster) {
-    this.cluster = cluster;
-    return this;
-  }
-
-   /**
-   * cluster name
-   * @return cluster
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_CLUSTER)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public String getCluster() {
-    return cluster;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_CLUSTER)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setCluster(String cluster) {
-    this.cluster = cluster;
-  }
-
-
-  public DeleteDocumentRequest id(Long id) {
-    this.id = id;
-    return this;
-  }
-
-   /**
-   * Document ID
-   * @return id
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_ID)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Long getId() {
-    return id;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_ID)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setId(Long id) {
-    this.id = id;
-  }
-
-
-  public DeleteDocumentRequest query(Object query) {
-    this.query = query;
-    return this;
-  }
-
-   /**
-   * Query tree object
-   * @return query
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_QUERY)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Object getQuery() {
-    return query;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_QUERY)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setQuery(Object query) {
-    this.query = query;
-  }
-
-
-  /**
-   * Return true if this deleteDocumentRequest object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    DeleteDocumentRequest deleteDocumentRequest = (DeleteDocumentRequest) o;
-    return Objects.equals(this.index, deleteDocumentRequest.index) &&
-        Objects.equals(this.cluster, deleteDocumentRequest.cluster) &&
-        Objects.equals(this.id, deleteDocumentRequest.id) &&
-        Objects.equals(this.query, deleteDocumentRequest.query);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(index, cluster, id, query);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class DeleteDocumentRequest {\n");
-    sb.append("    index: ").append(toIndentedString(index)).append("\n");
-    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
-    sb.append("    id: ").append(toIndentedString(id)).append("\n");
-    sb.append("    query: ").append(toIndentedString(query)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/DeleteResponse.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/DeleteResponse.java
deleted file mode 100644
index d3b657d..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/DeleteResponse.java
+++ /dev/null
@@ -1,205 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Success response
- */
-@JsonPropertyOrder({
-  DeleteResponse.JSON_PROPERTY_INDEX,
-  DeleteResponse.JSON_PROPERTY_DELETED,
-  DeleteResponse.JSON_PROPERTY_ID,
-  DeleteResponse.JSON_PROPERTY_RESULT
-})
-@JsonTypeName("deleteResponse")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class DeleteResponse {
-  public static final String JSON_PROPERTY_INDEX = "_index";
-  private String index;
-
-  public static final String JSON_PROPERTY_DELETED = "deleted";
-  private Integer deleted;
-
-  public static final String JSON_PROPERTY_ID = "_id";
-  private Long id;
-
-  public static final String JSON_PROPERTY_RESULT = "result";
-  private String result;
-
-  public DeleteResponse() { 
-  }
-
-  public DeleteResponse index(String index) {
-    this.index = index;
-    return this;
-  }
-
-   /**
-   * Get index
-   * @return index
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_INDEX)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public String getIndex() {
-    return index;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_INDEX)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setIndex(String index) {
-    this.index = index;
-  }
-
-
-  public DeleteResponse deleted(Integer deleted) {
-    this.deleted = deleted;
-    return this;
-  }
-
-   /**
-   * Get deleted
-   * @return deleted
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_DELETED)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Integer getDeleted() {
-    return deleted;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_DELETED)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setDeleted(Integer deleted) {
-    this.deleted = deleted;
-  }
-
-
-  public DeleteResponse id(Long id) {
-    this.id = id;
-    return this;
-  }
-
-   /**
-   * Get id
-   * @return id
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_ID)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Long getId() {
-    return id;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_ID)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setId(Long id) {
-    this.id = id;
-  }
-
-
-  public DeleteResponse result(String result) {
-    this.result = result;
-    return this;
-  }
-
-   /**
-   * Get result
-   * @return result
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_RESULT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public String getResult() {
-    return result;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_RESULT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setResult(String result) {
-    this.result = result;
-  }
-
-
-  /**
-   * Return true if this deleteResponse object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    DeleteResponse deleteResponse = (DeleteResponse) o;
-    return Objects.equals(this.index, deleteResponse.index) &&
-        Objects.equals(this.deleted, deleteResponse.deleted) &&
-        Objects.equals(this.id, deleteResponse.id) &&
-        Objects.equals(this.result, deleteResponse.result);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(index, deleted, id, result);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class DeleteResponse {\n");
-    sb.append("    index: ").append(toIndentedString(index)).append("\n");
-    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
-    sb.append("    id: ").append(toIndentedString(id)).append("\n");
-    sb.append("    result: ").append(toIndentedString(result)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/EqualsFilter.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/EqualsFilter.java
deleted file mode 100644
index efb0ef9..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/EqualsFilter.java
+++ /dev/null
@@ -1,143 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Equals attribute filter
- */
-@JsonPropertyOrder({
-  EqualsFilter.JSON_PROPERTY_FIELD,
-  EqualsFilter.JSON_PROPERTY_VALUE
-})
-@JsonTypeName("equalsFilter")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class EqualsFilter {
-  public static final String JSON_PROPERTY_FIELD = "field";
-  private String field;
-
-  public static final String JSON_PROPERTY_VALUE = "value";
-  private Object value;
-
-  public EqualsFilter() { 
-  }
-
-  public EqualsFilter field(String field) {
-    this.field = field;
-    return this;
-  }
-
-   /**
-   * Get field
-   * @return field
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_FIELD)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getField() {
-    return field;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FIELD)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setField(String field) {
-    this.field = field;
-  }
-
-
-  public EqualsFilter value(Object value) {
-    this.value = value;
-    return this;
-  }
-
-   /**
-   * Get value
-   * @return value
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_VALUE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public Object getValue() {
-    return value;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_VALUE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setValue(Object value) {
-    this.value = value;
-  }
-
-
-  /**
-   * Return true if this equalsFilter object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    EqualsFilter equalsFilter = (EqualsFilter) o;
-    return Objects.equals(this.field, equalsFilter.field) &&
-        Objects.equals(this.value, equalsFilter.value);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(field, value);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class EqualsFilter {\n");
-    sb.append("    field: ").append(toIndentedString(field)).append("\n");
-    sb.append("    value: ").append(toIndentedString(value)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/ErrorResponse.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/ErrorResponse.java
deleted file mode 100644
index 7e22b3f..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/ErrorResponse.java
+++ /dev/null
@@ -1,153 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.Map;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Error response
- */
-@JsonPropertyOrder({
-  ErrorResponse.JSON_PROPERTY_ERROR,
-  ErrorResponse.JSON_PROPERTY_STATUS
-})
-@JsonTypeName("errorResponse")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class ErrorResponse {
-  public static final String JSON_PROPERTY_ERROR = "error";
-  private Map<String, Object> error = new HashMap<>();
-
-  public static final String JSON_PROPERTY_STATUS = "status";
-  private Integer status;
-
-  public ErrorResponse() { 
-  }
-
-  public ErrorResponse error(Map<String, Object> error) {
-    this.error = error;
-    return this;
-  }
-
-  public ErrorResponse putErrorItem(String key, Object errorItem) {
-    if (this.error == null) {
-      this.error = new HashMap<>();
-    }
-    this.error.put(key, errorItem);
-    return this;
-  }
-
-   /**
-   * Get error
-   * @return error
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_ERROR)
-  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.ALWAYS)
-
-  public Map<String, Object> getError() {
-    return error;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_ERROR)
-  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.ALWAYS)
-  public void setError(Map<String, Object> error) {
-    this.error = error;
-  }
-
-
-  public ErrorResponse status(Integer status) {
-    this.status = status;
-    return this;
-  }
-
-   /**
-   * Get status
-   * @return status
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_STATUS)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public Integer getStatus() {
-    return status;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_STATUS)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setStatus(Integer status) {
-    this.status = status;
-  }
-
-
-  /**
-   * Return true if this errorResponse object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    ErrorResponse errorResponse = (ErrorResponse) o;
-    return Objects.equals(this.error, errorResponse.error) &&
-        Objects.equals(this.status, errorResponse.status);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(error, status);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class ErrorResponse {\n");
-    sb.append("    error: ").append(toIndentedString(error)).append("\n");
-    sb.append("    status: ").append(toIndentedString(status)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/Facet.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/Facet.java
deleted file mode 100644
index d2a33ab..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/Facet.java
+++ /dev/null
@@ -1,174 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Query FACET expression
- */
-@JsonPropertyOrder({
-  Facet.JSON_PROPERTY_ATTR,
-  Facet.JSON_PROPERTY_ALIAS,
-  Facet.JSON_PROPERTY_LIMIT
-})
-@JsonTypeName("facet")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class Facet {
-  public static final String JSON_PROPERTY_ATTR = "attr";
-  private String attr;
-
-  public static final String JSON_PROPERTY_ALIAS = "alias";
-  private String alias;
-
-  public static final String JSON_PROPERTY_LIMIT = "limit";
-  private Integer limit;
-
-  public Facet() { 
-  }
-
-  public Facet attr(String attr) {
-    this.attr = attr;
-    return this;
-  }
-
-   /**
-   * The name of an attribute to facet
-   * @return attr
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_ATTR)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getAttr() {
-    return attr;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_ATTR)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setAttr(String attr) {
-    this.attr = attr;
-  }
-
-
-  public Facet alias(String alias) {
-    this.alias = alias;
-    return this;
-  }
-
-   /**
-   * Facet alias
-   * @return alias
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_ALIAS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public String getAlias() {
-    return alias;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_ALIAS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setAlias(String alias) {
-    this.alias = alias;
-  }
-
-
-  public Facet limit(Integer limit) {
-    this.limit = limit;
-    return this;
-  }
-
-   /**
-   * The number of facet values to return
-   * @return limit
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_LIMIT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Integer getLimit() {
-    return limit;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_LIMIT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setLimit(Integer limit) {
-    this.limit = limit;
-  }
-
-
-  /**
-   * Return true if this facet object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    Facet facet = (Facet) o;
-    return Objects.equals(this.attr, facet.attr) &&
-        Objects.equals(this.alias, facet.alias) &&
-        Objects.equals(this.limit, facet.limit);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(attr, alias, limit);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class Facet {\n");
-    sb.append("    attr: ").append(toIndentedString(attr)).append("\n");
-    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
-    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/FilterBoolean.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/FilterBoolean.java
deleted file mode 100644
index 9147d5b..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/FilterBoolean.java
+++ /dev/null
@@ -1,174 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Query filter
- */
-@JsonPropertyOrder({
-  FilterBoolean.JSON_PROPERTY_FILTER_FIELD,
-  FilterBoolean.JSON_PROPERTY_OPERATION,
-  FilterBoolean.JSON_PROPERTY_FILTER_VALUE
-})
-@JsonTypeName("filterBoolean")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class FilterBoolean {
-  public static final String JSON_PROPERTY_FILTER_FIELD = "filter_field";
-  private String filterField;
-
-  public static final String JSON_PROPERTY_OPERATION = "operation";
-  private String operation;
-
-  public static final String JSON_PROPERTY_FILTER_VALUE = "filter_value";
-  private Boolean filterValue;
-
-  public FilterBoolean() { 
-  }
-
-  public FilterBoolean filterField(String filterField) {
-    this.filterField = filterField;
-    return this;
-  }
-
-   /**
-   * Get filterField
-   * @return filterField
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_FILTER_FIELD)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getFilterField() {
-    return filterField;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FILTER_FIELD)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setFilterField(String filterField) {
-    this.filterField = filterField;
-  }
-
-
-  public FilterBoolean operation(String operation) {
-    this.operation = operation;
-    return this;
-  }
-
-   /**
-   * Get operation
-   * @return operation
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_OPERATION)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getOperation() {
-    return operation;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_OPERATION)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setOperation(String operation) {
-    this.operation = operation;
-  }
-
-
-  public FilterBoolean filterValue(Boolean filterValue) {
-    this.filterValue = filterValue;
-    return this;
-  }
-
-   /**
-   * Get filterValue
-   * @return filterValue
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_FILTER_VALUE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public Boolean getFilterValue() {
-    return filterValue;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FILTER_VALUE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setFilterValue(Boolean filterValue) {
-    this.filterValue = filterValue;
-  }
-
-
-  /**
-   * Return true if this filterBoolean object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    FilterBoolean filterBoolean = (FilterBoolean) o;
-    return Objects.equals(this.filterField, filterBoolean.filterField) &&
-        Objects.equals(this.operation, filterBoolean.operation) &&
-        Objects.equals(this.filterValue, filterBoolean.filterValue);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(filterField, operation, filterValue);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class FilterBoolean {\n");
-    sb.append("    filterField: ").append(toIndentedString(filterField)).append("\n");
-    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
-    sb.append("    filterValue: ").append(toIndentedString(filterValue)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/FilterNumber.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/FilterNumber.java
deleted file mode 100644
index 5dcebf1..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/FilterNumber.java
+++ /dev/null
@@ -1,175 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.math.BigDecimal;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Query filter
- */
-@JsonPropertyOrder({
-  FilterNumber.JSON_PROPERTY_FILTER_FIELD,
-  FilterNumber.JSON_PROPERTY_OPERATION,
-  FilterNumber.JSON_PROPERTY_FILTER_VALUE
-})
-@JsonTypeName("filterNumber")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class FilterNumber {
-  public static final String JSON_PROPERTY_FILTER_FIELD = "filter_field";
-  private String filterField;
-
-  public static final String JSON_PROPERTY_OPERATION = "operation";
-  private String operation;
-
-  public static final String JSON_PROPERTY_FILTER_VALUE = "filter_value";
-  private BigDecimal filterValue;
-
-  public FilterNumber() { 
-  }
-
-  public FilterNumber filterField(String filterField) {
-    this.filterField = filterField;
-    return this;
-  }
-
-   /**
-   * Get filterField
-   * @return filterField
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_FILTER_FIELD)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getFilterField() {
-    return filterField;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FILTER_FIELD)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setFilterField(String filterField) {
-    this.filterField = filterField;
-  }
-
-
-  public FilterNumber operation(String operation) {
-    this.operation = operation;
-    return this;
-  }
-
-   /**
-   * Get operation
-   * @return operation
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_OPERATION)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getOperation() {
-    return operation;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_OPERATION)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setOperation(String operation) {
-    this.operation = operation;
-  }
-
-
-  public FilterNumber filterValue(BigDecimal filterValue) {
-    this.filterValue = filterValue;
-    return this;
-  }
-
-   /**
-   * Get filterValue
-   * @return filterValue
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_FILTER_VALUE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public BigDecimal getFilterValue() {
-    return filterValue;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FILTER_VALUE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setFilterValue(BigDecimal filterValue) {
-    this.filterValue = filterValue;
-  }
-
-
-  /**
-   * Return true if this filterNumber object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    FilterNumber filterNumber = (FilterNumber) o;
-    return Objects.equals(this.filterField, filterNumber.filterField) &&
-        Objects.equals(this.operation, filterNumber.operation) &&
-        Objects.equals(this.filterValue, filterNumber.filterValue);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(filterField, operation, filterValue);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class FilterNumber {\n");
-    sb.append("    filterField: ").append(toIndentedString(filterField)).append("\n");
-    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
-    sb.append("    filterValue: ").append(toIndentedString(filterValue)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/FilterString.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/FilterString.java
deleted file mode 100644
index 2cb4344..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/FilterString.java
+++ /dev/null
@@ -1,174 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Query filter
- */
-@JsonPropertyOrder({
-  FilterString.JSON_PROPERTY_FILTER_FIELD,
-  FilterString.JSON_PROPERTY_OPERATION,
-  FilterString.JSON_PROPERTY_FILTER_VALUE
-})
-@JsonTypeName("filterString")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class FilterString {
-  public static final String JSON_PROPERTY_FILTER_FIELD = "filter_field";
-  private String filterField;
-
-  public static final String JSON_PROPERTY_OPERATION = "operation";
-  private String operation;
-
-  public static final String JSON_PROPERTY_FILTER_VALUE = "filter_value";
-  private String filterValue;
-
-  public FilterString() { 
-  }
-
-  public FilterString filterField(String filterField) {
-    this.filterField = filterField;
-    return this;
-  }
-
-   /**
-   * Get filterField
-   * @return filterField
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_FILTER_FIELD)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getFilterField() {
-    return filterField;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FILTER_FIELD)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setFilterField(String filterField) {
-    this.filterField = filterField;
-  }
-
-
-  public FilterString operation(String operation) {
-    this.operation = operation;
-    return this;
-  }
-
-   /**
-   * Get operation
-   * @return operation
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_OPERATION)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getOperation() {
-    return operation;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_OPERATION)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setOperation(String operation) {
-    this.operation = operation;
-  }
-
-
-  public FilterString filterValue(String filterValue) {
-    this.filterValue = filterValue;
-    return this;
-  }
-
-   /**
-   * Get filterValue
-   * @return filterValue
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_FILTER_VALUE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getFilterValue() {
-    return filterValue;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FILTER_VALUE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setFilterValue(String filterValue) {
-    this.filterValue = filterValue;
-  }
-
-
-  /**
-   * Return true if this filterString object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    FilterString filterString = (FilterString) o;
-    return Objects.equals(this.filterField, filterString.filterField) &&
-        Objects.equals(this.operation, filterString.operation) &&
-        Objects.equals(this.filterValue, filterString.filterValue);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(filterField, operation, filterValue);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class FilterString {\n");
-    sb.append("    filterField: ").append(toIndentedString(filterField)).append("\n");
-    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
-    sb.append("    filterValue: ").append(toIndentedString(filterValue)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/GeoDistanceFilter.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/GeoDistanceFilter.java
deleted file mode 100644
index 11cc4d1..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/GeoDistanceFilter.java
+++ /dev/null
@@ -1,241 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import com.manticoresearch.client.model.GeoDistanceFilterLocationAnchor;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Geo distance attribute filter
- */
-@JsonPropertyOrder({
-  GeoDistanceFilter.JSON_PROPERTY_LOCATION_ANCHOR,
-  GeoDistanceFilter.JSON_PROPERTY_LOCATION_SOURCE,
-  GeoDistanceFilter.JSON_PROPERTY_DISTANCE_TYPE,
-  GeoDistanceFilter.JSON_PROPERTY_DISTANCE
-})
-@JsonTypeName("geoDistanceFilter")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class GeoDistanceFilter {
-  public static final String JSON_PROPERTY_LOCATION_ANCHOR = "location_anchor";
-  private GeoDistanceFilterLocationAnchor locationAnchor;
-
-  public static final String JSON_PROPERTY_LOCATION_SOURCE = "location_source";
-  private String locationSource;
-
-  /**
-   * Gets or Sets distanceType
-   */
-  public enum DistanceTypeEnum {
-    ADAPTIVE("adaptive"),
-    
-    HAVERSINE("haversine");
-
-    private String value;
-
-    DistanceTypeEnum(String value) {
-      this.value = value;
-    }
-
-    @JsonValue
-    public String getValue() {
-      return value;
-    }
-
-    @Override
-    public String toString() {
-      return String.valueOf(value);
-    }
-
-    @JsonCreator
-    public static DistanceTypeEnum fromValue(String value) {
-      for (DistanceTypeEnum b : DistanceTypeEnum.values()) {
-        if (b.value.equals(value)) {
-          return b;
-        }
-      }
-      throw new IllegalArgumentException("Unexpected value '" + value + "'");
-    }
-  }
-
-  public static final String JSON_PROPERTY_DISTANCE_TYPE = "distance_type";
-  private DistanceTypeEnum distanceType;
-
-  public static final String JSON_PROPERTY_DISTANCE = "distance";
-  private String distance;
-
-  public GeoDistanceFilter() { 
-  }
-
-  public GeoDistanceFilter locationAnchor(GeoDistanceFilterLocationAnchor locationAnchor) {
-    this.locationAnchor = locationAnchor;
-    return this;
-  }
-
-   /**
-   * Get locationAnchor
-   * @return locationAnchor
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_LOCATION_ANCHOR)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public GeoDistanceFilterLocationAnchor getLocationAnchor() {
-    return locationAnchor;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_LOCATION_ANCHOR)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setLocationAnchor(GeoDistanceFilterLocationAnchor locationAnchor) {
-    this.locationAnchor = locationAnchor;
-  }
-
-
-  public GeoDistanceFilter locationSource(String locationSource) {
-    this.locationSource = locationSource;
-    return this;
-  }
-
-   /**
-   * Attribute containing latitude and longitude data
-   * @return locationSource
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_LOCATION_SOURCE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public String getLocationSource() {
-    return locationSource;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_LOCATION_SOURCE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setLocationSource(String locationSource) {
-    this.locationSource = locationSource;
-  }
-
-
-  public GeoDistanceFilter distanceType(DistanceTypeEnum distanceType) {
-    this.distanceType = distanceType;
-    return this;
-  }
-
-   /**
-   * Get distanceType
-   * @return distanceType
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_DISTANCE_TYPE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public DistanceTypeEnum getDistanceType() {
-    return distanceType;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_DISTANCE_TYPE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setDistanceType(DistanceTypeEnum distanceType) {
-    this.distanceType = distanceType;
-  }
-
-
-  public GeoDistanceFilter distance(String distance) {
-    this.distance = distance;
-    return this;
-  }
-
-   /**
-   * Get distance
-   * @return distance
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_DISTANCE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public String getDistance() {
-    return distance;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_DISTANCE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setDistance(String distance) {
-    this.distance = distance;
-  }
-
-
-  /**
-   * Return true if this geoDistanceFilter object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    GeoDistanceFilter geoDistanceFilter = (GeoDistanceFilter) o;
-    return Objects.equals(this.locationAnchor, geoDistanceFilter.locationAnchor) &&
-        Objects.equals(this.locationSource, geoDistanceFilter.locationSource) &&
-        Objects.equals(this.distanceType, geoDistanceFilter.distanceType) &&
-        Objects.equals(this.distance, geoDistanceFilter.distance);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(locationAnchor, locationSource, distanceType, distance);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class GeoDistanceFilter {\n");
-    sb.append("    locationAnchor: ").append(toIndentedString(locationAnchor)).append("\n");
-    sb.append("    locationSource: ").append(toIndentedString(locationSource)).append("\n");
-    sb.append("    distanceType: ").append(toIndentedString(distanceType)).append("\n");
-    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/GeoDistanceFilterLocationAnchor.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/GeoDistanceFilterLocationAnchor.java
deleted file mode 100644
index 5314570..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/GeoDistanceFilterLocationAnchor.java
+++ /dev/null
@@ -1,144 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.math.BigDecimal;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Geo pin point object
- */
-@JsonPropertyOrder({
-  GeoDistanceFilterLocationAnchor.JSON_PROPERTY_LAT,
-  GeoDistanceFilterLocationAnchor.JSON_PROPERTY_LON
-})
-@JsonTypeName("geoDistanceFilter_location_anchor")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class GeoDistanceFilterLocationAnchor {
-  public static final String JSON_PROPERTY_LAT = "lat";
-  private BigDecimal lat;
-
-  public static final String JSON_PROPERTY_LON = "lon";
-  private BigDecimal lon;
-
-  public GeoDistanceFilterLocationAnchor() { 
-  }
-
-  public GeoDistanceFilterLocationAnchor lat(BigDecimal lat) {
-    this.lat = lat;
-    return this;
-  }
-
-   /**
-   * Geo latitude of pin point in degrees
-   * @return lat
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_LAT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public BigDecimal getLat() {
-    return lat;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_LAT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setLat(BigDecimal lat) {
-    this.lat = lat;
-  }
-
-
-  public GeoDistanceFilterLocationAnchor lon(BigDecimal lon) {
-    this.lon = lon;
-    return this;
-  }
-
-   /**
-   * Geo longitude pf pin point in degrees
-   * @return lon
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_LON)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public BigDecimal getLon() {
-    return lon;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_LON)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setLon(BigDecimal lon) {
-    this.lon = lon;
-  }
-
-
-  /**
-   * Return true if this geoDistanceFilter_location_anchor object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    GeoDistanceFilterLocationAnchor geoDistanceFilterLocationAnchor = (GeoDistanceFilterLocationAnchor) o;
-    return Objects.equals(this.lat, geoDistanceFilterLocationAnchor.lat) &&
-        Objects.equals(this.lon, geoDistanceFilterLocationAnchor.lon);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(lat, lon);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class GeoDistanceFilterLocationAnchor {\n");
-    sb.append("    lat: ").append(toIndentedString(lat)).append("\n");
-    sb.append("    lon: ").append(toIndentedString(lon)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/Highlight.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/Highlight.java
deleted file mode 100644
index 3065185..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/Highlight.java
+++ /dev/null
@@ -1,965 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import com.manticoresearch.client.model.HighlightField;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-import org.openapitools.jackson.nullable.JsonNullable;
-import com.fasterxml.jackson.annotation.JsonIgnore;
-import org.openapitools.jackson.nullable.JsonNullable;
-import java.util.NoSuchElementException;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Query HIGHLIGHT expression
- */
-@JsonPropertyOrder({
-  Highlight.JSON_PROPERTY_FIELDNAMES,
-  Highlight.JSON_PROPERTY_FIELDS,
-  Highlight.JSON_PROPERTY_ENCODER,
-  Highlight.JSON_PROPERTY_HIGHLIGHT_QUERY,
-  Highlight.JSON_PROPERTY_PRE_TAGS,
-  Highlight.JSON_PROPERTY_POST_TAGS,
-  Highlight.JSON_PROPERTY_NO_MATCH_SIZE,
-  Highlight.JSON_PROPERTY_FRAGMENT_SIZE,
-  Highlight.JSON_PROPERTY_NUMBER_OF_FRAGMENTS,
-  Highlight.JSON_PROPERTY_LIMIT,
-  Highlight.JSON_PROPERTY_LIMIT_WORDS,
-  Highlight.JSON_PROPERTY_LIMIT_SNIPPETS,
-  Highlight.JSON_PROPERTY_LIMITS_PER_FIELD,
-  Highlight.JSON_PROPERTY_USE_BOUNDARIES,
-  Highlight.JSON_PROPERTY_FORCE_ALL_WORDS,
-  Highlight.JSON_PROPERTY_ALLOW_EMPTY,
-  Highlight.JSON_PROPERTY_EMIT_ZONES,
-  Highlight.JSON_PROPERTY_FORCE_SNIPPETS,
-  Highlight.JSON_PROPERTY_AROUND,
-  Highlight.JSON_PROPERTY_START_SNIPPET_ID,
-  Highlight.JSON_PROPERTY_HTML_STRIP_MODE,
-  Highlight.JSON_PROPERTY_SNIPPET_BOUNDARY
-})
-@JsonTypeName("highlight")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class Highlight {
-  public static final String JSON_PROPERTY_FIELDNAMES = "fieldnames";
-  private List<String> fieldnames;
-
-  public static final String JSON_PROPERTY_FIELDS = "fields";
-  private List<HighlightField> fields;
-
-  /**
-   * Gets or Sets encoder
-   */
-  public enum EncoderEnum {
-    DEFAULT("default"),
-    
-    HTML("html");
-
-    private String value;
-
-    EncoderEnum(String value) {
-      this.value = value;
-    }
-
-    @JsonValue
-    public String getValue() {
-      return value;
-    }
-
-    @Override
-    public String toString() {
-      return String.valueOf(value);
-    }
-
-    @JsonCreator
-    public static EncoderEnum fromValue(String value) {
-      for (EncoderEnum b : EncoderEnum.values()) {
-        if (b.value.equals(value)) {
-          return b;
-        }
-      }
-      throw new IllegalArgumentException("Unexpected value '" + value + "'");
-    }
-  }
-
-  public static final String JSON_PROPERTY_ENCODER = "encoder";
-  private EncoderEnum encoder;
-
-  public static final String JSON_PROPERTY_HIGHLIGHT_QUERY = "highlight_query";
-  private JsonNullable<Map<String, Object>> highlightQuery = JsonNullable.<Map<String, Object>>undefined();
-
-  public static final String JSON_PROPERTY_PRE_TAGS = "pre_tags";
-  private String preTags = "<strong>";
-
-  public static final String JSON_PROPERTY_POST_TAGS = "post_tags";
-  private String postTags = "</strong>";
-
-  /**
-   * Gets or Sets noMatchSize
-   */
-  public enum NoMatchSizeEnum {
-    NUMBER_0(0),
-    
-    NUMBER_1(1);
-
-    private Integer value;
-
-    NoMatchSizeEnum(Integer value) {
-      this.value = value;
-    }
-
-    @JsonValue
-    public Integer getValue() {
-      return value;
-    }
-
-    @Override
-    public String toString() {
-      return String.valueOf(value);
-    }
-
-    @JsonCreator
-    public static NoMatchSizeEnum fromValue(Integer value) {
-      for (NoMatchSizeEnum b : NoMatchSizeEnum.values()) {
-        if (b.value.equals(value)) {
-          return b;
-        }
-      }
-      throw new IllegalArgumentException("Unexpected value '" + value + "'");
-    }
-  }
-
-  public static final String JSON_PROPERTY_NO_MATCH_SIZE = "no_match_size";
-  private NoMatchSizeEnum noMatchSize;
-
-  public static final String JSON_PROPERTY_FRAGMENT_SIZE = "fragment_size";
-  private Integer fragmentSize = 256;
-
-  public static final String JSON_PROPERTY_NUMBER_OF_FRAGMENTS = "number_of_fragments";
-  private Integer numberOfFragments = 0;
-
-  public static final String JSON_PROPERTY_LIMIT = "limit";
-  private Integer limit = 256;
-
-  public static final String JSON_PROPERTY_LIMIT_WORDS = "limit_words";
-  private Integer limitWords = 0;
-
-  public static final String JSON_PROPERTY_LIMIT_SNIPPETS = "limit_snippets";
-  private Integer limitSnippets = 0;
-
-  public static final String JSON_PROPERTY_LIMITS_PER_FIELD = "limits_per_field";
-  private Boolean limitsPerField = false;
-
-  public static final String JSON_PROPERTY_USE_BOUNDARIES = "use_boundaries";
-  private Boolean useBoundaries = false;
-
-  public static final String JSON_PROPERTY_FORCE_ALL_WORDS = "force_all_words";
-  private Boolean forceAllWords = false;
-
-  public static final String JSON_PROPERTY_ALLOW_EMPTY = "allow_empty";
-  private Boolean allowEmpty = false;
-
-  public static final String JSON_PROPERTY_EMIT_ZONES = "emit_zones";
-  private Boolean emitZones = false;
-
-  public static final String JSON_PROPERTY_FORCE_SNIPPETS = "force_snippets";
-  private Boolean forceSnippets = false;
-
-  public static final String JSON_PROPERTY_AROUND = "around";
-  private Integer around = 5;
-
-  public static final String JSON_PROPERTY_START_SNIPPET_ID = "start_snippet_id";
-  private Integer startSnippetId = 1;
-
-  /**
-   * Gets or Sets htmlStripMode
-   */
-  public enum HtmlStripModeEnum {
-    NONE("none"),
-    
-    STRIP("strip"),
-    
-    INDEX("index"),
-    
-    RETAIN("retain");
-
-    private String value;
-
-    HtmlStripModeEnum(String value) {
-      this.value = value;
-    }
-
-    @JsonValue
-    public String getValue() {
-      return value;
-    }
-
-    @Override
-    public String toString() {
-      return String.valueOf(value);
-    }
-
-    @JsonCreator
-    public static HtmlStripModeEnum fromValue(String value) {
-      for (HtmlStripModeEnum b : HtmlStripModeEnum.values()) {
-        if (b.value.equals(value)) {
-          return b;
-        }
-      }
-      throw new IllegalArgumentException("Unexpected value '" + value + "'");
-    }
-  }
-
-  public static final String JSON_PROPERTY_HTML_STRIP_MODE = "html_strip_mode";
-  private HtmlStripModeEnum htmlStripMode;
-
-  /**
-   * Gets or Sets snippetBoundary
-   */
-  public enum SnippetBoundaryEnum {
-    SENTENCE("sentence"),
-    
-    PARAGRAPH("paragraph"),
-    
-    ZONE("zone");
-
-    private String value;
-
-    SnippetBoundaryEnum(String value) {
-      this.value = value;
-    }
-
-    @JsonValue
-    public String getValue() {
-      return value;
-    }
-
-    @Override
-    public String toString() {
-      return String.valueOf(value);
-    }
-
-    @JsonCreator
-    public static SnippetBoundaryEnum fromValue(String value) {
-      for (SnippetBoundaryEnum b : SnippetBoundaryEnum.values()) {
-        if (b.value.equals(value)) {
-          return b;
-        }
-      }
-      throw new IllegalArgumentException("Unexpected value '" + value + "'");
-    }
-  }
-
-  public static final String JSON_PROPERTY_SNIPPET_BOUNDARY = "snippet_boundary";
-  private SnippetBoundaryEnum snippetBoundary;
-
-  public Highlight() { 
-  }
-
-  public Highlight fieldnames(List<String> fieldnames) {
-    this.fieldnames = fieldnames;
-    return this;
-  }
-
-  public Highlight addFieldnamesItem(String fieldnamesItem) {
-    if (this.fieldnames == null) {
-      this.fieldnames = new ArrayList<>();
-    }
-    this.fieldnames.add(fieldnamesItem);
-    return this;
-  }
-
-   /**
-   * Get fieldnames
-   * @return fieldnames
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_FIELDNAMES)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public List<String> getFieldnames() {
-    return fieldnames;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FIELDNAMES)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setFieldnames(List<String> fieldnames) {
-    this.fieldnames = fieldnames;
-  }
-
-
-  public Highlight fields(List<HighlightField> fields) {
-    this.fields = fields;
-    return this;
-  }
-
-  public Highlight addFieldsItem(HighlightField fieldsItem) {
-    if (this.fields == null) {
-      this.fields = new ArrayList<>();
-    }
-    this.fields.add(fieldsItem);
-    return this;
-  }
-
-   /**
-   * Get fields
-   * @return fields
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_FIELDS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public List<HighlightField> getFields() {
-    return fields;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FIELDS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setFields(List<HighlightField> fields) {
-    this.fields = fields;
-  }
-
-
-  public Highlight encoder(EncoderEnum encoder) {
-    this.encoder = encoder;
-    return this;
-  }
-
-   /**
-   * Get encoder
-   * @return encoder
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_ENCODER)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public EncoderEnum getEncoder() {
-    return encoder;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_ENCODER)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setEncoder(EncoderEnum encoder) {
-    this.encoder = encoder;
-  }
-
-
-  public Highlight highlightQuery(Map<String, Object> highlightQuery) {
-    this.highlightQuery = JsonNullable.<Map<String, Object>>of(highlightQuery);
-    return this;
-  }
-
-  public Highlight putHighlightQueryItem(String key, Object highlightQueryItem) {
-    if (this.highlightQuery == null || !this.highlightQuery.isPresent()) {
-      this.highlightQuery = JsonNullable.<Map<String, Object>>of(new HashMap<>());
-    }
-    try {
-      this.highlightQuery.get().put(key, highlightQueryItem);
-    } catch (java.util.NoSuchElementException e) {
-      // this can never happen, as we make sure above that the value is present
-    }
-    return this;
-  }
-
-   /**
-   * Get highlightQuery
-   * @return highlightQuery
-  **/
-  @jakarta.annotation.Nullable
-  @JsonIgnore
-
-  public Map<String, Object> getHighlightQuery() {
-        return highlightQuery.orElse(null);
-  }
-
-  @JsonProperty(JSON_PROPERTY_HIGHLIGHT_QUERY)
-  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
-
-  public JsonNullable<Map<String, Object>> getHighlightQuery_JsonNullable() {
-    return highlightQuery;
-  }
-  
-  @JsonProperty(JSON_PROPERTY_HIGHLIGHT_QUERY)
-  public void setHighlightQuery_JsonNullable(JsonNullable<Map<String, Object>> highlightQuery) {
-    this.highlightQuery = highlightQuery;
-  }
-
-  public void setHighlightQuery(Map<String, Object> highlightQuery) {
-    this.highlightQuery = JsonNullable.<Map<String, Object>>of(highlightQuery);
-  }
-
-
-  public Highlight preTags(String preTags) {
-    this.preTags = preTags;
-    return this;
-  }
-
-   /**
-   * Get preTags
-   * @return preTags
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_PRE_TAGS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public String getPreTags() {
-    return preTags;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_PRE_TAGS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setPreTags(String preTags) {
-    this.preTags = preTags;
-  }
-
-
-  public Highlight postTags(String postTags) {
-    this.postTags = postTags;
-    return this;
-  }
-
-   /**
-   * Get postTags
-   * @return postTags
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_POST_TAGS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public String getPostTags() {
-    return postTags;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_POST_TAGS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setPostTags(String postTags) {
-    this.postTags = postTags;
-  }
-
-
-  public Highlight noMatchSize(NoMatchSizeEnum noMatchSize) {
-    this.noMatchSize = noMatchSize;
-    return this;
-  }
-
-   /**
-   * Get noMatchSize
-   * @return noMatchSize
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_NO_MATCH_SIZE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public NoMatchSizeEnum getNoMatchSize() {
-    return noMatchSize;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_NO_MATCH_SIZE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setNoMatchSize(NoMatchSizeEnum noMatchSize) {
-    this.noMatchSize = noMatchSize;
-  }
-
-
-  public Highlight fragmentSize(Integer fragmentSize) {
-    this.fragmentSize = fragmentSize;
-    return this;
-  }
-
-   /**
-   * Get fragmentSize
-   * @return fragmentSize
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_FRAGMENT_SIZE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Integer getFragmentSize() {
-    return fragmentSize;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FRAGMENT_SIZE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setFragmentSize(Integer fragmentSize) {
-    this.fragmentSize = fragmentSize;
-  }
-
-
-  public Highlight numberOfFragments(Integer numberOfFragments) {
-    this.numberOfFragments = numberOfFragments;
-    return this;
-  }
-
-   /**
-   * Get numberOfFragments
-   * @return numberOfFragments
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_NUMBER_OF_FRAGMENTS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Integer getNumberOfFragments() {
-    return numberOfFragments;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_NUMBER_OF_FRAGMENTS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setNumberOfFragments(Integer numberOfFragments) {
-    this.numberOfFragments = numberOfFragments;
-  }
-
-
-  public Highlight limit(Integer limit) {
-    this.limit = limit;
-    return this;
-  }
-
-   /**
-   * Get limit
-   * @return limit
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_LIMIT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Integer getLimit() {
-    return limit;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_LIMIT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setLimit(Integer limit) {
-    this.limit = limit;
-  }
-
-
-  public Highlight limitWords(Integer limitWords) {
-    this.limitWords = limitWords;
-    return this;
-  }
-
-   /**
-   * Get limitWords
-   * @return limitWords
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_LIMIT_WORDS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Integer getLimitWords() {
-    return limitWords;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_LIMIT_WORDS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setLimitWords(Integer limitWords) {
-    this.limitWords = limitWords;
-  }
-
-
-  public Highlight limitSnippets(Integer limitSnippets) {
-    this.limitSnippets = limitSnippets;
-    return this;
-  }
-
-   /**
-   * Get limitSnippets
-   * @return limitSnippets
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_LIMIT_SNIPPETS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Integer getLimitSnippets() {
-    return limitSnippets;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_LIMIT_SNIPPETS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setLimitSnippets(Integer limitSnippets) {
-    this.limitSnippets = limitSnippets;
-  }
-
-
-  public Highlight limitsPerField(Boolean limitsPerField) {
-    this.limitsPerField = limitsPerField;
-    return this;
-  }
-
-   /**
-   * Get limitsPerField
-   * @return limitsPerField
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_LIMITS_PER_FIELD)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Boolean getLimitsPerField() {
-    return limitsPerField;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_LIMITS_PER_FIELD)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setLimitsPerField(Boolean limitsPerField) {
-    this.limitsPerField = limitsPerField;
-  }
-
-
-  public Highlight useBoundaries(Boolean useBoundaries) {
-    this.useBoundaries = useBoundaries;
-    return this;
-  }
-
-   /**
-   * Get useBoundaries
-   * @return useBoundaries
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_USE_BOUNDARIES)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Boolean getUseBoundaries() {
-    return useBoundaries;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_USE_BOUNDARIES)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setUseBoundaries(Boolean useBoundaries) {
-    this.useBoundaries = useBoundaries;
-  }
-
-
-  public Highlight forceAllWords(Boolean forceAllWords) {
-    this.forceAllWords = forceAllWords;
-    return this;
-  }
-
-   /**
-   * Get forceAllWords
-   * @return forceAllWords
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_FORCE_ALL_WORDS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Boolean getForceAllWords() {
-    return forceAllWords;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FORCE_ALL_WORDS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setForceAllWords(Boolean forceAllWords) {
-    this.forceAllWords = forceAllWords;
-  }
-
-
-  public Highlight allowEmpty(Boolean allowEmpty) {
-    this.allowEmpty = allowEmpty;
-    return this;
-  }
-
-   /**
-   * Get allowEmpty
-   * @return allowEmpty
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_ALLOW_EMPTY)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Boolean getAllowEmpty() {
-    return allowEmpty;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_ALLOW_EMPTY)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setAllowEmpty(Boolean allowEmpty) {
-    this.allowEmpty = allowEmpty;
-  }
-
-
-  public Highlight emitZones(Boolean emitZones) {
-    this.emitZones = emitZones;
-    return this;
-  }
-
-   /**
-   * Get emitZones
-   * @return emitZones
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_EMIT_ZONES)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Boolean getEmitZones() {
-    return emitZones;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_EMIT_ZONES)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setEmitZones(Boolean emitZones) {
-    this.emitZones = emitZones;
-  }
-
-
-  public Highlight forceSnippets(Boolean forceSnippets) {
-    this.forceSnippets = forceSnippets;
-    return this;
-  }
-
-   /**
-   * Get forceSnippets
-   * @return forceSnippets
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_FORCE_SNIPPETS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Boolean getForceSnippets() {
-    return forceSnippets;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FORCE_SNIPPETS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setForceSnippets(Boolean forceSnippets) {
-    this.forceSnippets = forceSnippets;
-  }
-
-
-  public Highlight around(Integer around) {
-    this.around = around;
-    return this;
-  }
-
-   /**
-   * Get around
-   * @return around
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_AROUND)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Integer getAround() {
-    return around;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_AROUND)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setAround(Integer around) {
-    this.around = around;
-  }
-
-
-  public Highlight startSnippetId(Integer startSnippetId) {
-    this.startSnippetId = startSnippetId;
-    return this;
-  }
-
-   /**
-   * Get startSnippetId
-   * @return startSnippetId
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_START_SNIPPET_ID)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Integer getStartSnippetId() {
-    return startSnippetId;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_START_SNIPPET_ID)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setStartSnippetId(Integer startSnippetId) {
-    this.startSnippetId = startSnippetId;
-  }
-
-
-  public Highlight htmlStripMode(HtmlStripModeEnum htmlStripMode) {
-    this.htmlStripMode = htmlStripMode;
-    return this;
-  }
-
-   /**
-   * Get htmlStripMode
-   * @return htmlStripMode
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_HTML_STRIP_MODE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public HtmlStripModeEnum getHtmlStripMode() {
-    return htmlStripMode;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_HTML_STRIP_MODE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setHtmlStripMode(HtmlStripModeEnum htmlStripMode) {
-    this.htmlStripMode = htmlStripMode;
-  }
-
-
-  public Highlight snippetBoundary(SnippetBoundaryEnum snippetBoundary) {
-    this.snippetBoundary = snippetBoundary;
-    return this;
-  }
-
-   /**
-   * Get snippetBoundary
-   * @return snippetBoundary
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_SNIPPET_BOUNDARY)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public SnippetBoundaryEnum getSnippetBoundary() {
-    return snippetBoundary;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_SNIPPET_BOUNDARY)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setSnippetBoundary(SnippetBoundaryEnum snippetBoundary) {
-    this.snippetBoundary = snippetBoundary;
-  }
-
-
-  /**
-   * Return true if this highlight object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    Highlight highlight = (Highlight) o;
-    return Objects.equals(this.fieldnames, highlight.fieldnames) &&
-        Objects.equals(this.fields, highlight.fields) &&
-        Objects.equals(this.encoder, highlight.encoder) &&
-        equalsNullable(this.highlightQuery, highlight.highlightQuery) &&
-        Objects.equals(this.preTags, highlight.preTags) &&
-        Objects.equals(this.postTags, highlight.postTags) &&
-        Objects.equals(this.noMatchSize, highlight.noMatchSize) &&
-        Objects.equals(this.fragmentSize, highlight.fragmentSize) &&
-        Objects.equals(this.numberOfFragments, highlight.numberOfFragments) &&
-        Objects.equals(this.limit, highlight.limit) &&
-        Objects.equals(this.limitWords, highlight.limitWords) &&
-        Objects.equals(this.limitSnippets, highlight.limitSnippets) &&
-        Objects.equals(this.limitsPerField, highlight.limitsPerField) &&
-        Objects.equals(this.useBoundaries, highlight.useBoundaries) &&
-        Objects.equals(this.forceAllWords, highlight.forceAllWords) &&
-        Objects.equals(this.allowEmpty, highlight.allowEmpty) &&
-        Objects.equals(this.emitZones, highlight.emitZones) &&
-        Objects.equals(this.forceSnippets, highlight.forceSnippets) &&
-        Objects.equals(this.around, highlight.around) &&
-        Objects.equals(this.startSnippetId, highlight.startSnippetId) &&
-        Objects.equals(this.htmlStripMode, highlight.htmlStripMode) &&
-        Objects.equals(this.snippetBoundary, highlight.snippetBoundary);
-  }
-
-  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
-    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(fieldnames, fields, encoder, hashCodeNullable(highlightQuery), preTags, postTags, noMatchSize, fragmentSize, numberOfFragments, limit, limitWords, limitSnippets, limitsPerField, useBoundaries, forceAllWords, allowEmpty, emitZones, forceSnippets, around, startSnippetId, htmlStripMode, snippetBoundary);
-  }
-
-  private static <T> int hashCodeNullable(JsonNullable<T> a) {
-    if (a == null) {
-      return 1;
-    }
-    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class Highlight {\n");
-    sb.append("    fieldnames: ").append(toIndentedString(fieldnames)).append("\n");
-    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
-    sb.append("    encoder: ").append(toIndentedString(encoder)).append("\n");
-    sb.append("    highlightQuery: ").append(toIndentedString(highlightQuery)).append("\n");
-    sb.append("    preTags: ").append(toIndentedString(preTags)).append("\n");
-    sb.append("    postTags: ").append(toIndentedString(postTags)).append("\n");
-    sb.append("    noMatchSize: ").append(toIndentedString(noMatchSize)).append("\n");
-    sb.append("    fragmentSize: ").append(toIndentedString(fragmentSize)).append("\n");
-    sb.append("    numberOfFragments: ").append(toIndentedString(numberOfFragments)).append("\n");
-    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
-    sb.append("    limitWords: ").append(toIndentedString(limitWords)).append("\n");
-    sb.append("    limitSnippets: ").append(toIndentedString(limitSnippets)).append("\n");
-    sb.append("    limitsPerField: ").append(toIndentedString(limitsPerField)).append("\n");
-    sb.append("    useBoundaries: ").append(toIndentedString(useBoundaries)).append("\n");
-    sb.append("    forceAllWords: ").append(toIndentedString(forceAllWords)).append("\n");
-    sb.append("    allowEmpty: ").append(toIndentedString(allowEmpty)).append("\n");
-    sb.append("    emitZones: ").append(toIndentedString(emitZones)).append("\n");
-    sb.append("    forceSnippets: ").append(toIndentedString(forceSnippets)).append("\n");
-    sb.append("    around: ").append(toIndentedString(around)).append("\n");
-    sb.append("    startSnippetId: ").append(toIndentedString(startSnippetId)).append("\n");
-    sb.append("    htmlStripMode: ").append(toIndentedString(htmlStripMode)).append("\n");
-    sb.append("    snippetBoundary: ").append(toIndentedString(snippetBoundary)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/HighlightField.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/HighlightField.java
deleted file mode 100644
index bf9c568..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/HighlightField.java
+++ /dev/null
@@ -1,205 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Query Highlight field with options set
- */
-@JsonPropertyOrder({
-  HighlightField.JSON_PROPERTY_NAME,
-  HighlightField.JSON_PROPERTY_LIMIT,
-  HighlightField.JSON_PROPERTY_LIMIT_WORDS,
-  HighlightField.JSON_PROPERTY_LIMIT_SNIPPETS
-})
-@JsonTypeName("highlightField")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class HighlightField {
-  public static final String JSON_PROPERTY_NAME = "name";
-  private String name;
-
-  public static final String JSON_PROPERTY_LIMIT = "limit";
-  private Integer limit = 256;
-
-  public static final String JSON_PROPERTY_LIMIT_WORDS = "limit_words";
-  private Integer limitWords = 0;
-
-  public static final String JSON_PROPERTY_LIMIT_SNIPPETS = "limit_snippets";
-  private Integer limitSnippets = 0;
-
-  public HighlightField() { 
-  }
-
-  public HighlightField name(String name) {
-    this.name = name;
-    return this;
-  }
-
-   /**
-   * Get name
-   * @return name
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_NAME)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getName() {
-    return name;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_NAME)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setName(String name) {
-    this.name = name;
-  }
-
-
-  public HighlightField limit(Integer limit) {
-    this.limit = limit;
-    return this;
-  }
-
-   /**
-   * Get limit
-   * @return limit
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_LIMIT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Integer getLimit() {
-    return limit;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_LIMIT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setLimit(Integer limit) {
-    this.limit = limit;
-  }
-
-
-  public HighlightField limitWords(Integer limitWords) {
-    this.limitWords = limitWords;
-    return this;
-  }
-
-   /**
-   * Get limitWords
-   * @return limitWords
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_LIMIT_WORDS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Integer getLimitWords() {
-    return limitWords;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_LIMIT_WORDS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setLimitWords(Integer limitWords) {
-    this.limitWords = limitWords;
-  }
-
-
-  public HighlightField limitSnippets(Integer limitSnippets) {
-    this.limitSnippets = limitSnippets;
-    return this;
-  }
-
-   /**
-   * Get limitSnippets
-   * @return limitSnippets
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_LIMIT_SNIPPETS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Integer getLimitSnippets() {
-    return limitSnippets;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_LIMIT_SNIPPETS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setLimitSnippets(Integer limitSnippets) {
-    this.limitSnippets = limitSnippets;
-  }
-
-
-  /**
-   * Return true if this highlightField object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    HighlightField highlightField = (HighlightField) o;
-    return Objects.equals(this.name, highlightField.name) &&
-        Objects.equals(this.limit, highlightField.limit) &&
-        Objects.equals(this.limitWords, highlightField.limitWords) &&
-        Objects.equals(this.limitSnippets, highlightField.limitSnippets);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(name, limit, limitWords, limitSnippets);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class HighlightField {\n");
-    sb.append("    name: ").append(toIndentedString(name)).append("\n");
-    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
-    sb.append("    limitWords: ").append(toIndentedString(limitWords)).append("\n");
-    sb.append("    limitSnippets: ").append(toIndentedString(limitSnippets)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/InFilter.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/InFilter.java
deleted file mode 100644
index 6832366..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/InFilter.java
+++ /dev/null
@@ -1,153 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * In attribute filter
- */
-@JsonPropertyOrder({
-  InFilter.JSON_PROPERTY_FIELD,
-  InFilter.JSON_PROPERTY_VALUES
-})
-@JsonTypeName("inFilter")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class InFilter {
-  public static final String JSON_PROPERTY_FIELD = "field";
-  private String field;
-
-  public static final String JSON_PROPERTY_VALUES = "values";
-  private List<Object> values = new ArrayList<>();
-
-  public InFilter() { 
-  }
-
-  public InFilter field(String field) {
-    this.field = field;
-    return this;
-  }
-
-   /**
-   * Get field
-   * @return field
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_FIELD)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getField() {
-    return field;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FIELD)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setField(String field) {
-    this.field = field;
-  }
-
-
-  public InFilter values(List<Object> values) {
-    this.values = values;
-    return this;
-  }
-
-  public InFilter addValuesItem(Object valuesItem) {
-    if (this.values == null) {
-      this.values = new ArrayList<>();
-    }
-    this.values.add(valuesItem);
-    return this;
-  }
-
-   /**
-   * Get values
-   * @return values
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_VALUES)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public List<Object> getValues() {
-    return values;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_VALUES)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setValues(List<Object> values) {
-    this.values = values;
-  }
-
-
-  /**
-   * Return true if this inFilter object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    InFilter inFilter = (InFilter) o;
-    return Objects.equals(this.field, inFilter.field) &&
-        Objects.equals(this.values, inFilter.values);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(field, values);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class InFilter {\n");
-    sb.append("    field: ").append(toIndentedString(field)).append("\n");
-    sb.append("    values: ").append(toIndentedString(values)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/InsertDocumentRequest.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/InsertDocumentRequest.java
deleted file mode 100644
index 1fc0ce4..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/InsertDocumentRequest.java
+++ /dev/null
@@ -1,215 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.Map;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Object with document data. 
- */
-@JsonPropertyOrder({
-  InsertDocumentRequest.JSON_PROPERTY_INDEX,
-  InsertDocumentRequest.JSON_PROPERTY_CLUSTER,
-  InsertDocumentRequest.JSON_PROPERTY_ID,
-  InsertDocumentRequest.JSON_PROPERTY_DOC
-})
-@JsonTypeName("insertDocumentRequest")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class InsertDocumentRequest {
-  public static final String JSON_PROPERTY_INDEX = "index";
-  private String index;
-
-  public static final String JSON_PROPERTY_CLUSTER = "cluster";
-  private String cluster;
-
-  public static final String JSON_PROPERTY_ID = "id";
-  private Long id;
-
-  public static final String JSON_PROPERTY_DOC = "doc";
-  private Map<String, Object> doc = new HashMap<>();
-
-  public InsertDocumentRequest() { 
-  }
-
-  public InsertDocumentRequest index(String index) {
-    this.index = index;
-    return this;
-  }
-
-   /**
-   * Name of the index
-   * @return index
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_INDEX)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getIndex() {
-    return index;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_INDEX)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setIndex(String index) {
-    this.index = index;
-  }
-
-
-  public InsertDocumentRequest cluster(String cluster) {
-    this.cluster = cluster;
-    return this;
-  }
-
-   /**
-   * cluster name
-   * @return cluster
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_CLUSTER)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public String getCluster() {
-    return cluster;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_CLUSTER)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setCluster(String cluster) {
-    this.cluster = cluster;
-  }
-
-
-  public InsertDocumentRequest id(Long id) {
-    this.id = id;
-    return this;
-  }
-
-   /**
-   * Document ID. 
-   * @return id
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_ID)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Long getId() {
-    return id;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_ID)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setId(Long id) {
-    this.id = id;
-  }
-
-
-  public InsertDocumentRequest doc(Map<String, Object> doc) {
-    this.doc = doc;
-    return this;
-  }
-
-  public InsertDocumentRequest putDocItem(String key, Object docItem) {
-    if (this.doc == null) {
-      this.doc = new HashMap<>();
-    }
-    this.doc.put(key, docItem);
-    return this;
-  }
-
-   /**
-   * Object with document data 
-   * @return doc
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_DOC)
-  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.ALWAYS)
-
-  public Map<String, Object> getDoc() {
-    return doc;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_DOC)
-  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.ALWAYS)
-  public void setDoc(Map<String, Object> doc) {
-    this.doc = doc;
-  }
-
-
-  /**
-   * Return true if this insertDocumentRequest object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    InsertDocumentRequest insertDocumentRequest = (InsertDocumentRequest) o;
-    return Objects.equals(this.index, insertDocumentRequest.index) &&
-        Objects.equals(this.cluster, insertDocumentRequest.cluster) &&
-        Objects.equals(this.id, insertDocumentRequest.id) &&
-        Objects.equals(this.doc, insertDocumentRequest.doc);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(index, cluster, id, doc);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class InsertDocumentRequest {\n");
-    sb.append("    index: ").append(toIndentedString(index)).append("\n");
-    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
-    sb.append("    id: ").append(toIndentedString(id)).append("\n");
-    sb.append("    doc: ").append(toIndentedString(doc)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/MatchFilter.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/MatchFilter.java
deleted file mode 100644
index 7cd8a24..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/MatchFilter.java
+++ /dev/null
@@ -1,143 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Query match filter
- */
-@JsonPropertyOrder({
-  MatchFilter.JSON_PROPERTY_QUERY_STRING,
-  MatchFilter.JSON_PROPERTY_QUERY_FIELDS
-})
-@JsonTypeName("matchFilter")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class MatchFilter {
-  public static final String JSON_PROPERTY_QUERY_STRING = "query_string";
-  private String queryString = "";
-
-  public static final String JSON_PROPERTY_QUERY_FIELDS = "query_fields";
-  private String queryFields = "*";
-
-  public MatchFilter() { 
-  }
-
-  public MatchFilter queryString(String queryString) {
-    this.queryString = queryString;
-    return this;
-  }
-
-   /**
-   * Get queryString
-   * @return queryString
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_QUERY_STRING)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getQueryString() {
-    return queryString;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_QUERY_STRING)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setQueryString(String queryString) {
-    this.queryString = queryString;
-  }
-
-
-  public MatchFilter queryFields(String queryFields) {
-    this.queryFields = queryFields;
-    return this;
-  }
-
-   /**
-   * Get queryFields
-   * @return queryFields
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_QUERY_FIELDS)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getQueryFields() {
-    return queryFields;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_QUERY_FIELDS)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setQueryFields(String queryFields) {
-    this.queryFields = queryFields;
-  }
-
-
-  /**
-   * Return true if this matchFilter object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    MatchFilter matchFilter = (MatchFilter) o;
-    return Objects.equals(this.queryString, matchFilter.queryString) &&
-        Objects.equals(this.queryFields, matchFilter.queryFields);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(queryString, queryFields);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class MatchFilter {\n");
-    sb.append("    queryString: ").append(toIndentedString(queryString)).append("\n");
-    sb.append("    queryFields: ").append(toIndentedString(queryFields)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/MatchOp.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/MatchOp.java
deleted file mode 100644
index 97b3f6f..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/MatchOp.java
+++ /dev/null
@@ -1,112 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Query match expression with logical operator
- */
-@JsonPropertyOrder({
-  MatchOp.JSON_PROPERTY_QUERY_INFO
-})
-@JsonTypeName("matchOp")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class MatchOp {
-  public static final String JSON_PROPERTY_QUERY_INFO = "query_info";
-  private Object queryInfo;
-
-  public MatchOp() { 
-  }
-
-  public MatchOp queryInfo(Object queryInfo) {
-    this.queryInfo = queryInfo;
-    return this;
-  }
-
-   /**
-   * Get queryInfo
-   * @return queryInfo
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_QUERY_INFO)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public Object getQueryInfo() {
-    return queryInfo;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_QUERY_INFO)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setQueryInfo(Object queryInfo) {
-    this.queryInfo = queryInfo;
-  }
-
-
-  /**
-   * Return true if this matchOp object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    MatchOp matchOp = (MatchOp) o;
-    return Objects.equals(this.queryInfo, matchOp.queryInfo);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(queryInfo);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class MatchOp {\n");
-    sb.append("    queryInfo: ").append(toIndentedString(queryInfo)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/MatchOpFilter.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/MatchOpFilter.java
deleted file mode 100644
index 268feea..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/MatchOpFilter.java
+++ /dev/null
@@ -1,209 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Query match expression
- */
-@JsonPropertyOrder({
-  MatchOpFilter.JSON_PROPERTY_QUERY_STRING,
-  MatchOpFilter.JSON_PROPERTY_QUERY_FIELDS,
-  MatchOpFilter.JSON_PROPERTY_OPERATOR
-})
-@JsonTypeName("matchOpFilter")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class MatchOpFilter {
-  public static final String JSON_PROPERTY_QUERY_STRING = "query_string";
-  private String queryString;
-
-  public static final String JSON_PROPERTY_QUERY_FIELDS = "query_fields";
-  private String queryFields;
-
-  /**
-   * Gets or Sets operator
-   */
-  public enum OperatorEnum {
-    OR("or"),
-    
-    AND("and");
-
-    private String value;
-
-    OperatorEnum(String value) {
-      this.value = value;
-    }
-
-    @JsonValue
-    public String getValue() {
-      return value;
-    }
-
-    @Override
-    public String toString() {
-      return String.valueOf(value);
-    }
-
-    @JsonCreator
-    public static OperatorEnum fromValue(String value) {
-      for (OperatorEnum b : OperatorEnum.values()) {
-        if (b.value.equals(value)) {
-          return b;
-        }
-      }
-      throw new IllegalArgumentException("Unexpected value '" + value + "'");
-    }
-  }
-
-  public static final String JSON_PROPERTY_OPERATOR = "operator";
-  private OperatorEnum operator;
-
-  public MatchOpFilter() { 
-  }
-
-  public MatchOpFilter queryString(String queryString) {
-    this.queryString = queryString;
-    return this;
-  }
-
-   /**
-   * Get queryString
-   * @return queryString
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_QUERY_STRING)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getQueryString() {
-    return queryString;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_QUERY_STRING)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setQueryString(String queryString) {
-    this.queryString = queryString;
-  }
-
-
-  public MatchOpFilter queryFields(String queryFields) {
-    this.queryFields = queryFields;
-    return this;
-  }
-
-   /**
-   * Get queryFields
-   * @return queryFields
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_QUERY_FIELDS)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getQueryFields() {
-    return queryFields;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_QUERY_FIELDS)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setQueryFields(String queryFields) {
-    this.queryFields = queryFields;
-  }
-
-
-  public MatchOpFilter operator(OperatorEnum operator) {
-    this.operator = operator;
-    return this;
-  }
-
-   /**
-   * Get operator
-   * @return operator
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_OPERATOR)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public OperatorEnum getOperator() {
-    return operator;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_OPERATOR)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setOperator(OperatorEnum operator) {
-    this.operator = operator;
-  }
-
-
-  /**
-   * Return true if this matchOpFilter object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    MatchOpFilter matchOpFilter = (MatchOpFilter) o;
-    return Objects.equals(this.queryString, matchOpFilter.queryString) &&
-        Objects.equals(this.queryFields, matchOpFilter.queryFields) &&
-        Objects.equals(this.operator, matchOpFilter.operator);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(queryString, queryFields, operator);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class MatchOpFilter {\n");
-    sb.append("    queryString: ").append(toIndentedString(queryString)).append("\n");
-    sb.append("    queryFields: ").append(toIndentedString(queryFields)).append("\n");
-    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/MatchPhraseFilter.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/MatchPhraseFilter.java
deleted file mode 100644
index 69b2421..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/MatchPhraseFilter.java
+++ /dev/null
@@ -1,143 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Query match expression
- */
-@JsonPropertyOrder({
-  MatchPhraseFilter.JSON_PROPERTY_QUERY_PHRASE,
-  MatchPhraseFilter.JSON_PROPERTY_QUERY_FIELDS
-})
-@JsonTypeName("matchPhraseFilter")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class MatchPhraseFilter {
-  public static final String JSON_PROPERTY_QUERY_PHRASE = "query_phrase";
-  private String queryPhrase;
-
-  public static final String JSON_PROPERTY_QUERY_FIELDS = "query_fields";
-  private String queryFields;
-
-  public MatchPhraseFilter() { 
-  }
-
-  public MatchPhraseFilter queryPhrase(String queryPhrase) {
-    this.queryPhrase = queryPhrase;
-    return this;
-  }
-
-   /**
-   * Get queryPhrase
-   * @return queryPhrase
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_QUERY_PHRASE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getQueryPhrase() {
-    return queryPhrase;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_QUERY_PHRASE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setQueryPhrase(String queryPhrase) {
-    this.queryPhrase = queryPhrase;
-  }
-
-
-  public MatchPhraseFilter queryFields(String queryFields) {
-    this.queryFields = queryFields;
-    return this;
-  }
-
-   /**
-   * Get queryFields
-   * @return queryFields
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_QUERY_FIELDS)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getQueryFields() {
-    return queryFields;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_QUERY_FIELDS)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setQueryFields(String queryFields) {
-    this.queryFields = queryFields;
-  }
-
-
-  /**
-   * Return true if this matchPhraseFilter object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    MatchPhraseFilter matchPhraseFilter = (MatchPhraseFilter) o;
-    return Objects.equals(this.queryPhrase, matchPhraseFilter.queryPhrase) &&
-        Objects.equals(this.queryFields, matchPhraseFilter.queryFields);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(queryPhrase, queryFields);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class MatchPhraseFilter {\n");
-    sb.append("    queryPhrase: ").append(toIndentedString(queryPhrase)).append("\n");
-    sb.append("    queryFields: ").append(toIndentedString(queryFields)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/NotFilterBoolean.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/NotFilterBoolean.java
deleted file mode 100644
index d52acde..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/NotFilterBoolean.java
+++ /dev/null
@@ -1,174 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Query filter
- */
-@JsonPropertyOrder({
-  NotFilterBoolean.JSON_PROPERTY_FILTER_FIELD,
-  NotFilterBoolean.JSON_PROPERTY_OPERATION,
-  NotFilterBoolean.JSON_PROPERTY_FILTER_VALUE
-})
-@JsonTypeName("notFilterBoolean")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class NotFilterBoolean {
-  public static final String JSON_PROPERTY_FILTER_FIELD = "filter_field";
-  private String filterField;
-
-  public static final String JSON_PROPERTY_OPERATION = "operation";
-  private String operation;
-
-  public static final String JSON_PROPERTY_FILTER_VALUE = "filter_value";
-  private Boolean filterValue;
-
-  public NotFilterBoolean() { 
-  }
-
-  public NotFilterBoolean filterField(String filterField) {
-    this.filterField = filterField;
-    return this;
-  }
-
-   /**
-   * Get filterField
-   * @return filterField
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_FILTER_FIELD)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getFilterField() {
-    return filterField;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FILTER_FIELD)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setFilterField(String filterField) {
-    this.filterField = filterField;
-  }
-
-
-  public NotFilterBoolean operation(String operation) {
-    this.operation = operation;
-    return this;
-  }
-
-   /**
-   * Get operation
-   * @return operation
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_OPERATION)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getOperation() {
-    return operation;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_OPERATION)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setOperation(String operation) {
-    this.operation = operation;
-  }
-
-
-  public NotFilterBoolean filterValue(Boolean filterValue) {
-    this.filterValue = filterValue;
-    return this;
-  }
-
-   /**
-   * Get filterValue
-   * @return filterValue
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_FILTER_VALUE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public Boolean getFilterValue() {
-    return filterValue;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FILTER_VALUE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setFilterValue(Boolean filterValue) {
-    this.filterValue = filterValue;
-  }
-
-
-  /**
-   * Return true if this notFilterBoolean object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    NotFilterBoolean notFilterBoolean = (NotFilterBoolean) o;
-    return Objects.equals(this.filterField, notFilterBoolean.filterField) &&
-        Objects.equals(this.operation, notFilterBoolean.operation) &&
-        Objects.equals(this.filterValue, notFilterBoolean.filterValue);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(filterField, operation, filterValue);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class NotFilterBoolean {\n");
-    sb.append("    filterField: ").append(toIndentedString(filterField)).append("\n");
-    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
-    sb.append("    filterValue: ").append(toIndentedString(filterValue)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/NotFilterNumber.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/NotFilterNumber.java
deleted file mode 100644
index 29adb92..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/NotFilterNumber.java
+++ /dev/null
@@ -1,175 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.math.BigDecimal;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Query filter
- */
-@JsonPropertyOrder({
-  NotFilterNumber.JSON_PROPERTY_FILTER_FIELD,
-  NotFilterNumber.JSON_PROPERTY_OPERATION,
-  NotFilterNumber.JSON_PROPERTY_FILTER_VALUE
-})
-@JsonTypeName("notFilterNumber")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class NotFilterNumber {
-  public static final String JSON_PROPERTY_FILTER_FIELD = "filter_field";
-  private String filterField;
-
-  public static final String JSON_PROPERTY_OPERATION = "operation";
-  private String operation;
-
-  public static final String JSON_PROPERTY_FILTER_VALUE = "filter_value";
-  private BigDecimal filterValue;
-
-  public NotFilterNumber() { 
-  }
-
-  public NotFilterNumber filterField(String filterField) {
-    this.filterField = filterField;
-    return this;
-  }
-
-   /**
-   * Get filterField
-   * @return filterField
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_FILTER_FIELD)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getFilterField() {
-    return filterField;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FILTER_FIELD)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setFilterField(String filterField) {
-    this.filterField = filterField;
-  }
-
-
-  public NotFilterNumber operation(String operation) {
-    this.operation = operation;
-    return this;
-  }
-
-   /**
-   * Get operation
-   * @return operation
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_OPERATION)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getOperation() {
-    return operation;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_OPERATION)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setOperation(String operation) {
-    this.operation = operation;
-  }
-
-
-  public NotFilterNumber filterValue(BigDecimal filterValue) {
-    this.filterValue = filterValue;
-    return this;
-  }
-
-   /**
-   * Get filterValue
-   * @return filterValue
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_FILTER_VALUE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public BigDecimal getFilterValue() {
-    return filterValue;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FILTER_VALUE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setFilterValue(BigDecimal filterValue) {
-    this.filterValue = filterValue;
-  }
-
-
-  /**
-   * Return true if this notFilterNumber object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    NotFilterNumber notFilterNumber = (NotFilterNumber) o;
-    return Objects.equals(this.filterField, notFilterNumber.filterField) &&
-        Objects.equals(this.operation, notFilterNumber.operation) &&
-        Objects.equals(this.filterValue, notFilterNumber.filterValue);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(filterField, operation, filterValue);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class NotFilterNumber {\n");
-    sb.append("    filterField: ").append(toIndentedString(filterField)).append("\n");
-    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
-    sb.append("    filterValue: ").append(toIndentedString(filterValue)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/NotFilterString.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/NotFilterString.java
deleted file mode 100644
index b482c5a..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/NotFilterString.java
+++ /dev/null
@@ -1,174 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Query filter
- */
-@JsonPropertyOrder({
-  NotFilterString.JSON_PROPERTY_FILTER_FIELD,
-  NotFilterString.JSON_PROPERTY_OPERATION,
-  NotFilterString.JSON_PROPERTY_FILTER_VALUE
-})
-@JsonTypeName("notFilterString")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class NotFilterString {
-  public static final String JSON_PROPERTY_FILTER_FIELD = "filter_field";
-  private String filterField;
-
-  public static final String JSON_PROPERTY_OPERATION = "operation";
-  private String operation;
-
-  public static final String JSON_PROPERTY_FILTER_VALUE = "filter_value";
-  private String filterValue;
-
-  public NotFilterString() { 
-  }
-
-  public NotFilterString filterField(String filterField) {
-    this.filterField = filterField;
-    return this;
-  }
-
-   /**
-   * Get filterField
-   * @return filterField
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_FILTER_FIELD)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getFilterField() {
-    return filterField;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FILTER_FIELD)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setFilterField(String filterField) {
-    this.filterField = filterField;
-  }
-
-
-  public NotFilterString operation(String operation) {
-    this.operation = operation;
-    return this;
-  }
-
-   /**
-   * Get operation
-   * @return operation
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_OPERATION)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getOperation() {
-    return operation;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_OPERATION)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setOperation(String operation) {
-    this.operation = operation;
-  }
-
-
-  public NotFilterString filterValue(String filterValue) {
-    this.filterValue = filterValue;
-    return this;
-  }
-
-   /**
-   * Get filterValue
-   * @return filterValue
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_FILTER_VALUE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getFilterValue() {
-    return filterValue;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FILTER_VALUE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setFilterValue(String filterValue) {
-    this.filterValue = filterValue;
-  }
-
-
-  /**
-   * Return true if this notFilterString object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    NotFilterString notFilterString = (NotFilterString) o;
-    return Objects.equals(this.filterField, notFilterString.filterField) &&
-        Objects.equals(this.operation, notFilterString.operation) &&
-        Objects.equals(this.filterValue, notFilterString.filterValue);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(filterField, operation, filterValue);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class NotFilterString {\n");
-    sb.append("    filterField: ").append(toIndentedString(filterField)).append("\n");
-    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
-    sb.append("    filterValue: ").append(toIndentedString(filterValue)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/PercolateRequest.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/PercolateRequest.java
deleted file mode 100644
index 31825f7..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/PercolateRequest.java
+++ /dev/null
@@ -1,113 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import com.manticoresearch.client.model.PercolateRequestQuery;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Object with documents to percolate
- */
-@JsonPropertyOrder({
-  PercolateRequest.JSON_PROPERTY_QUERY
-})
-@JsonTypeName("percolateRequest")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class PercolateRequest {
-  public static final String JSON_PROPERTY_QUERY = "query";
-  private PercolateRequestQuery query;
-
-  public PercolateRequest() { 
-  }
-
-  public PercolateRequest query(PercolateRequestQuery query) {
-    this.query = query;
-    return this;
-  }
-
-   /**
-   * Get query
-   * @return query
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_QUERY)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public PercolateRequestQuery getQuery() {
-    return query;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_QUERY)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setQuery(PercolateRequestQuery query) {
-    this.query = query;
-  }
-
-
-  /**
-   * Return true if this percolateRequest object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    PercolateRequest percolateRequest = (PercolateRequest) o;
-    return Objects.equals(this.query, percolateRequest.query);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(query);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class PercolateRequest {\n");
-    sb.append("    query: ").append(toIndentedString(query)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/PercolateRequestQuery.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/PercolateRequestQuery.java
deleted file mode 100644
index 006da6b..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/PercolateRequestQuery.java
+++ /dev/null
@@ -1,155 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonAnyGetter;
-import com.fasterxml.jackson.annotation.JsonAnySetter;
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * PercolateRequestQuery
- */
-@JsonPropertyOrder({
-  PercolateRequestQuery.JSON_PROPERTY_PERCOLATE
-})
-@JsonTypeName("percolateRequest_query")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class PercolateRequestQuery {
-  public static final String JSON_PROPERTY_PERCOLATE = "percolate";
-  private Object percolate;
-
-  public PercolateRequestQuery() { 
-  }
-
-  public PercolateRequestQuery percolate(Object percolate) {
-    this.percolate = percolate;
-    return this;
-  }
-
-   /**
-   * Get percolate
-   * @return percolate
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_PERCOLATE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public Object getPercolate() {
-    return percolate;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_PERCOLATE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setPercolate(Object percolate) {
-    this.percolate = percolate;
-  }
-
-  /**
-   * A container for additional, undeclared properties.
-   * This is a holder for any undeclared properties as specified with
-   * the 'additionalProperties' keyword in the OAS document.
-   */
-  private Map<String, Object> additionalProperties;
-
-  /**
-   * Set the additional (undeclared) property with the specified name and value.
-   * If the property does not already exist, create it otherwise replace it.
-   */
-  @JsonAnySetter
-  public PercolateRequestQuery putAdditionalProperty(String key, Object value) {
-    if (this.additionalProperties == null) {
-        this.additionalProperties = new HashMap<>();
-    }
-    this.additionalProperties.put(key, value);
-    return this;
-  }
-
-  /**
-   * Return the additional (undeclared) property.
-   */
-  @JsonAnyGetter
-  public Map<String, Object> getAdditionalProperties() {
-    return additionalProperties;
-  }
-
-  /**
-   * Return the additional (undeclared) property with the specified name.
-   */
-  public Object getAdditionalProperty(String key) {
-    if (this.additionalProperties == null) {
-        return null;
-    }
-    return this.additionalProperties.get(key);
-  }
-
-  /**
-   * Return true if this percolateRequest_query object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    PercolateRequestQuery percolateRequestQuery = (PercolateRequestQuery) o;
-    return Objects.equals(this.percolate, percolateRequestQuery.percolate)&&
-        Objects.equals(this.additionalProperties, percolateRequestQuery.additionalProperties);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(percolate, additionalProperties);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class PercolateRequestQuery {\n");
-    sb.append("    percolate: ").append(toIndentedString(percolate)).append("\n");
-    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/QueryFilter.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/QueryFilter.java
deleted file mode 100644
index bb8020f..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/QueryFilter.java
+++ /dev/null
@@ -1,112 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Query string filter
- */
-@JsonPropertyOrder({
-  QueryFilter.JSON_PROPERTY_QUERY_STRING
-})
-@JsonTypeName("queryFilter")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class QueryFilter {
-  public static final String JSON_PROPERTY_QUERY_STRING = "query_string";
-  private String queryString;
-
-  public QueryFilter() { 
-  }
-
-  public QueryFilter queryString(String queryString) {
-    this.queryString = queryString;
-    return this;
-  }
-
-   /**
-   * Get queryString
-   * @return queryString
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_QUERY_STRING)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getQueryString() {
-    return queryString;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_QUERY_STRING)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setQueryString(String queryString) {
-    this.queryString = queryString;
-  }
-
-
-  /**
-   * Return true if this queryFilter object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    QueryFilter queryFilter = (QueryFilter) o;
-    return Objects.equals(this.queryString, queryFilter.queryString);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(queryString);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class QueryFilter {\n");
-    sb.append("    queryString: ").append(toIndentedString(queryString)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/RangeFilter.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/RangeFilter.java
deleted file mode 100644
index 6a4a94a..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/RangeFilter.java
+++ /dev/null
@@ -1,284 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.math.BigDecimal;
-import java.util.Arrays;
-import org.openapitools.jackson.nullable.JsonNullable;
-import com.fasterxml.jackson.annotation.JsonIgnore;
-import org.openapitools.jackson.nullable.JsonNullable;
-import java.util.NoSuchElementException;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Range attribute filter
- */
-@JsonPropertyOrder({
-  RangeFilter.JSON_PROPERTY_FIELD,
-  RangeFilter.JSON_PROPERTY_LTE,
-  RangeFilter.JSON_PROPERTY_GTE,
-  RangeFilter.JSON_PROPERTY_LT,
-  RangeFilter.JSON_PROPERTY_GT
-})
-@JsonTypeName("rangeFilter")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class RangeFilter {
-  public static final String JSON_PROPERTY_FIELD = "field";
-  private String field;
-
-  public static final String JSON_PROPERTY_LTE = "lte";
-  private JsonNullable<BigDecimal> lte = JsonNullable.<BigDecimal>undefined();
-
-  public static final String JSON_PROPERTY_GTE = "gte";
-  private JsonNullable<BigDecimal> gte = JsonNullable.<BigDecimal>undefined();
-
-  public static final String JSON_PROPERTY_LT = "lt";
-  private JsonNullable<BigDecimal> lt = JsonNullable.<BigDecimal>undefined();
-
-  public static final String JSON_PROPERTY_GT = "gt";
-  private JsonNullable<BigDecimal> gt = JsonNullable.<BigDecimal>undefined();
-
-  public RangeFilter() { 
-  }
-
-  public RangeFilter field(String field) {
-    this.field = field;
-    return this;
-  }
-
-   /**
-   * Get field
-   * @return field
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_FIELD)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getField() {
-    return field;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FIELD)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setField(String field) {
-    this.field = field;
-  }
-
-
-  public RangeFilter lte(BigDecimal lte) {
-    this.lte = JsonNullable.<BigDecimal>of(lte);
-    return this;
-  }
-
-   /**
-   * Get lte
-   * @return lte
-  **/
-  @jakarta.annotation.Nullable
-  @JsonIgnore
-
-  public BigDecimal getLte() {
-        return lte.orElse(null);
-  }
-
-  @JsonProperty(JSON_PROPERTY_LTE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public JsonNullable<BigDecimal> getLte_JsonNullable() {
-    return lte;
-  }
-  
-  @JsonProperty(JSON_PROPERTY_LTE)
-  public void setLte_JsonNullable(JsonNullable<BigDecimal> lte) {
-    this.lte = lte;
-  }
-
-  public void setLte(BigDecimal lte) {
-    this.lte = JsonNullable.<BigDecimal>of(lte);
-  }
-
-
-  public RangeFilter gte(BigDecimal gte) {
-    this.gte = JsonNullable.<BigDecimal>of(gte);
-    return this;
-  }
-
-   /**
-   * Get gte
-   * @return gte
-  **/
-  @jakarta.annotation.Nullable
-  @JsonIgnore
-
-  public BigDecimal getGte() {
-        return gte.orElse(null);
-  }
-
-  @JsonProperty(JSON_PROPERTY_GTE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public JsonNullable<BigDecimal> getGte_JsonNullable() {
-    return gte;
-  }
-  
-  @JsonProperty(JSON_PROPERTY_GTE)
-  public void setGte_JsonNullable(JsonNullable<BigDecimal> gte) {
-    this.gte = gte;
-  }
-
-  public void setGte(BigDecimal gte) {
-    this.gte = JsonNullable.<BigDecimal>of(gte);
-  }
-
-
-  public RangeFilter lt(BigDecimal lt) {
-    this.lt = JsonNullable.<BigDecimal>of(lt);
-    return this;
-  }
-
-   /**
-   * Get lt
-   * @return lt
-  **/
-  @jakarta.annotation.Nullable
-  @JsonIgnore
-
-  public BigDecimal getLt() {
-        return lt.orElse(null);
-  }
-
-  @JsonProperty(JSON_PROPERTY_LT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public JsonNullable<BigDecimal> getLt_JsonNullable() {
-    return lt;
-  }
-  
-  @JsonProperty(JSON_PROPERTY_LT)
-  public void setLt_JsonNullable(JsonNullable<BigDecimal> lt) {
-    this.lt = lt;
-  }
-
-  public void setLt(BigDecimal lt) {
-    this.lt = JsonNullable.<BigDecimal>of(lt);
-  }
-
-
-  public RangeFilter gt(BigDecimal gt) {
-    this.gt = JsonNullable.<BigDecimal>of(gt);
-    return this;
-  }
-
-   /**
-   * Get gt
-   * @return gt
-  **/
-  @jakarta.annotation.Nullable
-  @JsonIgnore
-
-  public BigDecimal getGt() {
-        return gt.orElse(null);
-  }
-
-  @JsonProperty(JSON_PROPERTY_GT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public JsonNullable<BigDecimal> getGt_JsonNullable() {
-    return gt;
-  }
-  
-  @JsonProperty(JSON_PROPERTY_GT)
-  public void setGt_JsonNullable(JsonNullable<BigDecimal> gt) {
-    this.gt = gt;
-  }
-
-  public void setGt(BigDecimal gt) {
-    this.gt = JsonNullable.<BigDecimal>of(gt);
-  }
-
-
-  /**
-   * Return true if this rangeFilter object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    RangeFilter rangeFilter = (RangeFilter) o;
-    return Objects.equals(this.field, rangeFilter.field) &&
-        equalsNullable(this.lte, rangeFilter.lte) &&
-        equalsNullable(this.gte, rangeFilter.gte) &&
-        equalsNullable(this.lt, rangeFilter.lt) &&
-        equalsNullable(this.gt, rangeFilter.gt);
-  }
-
-  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
-    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(field, hashCodeNullable(lte), hashCodeNullable(gte), hashCodeNullable(lt), hashCodeNullable(gt));
-  }
-
-  private static <T> int hashCodeNullable(JsonNullable<T> a) {
-    if (a == null) {
-      return 1;
-    }
-    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class RangeFilter {\n");
-    sb.append("    field: ").append(toIndentedString(field)).append("\n");
-    sb.append("    lte: ").append(toIndentedString(lte)).append("\n");
-    sb.append("    gte: ").append(toIndentedString(gte)).append("\n");
-    sb.append("    lt: ").append(toIndentedString(lt)).append("\n");
-    sb.append("    gt: ").append(toIndentedString(gt)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SearchRequest.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SearchRequest.java
deleted file mode 100644
index 0fe5a67..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SearchRequest.java
+++ /dev/null
@@ -1,586 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import com.manticoresearch.client.model.Aggregation;
-import com.manticoresearch.client.model.Highlight;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Request object for search operation
- */
-@JsonPropertyOrder({
-  SearchRequest.JSON_PROPERTY_INDEX,
-  SearchRequest.JSON_PROPERTY_QUERY,
-  SearchRequest.JSON_PROPERTY_FULLTEXT_FILTER,
-  SearchRequest.JSON_PROPERTY_ATTR_FILTER,
-  SearchRequest.JSON_PROPERTY_LIMIT,
-  SearchRequest.JSON_PROPERTY_OFFSET,
-  SearchRequest.JSON_PROPERTY_MAX_MATCHES,
-  SearchRequest.JSON_PROPERTY_SORT,
-  SearchRequest.JSON_PROPERTY_AGGS,
-  SearchRequest.JSON_PROPERTY_EXPRESSIONS,
-  SearchRequest.JSON_PROPERTY_HIGHLIGHT,
-  SearchRequest.JSON_PROPERTY_SOURCE,
-  SearchRequest.JSON_PROPERTY_OPTIONS,
-  SearchRequest.JSON_PROPERTY_PROFILE,
-  SearchRequest.JSON_PROPERTY_TRACK_SCORES
-})
-@JsonTypeName("searchRequest")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class SearchRequest {
-  public static final String JSON_PROPERTY_INDEX = "index";
-  private String index = "";
-
-  public static final String JSON_PROPERTY_QUERY = "query";
-  private Object query;
-
-  public static final String JSON_PROPERTY_FULLTEXT_FILTER = "fulltext_filter";
-  private Object fulltextFilter;
-
-  public static final String JSON_PROPERTY_ATTR_FILTER = "attr_filter";
-  private Object attrFilter;
-
-  public static final String JSON_PROPERTY_LIMIT = "limit";
-  private Integer limit;
-
-  public static final String JSON_PROPERTY_OFFSET = "offset";
-  private Integer offset;
-
-  public static final String JSON_PROPERTY_MAX_MATCHES = "max_matches";
-  private Integer maxMatches;
-
-  public static final String JSON_PROPERTY_SORT = "sort";
-  private List<Object> sort;
-
-  public static final String JSON_PROPERTY_AGGS = "aggs";
-  private Map<String, Aggregation> aggs = new HashMap<>();
-
-  public static final String JSON_PROPERTY_EXPRESSIONS = "expressions";
-  private Map<String, String> expressions = new HashMap<>();
-
-  public static final String JSON_PROPERTY_HIGHLIGHT = "highlight";
-  private Highlight highlight;
-
-  public static final String JSON_PROPERTY_SOURCE = "source";
-  private Object source;
-
-  public static final String JSON_PROPERTY_OPTIONS = "options";
-  private Map<String, Object> options = new HashMap<>();
-
-  public static final String JSON_PROPERTY_PROFILE = "profile";
-  private Boolean profile;
-
-  public static final String JSON_PROPERTY_TRACK_SCORES = "track_scores";
-  private Boolean trackScores;
-
-  public SearchRequest() { 
-  }
-
-  public SearchRequest index(String index) {
-    this.index = index;
-    return this;
-  }
-
-   /**
-   * Get index
-   * @return index
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_INDEX)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getIndex() {
-    return index;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_INDEX)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setIndex(String index) {
-    this.index = index;
-  }
-
-
-  public SearchRequest query(Object query) {
-    this.query = query;
-    return this;
-  }
-
-   /**
-   * Get query
-   * @return query
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_QUERY)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Object getQuery() {
-    return query;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_QUERY)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setQuery(Object query) {
-    this.query = query;
-    this.fulltextFilter = null; 
-    this.attrFilter = null;
-  }
-
-
-  public SearchRequest fulltextFilter(Object fulltextFilter) {
-    this.fulltextFilter = fulltextFilter;
-    return this;
-  }
-
-   /**
-   * Get fulltextFilter
-   * @return fulltextFilter
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_FULLTEXT_FILTER)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Object getFulltextFilter() {
-    return fulltextFilter;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FULLTEXT_FILTER)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setFulltextFilter(Object fulltextFilter) {
-    this.fulltextFilter = fulltextFilter;
-  }
-
-
-  public SearchRequest attrFilter(Object attrFilter) {
-    this.attrFilter = attrFilter;
-    return this;
-  }
-
-   /**
-   * Get attrFilter
-   * @return attrFilter
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_ATTR_FILTER)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Object getAttrFilter() {
-    return attrFilter;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_ATTR_FILTER)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setAttrFilter(Object attrFilter) {
-    this.attrFilter = attrFilter;
-  }
-
-
-  public SearchRequest limit(Integer limit) {
-    this.limit = limit;
-    return this;
-  }
-
-   /**
-   * Get limit
-   * @return limit
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_LIMIT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Integer getLimit() {
-    return limit;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_LIMIT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setLimit(Integer limit) {
-    this.limit = limit;
-  }
-
-
-  public SearchRequest offset(Integer offset) {
-    this.offset = offset;
-    return this;
-  }
-
-   /**
-   * Get offset
-   * @return offset
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_OFFSET)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Integer getOffset() {
-    return offset;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_OFFSET)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setOffset(Integer offset) {
-    this.offset = offset;
-  }
-
-
-  public SearchRequest maxMatches(Integer maxMatches) {
-    this.maxMatches = maxMatches;
-    return this;
-  }
-
-   /**
-   * Get maxMatches
-   * @return maxMatches
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_MAX_MATCHES)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Integer getMaxMatches() {
-    return maxMatches;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_MAX_MATCHES)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setMaxMatches(Integer maxMatches) {
-    this.maxMatches = maxMatches;
-  }
-
-
-  public SearchRequest sort(List<Object> sort) {
-    this.sort = sort;
-    return this;
-  }
-
-  public SearchRequest addSortItem(Object sortItem) {
-    if (this.sort == null) {
-      this.sort = new ArrayList<>();
-    }
-    this.sort.add(sortItem);
-    return this;
-  }
-
-   /**
-   * Get sort
-   * @return sort
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_SORT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public List<Object> getSort() {
-    return sort;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_SORT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setSort(List<Object> sort) {
-    this.sort = sort;
-  }
-
-
-  public SearchRequest aggs(Map<String, Aggregation> aggs) {
-    this.aggs = aggs;
-    return this;
-  }
-
-  public SearchRequest putAggsItem(String key, Aggregation aggsItem) {
-    if (this.aggs == null) {
-      this.aggs = new HashMap<>();
-    }
-    this.aggs.put(key, aggsItem);
-    return this;
-  }
-
-   /**
-   * Get aggs
-   * @return aggs
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_AGGS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Map<String, Aggregation> getAggs() {
-    return aggs;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_AGGS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setAggs(Map<String, Aggregation> aggs) {
-    this.aggs = aggs;
-  }
-
-
-  public SearchRequest expressions(Map<String, String> expressions) {
-    this.expressions = expressions;
-    return this;
-  }
-
-  public SearchRequest putExpressionsItem(String key, String expressionsItem) {
-    if (this.expressions == null) {
-      this.expressions = new HashMap<>();
-    }
-    this.expressions.put(key, expressionsItem);
-    return this;
-  }
-
-   /**
-   * Get expressions
-   * @return expressions
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_EXPRESSIONS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Map<String, String> getExpressions() {
-    return expressions;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_EXPRESSIONS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setExpressions(Map<String, String> expressions) {
-    this.expressions = expressions;
-  }
-
-
-  public SearchRequest highlight(Highlight highlight) {
-    this.highlight = highlight;
-    return this;
-  }
-
-   /**
-   * Get highlight
-   * @return highlight
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_HIGHLIGHT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Highlight getHighlight() {
-    return highlight;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_HIGHLIGHT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setHighlight(Highlight highlight) {
-    this.highlight = highlight;
-  }
-
-
-  public SearchRequest source(Object source) {
-    this.source = source;
-    return this;
-  }
-
-   /**
-   * Get source
-   * @return source
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_SOURCE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Object getSource() {
-    return source;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_SOURCE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setSource(Object source) {
-    this.source = source;
-  }
-
-
-  public SearchRequest options(Map<String, Object> options) {
-    this.options = options;
-    return this;
-  }
-
-  public SearchRequest putOptionsItem(String key, Object optionsItem) {
-    if (this.options == null) {
-      this.options = new HashMap<>();
-    }
-    this.options.put(key, optionsItem);
-    return this;
-  }
-
-   /**
-   * Get options
-   * @return options
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_OPTIONS)
-  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Map<String, Object> getOptions() {
-    return options;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_OPTIONS)
-  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
-  public void setOptions(Map<String, Object> options) {
-    this.options = options;
-  }
-
-
-  public SearchRequest profile(Boolean profile) {
-    this.profile = profile;
-    return this;
-  }
-
-   /**
-   * Get profile
-   * @return profile
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_PROFILE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Boolean getProfile() {
-    return profile;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_PROFILE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setProfile(Boolean profile) {
-    this.profile = profile;
-  }
-
-
-  public SearchRequest trackScores(Boolean trackScores) {
-    this.trackScores = trackScores;
-    return this;
-  }
-
-   /**
-   * Get trackScores
-   * @return trackScores
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_TRACK_SCORES)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Boolean getTrackScores() {
-    return trackScores;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_TRACK_SCORES)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setTrackScores(Boolean trackScores) {
-    this.trackScores = trackScores;
-  }
-
-
-  /**
-   * Return true if this searchRequest object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    SearchRequest searchRequest = (SearchRequest) o;
-    return Objects.equals(this.index, searchRequest.index) &&
-        Objects.equals(this.query, searchRequest.query) &&
-        Objects.equals(this.fulltextFilter, searchRequest.fulltextFilter) &&
-        Objects.equals(this.attrFilter, searchRequest.attrFilter) &&
-        Objects.equals(this.limit, searchRequest.limit) &&
-        Objects.equals(this.offset, searchRequest.offset) &&
-        Objects.equals(this.maxMatches, searchRequest.maxMatches) &&
-        Objects.equals(this.sort, searchRequest.sort) &&
-        Objects.equals(this.aggs, searchRequest.aggs) &&
-        Objects.equals(this.expressions, searchRequest.expressions) &&
-        Objects.equals(this.highlight, searchRequest.highlight) &&
-        Objects.equals(this.source, searchRequest.source) &&
-        Objects.equals(this.options, searchRequest.options) &&
-        Objects.equals(this.profile, searchRequest.profile) &&
-        Objects.equals(this.trackScores, searchRequest.trackScores);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(index, query, fulltextFilter, attrFilter, limit, offset, maxMatches, sort, aggs, expressions, highlight, source, options, profile, trackScores);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class SearchRequest {\n");
-    sb.append("    index: ").append(toIndentedString(index)).append("\n");
-    sb.append("    query: ").append(toIndentedString(query)).append("\n");
-    sb.append("    fulltextFilter: ").append(toIndentedString(fulltextFilter)).append("\n");
-    sb.append("    attrFilter: ").append(toIndentedString(attrFilter)).append("\n");
-    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
-    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
-    sb.append("    maxMatches: ").append(toIndentedString(maxMatches)).append("\n");
-    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
-    sb.append("    aggs: ").append(toIndentedString(aggs)).append("\n");
-    sb.append("    expressions: ").append(toIndentedString(expressions)).append("\n");
-    sb.append("    highlight: ").append(toIndentedString(highlight)).append("\n");
-    sb.append("    source: ").append(toIndentedString(source)).append("\n");
-    sb.append("    options: ").append(toIndentedString(options)).append("\n");
-    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
-    sb.append("    trackScores: ").append(toIndentedString(trackScores)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SearchResponse.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SearchResponse.java
deleted file mode 100644
index 9daefc4..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SearchResponse.java
+++ /dev/null
@@ -1,286 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import com.manticoresearch.client.model.SearchResponseHits;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.Map;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Response object of a search request
- */
-@JsonPropertyOrder({
-  SearchResponse.JSON_PROPERTY_TOOK,
-  SearchResponse.JSON_PROPERTY_TIMED_OUT,
-  SearchResponse.JSON_PROPERTY_AGGREGATIONS,
-  SearchResponse.JSON_PROPERTY_HITS,
-  SearchResponse.JSON_PROPERTY_PROFILE,
-  SearchResponse.JSON_PROPERTY_WARNING
-})
-@JsonTypeName("searchResponse")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class SearchResponse {
-  public static final String JSON_PROPERTY_TOOK = "took";
-  private Integer took;
-
-  public static final String JSON_PROPERTY_TIMED_OUT = "timed_out";
-  private Boolean timedOut;
-
-  public static final String JSON_PROPERTY_AGGREGATIONS = "aggregations";
-  private Map<String, Object> aggregations = new HashMap<>();
-
-  public static final String JSON_PROPERTY_HITS = "hits";
-  private SearchResponseHits hits;
-
-  public static final String JSON_PROPERTY_PROFILE = "profile";
-  private Object profile;
-
-  public static final String JSON_PROPERTY_WARNING = "warning";
-  private Map<String, Object> warning = new HashMap<>();
-
-  public SearchResponse() { 
-  }
-
-  public SearchResponse took(Integer took) {
-    this.took = took;
-    return this;
-  }
-
-   /**
-   * Get took
-   * @return took
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_TOOK)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Integer getTook() {
-    return took;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_TOOK)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setTook(Integer took) {
-    this.took = took;
-  }
-
-
-  public SearchResponse timedOut(Boolean timedOut) {
-    this.timedOut = timedOut;
-    return this;
-  }
-
-   /**
-   * Get timedOut
-   * @return timedOut
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_TIMED_OUT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Boolean getTimedOut() {
-    return timedOut;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_TIMED_OUT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setTimedOut(Boolean timedOut) {
-    this.timedOut = timedOut;
-  }
-
-
-  public SearchResponse aggregations(Map<String, Object> aggregations) {
-    this.aggregations = aggregations;
-    return this;
-  }
-
-  public SearchResponse putAggregationsItem(String key, Object aggregationsItem) {
-    if (this.aggregations == null) {
-      this.aggregations = new HashMap<>();
-    }
-    this.aggregations.put(key, aggregationsItem);
-    return this;
-  }
-
-   /**
-   * Get aggregations
-   * @return aggregations
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_AGGREGATIONS)
-  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Map<String, Object> getAggregations() {
-    return aggregations;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_AGGREGATIONS)
-  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
-  public void setAggregations(Map<String, Object> aggregations) {
-    this.aggregations = aggregations;
-  }
-
-
-  public SearchResponse hits(SearchResponseHits hits) {
-    this.hits = hits;
-    return this;
-  }
-
-   /**
-   * Get hits
-   * @return hits
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_HITS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public SearchResponseHits getHits() {
-    return hits;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_HITS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setHits(SearchResponseHits hits) {
-    this.hits = hits;
-  }
-
-
-  public SearchResponse profile(Object profile) {
-    this.profile = profile;
-    return this;
-  }
-
-   /**
-   * Get profile
-   * @return profile
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_PROFILE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Object getProfile() {
-    return profile;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_PROFILE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setProfile(Object profile) {
-    this.profile = profile;
-  }
-
-
-  public SearchResponse warning(Map<String, Object> warning) {
-    this.warning = warning;
-    return this;
-  }
-
-  public SearchResponse putWarningItem(String key, Object warningItem) {
-    if (this.warning == null) {
-      this.warning = new HashMap<>();
-    }
-    this.warning.put(key, warningItem);
-    return this;
-  }
-
-   /**
-   * Get warning
-   * @return warning
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_WARNING)
-  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Map<String, Object> getWarning() {
-    return warning;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_WARNING)
-  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
-  public void setWarning(Map<String, Object> warning) {
-    this.warning = warning;
-  }
-
-
-  /**
-   * Return true if this searchResponse object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    SearchResponse searchResponse = (SearchResponse) o;
-    return Objects.equals(this.took, searchResponse.took) &&
-        Objects.equals(this.timedOut, searchResponse.timedOut) &&
-        Objects.equals(this.aggregations, searchResponse.aggregations) &&
-        Objects.equals(this.hits, searchResponse.hits) &&
-        Objects.equals(this.profile, searchResponse.profile) &&
-        Objects.equals(this.warning, searchResponse.warning);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(took, timedOut, aggregations, hits, profile, warning);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class SearchResponse {\n");
-    sb.append("    took: ").append(toIndentedString(took)).append("\n");
-    sb.append("    timedOut: ").append(toIndentedString(timedOut)).append("\n");
-    sb.append("    aggregations: ").append(toIndentedString(aggregations)).append("\n");
-    sb.append("    hits: ").append(toIndentedString(hits)).append("\n");
-    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
-    sb.append("    warning: ").append(toIndentedString(warning)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SearchResponseHits.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SearchResponseHits.java
deleted file mode 100644
index d8afbd7..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SearchResponseHits.java
+++ /dev/null
@@ -1,215 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * SearchResponseHits
- */
-@JsonPropertyOrder({
-  SearchResponseHits.JSON_PROPERTY_MAX_SCORE,
-  SearchResponseHits.JSON_PROPERTY_TOTAL,
-  SearchResponseHits.JSON_PROPERTY_TOTAL_RELATION,
-  SearchResponseHits.JSON_PROPERTY_HITS
-})
-@JsonTypeName("searchResponse_hits")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class SearchResponseHits {
-  public static final String JSON_PROPERTY_MAX_SCORE = "max_score";
-  private Integer maxScore;
-
-  public static final String JSON_PROPERTY_TOTAL = "total";
-  private Integer total;
-
-  public static final String JSON_PROPERTY_TOTAL_RELATION = "total_relation";
-  private String totalRelation;
-
-  public static final String JSON_PROPERTY_HITS = "hits";
-  private List<Object> hits;
-
-  public SearchResponseHits() { 
-  }
-
-  public SearchResponseHits maxScore(Integer maxScore) {
-    this.maxScore = maxScore;
-    return this;
-  }
-
-   /**
-   * Get maxScore
-   * @return maxScore
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_MAX_SCORE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Integer getMaxScore() {
-    return maxScore;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_MAX_SCORE)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setMaxScore(Integer maxScore) {
-    this.maxScore = maxScore;
-  }
-
-
-  public SearchResponseHits total(Integer total) {
-    this.total = total;
-    return this;
-  }
-
-   /**
-   * Get total
-   * @return total
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_TOTAL)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Integer getTotal() {
-    return total;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_TOTAL)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setTotal(Integer total) {
-    this.total = total;
-  }
-
-
-  public SearchResponseHits totalRelation(String totalRelation) {
-    this.totalRelation = totalRelation;
-    return this;
-  }
-
-   /**
-   * Get totalRelation
-   * @return totalRelation
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_TOTAL_RELATION)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public String getTotalRelation() {
-    return totalRelation;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_TOTAL_RELATION)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setTotalRelation(String totalRelation) {
-    this.totalRelation = totalRelation;
-  }
-
-
-  public SearchResponseHits hits(List<Object> hits) {
-    this.hits = hits;
-    return this;
-  }
-
-  public SearchResponseHits addHitsItem(Object hitsItem) {
-    if (this.hits == null) {
-      this.hits = new ArrayList<>();
-    }
-    this.hits.add(hitsItem);
-    return this;
-  }
-
-   /**
-   * Get hits
-   * @return hits
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_HITS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public List<Object> getHits() {
-    return hits;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_HITS)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setHits(List<Object> hits) {
-    this.hits = hits;
-  }
-
-
-  /**
-   * Return true if this searchResponse_hits object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    SearchResponseHits searchResponseHits = (SearchResponseHits) o;
-    return Objects.equals(this.maxScore, searchResponseHits.maxScore) &&
-        Objects.equals(this.total, searchResponseHits.total) &&
-        Objects.equals(this.totalRelation, searchResponseHits.totalRelation) &&
-        Objects.equals(this.hits, searchResponseHits.hits);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(maxScore, total, totalRelation, hits);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class SearchResponseHits {\n");
-    sb.append("    maxScore: ").append(toIndentedString(maxScore)).append("\n");
-    sb.append("    total: ").append(toIndentedString(total)).append("\n");
-    sb.append("    totalRelation: ").append(toIndentedString(totalRelation)).append("\n");
-    sb.append("    hits: ").append(toIndentedString(hits)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SortMVA.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SortMVA.java
deleted file mode 100644
index 9995b9a..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SortMVA.java
+++ /dev/null
@@ -1,244 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Query sort expression for MVA attributes
- */
-@JsonPropertyOrder({
-  SortMVA.JSON_PROPERTY_ATTR,
-  SortMVA.JSON_PROPERTY_ORDER,
-  SortMVA.JSON_PROPERTY_MODE
-})
-@JsonTypeName("sortMVA")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class SortMVA {
-  public static final String JSON_PROPERTY_ATTR = "attr";
-  private String attr;
-
-  /**
-   * Gets or Sets order
-   */
-  public enum OrderEnum {
-    ASC("asc"),
-    
-    DESC("desc");
-
-    private String value;
-
-    OrderEnum(String value) {
-      this.value = value;
-    }
-
-    @JsonValue
-    public String getValue() {
-      return value;
-    }
-
-    @Override
-    public String toString() {
-      return String.valueOf(value);
-    }
-
-    @JsonCreator
-    public static OrderEnum fromValue(String value) {
-      for (OrderEnum b : OrderEnum.values()) {
-        if (b.value.equals(value)) {
-          return b;
-        }
-      }
-      throw new IllegalArgumentException("Unexpected value '" + value + "'");
-    }
-  }
-
-  public static final String JSON_PROPERTY_ORDER = "order";
-  private OrderEnum order;
-
-  /**
-   * Gets or Sets mode
-   */
-  public enum ModeEnum {
-    MIN("min"),
-    
-    MAX("max");
-
-    private String value;
-
-    ModeEnum(String value) {
-      this.value = value;
-    }
-
-    @JsonValue
-    public String getValue() {
-      return value;
-    }
-
-    @Override
-    public String toString() {
-      return String.valueOf(value);
-    }
-
-    @JsonCreator
-    public static ModeEnum fromValue(String value) {
-      for (ModeEnum b : ModeEnum.values()) {
-        if (b.value.equals(value)) {
-          return b;
-        }
-      }
-      throw new IllegalArgumentException("Unexpected value '" + value + "'");
-    }
-  }
-
-  public static final String JSON_PROPERTY_MODE = "mode";
-  private ModeEnum mode;
-
-  public SortMVA() { 
-  }
-
-  public SortMVA attr(String attr) {
-    this.attr = attr;
-    return this;
-  }
-
-   /**
-   * Get attr
-   * @return attr
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_ATTR)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getAttr() {
-    return attr;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_ATTR)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setAttr(String attr) {
-    this.attr = attr;
-  }
-
-
-  public SortMVA order(OrderEnum order) {
-    this.order = order;
-    return this;
-  }
-
-   /**
-   * Get order
-   * @return order
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_ORDER)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public OrderEnum getOrder() {
-    return order;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_ORDER)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setOrder(OrderEnum order) {
-    this.order = order;
-  }
-
-
-  public SortMVA mode(ModeEnum mode) {
-    this.mode = mode;
-    return this;
-  }
-
-   /**
-   * Get mode
-   * @return mode
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_MODE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public ModeEnum getMode() {
-    return mode;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_MODE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setMode(ModeEnum mode) {
-    this.mode = mode;
-  }
-
-
-  /**
-   * Return true if this sortMVA object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    SortMVA sortMVA = (SortMVA) o;
-    return Objects.equals(this.attr, sortMVA.attr) &&
-        Objects.equals(this.order, sortMVA.order) &&
-        Objects.equals(this.mode, sortMVA.mode);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(attr, order, mode);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class SortMVA {\n");
-    sb.append("    attr: ").append(toIndentedString(attr)).append("\n");
-    sb.append("    order: ").append(toIndentedString(order)).append("\n");
-    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SortMultiple.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SortMultiple.java
deleted file mode 100644
index 9dac4cb..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SortMultiple.java
+++ /dev/null
@@ -1,153 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.Map;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Query sort expression for multiple attributes
- */
-@JsonPropertyOrder({
-  SortMultiple.JSON_PROPERTY_ATTRS,
-  SortMultiple.JSON_PROPERTY_REPLACE
-})
-@JsonTypeName("sortMultiple")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class SortMultiple {
-  public static final String JSON_PROPERTY_ATTRS = "attrs";
-  private Map<String, Object> attrs = new HashMap<>();
-
-  public static final String JSON_PROPERTY_REPLACE = "replace";
-  private Boolean replace;
-
-  public SortMultiple() { 
-  }
-
-  public SortMultiple attrs(Map<String, Object> attrs) {
-    this.attrs = attrs;
-    return this;
-  }
-
-  public SortMultiple putAttrsItem(String key, Object attrsItem) {
-    if (this.attrs == null) {
-      this.attrs = new HashMap<>();
-    }
-    this.attrs.put(key, attrsItem);
-    return this;
-  }
-
-   /**
-   * Get attrs
-   * @return attrs
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_ATTRS)
-  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.ALWAYS)
-
-  public Map<String, Object> getAttrs() {
-    return attrs;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_ATTRS)
-  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.ALWAYS)
-  public void setAttrs(Map<String, Object> attrs) {
-    this.attrs = attrs;
-  }
-
-
-  public SortMultiple replace(Boolean replace) {
-    this.replace = replace;
-    return this;
-  }
-
-   /**
-   * Get replace
-   * @return replace
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_REPLACE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public Boolean getReplace() {
-    return replace;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_REPLACE)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setReplace(Boolean replace) {
-    this.replace = replace;
-  }
-
-
-  /**
-   * Return true if this sortMultiple object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    SortMultiple sortMultiple = (SortMultiple) o;
-    return Objects.equals(this.attrs, sortMultiple.attrs) &&
-        Objects.equals(this.replace, sortMultiple.replace);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(attrs, replace);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class SortMultiple {\n");
-    sb.append("    attrs: ").append(toIndentedString(attrs)).append("\n");
-    sb.append("    replace: ").append(toIndentedString(replace)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SortOrder.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SortOrder.java
deleted file mode 100644
index eb11ce9..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SortOrder.java
+++ /dev/null
@@ -1,178 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Query sort expression
- */
-@JsonPropertyOrder({
-  SortOrder.JSON_PROPERTY_ATTR,
-  SortOrder.JSON_PROPERTY_ORDER
-})
-@JsonTypeName("sortOrder")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class SortOrder {
-  public static final String JSON_PROPERTY_ATTR = "attr";
-  private String attr;
-
-  /**
-   * Gets or Sets order
-   */
-  public enum OrderEnum {
-    ASC("asc"),
-    
-    DESC("desc");
-
-    private String value;
-
-    OrderEnum(String value) {
-      this.value = value;
-    }
-
-    @JsonValue
-    public String getValue() {
-      return value;
-    }
-
-    @Override
-    public String toString() {
-      return String.valueOf(value);
-    }
-
-    @JsonCreator
-    public static OrderEnum fromValue(String value) {
-      for (OrderEnum b : OrderEnum.values()) {
-        if (b.value.equals(value)) {
-          return b;
-        }
-      }
-      throw new IllegalArgumentException("Unexpected value '" + value + "'");
-    }
-  }
-
-  public static final String JSON_PROPERTY_ORDER = "order";
-  private OrderEnum order;
-
-  public SortOrder() { 
-  }
-
-  public SortOrder attr(String attr) {
-    this.attr = attr;
-    return this;
-  }
-
-   /**
-   * Get attr
-   * @return attr
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_ATTR)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getAttr() {
-    return attr;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_ATTR)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setAttr(String attr) {
-    this.attr = attr;
-  }
-
-
-  public SortOrder order(OrderEnum order) {
-    this.order = order;
-    return this;
-  }
-
-   /**
-   * Get order
-   * @return order
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_ORDER)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public OrderEnum getOrder() {
-    return order;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_ORDER)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setOrder(OrderEnum order) {
-    this.order = order;
-  }
-
-
-  /**
-   * Return true if this sortOrder object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    SortOrder sortOrder = (SortOrder) o;
-    return Objects.equals(this.attr, sortOrder.attr) &&
-        Objects.equals(this.order, sortOrder.order);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(attr, order);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class SortOrder {\n");
-    sb.append("    attr: ").append(toIndentedString(attr)).append("\n");
-    sb.append("    order: ").append(toIndentedString(order)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SourceByRules.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SourceByRules.java
deleted file mode 100644
index a36741e..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SourceByRules.java
+++ /dev/null
@@ -1,161 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Query fields to be included/excluded to/from response
- */
-@JsonPropertyOrder({
-  SourceByRules.JSON_PROPERTY_INCLUDES,
-  SourceByRules.JSON_PROPERTY_EXCLUDES
-})
-@JsonTypeName("sourceByRules")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class SourceByRules {
-  public static final String JSON_PROPERTY_INCLUDES = "includes";
-  private List<String> includes = new ArrayList<>();
-
-  public static final String JSON_PROPERTY_EXCLUDES = "excludes";
-  private List<String> excludes = new ArrayList<>(Arrays.asList(""));
-
-  public SourceByRules() { 
-  }
-
-  public SourceByRules includes(List<String> includes) {
-    this.includes = includes;
-    return this;
-  }
-
-  public SourceByRules addIncludesItem(String includesItem) {
-    if (this.includes == null) {
-      this.includes = new ArrayList<>();
-    }
-    this.includes.add(includesItem);
-    return this;
-  }
-
-   /**
-   * Get includes
-   * @return includes
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_INCLUDES)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public List<String> getIncludes() {
-    return includes;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_INCLUDES)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setIncludes(List<String> includes) {
-    this.includes = includes;
-  }
-
-
-  public SourceByRules excludes(List<String> excludes) {
-    this.excludes = excludes;
-    return this;
-  }
-
-  public SourceByRules addExcludesItem(String excludesItem) {
-    if (this.excludes == null) {
-      this.excludes = new ArrayList<>(Arrays.asList(""));
-    }
-    this.excludes.add(excludesItem);
-    return this;
-  }
-
-   /**
-   * Get excludes
-   * @return excludes
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_EXCLUDES)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public List<String> getExcludes() {
-    return excludes;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_EXCLUDES)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setExcludes(List<String> excludes) {
-    this.excludes = excludes;
-  }
-
-
-  /**
-   * Return true if this sourceByRules object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    SourceByRules sourceByRules = (SourceByRules) o;
-    return Objects.equals(this.includes, sourceByRules.includes) &&
-        Objects.equals(this.excludes, sourceByRules.excludes);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(includes, excludes);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class SourceByRules {\n");
-    sb.append("    includes: ").append(toIndentedString(includes)).append("\n");
-    sb.append("    excludes: ").append(toIndentedString(excludes)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SuccessResponse.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SuccessResponse.java
deleted file mode 100644
index 0847e78..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/SuccessResponse.java
+++ /dev/null
@@ -1,236 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Success response
- */
-@JsonPropertyOrder({
-  SuccessResponse.JSON_PROPERTY_INDEX,
-  SuccessResponse.JSON_PROPERTY_ID,
-  SuccessResponse.JSON_PROPERTY_CREATED,
-  SuccessResponse.JSON_PROPERTY_RESULT,
-  SuccessResponse.JSON_PROPERTY_FOUND
-})
-@JsonTypeName("successResponse")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class SuccessResponse {
-  public static final String JSON_PROPERTY_INDEX = "_index";
-  private String index;
-
-  public static final String JSON_PROPERTY_ID = "_id";
-  private Long id;
-
-  public static final String JSON_PROPERTY_CREATED = "created";
-  private Boolean created;
-
-  public static final String JSON_PROPERTY_RESULT = "result";
-  private String result;
-
-  public static final String JSON_PROPERTY_FOUND = "found";
-  private Boolean found;
-
-  public SuccessResponse() { 
-  }
-
-  public SuccessResponse index(String index) {
-    this.index = index;
-    return this;
-  }
-
-   /**
-   * Get index
-   * @return index
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_INDEX)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public String getIndex() {
-    return index;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_INDEX)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setIndex(String index) {
-    this.index = index;
-  }
-
-
-  public SuccessResponse id(Long id) {
-    this.id = id;
-    return this;
-  }
-
-   /**
-   * Get id
-   * @return id
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_ID)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Long getId() {
-    return id;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_ID)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setId(Long id) {
-    this.id = id;
-  }
-
-
-  public SuccessResponse created(Boolean created) {
-    this.created = created;
-    return this;
-  }
-
-   /**
-   * Get created
-   * @return created
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_CREATED)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Boolean getCreated() {
-    return created;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_CREATED)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setCreated(Boolean created) {
-    this.created = created;
-  }
-
-
-  public SuccessResponse result(String result) {
-    this.result = result;
-    return this;
-  }
-
-   /**
-   * Get result
-   * @return result
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_RESULT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public String getResult() {
-    return result;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_RESULT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setResult(String result) {
-    this.result = result;
-  }
-
-
-  public SuccessResponse found(Boolean found) {
-    this.found = found;
-    return this;
-  }
-
-   /**
-   * Get found
-   * @return found
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_FOUND)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Boolean getFound() {
-    return found;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_FOUND)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setFound(Boolean found) {
-    this.found = found;
-  }
-
-
-  /**
-   * Return true if this successResponse object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    SuccessResponse successResponse = (SuccessResponse) o;
-    return Objects.equals(this.index, successResponse.index) &&
-        Objects.equals(this.id, successResponse.id) &&
-        Objects.equals(this.created, successResponse.created) &&
-        Objects.equals(this.result, successResponse.result) &&
-        Objects.equals(this.found, successResponse.found);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(index, id, created, result, found);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class SuccessResponse {\n");
-    sb.append("    index: ").append(toIndentedString(index)).append("\n");
-    sb.append("    id: ").append(toIndentedString(id)).append("\n");
-    sb.append("    created: ").append(toIndentedString(created)).append("\n");
-    sb.append("    result: ").append(toIndentedString(result)).append("\n");
-    sb.append("    found: ").append(toIndentedString(found)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/UpdateDocumentRequest.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/UpdateDocumentRequest.java
deleted file mode 100644
index 7f13e03..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/UpdateDocumentRequest.java
+++ /dev/null
@@ -1,250 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.Map;
-import org.openapitools.jackson.nullable.JsonNullable;
-import com.fasterxml.jackson.annotation.JsonIgnore;
-import org.openapitools.jackson.nullable.JsonNullable;
-import java.util.NoSuchElementException;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Payload for update document
- */
-@JsonPropertyOrder({
-  UpdateDocumentRequest.JSON_PROPERTY_INDEX,
-  UpdateDocumentRequest.JSON_PROPERTY_DOC,
-  UpdateDocumentRequest.JSON_PROPERTY_ID,
-  UpdateDocumentRequest.JSON_PROPERTY_QUERY
-})
-@JsonTypeName("updateDocumentRequest")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class UpdateDocumentRequest {
-  public static final String JSON_PROPERTY_INDEX = "index";
-  private String index;
-
-  public static final String JSON_PROPERTY_DOC = "doc";
-  private Map<String, Object> doc = new HashMap<>();
-
-  public static final String JSON_PROPERTY_ID = "id";
-  private Long id;
-
-  public static final String JSON_PROPERTY_QUERY = "query";
-  private JsonNullable<Map<String, Object>> query = JsonNullable.<Map<String, Object>>undefined();
-
-  public UpdateDocumentRequest() { 
-  }
-
-  public UpdateDocumentRequest index(String index) {
-    this.index = index;
-    return this;
-  }
-
-   /**
-   * Get index
-   * @return index
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_INDEX)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-
-  public String getIndex() {
-    return index;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_INDEX)
-  @JsonInclude(value = JsonInclude.Include.ALWAYS)
-  public void setIndex(String index) {
-    this.index = index;
-  }
-
-
-  public UpdateDocumentRequest doc(Map<String, Object> doc) {
-    this.doc = doc;
-    return this;
-  }
-
-  public UpdateDocumentRequest putDocItem(String key, Object docItem) {
-    if (this.doc == null) {
-      this.doc = new HashMap<>();
-    }
-    this.doc.put(key, docItem);
-    return this;
-  }
-
-   /**
-   * Index name
-   * @return doc
-  **/
-  @jakarta.annotation.Nonnull
-  @JsonProperty(JSON_PROPERTY_DOC)
-  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.ALWAYS)
-
-  public Map<String, Object> getDoc() {
-    return doc;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_DOC)
-  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.ALWAYS)
-  public void setDoc(Map<String, Object> doc) {
-    this.doc = doc;
-  }
-
-
-  public UpdateDocumentRequest id(Long id) {
-    this.id = id;
-    return this;
-  }
-
-   /**
-   * Document ID
-   * @return id
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_ID)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Long getId() {
-    return id;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_ID)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setId(Long id) {
-    this.id = id;
-  }
-
-
-  public UpdateDocumentRequest query(Map<String, Object> query) {
-    this.query = JsonNullable.<Map<String, Object>>of(query);
-    return this;
-  }
-
-  public UpdateDocumentRequest putQueryItem(String key, Object queryItem) {
-    if (this.query == null || !this.query.isPresent()) {
-      this.query = JsonNullable.<Map<String, Object>>of(new HashMap<>());
-    }
-    try {
-      this.query.get().put(key, queryItem);
-    } catch (java.util.NoSuchElementException e) {
-      // this can never happen, as we make sure above that the value is present
-    }
-    return this;
-  }
-
-   /**
-   * Query tree object
-   * @return query
-  **/
-  @jakarta.annotation.Nullable
-  @JsonIgnore
-
-  public Map<String, Object> getQuery() {
-        return query.orElse(null);
-  }
-
-  @JsonProperty(JSON_PROPERTY_QUERY)
-  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
-
-  public JsonNullable<Map<String, Object>> getQuery_JsonNullable() {
-    return query;
-  }
-  
-  @JsonProperty(JSON_PROPERTY_QUERY)
-  public void setQuery_JsonNullable(JsonNullable<Map<String, Object>> query) {
-    this.query = query;
-  }
-
-  public void setQuery(Map<String, Object> query) {
-    this.query = JsonNullable.<Map<String, Object>>of(query);
-  }
-
-
-  /**
-   * Return true if this updateDocumentRequest object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    UpdateDocumentRequest updateDocumentRequest = (UpdateDocumentRequest) o;
-    return Objects.equals(this.index, updateDocumentRequest.index) &&
-        Objects.equals(this.doc, updateDocumentRequest.doc) &&
-        Objects.equals(this.id, updateDocumentRequest.id) &&
-        equalsNullable(this.query, updateDocumentRequest.query);
-  }
-
-  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
-    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(index, doc, id, hashCodeNullable(query));
-  }
-
-  private static <T> int hashCodeNullable(JsonNullable<T> a) {
-    if (a == null) {
-      return 1;
-    }
-    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class UpdateDocumentRequest {\n");
-    sb.append("    index: ").append(toIndentedString(index)).append("\n");
-    sb.append("    doc: ").append(toIndentedString(doc)).append("\n");
-    sb.append("    id: ").append(toIndentedString(id)).append("\n");
-    sb.append("    query: ").append(toIndentedString(query)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/UpdateResponse.java b/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/UpdateResponse.java
deleted file mode 100644
index cc5bb74..0000000
--- a/out/manticoresearch-java-actual/src/main/java/com/manticoresearch/client/model/UpdateResponse.java
+++ /dev/null
@@ -1,205 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import java.util.Objects;
-import java.util.Map;
-import java.util.HashMap;
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import com.fasterxml.jackson.annotation.JsonPropertyOrder;
-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
-import com.manticoresearch.client.JSON;
-
-
-/**
- * Success response
- */
-@JsonPropertyOrder({
-  UpdateResponse.JSON_PROPERTY_INDEX,
-  UpdateResponse.JSON_PROPERTY_UPDATED,
-  UpdateResponse.JSON_PROPERTY_ID,
-  UpdateResponse.JSON_PROPERTY_RESULT
-})
-@JsonTypeName("updateResponse")
-@JsonIgnoreProperties(ignoreUnknown = true)
-@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-18T11:24:55.908019234Z[Etc/UTC]")
-public class UpdateResponse {
-  public static final String JSON_PROPERTY_INDEX = "_index";
-  private String index;
-
-  public static final String JSON_PROPERTY_UPDATED = "updated";
-  private Integer updated;
-
-  public static final String JSON_PROPERTY_ID = "_id";
-  private Long id;
-
-  public static final String JSON_PROPERTY_RESULT = "result";
-  private String result;
-
-  public UpdateResponse() { 
-  }
-
-  public UpdateResponse index(String index) {
-    this.index = index;
-    return this;
-  }
-
-   /**
-   * Get index
-   * @return index
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_INDEX)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public String getIndex() {
-    return index;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_INDEX)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setIndex(String index) {
-    this.index = index;
-  }
-
-
-  public UpdateResponse updated(Integer updated) {
-    this.updated = updated;
-    return this;
-  }
-
-   /**
-   * Get updated
-   * @return updated
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_UPDATED)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Integer getUpdated() {
-    return updated;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_UPDATED)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setUpdated(Integer updated) {
-    this.updated = updated;
-  }
-
-
-  public UpdateResponse id(Long id) {
-    this.id = id;
-    return this;
-  }
-
-   /**
-   * Get id
-   * @return id
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_ID)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public Long getId() {
-    return id;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_ID)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setId(Long id) {
-    this.id = id;
-  }
-
-
-  public UpdateResponse result(String result) {
-    this.result = result;
-    return this;
-  }
-
-   /**
-   * Get result
-   * @return result
-  **/
-  @jakarta.annotation.Nullable
-  @JsonProperty(JSON_PROPERTY_RESULT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-
-  public String getResult() {
-    return result;
-  }
-
-
-  @JsonProperty(JSON_PROPERTY_RESULT)
-  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
-  public void setResult(String result) {
-    this.result = result;
-  }
-
-
-  /**
-   * Return true if this updateResponse object is equal to o.
-   */
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
-    }
-    if (o == null || getClass() != o.getClass()) {
-      return false;
-    }
-    UpdateResponse updateResponse = (UpdateResponse) o;
-    return Objects.equals(this.index, updateResponse.index) &&
-        Objects.equals(this.updated, updateResponse.updated) &&
-        Objects.equals(this.id, updateResponse.id) &&
-        Objects.equals(this.result, updateResponse.result);
-  }
-
-  @Override
-  public int hashCode() {
-    return Objects.hash(index, updated, id, result);
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("class UpdateResponse {\n");
-    sb.append("    index: ").append(toIndentedString(index)).append("\n");
-    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
-    sb.append("    id: ").append(toIndentedString(id)).append("\n");
-    sb.append("    result: ").append(toIndentedString(result)).append("\n");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  /**
-   * Convert the given object to string with each line indented by 4 spaces
-   * (except the first line).
-   */
-  private String toIndentedString(Object o) {
-    if (o == null) {
-      return "null";
-    }
-    return o.toString().replace("\n", "\n    ");
-  }
-
-}
-
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/api/IndexApiTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/api/IndexApiTest.java
deleted file mode 100644
index ed1a5ba..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/api/IndexApiTest.java
+++ /dev/null
@@ -1,322 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.api;
-
-import com.manticoresearch.client.*;
-import com.manticoresearch.client.auth.*;
-import com.manticoresearch.client.model.*;
-import com.manticoresearch.client.model.BulkResponse;
-import com.manticoresearch.client.model.DeleteDocumentRequest;
-import com.manticoresearch.client.model.DeleteResponse;
-import com.manticoresearch.client.model.ErrorResponse;
-import com.manticoresearch.client.model.InsertDocumentRequest;
-import com.manticoresearch.client.model.SuccessResponse;
-import com.manticoresearch.client.model.UpdateDocumentRequest;
-import com.manticoresearch.client.model.UpdateResponse;
-
-import static org.junit.jupiter.api.Assertions.fail;
-
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-import java.util.Arrays;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-import java.math.BigDecimal;
-/**
- * API tests for IndexApi
- */
-public class IndexApiTest {
-
-    private static final String BASE_PATH = "http://localhost:9408";
-    private IndexApi indexApi;
-    private SearchApi searchApi;
-    private UtilsApi utilsApi;
-     
-	@BeforeEach                                         
-    public void setUp() {
-    	try {
-	        ApiClient client = Configuration.getDefaultApiClient();
-		    client.setBasePath(BASE_PATH);
-		    indexApi = new IndexApi(client);
-		    searchApi = new SearchApi(client);
-		    utilsApi = new UtilsApi(client);
-		    utilsApi.sql("DROP TABLE IF EXISTS movies", true);
-		    utilsApi.sql("DROP TABLE IF EXISTS products", true);
-	    } catch (ApiException e) {
-	      System.err.println("Exception when setting up tests");
-	      System.err.println("Status code: " + e.getCode());
-	      System.err.println("Reason: " + e.getResponseBody());
-	      System.err.println("Response headers: " + e.getResponseHeaders());
-	      e.printStackTrace();
-	    }  
-    }
-    
-    interface PercolateSubTests {
-    	void BuildPercolateRequestData() throws ApiException;
-    }
-    
-    interface SearchSubTests {
-        void BuildSearchRequestData() throws ApiException;
-        void TestBasicSearch(SearchRequest searchRequest) throws ApiException;
-	    void TestSearchSort(SearchRequest searchRequest) throws ApiException;
-	    void TestSearchExpressions(SearchRequest searchRequest) throws ApiException;
-	    void TestSearchAggregations(SearchRequest searchRequest) throws ApiException;
-	    void TestSearchHighlight(SearchRequest searchRequest) throws ApiException;
-	    void TestSearchFulltextFilters(SearchRequest searchRequest) throws ApiException;
-	    void TestSearchAttrFilters(SearchRequest searchRequest) throws ApiException;
-	    void TestSearchBoolFilter(SearchRequest searchRequest) throws ApiException;
-    }
-
-    /**
-     * Bulk index operations
-     *
-     * Sends multiple operatons like inserts, updates, replaces or deletes.  For each operation it&#39;s object must have same format as in their dedicated method.  The method expects a raw string as the batch in NDJSON.  Each operation object needs to be serialized to   JSON and separated by endline (\\n).      An example of raw input:      &#x60;&#x60;&#x60;   {\&quot;insert\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;, \&quot;doc\&quot;: {\&quot;plot\&quot;: \&quot;A secret team goes to North Pole\&quot;, \&quot;rating\&quot;: 9.5, \&quot;language\&quot;: [2, 3], \&quot;title\&quot;: \&quot;This is an older movie\&quot;, \&quot;lon\&quot;: 51.99, \&quot;meta\&quot;: {\&quot;keywords\&quot;:[\&quot;travel\&quot;,\&quot;ice\&quot;],\&quot;genre\&quot;:[\&quot;adventure\&quot;]}, \&quot;year\&quot;: 1950, \&quot;lat\&quot;: 60.4, \&quot;advise\&quot;: \&quot;PG-13\&quot;}}}   \\n   {\&quot;delete\&quot;: {\&quot;index\&quot;: \&quot;movies\&quot;,\&quot;id\&quot;:700}}   &#x60;&#x60;&#x60;      Responds with an object telling whenever any errors occured and an array with status for each operation:      &#x60;&#x60;&#x60;   {     &#39;items&#39;:     [       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;result&#39;:&#39;updated&#39;}       },       {         &#39;update&#39;:{&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:2,&#39;result&#39;:&#39;updated&#39;}       }     ],     &#39;errors&#39;:false   }   &#x60;&#x60;&#x60;   
-     *
-     * @throws ApiException if the Api call fails
-     */
-    @Test
-    public void bulkTest() throws ApiException {
-        //String body = null;
-        //BulkResponse response = api.bulk(body);
-        // TODO: test validations
-        Object sqlresult = utilsApi.sql("CREATE TABLE IF NOT EXISTS products (title text, price float, sizes multi, meta json, coeff float, tags1 multi, tags2 multi)", true);
-    	System.out.println(sqlresult);
-    	
-        String body = "{\"insert\": {\"index\" : \"products\", \"id\" : 3, \"doc\" : {\"title\" : \"Crossbody Bag with Tassel\", \"price\" : 19.85}}}" +"\n"+
-	    "{\"insert\": {\"index\" : \"products\", \"id\" : 4, \"doc\" : {\"title\" : \"microfiber sheet set\", \"price\" : 19.99}}}"+"\n"+
-	    "{\"insert\": {\"index\" : \"products\", \"id\" : 5, \"doc\" : {\"title\" : \"CPet Hair Remover Glove\", \"price\" : 7.99}}}"+"\n";         
-	    BulkResponse bulkresult = indexApi.bulk(body);
-	    System.out.println(bulkresult);
-	    
-	    body = "{ \"update\" : { \"index\" : \"products\", \"doc\": { \"coeff\" : 1000 }, \"query\": { \"range\": { \"price\": { \"gte\": 1000 } } } }} "+"\n"+
-        "{ \"update\" : { \"index\" : \"products\", \"doc\": { \"coeff\" : 0 }, \"query\": { \"range\": { \"price\": { \"lt\": 1000 } } } } }"+"\n";         
-        bulkresult = indexApi.bulk(body);
-        System.out.println(bulkresult);
-
-    }
-
-    /**
-     * Delete a document in an index
-     *
-     * Delete one or several documents. The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a  match query, in which case multiple documents can be delete . Example of input to delete by id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;id&#39;:100}   &#x60;&#x60;&#x60;  Example of input to delete using a query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;  The match query has same syntax as in for searching. Responds with an object telling how many documents got deleted:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-     *
-     * @throws ApiException if the Api call fails
-     */
-    @Test
-    public void deleteTest() throws ApiException {
-        //DeleteDocumentRequest deleteDocumentRequest = null;
-        //DeleteResponse response = api.delete(deleteDocumentRequest);
-        // TODO: test validations
-        
-        Object indexSqlresult = utilsApi.sql("CREATE TABLE IF NOT EXISTS products (title text, price float, sizes multi, meta json, coeff float, tags1 multi, tags2 multi)", true);
-    	System.out.println(indexSqlresult);
-    	
-	    InsertDocumentRequest indexNewdoc = new InsertDocumentRequest();
-        HashMap<String,Object> indexDoc = new HashMap<String,Object>(){{
-            put("title","first");
-            put("tags1",new int[] {4,2,1,3});
-        }};
-        indexNewdoc.index("products").id(1L).setDoc(indexDoc); 
-        indexSqlresult = indexApi.insert(indexNewdoc);
-        
-        indexDoc = new HashMap<String,Object>();
-        indexNewdoc.index("products").id(2L).setDoc(indexDoc); 
-        indexSqlresult = indexApi.insert(indexNewdoc);
-        System.out.println(indexSqlresult);              
-        
-        indexDoc = new HashMap<String,Object>();
-        indexNewdoc.index("products").id(0L).setDoc(indexDoc); 
-        indexSqlresult = indexApi.insert(indexNewdoc);
-        System.out.println(indexSqlresult);
-	    
-
-        DeleteDocumentRequest deleteRequest = new DeleteDocumentRequest();
-        Map<String,Object> query = new HashMap<String,Object>();
-        Map<String,Object> matchExpr = new HashMap<String,Object>();
-        matchExpr.put("*","dummy");
-        query.put("match", matchExpr);
-        deleteRequest.index("products").setQuery(query); 
-        Object sqlresult = indexApi.delete(deleteRequest);
-        System.out.println(sqlresult);
-
-    }
-
-    /**
-     * Create a new document in an index
-     *
-     * Insert a document.  Expects an object like:     &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;id&#39;:701,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is an old movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:1950,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   The document id can also be missing, in which case an autogenerated one will be used:             &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:     {       &#39;title&#39;:&#39;This is a new movie&#39;,       &#39;plot&#39;:&#39;A secret team goes to North Pole&#39;,       &#39;year&#39;:2020,       &#39;rating&#39;:9.5,       &#39;lat&#39;:60.4,       &#39;lon&#39;:51.99,       &#39;advise&#39;:&#39;PG-13&#39;,       &#39;meta&#39;:&#39;{\&quot;keywords\&quot;:{\&quot;travel\&quot;,\&quot;ice\&quot;},\&quot;genre\&quot;:{\&quot;adventure\&quot;}}&#39;,       &#39;language&#39;:[2,3]     }   }   &#x60;&#x60;&#x60;   It responds with an object in format:      &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:701,&#39;created&#39;:true,&#39;result&#39;:&#39;created&#39;,&#39;status&#39;:201}   &#x60;&#x60;&#x60; 
-     *
-     * @throws ApiException if the Api call fails
-     */
-    @Test
-    public void insertTest() throws ApiException {
-        //InsertDocumentRequest insertDocumentRequest = null;
-        //SuccessResponse response = api.insert(insertDocumentRequest);
-        // TODO: test validations
-        
-        Object indexSqlresult = utilsApi.sql("CREATE TABLE IF NOT EXISTS products (title text, price float, sizes multi, meta json, coeff float, tags1 multi, tags2 multi)", true);
-    	System.out.println(indexSqlresult);
-    	
-	    InsertDocumentRequest indexNewdoc = new InsertDocumentRequest();
-        HashMap<String,Object> indexDoc = new HashMap<String,Object>(){{
-            put("title","first");
-            put("tags1",new int[] {4,2,1,3});
-        }};
-        indexNewdoc.index("products").id(1L).setDoc(indexDoc); 
-        indexSqlresult = indexApi.insert(indexNewdoc);
-        
-        indexDoc = new HashMap<String,Object>();
-        indexNewdoc.index("products").id(2L).setDoc(indexDoc); 
-        indexSqlresult = indexApi.insert(indexNewdoc);
-        System.out.println(indexSqlresult);              
-        
-        indexDoc = new HashMap<String,Object>();
-        indexNewdoc.index("products").id(0L).setDoc(indexDoc); 
-        indexSqlresult = indexApi.insert(indexNewdoc);
-        System.out.println(indexSqlresult);
-	    
-
-    }
-
-    /**
-     * Replace new document in an index
-     *
-     * Replace an existing document. Input has same format as &#x60;insert&#x60; operation. &lt;br/&gt; Responds with an object in format: &lt;br/&gt;    &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;_id&#39;:1,&#39;created&#39;:false,&#39;result&#39;:&#39;updated&#39;,&#39;status&#39;:200}   &#x60;&#x60;&#x60; 
-     *
-     * @throws ApiException if the Api call fails
-     */
-    @Test
-    public void replaceTest() throws ApiException {
-        //InsertDocumentRequest insertDocumentRequest = null;
-        //SuccessResponse response = api.replace(insertDocumentRequest);
-        // TODO: test validations
-        
-        Object indexSqlresult = utilsApi.sql("CREATE TABLE IF NOT EXISTS products (title text, price float, sizes multi, meta json, coeff float, tags1 multi, tags2 multi)", true);
-    	System.out.println(indexSqlresult);
-    	
-	    InsertDocumentRequest indexNewdoc = new InsertDocumentRequest();
-        HashMap<String,Object> indexDoc = new HashMap<String,Object>(){{
-            put("title","first");
-            put("tags1",new int[] {4,2,1,3});
-        }};
-        indexNewdoc.index("products").id(1L).setDoc(indexDoc); 
-        indexSqlresult = indexApi.insert(indexNewdoc);
-        
-        indexDoc = new HashMap<String,Object>();
-        indexNewdoc.index("products").id(2L).setDoc(indexDoc); 
-        indexSqlresult = indexApi.insert(indexNewdoc);
-        System.out.println(indexSqlresult);              
-        
-        indexDoc = new HashMap<String,Object>();
-        indexNewdoc.index("products").id(0L).setDoc(indexDoc); 
-        indexSqlresult = indexApi.insert(indexNewdoc);
-        System.out.println(indexSqlresult);
-	    
-        InsertDocumentRequest docRequest = new InsertDocumentRequest();
-		HashMap<String,Object> doc = new HashMap<String,Object>();
-		doc.put("title","document one");
-		doc.put("price",10);
-		docRequest.index("products").id(1L).setDoc(doc); 
-		Object sqlresult = indexApi.replace(docRequest);
-		System.out.println(sqlresult);
-
-    }
-
-    /**
-     * Update a document in an index
-     *
-     * Update one or several documents. The update can be made by passing the id or by using a match query in case multiple documents can be updated.  For example update a document using document id:    &#x60;&#x60;&#x60;   {&#39;index&#39;:&#39;movies&#39;,&#39;doc&#39;:{&#39;rating&#39;:9.49},&#39;id&#39;:100}   &#x60;&#x60;&#x60;  And update by using a match query:    &#x60;&#x60;&#x60;   {     &#39;index&#39;:&#39;movies&#39;,     &#39;doc&#39;:{&#39;rating&#39;:9.49},     &#39;query&#39;:     {       &#39;bool&#39;:       {         &#39;must&#39;:         [           {&#39;query_string&#39;:&#39;new movie&#39;}         ]       }     }   }   &#x60;&#x60;&#x60;   The match query has same syntax as for searching. Responds with an object that tells how many documents where updated in format:     &#x60;&#x60;&#x60;   {&#39;_index&#39;:&#39;products&#39;,&#39;updated&#39;:1}   &#x60;&#x60;&#x60; 
-     *
-     * @throws ApiException if the Api call fails
-     */
-    @Test
-    public void updateTest() throws ApiException {
-        //UpdateDocumentRequest updateDocumentRequest = null;
-        //UpdateResponse response = api.update(updateDocumentRequest);
-        // TODO: test validations
-        
-        Object indexSqlresult = utilsApi.sql("CREATE TABLE IF NOT EXISTS products (title text, price float, sizes multi, meta json, coeff float, tags1 multi, tags2 multi)", true);
-    	System.out.println(indexSqlresult);
-    	
-	    InsertDocumentRequest indexNewdoc = new InsertDocumentRequest();
-        HashMap<String,Object> indexDoc = new HashMap<String,Object>(){{
-            put("title","first");
-            put("tags1",new int[] {4,2,1,3});
-        }};
-        indexNewdoc.index("products").id(1L).setDoc(indexDoc); 
-        indexSqlresult = indexApi.insert(indexNewdoc);
-        
-        indexDoc = new HashMap<String,Object>();
-        indexNewdoc.index("products").id(2L).setDoc(indexDoc); 
-        indexSqlresult = indexApi.insert(indexNewdoc);
-        System.out.println(indexSqlresult);              
-        
-        indexDoc = new HashMap<String,Object>();
-        indexNewdoc.index("products").id(0L).setDoc(indexDoc); 
-        indexSqlresult = indexApi.insert(indexNewdoc);
-        System.out.println(indexSqlresult);
-	    
-        UpdateDocumentRequest updatedoc = new UpdateDocumentRequest();
-	    HashMap<String,Object> doc = new HashMap<String,Object >();
-	    updatedoc.index("products").id(1L).setDoc(doc); 
-	    Object sqlresult = indexApi.update(updatedoc);
-	    System.out.println(sqlresult);
-	        
-	    updatedoc = new UpdateDocumentRequest();
-	    doc = new HashMap<String,Object >(){{
-            put("price",10);
-            put("coeff",3465.23);
-            put("tags1",new int[]{3,6,4});
-            put("tags2",new int[]{});
- 	    }};
-        updatedoc.index("products").id(1L).setDoc(doc); 
-        sqlresult = indexApi.update(updatedoc);
-        System.out.println(sqlresult);              
-         
-        doc = new HashMap<String,Object>(){{
-            put("title","title");
-            put("meta", 
-                 new HashMap<String,Object>(){{
-                     put("tags",new int[]{1,2,3});
-                }}
-            );
-        }};
-        InsertDocumentRequest newdoc = new InsertDocumentRequest();
-        newdoc.index("products").id(100L).setDoc(doc);        
-        sqlresult = indexApi.insert(newdoc);
-        System.out.println(sqlresult);       
-        
-        updatedoc = new UpdateDocumentRequest();
-        doc = new HashMap<String,Object >();
-        updatedoc.index("products").id(100L).setDoc(doc); 
-        sqlresult =  indexApi.update(updatedoc);
-        System.out.println(sqlresult);        
-        
-        updatedoc = new UpdateDocumentRequest();
-        doc = new HashMap<String,Object>(){{
-            put("tags1",new int[]{});
-        }};
-        updatedoc.index("products").id(1L).setDoc(doc); 
-        sqlresult =  indexApi.update(updatedoc);
-        System.out.println(sqlresult);      
-
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/api/SearchApiTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/api/SearchApiTest.java
deleted file mode 100644
index 76ce431..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/api/SearchApiTest.java
+++ /dev/null
@@ -1,492 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.api;
-
-import com.manticoresearch.client.*;
-import com.manticoresearch.client.auth.*;
-import com.manticoresearch.client.model.*;
-import com.manticoresearch.client.model.ErrorResponse;
-import com.manticoresearch.client.model.PercolateRequest;
-import com.manticoresearch.client.model.SearchRequest;
-import com.manticoresearch.client.model.SearchResponse;
-
-import static org.junit.jupiter.api.Assertions.fail;
-
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-import java.util.Arrays;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-import java.math.BigDecimal;
-/**
- * API tests for SearchApi
- */
-public class SearchApiTest {
-
-    private static final String BASE_PATH = "http://localhost:9408";
-    private IndexApi indexApi;
-    private SearchApi searchApi;
-    private UtilsApi utilsApi;
-     
-	@BeforeEach                                         
-    public void setUp() {
-    	try {
-	        ApiClient client = Configuration.getDefaultApiClient();
-		    client.setBasePath(BASE_PATH);
-		    indexApi = new IndexApi(client);
-		    searchApi = new SearchApi(client);
-		    utilsApi = new UtilsApi(client);
-		    utilsApi.sql("DROP TABLE IF EXISTS movies", true);
-		    utilsApi.sql("DROP TABLE IF EXISTS products", true);
-	    } catch (ApiException e) {
-	      System.err.println("Exception when setting up tests");
-	      System.err.println("Status code: " + e.getCode());
-	      System.err.println("Reason: " + e.getResponseBody());
-	      System.err.println("Response headers: " + e.getResponseHeaders());
-	      e.printStackTrace();
-	    }  
-    }
-    
-    interface PercolateSubTests {
-    	void BuildPercolateRequestData() throws ApiException;
-    }
-    
-    interface SearchSubTests {
-        void BuildSearchRequestData() throws ApiException;
-        void TestBasicSearch(SearchRequest searchRequest) throws ApiException;
-	    void TestSearchSort(SearchRequest searchRequest) throws ApiException;
-	    void TestSearchExpressions(SearchRequest searchRequest) throws ApiException;
-	    void TestSearchAggregations(SearchRequest searchRequest) throws ApiException;
-	    void TestSearchHighlight(SearchRequest searchRequest) throws ApiException;
-	    void TestSearchFulltextFilters(SearchRequest searchRequest) throws ApiException;
-	    void TestSearchAttrFilters(SearchRequest searchRequest) throws ApiException;
-	    void TestSearchBoolFilter(SearchRequest searchRequest) throws ApiException;
-    }
-
-    /**
-     * Perform reverse search on a percolate index
-     *
-     * Performs a percolate search.  This method must be used only on percolate indexes.  Expects two parameters: the index name and an object with array of documents to be tested. An example of the documents object:    &#x60;&#x60;&#x60;   {     \&quot;query\&quot;:     {       \&quot;percolate\&quot;:       {         \&quot;document\&quot;:         {           \&quot;content\&quot;:\&quot;sample content\&quot;         }       }     }   }   &#x60;&#x60;&#x60;  Responds with an object with matched stored queries:     &#x60;&#x60;&#x60;   {     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;max_score&#39;:1,       &#39;hits&#39;:       [         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;2&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;match&#39;:{&#39;title&#39;:&#39;some&#39;}             }           }         },         {           &#39;_index&#39;:&#39;idx_pq_1&#39;,           &#39;_type&#39;:&#39;doc&#39;,           &#39;_id&#39;:&#39;5&#39;,           &#39;_score&#39;:&#39;1&#39;,           &#39;_source&#39;:           {             &#39;query&#39;:             {               &#39;ql&#39;:&#39;some | none&#39;             }           }         }       ]     }   }   &#x60;&#x60;&#x60; 
-     *
-     * @throws ApiException if the Api call fails
-     */
-    @Test
-    public void percolateTest() throws ApiException {
-        //String index = null;
-        //PercolateRequest percolateRequest = null;
-        //SearchResponse response = api.percolate(index, percolateRequest);
-        // TODO: test validations
-        PercolateSubTests subTests = new PercolateSubTests() {
-            public void BuildPercolateRequestData() throws ApiException
-            {
-                String sql ="DROP TABLE IF EXISTS products";
-		        Object sqlresult = utilsApi.sql(sql, true);
-		        sqlresult = utilsApi.sql("create table products(title text, color string) type='pq'", true);
-		        System.out.println(sqlresult);
-		        HashMap<String,Object> doc = new HashMap<String,Object>();
-		        InsertDocumentRequest newdoc = new InsertDocumentRequest();
-		        newdoc.index("products").setDoc(doc); 
-		        sqlresult = indexApi.insert(newdoc);
-		        System.out.println(sqlresult);
-		        
-		        doc = new HashMap<String,Object>();
-		        doc.put("query", "@title shoes");
-		        doc.put("filters", "color='red'");
-		        
-		        newdoc = new InsertDocumentRequest();
-		        newdoc.index("products").setDoc(doc); 
-		        sqlresult =  indexApi.insert(newdoc);
-		        System.out.println(sqlresult);
-		        
-		        doc = new HashMap<String,Object>();
-		        doc.put("query", "@title shoes");
-		        doc.put("filters", "color IN ('blue', 'green')");
-
-		        newdoc = new InsertDocumentRequest();
-		        newdoc.index("products").setDoc(doc); 
-		        sqlresult =  indexApi.insert(newdoc);
-		        System.out.println(sqlresult);
-            };
-	    };
-        
-		PercolateRequest percolateRequest = new PercolateRequest();
-		PercolateRequestQuery percolateRequestQuery = new PercolateRequestQuery();
-        
-	    Map<String,Object> query = new HashMap<String,Object >(){{
-	        put("document", new HashMap<String,Object >());
-		}};
-	    percolateRequestQuery.setPercolate(query);
-	    percolateRequest.query(percolateRequestQuery);
-	    Object sqlresult = searchApi.percolate("products",percolateRequest);
- 		System.out.println(sqlresult);  
- 		
-	 	percolateRequest = new PercolateRequest();
-	    
-	    Map<String,Object> doc = new HashMap<String,Object>(); 
-        doc.put("title","nice pair of shoes");
-	    doc.put("color","blue");
-	    List<Object> docs = new ArrayList<Object>();
-	    docs.add(doc);
-	    docs.add(new HashMap<String,Object >());
-	    query = new HashMap<String,Object >();
-	    query.put("documents", docs);
-        
-	    percolateRequestQuery.setPercolate(query);
-		percolateRequest.query(percolateRequestQuery);
-	    sqlresult = searchApi.percolate("products",percolateRequest);
-	 	System.out.println(sqlresult);  
- 
- 		percolateRequest = new PercolateRequest();
-        doc = new HashMap<String,Object>();
-        doc.put("title","angry test");
-	    doc.put("gid",3);
-	    Map<String,Object> doc2 = new HashMap<String,Object>();
-	    doc2.put("title","filter test doc2");
-	    doc2.put("gid",13);
-	    docs = new ArrayList<Object>();
-	    docs.add(doc);
-        docs.add(doc2);
-	    query = new HashMap<String,Object>();
-	    query.put("documents", docs);
-	    
-	    percolateRequestQuery.setPercolate(query);
-		percolateRequest.query(percolateRequestQuery);
-    
-		sqlresult = searchApi.percolate("products", percolateRequest);
-		System.out.println(sqlresult);
-	
-		
-		System.out.println("Percolate tests finished");         
-
-    }
-
-    /**
-     * Performs a search on an index
-     *
-     *  The method expects an object with the following mandatory properties: * the name of the index to search * the match query object For details, see the documentation on [**SearchRequest**](SearchRequest.md) The method returns an object with the following properties: - took: the time taken to execute the search query. - timed_out: a boolean indicating whether the query timed out. - hits: an object with the following properties:    - total: the total number of hits found.    - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:      - _id: the ID of the matched document.      - _score: the score of the matched document.      - _source: the source data of the matched document.  In addition, if profiling is enabled, the response will include an additional array with profiling information attached. Here is an example search response:    &#x60;&#x60;&#x60;   {     &#39;took&#39;:10,     &#39;timed_out&#39;:false,     &#39;hits&#39;:     {       &#39;total&#39;:2,       &#39;hits&#39;:       [         {&#39;_id&#39;:&#39;1&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:11}},         {&#39;_id&#39;:&#39;2&#39;,&#39;_score&#39;:1,&#39;_source&#39;:{&#39;gid&#39;:12}}       ]     }   }   &#x60;&#x60;&#x60;  For more information about the match query syntax and additional parameters that can be added to request and response, please see the documentation [here](https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON). 
-     *
-     * @throws ApiException if the Api call fails
-     */
-    @Test
-    public void searchTest() throws ApiException {
-        //SearchRequest searchRequest = null;
-        //SearchResponse response = api.search(searchRequest);
-        // TODO: test validations
-		try {
-	        SearchSubTests subTests = new SearchSubTests() {
-	            public void BuildSearchRequestData() throws ApiException
-	            {
-	                utilsApi.sql("CREATE TABLE IF NOT EXISTS movies (title text, plot text, year integer, rating float, code multi)", true);
-    
-				    List<String> docs = Arrays.asList(
-						"{\"insert\": {\"index\" : \"movies\", \"id\" : 1, \"doc\" : {\"title\" : \"Star Trek 2: Nemesis\", \"plot\": \"The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.\", \"year\": 2002, \"rating\": 6.4, \"code\": [1,2,3]}}}",
-				        "{\"insert\": {\"index\" : \"movies\", \"id\" : 2, \"doc\" : {\"title\" : \"Star Trek 1: Nemesis\", \"plot\": \"The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.\", \"year\": 2001, \"rating\": 6.5, \"code\": [1,12,3]}}}",
-				        "{\"insert\": {\"index\" : \"movies\", \"id\" : 3, \"doc\" : {\"title\" : \"Star Trek 3: Nemesis\", \"plot\": \"The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.\", \"year\": 2003, \"rating\": 6.6, \"code\": [11,2,3]}}}",
-				        "{\"insert\": {\"index\" : \"movies\", \"id\" : 4, \"doc\" : {\"title\" : \"Star Trek 4: Nemesis\", \"plot\": \"The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.\", \"year\": 2003, \"rating\": 6, \"code\": [1,2,4]}}}"					        	
-				    );
-			
-					BulkResponse res = indexApi.bulk( String.join("\n", docs) );
-					System.out.println(res);
-	            };
-	            
-	            public void TestSearchBoolFilter(SearchRequest searchRequest) throws ApiException
-				{
-					BoolFilter boolFilter = new BoolFilter();
-					EqualsFilter equalsFilter = new EqualsFilter();
-					equalsFilter.setField("year");
-					equalsFilter.setValue(2003);
-					boolFilter.setMust( new ArrayList<Object>( Arrays.asList(equalsFilter) ) );
-					RangeFilter rangeFilter = new RangeFilter();
-					rangeFilter.setField("rating");
-					rangeFilter.setLte(BigDecimal.valueOf(6));
-					List<Object> mustFilter = boolFilter.getMust();
-					mustFilter.add(rangeFilter);
-					boolFilter.setMust(mustFilter);
-					searchRequest.setAttrFilter(boolFilter);
-			
-					SearchResponse searchResponse = searchApi.search(searchRequest);
-					System.out.println(searchResponse);
-			
-					equalsFilter = new EqualsFilter();
-					equalsFilter.setField("year");
-					equalsFilter.setValue(2001);
-					boolFilter.setMustNot( Arrays.asList(equalsFilter) );
-					searchRequest.setAttrFilter(boolFilter);
-			
-					searchResponse = searchApi.search(searchRequest);
-					System.out.println(searchResponse);
-					
-					boolFilter = new BoolFilter();
-					
-					MatchFilter fulltextFilter = new MatchFilter();
-					fulltextFilter.setQueryString("Star");
-					fulltextFilter.setQueryFields("title");
-					BoolFilter nestedBoolFilter = new BoolFilter();
-					equalsFilter = new EqualsFilter();
-					equalsFilter.setField("rating");
-					equalsFilter.setValue(6.5);
-					nestedBoolFilter.setShould( Arrays.asList(equalsFilter, fulltextFilter) );
-					boolFilter.setMust( Arrays.asList(nestedBoolFilter) );
-					searchRequest.setAttrFilter(boolFilter);
-													
-					searchResponse = searchApi.search(searchRequest);
-					System.out.println(searchResponse);
-				}
-			
-			    public void TestSearchAttrFilters(SearchRequest searchRequest) throws ApiException
-			    {
-			    	EqualsFilter equalsFilter = new EqualsFilter();
-					equalsFilter.setField("year");
-					equalsFilter.setValue(2003);
-					searchRequest.setAttrFilter(equalsFilter);
-			
-					SearchResponse searchResponse = searchApi.search(searchRequest);
-					System.out.println(searchResponse);
-					
-					InFilter inFilter = new InFilter();
-					inFilter.setField("year");
-					inFilter.setValues( Arrays.asList(2001, 2002) );
-			        searchRequest.setAttrFilter(inFilter);
-			
-			        searchResponse = searchApi.search(searchRequest);
-			        System.out.println(searchResponse);
-					
-					RangeFilter rangeFilter = new RangeFilter();
-					rangeFilter.setField("year");
-					rangeFilter.setLte(BigDecimal.valueOf(2001));
-					rangeFilter.setGte(BigDecimal.valueOf(0));
-					searchRequest.setAttrFilter(rangeFilter);
-			
-					searchResponse = searchApi.search(searchRequest);
-					System.out.println(searchResponse);
-			
-					rangeFilter.setField("rating");
-					rangeFilter.setGt(BigDecimal.valueOf(1.5));
-					searchRequest.setAttrFilter(rangeFilter);
-			
-					searchResponse = searchApi.search(searchRequest);
-					System.out.println(searchResponse);
-			
-					GeoDistanceFilter geoFilter = new GeoDistanceFilter();
-					GeoDistanceFilterLocationAnchor locAnchor = new GeoDistanceFilterLocationAnchor();
-					locAnchor.setLat(BigDecimal.valueOf(10));
-					locAnchor.setLon(BigDecimal.valueOf(20));
-					geoFilter.setLocationAnchor(locAnchor);
-					geoFilter.setLocationSource("year,rating");
-					geoFilter.setDistanceType(GeoDistanceFilter.DistanceTypeEnum.ADAPTIVE);
-					geoFilter.setDistance("100km");
-					searchRequest.setAttrFilter(geoFilter);
-			
-					searchResponse = searchApi.search(searchRequest);
-					System.out.println(searchResponse);
-			    }
-			
-			    public void TestSearchFulltextFilters(SearchRequest searchRequest) throws ApiException
-			    {
-			    	MatchFilter matchFilter = new MatchFilter();
-					matchFilter.setQueryString("Nemesis");
-					matchFilter.setQueryFields("title");	
-					searchRequest.setFulltextFilter(matchFilter);
-			
-					SearchResponse searchResponse = searchApi.search(searchRequest);
-					System.out.println(searchResponse);
-					
-					MatchPhraseFilter matchPhraseFilter = new MatchPhraseFilter();
-					matchPhraseFilter.setQueryPhrase("Star Trek 2");
-					matchPhraseFilter.setQueryFields("title");
-					searchRequest.setFulltextFilter(matchPhraseFilter);
-			
-					searchResponse = searchApi.search(searchRequest);
-					System.out.println(searchResponse);
-					
-					MatchOpFilter matchOpFilter = new MatchOpFilter();
-					matchOpFilter.setQueryString("Enterprise test");
-					matchOpFilter.setQueryFields("title,plot");
-					matchOpFilter.setOperator(MatchOpFilter.OperatorEnum.OR);
-					searchRequest.setFulltextFilter(matchOpFilter);
-			
-					searchResponse = searchApi.search(searchRequest);
-					System.out.println(searchResponse);
-			    }
-			
-			    public void TestSearchHighlight(SearchRequest searchRequest) throws ApiException
-			    {
-			    	Highlight highlight = new Highlight();
-			    	highlight.setFieldnames( Arrays.asList("title") );
-			    	highlight.setPostTags("</post_tag>");
-				    highlight.setEncoder(Highlight.EncoderEnum.DEFAULT);
-			        highlight.setSnippetBoundary(Highlight.SnippetBoundaryEnum.SENTENCE);
-			    	searchRequest.setHighlight(highlight);
-			
-			    	SearchResponse searchResponse = searchApi.search(searchRequest);
-			    	System.out.println(searchResponse);
-			
-					HighlightField highlightField = new HighlightField();
-					highlightField.setName("title");
-					highlightField.setLimit(5);
-					List<HighlightField> highlightFields = new ArrayList<HighlightField>( Arrays.asList(highlightField) );
-					highlight.setFields(highlightFields);
-					searchRequest.setHighlight(highlight);
-			
-					searchResponse = searchApi.search(searchRequest);
-					System.out.println(searchResponse);
-					
-					highlightField = new HighlightField();
-					highlightField.setName("plot");
-					highlightField.setLimitWords(10);
-					highlightFields = highlight.getFields();
-			    	highlightFields.add(highlightField);
-			    	highlight.setFields(highlightFields);
-			    	
-			    	searchRequest.setHighlight(highlight);
-			
-			    	searchResponse = searchApi.search(searchRequest);
-			    	System.out.println(searchResponse);
-			
-			    	HashMap<String,Object> highlightQuery = new HashMap<String,Object>(){{
-			            put("match", new HashMap<String,Object>());
-			        }};
-			    	highlight.setHighlightQuery(highlightQuery);
-			
-			    	searchResponse = searchApi.search(searchRequest);
-			    	System.out.println(searchResponse);
-			    }
-			
-			    public void TestSearchAggregations(SearchRequest searchRequest) throws ApiException
-			    {
-			    	AggregationTerms terms = new AggregationTerms();
-			    	terms.setField("year");
-			    	terms.setSize(10);
-			    	Aggregation agg = new Aggregation();
-			    	agg.setTerms(terms);
-			    	Map<String,Aggregation> aggs = new HashMap<String, Aggregation>();
-					aggs.put("agg1", agg);
-					
-					searchRequest.setAggs(aggs);
-			
-					SearchResponse searchResponse = searchApi.search(searchRequest);
-					System.out.println(searchResponse);
-					
-					terms = new AggregationTerms();
-					terms.setField("rating");
-					agg = new Aggregation();
-					agg.setTerms(terms);
-					Map<String,AggregationSortInnerValue> sortExpr = new HashMap<String,AggregationSortInnerValue>();
-					AggregationSortInnerValue sortValue = new AggregationSortInnerValue();
-					sortValue.setOrder("asc");
-					sortExpr.put("rating", sortValue);
-					agg.sort( Arrays.asList(sortExpr) );
-			        aggs.put("agg2", agg);
-			        
-			        searchRequest.setAggs(aggs);
-			
-					searchResponse = searchApi.search(searchRequest);
-					System.out.println(searchResponse);
-			    }
-			
-			    public void TestSearchExpressions(SearchRequest searchRequest) throws ApiException
-			    {
-			    	Map<String,String> expressions = new HashMap<String,String>();
-			    	expressions.put("expr2", "max(year,2100)");
-			    	searchRequest.setExpressions(expressions);
-			
-			        SourceByRules source = (SourceByRules)searchRequest.getSource();
-			        List<String> includes = new ArrayList<String>( Arrays.asList("expr1", "expr2") );
-			        source.setIncludes(includes);
-			        searchRequest.setSource(source);
-			
-			    	SearchResponse searchResponse = searchApi.search(searchRequest);
-			    	System.out.println(searchResponse);
-			    }
-			
-			    public void TestSearchSort(SearchRequest searchRequest) throws ApiException
-			    {
-			        List<Object> sort = new ArrayList<Object>( Arrays.asList("year") );
-					SortOrder sort2 = new SortOrder();
-					sort2.setAttr("rating");
-					sort2.setOrder(SortOrder.OrderEnum.ASC);
-					sort.add(sort2);
-					SortMVA sort3 = new SortMVA();
-					sort3.setAttr("code");
-					sort3.setOrder(SortMVA.OrderEnum.DESC);
-					sort3.setMode(SortMVA.ModeEnum.MAX);
-					sort.add(sort3);
-					searchRequest.setSort(sort);
-			
-					SearchResponse searchResponse = searchApi.search(searchRequest);
-					System.out.println(searchResponse);
-			    }
-			
-			    public void TestBasicSearch(SearchRequest searchRequest) throws ApiException
-			    {
-			    	
-					Map<String,Object> query = new HashMap<String,Object>();
-			        query.put("query_string", "Star");
-			        searchRequest.setIndex("movies");
-			        searchRequest.setQuery(query);
-					searchRequest.setLimit(10);
-					searchRequest.setTrackScores(false);
-			
-					SearchResponse searchResponse = searchApi.search(searchRequest);
-					System.out.println(searchResponse);
-			
-					Map<String,Object> options = new HashMap<String,Object>();
-					options.put("cutoff", 5);
-					options.put("ranker", "bm25");
-					searchRequest.setOptions(options);
-					
-					searchRequest.setSource("title");
-					
-					searchResponse = searchApi.search(searchRequest);
-					System.out.println(searchResponse);
-			        
-			        List<String> includes = new ArrayList<String>( Arrays.asList("title", "year", "rating") );
-					List<String> excludes = Arrays.asList("code");
-					SourceByRules source = new SourceByRules();
-					source.setIncludes(includes);
-					source.setExcludes(excludes);
-					searchRequest.setSource(source);
-					
-					searchResponse = searchApi.search(searchRequest);
-					System.out.println(searchResponse);
-			    }
-	            
-	        };
-	        
-	        SearchRequest searchRequest = new SearchRequest();
-	        subTests.BuildSearchRequestData();
-	        subTests.TestBasicSearch(searchRequest);
-	        subTests.TestSearchSort(searchRequest);
-	        subTests.TestSearchExpressions(searchRequest);
-	        subTests.TestSearchAggregations(searchRequest);
-	        subTests.TestSearchHighlight(searchRequest);
-	        subTests.TestSearchFulltextFilters(searchRequest);
-	        subTests.TestSearchAttrFilters(searchRequest);
-	        subTests.TestSearchBoolFilter(searchRequest);
-	        
-	        System.out.println("Search tests finished");
-        } catch (ApiException e) {
-	      e.printStackTrace();
-	      fail("Test failed: " + e.getResponseBody());
-	    }         
-
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/api/UtilsApiTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/api/UtilsApiTest.java
deleted file mode 100644
index 27f7b54..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/api/UtilsApiTest.java
+++ /dev/null
@@ -1,128 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.api;
-
-import com.manticoresearch.client.*;
-import com.manticoresearch.client.auth.*;
-import com.manticoresearch.client.model.*;
-import com.manticoresearch.client.model.ErrorResponse;
-
-import static org.junit.jupiter.api.Assertions.fail;
-
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-import java.util.Arrays;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-import java.math.BigDecimal;
-/**
- * API tests for UtilsApi
- */
-public class UtilsApiTest {
-
-    private static final String BASE_PATH = "http://localhost:9408";
-    private IndexApi indexApi;
-    private SearchApi searchApi;
-    private UtilsApi utilsApi;
-     
-	@BeforeEach                                         
-    public void setUp() {
-    	try {
-	        ApiClient client = Configuration.getDefaultApiClient();
-		    client.setBasePath(BASE_PATH);
-		    indexApi = new IndexApi(client);
-		    searchApi = new SearchApi(client);
-		    utilsApi = new UtilsApi(client);
-		    utilsApi.sql("DROP TABLE IF EXISTS movies", true);
-		    utilsApi.sql("DROP TABLE IF EXISTS products", true);
-	    } catch (ApiException e) {
-	      System.err.println("Exception when setting up tests");
-	      System.err.println("Status code: " + e.getCode());
-	      System.err.println("Reason: " + e.getResponseBody());
-	      System.err.println("Response headers: " + e.getResponseHeaders());
-	      e.printStackTrace();
-	    }  
-    }
-    
-    interface PercolateSubTests {
-    	void BuildPercolateRequestData() throws ApiException;
-    }
-    
-    interface SearchSubTests {
-        void BuildSearchRequestData() throws ApiException;
-        void TestBasicSearch(SearchRequest searchRequest) throws ApiException;
-	    void TestSearchSort(SearchRequest searchRequest) throws ApiException;
-	    void TestSearchExpressions(SearchRequest searchRequest) throws ApiException;
-	    void TestSearchAggregations(SearchRequest searchRequest) throws ApiException;
-	    void TestSearchHighlight(SearchRequest searchRequest) throws ApiException;
-	    void TestSearchFulltextFilters(SearchRequest searchRequest) throws ApiException;
-	    void TestSearchAttrFilters(SearchRequest searchRequest) throws ApiException;
-	    void TestSearchBoolFilter(SearchRequest searchRequest) throws ApiException;
-    }
-
-    /**
-     * Perform SQL requests
-     *
-     * Run a query in SQL format. Expects a query string passed through &#x60;body&#x60; parameter and optional &#x60;raw_response&#x60; parameter that defines a format of response. &#x60;raw_response&#x60; can be set to &#x60;False&#x60; for Select queries only, e.g., &#x60;SELECT * FROM myindex&#x60; The query string must stay as it is, no URL encoding is needed. The response object depends on the query executed. In select mode the response has same format as &#x60;/search&#x60; operation. 
-     *
-     * @throws ApiException if the Api call fails
-     */
-    @Test
-    public void sqlTest() throws ApiException {
-        //String body = null;
-        //Boolean rawResponse = null;
-        //List<Object> response = api.sql(body, rawResponse);
-        // TODO: test validations
-        try {
-        	ApiClient client = Configuration.getDefaultApiClient();
-		    client.setBasePath(BASE_PATH);
-		    UtilsApi utilsApi = new UtilsApi(client);
-		    
-	        String sql ="DROP TABLE IF EXISTS products";
-	        Object sqlresult = utilsApi.sql(sql, true);
-	        System.out.println(sqlresult);
-	        
-	        sqlresult = utilsApi.sql("CREATE TABLE IF NOT EXISTS products (title text, price float, sizes multi, meta json, coeff float, tags1 multi, tags2 multi)", true);
-	        System.out.println(sqlresult);        
-	
-	        sql ="SELECT * FROM products";
-	        sqlresult = utilsApi.sql(sql, false);
-	        System.out.println(sqlresult);        
-	        
-	        sql ="SELECT * FROM products";
-	        sqlresult = utilsApi.sql(sql, false);
-	        System.out.println(sqlresult);
-	        
-	        sql ="TRUNCATE TABLE products";
-	        sqlresult = utilsApi.sql(sql, true);
-	        System.out.println(sqlresult); 
-	        
-	        sqlresult =  utilsApi.sql("SHOW TABLES", true);
-        	System.out.println(sqlresult);
-	        
-	        System.out.println("Util tests finished");
-        } catch (ApiException e) {
-	      e.printStackTrace();
-	      fail("Test failed: " + e.getResponseBody());
-	    }
-
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/AggregationSortInnerValueTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/AggregationSortInnerValueTest.java
deleted file mode 100644
index 30401f7..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/AggregationSortInnerValueTest.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for AggregationSortInnerValue
- */
-public class AggregationSortInnerValueTest {
-    private final AggregationSortInnerValue model = new AggregationSortInnerValue();
-
-    /**
-     * Model tests for AggregationSortInnerValue
-     */
-    @Test
-    public void testAggregationSortInnerValue() {
-        // TODO: test AggregationSortInnerValue
-    }
-
-    /**
-     * Test the property 'order'
-     */
-    @Test
-    public void orderTest() {
-        // TODO: test order
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/AggregationTermsTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/AggregationTermsTest.java
deleted file mode 100644
index 4fc91aa..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/AggregationTermsTest.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for AggregationTerms
- */
-public class AggregationTermsTest {
-    private final AggregationTerms model = new AggregationTerms();
-
-    /**
-     * Model tests for AggregationTerms
-     */
-    @Test
-    public void testAggregationTerms() {
-        // TODO: test AggregationTerms
-    }
-
-    /**
-     * Test the property 'field'
-     */
-    @Test
-    public void fieldTest() {
-        // TODO: test field
-    }
-
-    /**
-     * Test the property 'size'
-     */
-    @Test
-    public void sizeTest() {
-        // TODO: test size
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/AggregationTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/AggregationTest.java
deleted file mode 100644
index e7ce388..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/AggregationTest.java
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import com.manticoresearch.client.model.AggregationSortInnerValue;
-import com.manticoresearch.client.model.AggregationTerms;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-import java.util.Map;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for Aggregation
- */
-public class AggregationTest {
-    private final Aggregation model = new Aggregation();
-
-    /**
-     * Model tests for Aggregation
-     */
-    @Test
-    public void testAggregation() {
-        // TODO: test Aggregation
-    }
-
-    /**
-     * Test the property 'terms'
-     */
-    @Test
-    public void termsTest() {
-        // TODO: test terms
-    }
-
-    /**
-     * Test the property 'sort'
-     */
-    @Test
-    public void sortTest() {
-        // TODO: test sort
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/BoolFilterTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/BoolFilterTest.java
deleted file mode 100644
index 5be002a..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/BoolFilterTest.java
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for BoolFilter
- */
-public class BoolFilterTest {
-    private final BoolFilter model = new BoolFilter();
-
-    /**
-     * Model tests for BoolFilter
-     */
-    @Test
-    public void testBoolFilter() {
-        // TODO: test BoolFilter
-    }
-
-    /**
-     * Test the property 'should'
-     */
-    @Test
-    public void shouldTest() {
-        // TODO: test should
-    }
-
-    /**
-     * Test the property 'must'
-     */
-    @Test
-    public void mustTest() {
-        // TODO: test must
-    }
-
-    /**
-     * Test the property 'mustNot'
-     */
-    @Test
-    public void mustNotTest() {
-        // TODO: test mustNot
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/BulkResponseTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/BulkResponseTest.java
deleted file mode 100644
index 4044aae..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/BulkResponseTest.java
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for BulkResponse
- */
-public class BulkResponseTest {
-    private final BulkResponse model = new BulkResponse();
-
-    /**
-     * Model tests for BulkResponse
-     */
-    @Test
-    public void testBulkResponse() {
-        // TODO: test BulkResponse
-    }
-
-    /**
-     * Test the property 'items'
-     */
-    @Test
-    public void itemsTest() {
-        // TODO: test items
-    }
-
-    /**
-     * Test the property 'errors'
-     */
-    @Test
-    public void errorsTest() {
-        // TODO: test errors
-    }
-
-    /**
-     * Test the property 'error'
-     */
-    @Test
-    public void errorTest() {
-        // TODO: test error
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/DeleteDocumentRequestTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/DeleteDocumentRequestTest.java
deleted file mode 100644
index 958a4fa..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/DeleteDocumentRequestTest.java
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for DeleteDocumentRequest
- */
-public class DeleteDocumentRequestTest {
-    private final DeleteDocumentRequest model = new DeleteDocumentRequest();
-
-    /**
-     * Model tests for DeleteDocumentRequest
-     */
-    @Test
-    public void testDeleteDocumentRequest() {
-        // TODO: test DeleteDocumentRequest
-    }
-
-    /**
-     * Test the property 'index'
-     */
-    @Test
-    public void indexTest() {
-        // TODO: test index
-    }
-
-    /**
-     * Test the property 'cluster'
-     */
-    @Test
-    public void clusterTest() {
-        // TODO: test cluster
-    }
-
-    /**
-     * Test the property 'id'
-     */
-    @Test
-    public void idTest() {
-        // TODO: test id
-    }
-
-    /**
-     * Test the property 'query'
-     */
-    @Test
-    public void queryTest() {
-        // TODO: test query
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/DeleteResponseTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/DeleteResponseTest.java
deleted file mode 100644
index 5b45787..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/DeleteResponseTest.java
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for DeleteResponse
- */
-public class DeleteResponseTest {
-    private final DeleteResponse model = new DeleteResponse();
-
-    /**
-     * Model tests for DeleteResponse
-     */
-    @Test
-    public void testDeleteResponse() {
-        // TODO: test DeleteResponse
-    }
-
-    /**
-     * Test the property 'index'
-     */
-    @Test
-    public void indexTest() {
-        // TODO: test index
-    }
-
-    /**
-     * Test the property 'deleted'
-     */
-    @Test
-    public void deletedTest() {
-        // TODO: test deleted
-    }
-
-    /**
-     * Test the property 'id'
-     */
-    @Test
-    public void idTest() {
-        // TODO: test id
-    }
-
-    /**
-     * Test the property 'result'
-     */
-    @Test
-    public void resultTest() {
-        // TODO: test result
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/EqualsFilterTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/EqualsFilterTest.java
deleted file mode 100644
index c68869a..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/EqualsFilterTest.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for EqualsFilter
- */
-public class EqualsFilterTest {
-    private final EqualsFilter model = new EqualsFilter();
-
-    /**
-     * Model tests for EqualsFilter
-     */
-    @Test
-    public void testEqualsFilter() {
-        // TODO: test EqualsFilter
-    }
-
-    /**
-     * Test the property 'field'
-     */
-    @Test
-    public void fieldTest() {
-        // TODO: test field
-    }
-
-    /**
-     * Test the property 'value'
-     */
-    @Test
-    public void valueTest() {
-        // TODO: test value
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/ErrorResponseTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/ErrorResponseTest.java
deleted file mode 100644
index 7312efd..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/ErrorResponseTest.java
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.Map;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for ErrorResponse
- */
-public class ErrorResponseTest {
-    private final ErrorResponse model = new ErrorResponse();
-
-    /**
-     * Model tests for ErrorResponse
-     */
-    @Test
-    public void testErrorResponse() {
-        // TODO: test ErrorResponse
-    }
-
-    /**
-     * Test the property 'error'
-     */
-    @Test
-    public void errorTest() {
-        // TODO: test error
-    }
-
-    /**
-     * Test the property 'status'
-     */
-    @Test
-    public void statusTest() {
-        // TODO: test status
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/FacetTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/FacetTest.java
deleted file mode 100644
index 3739cea..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/FacetTest.java
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for Facet
- */
-public class FacetTest {
-    private final Facet model = new Facet();
-
-    /**
-     * Model tests for Facet
-     */
-    @Test
-    public void testFacet() {
-        // TODO: test Facet
-    }
-
-    /**
-     * Test the property 'attr'
-     */
-    @Test
-    public void attrTest() {
-        // TODO: test attr
-    }
-
-    /**
-     * Test the property 'alias'
-     */
-    @Test
-    public void aliasTest() {
-        // TODO: test alias
-    }
-
-    /**
-     * Test the property 'limit'
-     */
-    @Test
-    public void limitTest() {
-        // TODO: test limit
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/FilterBooleanTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/FilterBooleanTest.java
deleted file mode 100644
index b9e3cff..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/FilterBooleanTest.java
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for FilterBoolean
- */
-public class FilterBooleanTest {
-    private final FilterBoolean model = new FilterBoolean();
-
-    /**
-     * Model tests for FilterBoolean
-     */
-    @Test
-    public void testFilterBoolean() {
-        // TODO: test FilterBoolean
-    }
-
-    /**
-     * Test the property 'filterField'
-     */
-    @Test
-    public void filterFieldTest() {
-        // TODO: test filterField
-    }
-
-    /**
-     * Test the property 'operation'
-     */
-    @Test
-    public void operationTest() {
-        // TODO: test operation
-    }
-
-    /**
-     * Test the property 'filterValue'
-     */
-    @Test
-    public void filterValueTest() {
-        // TODO: test filterValue
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/FilterNumberTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/FilterNumberTest.java
deleted file mode 100644
index dc8d519..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/FilterNumberTest.java
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.math.BigDecimal;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for FilterNumber
- */
-public class FilterNumberTest {
-    private final FilterNumber model = new FilterNumber();
-
-    /**
-     * Model tests for FilterNumber
-     */
-    @Test
-    public void testFilterNumber() {
-        // TODO: test FilterNumber
-    }
-
-    /**
-     * Test the property 'filterField'
-     */
-    @Test
-    public void filterFieldTest() {
-        // TODO: test filterField
-    }
-
-    /**
-     * Test the property 'operation'
-     */
-    @Test
-    public void operationTest() {
-        // TODO: test operation
-    }
-
-    /**
-     * Test the property 'filterValue'
-     */
-    @Test
-    public void filterValueTest() {
-        // TODO: test filterValue
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/FilterStringTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/FilterStringTest.java
deleted file mode 100644
index 1f7bb25..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/FilterStringTest.java
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for FilterString
- */
-public class FilterStringTest {
-    private final FilterString model = new FilterString();
-
-    /**
-     * Model tests for FilterString
-     */
-    @Test
-    public void testFilterString() {
-        // TODO: test FilterString
-    }
-
-    /**
-     * Test the property 'filterField'
-     */
-    @Test
-    public void filterFieldTest() {
-        // TODO: test filterField
-    }
-
-    /**
-     * Test the property 'operation'
-     */
-    @Test
-    public void operationTest() {
-        // TODO: test operation
-    }
-
-    /**
-     * Test the property 'filterValue'
-     */
-    @Test
-    public void filterValueTest() {
-        // TODO: test filterValue
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/GeoDistanceFilterLocationAnchorTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/GeoDistanceFilterLocationAnchorTest.java
deleted file mode 100644
index 0ed4dad..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/GeoDistanceFilterLocationAnchorTest.java
+++ /dev/null
@@ -1,58 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.math.BigDecimal;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for GeoDistanceFilterLocationAnchor
- */
-public class GeoDistanceFilterLocationAnchorTest {
-    private final GeoDistanceFilterLocationAnchor model = new GeoDistanceFilterLocationAnchor();
-
-    /**
-     * Model tests for GeoDistanceFilterLocationAnchor
-     */
-    @Test
-    public void testGeoDistanceFilterLocationAnchor() {
-        // TODO: test GeoDistanceFilterLocationAnchor
-    }
-
-    /**
-     * Test the property 'lat'
-     */
-    @Test
-    public void latTest() {
-        // TODO: test lat
-    }
-
-    /**
-     * Test the property 'lon'
-     */
-    @Test
-    public void lonTest() {
-        // TODO: test lon
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/GeoDistanceFilterTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/GeoDistanceFilterTest.java
deleted file mode 100644
index 167438c..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/GeoDistanceFilterTest.java
+++ /dev/null
@@ -1,74 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import com.manticoresearch.client.model.GeoDistanceFilterLocationAnchor;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for GeoDistanceFilter
- */
-public class GeoDistanceFilterTest {
-    private final GeoDistanceFilter model = new GeoDistanceFilter();
-
-    /**
-     * Model tests for GeoDistanceFilter
-     */
-    @Test
-    public void testGeoDistanceFilter() {
-        // TODO: test GeoDistanceFilter
-    }
-
-    /**
-     * Test the property 'locationAnchor'
-     */
-    @Test
-    public void locationAnchorTest() {
-        // TODO: test locationAnchor
-    }
-
-    /**
-     * Test the property 'locationSource'
-     */
-    @Test
-    public void locationSourceTest() {
-        // TODO: test locationSource
-    }
-
-    /**
-     * Test the property 'distanceType'
-     */
-    @Test
-    public void distanceTypeTest() {
-        // TODO: test distanceType
-    }
-
-    /**
-     * Test the property 'distance'
-     */
-    @Test
-    public void distanceTest() {
-        // TODO: test distance
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/HighlightFieldTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/HighlightFieldTest.java
deleted file mode 100644
index edfd14f..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/HighlightFieldTest.java
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for HighlightField
- */
-public class HighlightFieldTest {
-    private final HighlightField model = new HighlightField();
-
-    /**
-     * Model tests for HighlightField
-     */
-    @Test
-    public void testHighlightField() {
-        // TODO: test HighlightField
-    }
-
-    /**
-     * Test the property 'name'
-     */
-    @Test
-    public void nameTest() {
-        // TODO: test name
-    }
-
-    /**
-     * Test the property 'limit'
-     */
-    @Test
-    public void limitTest() {
-        // TODO: test limit
-    }
-
-    /**
-     * Test the property 'limitWords'
-     */
-    @Test
-    public void limitWordsTest() {
-        // TODO: test limitWords
-    }
-
-    /**
-     * Test the property 'limitSnippets'
-     */
-    @Test
-    public void limitSnippetsTest() {
-        // TODO: test limitSnippets
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/HighlightTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/HighlightTest.java
deleted file mode 100644
index 0743ab5..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/HighlightTest.java
+++ /dev/null
@@ -1,226 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import com.manticoresearch.client.model.HighlightField;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-import org.openapitools.jackson.nullable.JsonNullable;
-import com.fasterxml.jackson.annotation.JsonIgnore;
-import org.openapitools.jackson.nullable.JsonNullable;
-import java.util.NoSuchElementException;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for Highlight
- */
-public class HighlightTest {
-    private final Highlight model = new Highlight();
-
-    /**
-     * Model tests for Highlight
-     */
-    @Test
-    public void testHighlight() {
-        // TODO: test Highlight
-    }
-
-    /**
-     * Test the property 'fieldnames'
-     */
-    @Test
-    public void fieldnamesTest() {
-        // TODO: test fieldnames
-    }
-
-    /**
-     * Test the property 'fields'
-     */
-    @Test
-    public void fieldsTest() {
-        // TODO: test fields
-    }
-
-    /**
-     * Test the property 'encoder'
-     */
-    @Test
-    public void encoderTest() {
-        // TODO: test encoder
-    }
-
-    /**
-     * Test the property 'highlightQuery'
-     */
-    @Test
-    public void highlightQueryTest() {
-        // TODO: test highlightQuery
-    }
-
-    /**
-     * Test the property 'preTags'
-     */
-    @Test
-    public void preTagsTest() {
-        // TODO: test preTags
-    }
-
-    /**
-     * Test the property 'postTags'
-     */
-    @Test
-    public void postTagsTest() {
-        // TODO: test postTags
-    }
-
-    /**
-     * Test the property 'noMatchSize'
-     */
-    @Test
-    public void noMatchSizeTest() {
-        // TODO: test noMatchSize
-    }
-
-    /**
-     * Test the property 'fragmentSize'
-     */
-    @Test
-    public void fragmentSizeTest() {
-        // TODO: test fragmentSize
-    }
-
-    /**
-     * Test the property 'numberOfFragments'
-     */
-    @Test
-    public void numberOfFragmentsTest() {
-        // TODO: test numberOfFragments
-    }
-
-    /**
-     * Test the property 'limit'
-     */
-    @Test
-    public void limitTest() {
-        // TODO: test limit
-    }
-
-    /**
-     * Test the property 'limitWords'
-     */
-    @Test
-    public void limitWordsTest() {
-        // TODO: test limitWords
-    }
-
-    /**
-     * Test the property 'limitSnippets'
-     */
-    @Test
-    public void limitSnippetsTest() {
-        // TODO: test limitSnippets
-    }
-
-    /**
-     * Test the property 'limitsPerField'
-     */
-    @Test
-    public void limitsPerFieldTest() {
-        // TODO: test limitsPerField
-    }
-
-    /**
-     * Test the property 'useBoundaries'
-     */
-    @Test
-    public void useBoundariesTest() {
-        // TODO: test useBoundaries
-    }
-
-    /**
-     * Test the property 'forceAllWords'
-     */
-    @Test
-    public void forceAllWordsTest() {
-        // TODO: test forceAllWords
-    }
-
-    /**
-     * Test the property 'allowEmpty'
-     */
-    @Test
-    public void allowEmptyTest() {
-        // TODO: test allowEmpty
-    }
-
-    /**
-     * Test the property 'emitZones'
-     */
-    @Test
-    public void emitZonesTest() {
-        // TODO: test emitZones
-    }
-
-    /**
-     * Test the property 'forceSnippets'
-     */
-    @Test
-    public void forceSnippetsTest() {
-        // TODO: test forceSnippets
-    }
-
-    /**
-     * Test the property 'around'
-     */
-    @Test
-    public void aroundTest() {
-        // TODO: test around
-    }
-
-    /**
-     * Test the property 'startSnippetId'
-     */
-    @Test
-    public void startSnippetIdTest() {
-        // TODO: test startSnippetId
-    }
-
-    /**
-     * Test the property 'htmlStripMode'
-     */
-    @Test
-    public void htmlStripModeTest() {
-        // TODO: test htmlStripMode
-    }
-
-    /**
-     * Test the property 'snippetBoundary'
-     */
-    @Test
-    public void snippetBoundaryTest() {
-        // TODO: test snippetBoundary
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/InFilterTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/InFilterTest.java
deleted file mode 100644
index 19a080a..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/InFilterTest.java
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for InFilter
- */
-public class InFilterTest {
-    private final InFilter model = new InFilter();
-
-    /**
-     * Model tests for InFilter
-     */
-    @Test
-    public void testInFilter() {
-        // TODO: test InFilter
-    }
-
-    /**
-     * Test the property 'field'
-     */
-    @Test
-    public void fieldTest() {
-        // TODO: test field
-    }
-
-    /**
-     * Test the property 'values'
-     */
-    @Test
-    public void valuesTest() {
-        // TODO: test values
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/InsertDocumentRequestTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/InsertDocumentRequestTest.java
deleted file mode 100644
index 4850589..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/InsertDocumentRequestTest.java
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.Map;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for InsertDocumentRequest
- */
-public class InsertDocumentRequestTest {
-    private final InsertDocumentRequest model = new InsertDocumentRequest();
-
-    /**
-     * Model tests for InsertDocumentRequest
-     */
-    @Test
-    public void testInsertDocumentRequest() {
-        // TODO: test InsertDocumentRequest
-    }
-
-    /**
-     * Test the property 'index'
-     */
-    @Test
-    public void indexTest() {
-        // TODO: test index
-    }
-
-    /**
-     * Test the property 'cluster'
-     */
-    @Test
-    public void clusterTest() {
-        // TODO: test cluster
-    }
-
-    /**
-     * Test the property 'id'
-     */
-    @Test
-    public void idTest() {
-        // TODO: test id
-    }
-
-    /**
-     * Test the property 'doc'
-     */
-    @Test
-    public void docTest() {
-        // TODO: test doc
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/MatchFilterTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/MatchFilterTest.java
deleted file mode 100644
index 5b06e31..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/MatchFilterTest.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for MatchFilter
- */
-public class MatchFilterTest {
-    private final MatchFilter model = new MatchFilter();
-
-    /**
-     * Model tests for MatchFilter
-     */
-    @Test
-    public void testMatchFilter() {
-        // TODO: test MatchFilter
-    }
-
-    /**
-     * Test the property 'queryString'
-     */
-    @Test
-    public void queryStringTest() {
-        // TODO: test queryString
-    }
-
-    /**
-     * Test the property 'queryFields'
-     */
-    @Test
-    public void queryFieldsTest() {
-        // TODO: test queryFields
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/MatchOpFilterTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/MatchOpFilterTest.java
deleted file mode 100644
index a3ecdcd..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/MatchOpFilterTest.java
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for MatchOpFilter
- */
-public class MatchOpFilterTest {
-    private final MatchOpFilter model = new MatchOpFilter();
-
-    /**
-     * Model tests for MatchOpFilter
-     */
-    @Test
-    public void testMatchOpFilter() {
-        // TODO: test MatchOpFilter
-    }
-
-    /**
-     * Test the property 'queryString'
-     */
-    @Test
-    public void queryStringTest() {
-        // TODO: test queryString
-    }
-
-    /**
-     * Test the property 'queryFields'
-     */
-    @Test
-    public void queryFieldsTest() {
-        // TODO: test queryFields
-    }
-
-    /**
-     * Test the property 'operator'
-     */
-    @Test
-    public void operatorTest() {
-        // TODO: test operator
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/MatchOpTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/MatchOpTest.java
deleted file mode 100644
index b7263a8..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/MatchOpTest.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for MatchOp
- */
-public class MatchOpTest {
-    private final MatchOp model = new MatchOp();
-
-    /**
-     * Model tests for MatchOp
-     */
-    @Test
-    public void testMatchOp() {
-        // TODO: test MatchOp
-    }
-
-    /**
-     * Test the property 'queryInfo'
-     */
-    @Test
-    public void queryInfoTest() {
-        // TODO: test queryInfo
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/MatchPhraseFilterTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/MatchPhraseFilterTest.java
deleted file mode 100644
index 4aae8d0..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/MatchPhraseFilterTest.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for MatchPhraseFilter
- */
-public class MatchPhraseFilterTest {
-    private final MatchPhraseFilter model = new MatchPhraseFilter();
-
-    /**
-     * Model tests for MatchPhraseFilter
-     */
-    @Test
-    public void testMatchPhraseFilter() {
-        // TODO: test MatchPhraseFilter
-    }
-
-    /**
-     * Test the property 'queryPhrase'
-     */
-    @Test
-    public void queryPhraseTest() {
-        // TODO: test queryPhrase
-    }
-
-    /**
-     * Test the property 'queryFields'
-     */
-    @Test
-    public void queryFieldsTest() {
-        // TODO: test queryFields
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/NotFilterBooleanTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/NotFilterBooleanTest.java
deleted file mode 100644
index 26c25cd..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/NotFilterBooleanTest.java
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for NotFilterBoolean
- */
-public class NotFilterBooleanTest {
-    private final NotFilterBoolean model = new NotFilterBoolean();
-
-    /**
-     * Model tests for NotFilterBoolean
-     */
-    @Test
-    public void testNotFilterBoolean() {
-        // TODO: test NotFilterBoolean
-    }
-
-    /**
-     * Test the property 'filterField'
-     */
-    @Test
-    public void filterFieldTest() {
-        // TODO: test filterField
-    }
-
-    /**
-     * Test the property 'operation'
-     */
-    @Test
-    public void operationTest() {
-        // TODO: test operation
-    }
-
-    /**
-     * Test the property 'filterValue'
-     */
-    @Test
-    public void filterValueTest() {
-        // TODO: test filterValue
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/NotFilterNumberTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/NotFilterNumberTest.java
deleted file mode 100644
index 90e4a8a..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/NotFilterNumberTest.java
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.math.BigDecimal;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for NotFilterNumber
- */
-public class NotFilterNumberTest {
-    private final NotFilterNumber model = new NotFilterNumber();
-
-    /**
-     * Model tests for NotFilterNumber
-     */
-    @Test
-    public void testNotFilterNumber() {
-        // TODO: test NotFilterNumber
-    }
-
-    /**
-     * Test the property 'filterField'
-     */
-    @Test
-    public void filterFieldTest() {
-        // TODO: test filterField
-    }
-
-    /**
-     * Test the property 'operation'
-     */
-    @Test
-    public void operationTest() {
-        // TODO: test operation
-    }
-
-    /**
-     * Test the property 'filterValue'
-     */
-    @Test
-    public void filterValueTest() {
-        // TODO: test filterValue
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/NotFilterStringTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/NotFilterStringTest.java
deleted file mode 100644
index cc553d1..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/NotFilterStringTest.java
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for NotFilterString
- */
-public class NotFilterStringTest {
-    private final NotFilterString model = new NotFilterString();
-
-    /**
-     * Model tests for NotFilterString
-     */
-    @Test
-    public void testNotFilterString() {
-        // TODO: test NotFilterString
-    }
-
-    /**
-     * Test the property 'filterField'
-     */
-    @Test
-    public void filterFieldTest() {
-        // TODO: test filterField
-    }
-
-    /**
-     * Test the property 'operation'
-     */
-    @Test
-    public void operationTest() {
-        // TODO: test operation
-    }
-
-    /**
-     * Test the property 'filterValue'
-     */
-    @Test
-    public void filterValueTest() {
-        // TODO: test filterValue
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/PercolateRequestQueryTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/PercolateRequestQueryTest.java
deleted file mode 100644
index 8d78537..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/PercolateRequestQueryTest.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for PercolateRequestQuery
- */
-public class PercolateRequestQueryTest {
-    private final PercolateRequestQuery model = new PercolateRequestQuery();
-
-    /**
-     * Model tests for PercolateRequestQuery
-     */
-    @Test
-    public void testPercolateRequestQuery() {
-        // TODO: test PercolateRequestQuery
-    }
-
-    /**
-     * Test the property 'percolate'
-     */
-    @Test
-    public void percolateTest() {
-        // TODO: test percolate
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/PercolateRequestTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/PercolateRequestTest.java
deleted file mode 100644
index 2bcc4e9..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/PercolateRequestTest.java
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import com.manticoresearch.client.model.PercolateRequestQuery;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for PercolateRequest
- */
-public class PercolateRequestTest {
-    private final PercolateRequest model = new PercolateRequest();
-
-    /**
-     * Model tests for PercolateRequest
-     */
-    @Test
-    public void testPercolateRequest() {
-        // TODO: test PercolateRequest
-    }
-
-    /**
-     * Test the property 'query'
-     */
-    @Test
-    public void queryTest() {
-        // TODO: test query
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/QueryFilterTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/QueryFilterTest.java
deleted file mode 100644
index 2758fdb..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/QueryFilterTest.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for QueryFilter
- */
-public class QueryFilterTest {
-    private final QueryFilter model = new QueryFilter();
-
-    /**
-     * Model tests for QueryFilter
-     */
-    @Test
-    public void testQueryFilter() {
-        // TODO: test QueryFilter
-    }
-
-    /**
-     * Test the property 'queryString'
-     */
-    @Test
-    public void queryStringTest() {
-        // TODO: test queryString
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/RangeFilterTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/RangeFilterTest.java
deleted file mode 100644
index 1b66b60..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/RangeFilterTest.java
+++ /dev/null
@@ -1,86 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.math.BigDecimal;
-import java.util.Arrays;
-import org.openapitools.jackson.nullable.JsonNullable;
-import com.fasterxml.jackson.annotation.JsonIgnore;
-import org.openapitools.jackson.nullable.JsonNullable;
-import java.util.NoSuchElementException;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for RangeFilter
- */
-public class RangeFilterTest {
-    private final RangeFilter model = new RangeFilter();
-
-    /**
-     * Model tests for RangeFilter
-     */
-    @Test
-    public void testRangeFilter() {
-        // TODO: test RangeFilter
-    }
-
-    /**
-     * Test the property 'field'
-     */
-    @Test
-    public void fieldTest() {
-        // TODO: test field
-    }
-
-    /**
-     * Test the property 'lte'
-     */
-    @Test
-    public void lteTest() {
-        // TODO: test lte
-    }
-
-    /**
-     * Test the property 'gte'
-     */
-    @Test
-    public void gteTest() {
-        // TODO: test gte
-    }
-
-    /**
-     * Test the property 'lt'
-     */
-    @Test
-    public void ltTest() {
-        // TODO: test lt
-    }
-
-    /**
-     * Test the property 'gt'
-     */
-    @Test
-    public void gtTest() {
-        // TODO: test gt
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SearchRequestTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SearchRequestTest.java
deleted file mode 100644
index 1187f53..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SearchRequestTest.java
+++ /dev/null
@@ -1,167 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import com.manticoresearch.client.model.Aggregation;
-import com.manticoresearch.client.model.Highlight;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for SearchRequest
- */
-public class SearchRequestTest {
-    private final SearchRequest model = new SearchRequest();
-
-    /**
-     * Model tests for SearchRequest
-     */
-    @Test
-    public void testSearchRequest() {
-        // TODO: test SearchRequest
-    }
-
-    /**
-     * Test the property 'index'
-     */
-    @Test
-    public void indexTest() {
-        // TODO: test index
-    }
-
-    /**
-     * Test the property 'query'
-     */
-    @Test
-    public void queryTest() {
-        // TODO: test query
-    }
-
-    /**
-     * Test the property 'fulltextFilter'
-     */
-    @Test
-    public void fulltextFilterTest() {
-        // TODO: test fulltextFilter
-    }
-
-    /**
-     * Test the property 'attrFilter'
-     */
-    @Test
-    public void attrFilterTest() {
-        // TODO: test attrFilter
-    }
-
-    /**
-     * Test the property 'limit'
-     */
-    @Test
-    public void limitTest() {
-        // TODO: test limit
-    }
-
-    /**
-     * Test the property 'offset'
-     */
-    @Test
-    public void offsetTest() {
-        // TODO: test offset
-    }
-
-    /**
-     * Test the property 'maxMatches'
-     */
-    @Test
-    public void maxMatchesTest() {
-        // TODO: test maxMatches
-    }
-
-    /**
-     * Test the property 'sort'
-     */
-    @Test
-    public void sortTest() {
-        // TODO: test sort
-    }
-
-    /**
-     * Test the property 'aggs'
-     */
-    @Test
-    public void aggsTest() {
-        // TODO: test aggs
-    }
-
-    /**
-     * Test the property 'expressions'
-     */
-    @Test
-    public void expressionsTest() {
-        // TODO: test expressions
-    }
-
-    /**
-     * Test the property 'highlight'
-     */
-    @Test
-    public void highlightTest() {
-        // TODO: test highlight
-    }
-
-    /**
-     * Test the property 'source'
-     */
-    @Test
-    public void sourceTest() {
-        // TODO: test source
-    }
-
-    /**
-     * Test the property 'options'
-     */
-    @Test
-    public void optionsTest() {
-        // TODO: test options
-    }
-
-    /**
-     * Test the property 'profile'
-     */
-    @Test
-    public void profileTest() {
-        // TODO: test profile
-    }
-
-    /**
-     * Test the property 'trackScores'
-     */
-    @Test
-    public void trackScoresTest() {
-        // TODO: test trackScores
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SearchResponseHitsTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SearchResponseHitsTest.java
deleted file mode 100644
index c0c3b74..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SearchResponseHitsTest.java
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for SearchResponseHits
- */
-public class SearchResponseHitsTest {
-    private final SearchResponseHits model = new SearchResponseHits();
-
-    /**
-     * Model tests for SearchResponseHits
-     */
-    @Test
-    public void testSearchResponseHits() {
-        // TODO: test SearchResponseHits
-    }
-
-    /**
-     * Test the property 'maxScore'
-     */
-    @Test
-    public void maxScoreTest() {
-        // TODO: test maxScore
-    }
-
-    /**
-     * Test the property 'total'
-     */
-    @Test
-    public void totalTest() {
-        // TODO: test total
-    }
-
-    /**
-     * Test the property 'totalRelation'
-     */
-    @Test
-    public void totalRelationTest() {
-        // TODO: test totalRelation
-    }
-
-    /**
-     * Test the property 'hits'
-     */
-    @Test
-    public void hitsTest() {
-        // TODO: test hits
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SearchResponseTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SearchResponseTest.java
deleted file mode 100644
index b8e9204..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SearchResponseTest.java
+++ /dev/null
@@ -1,92 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import com.manticoresearch.client.model.SearchResponseHits;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.Map;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for SearchResponse
- */
-public class SearchResponseTest {
-    private final SearchResponse model = new SearchResponse();
-
-    /**
-     * Model tests for SearchResponse
-     */
-    @Test
-    public void testSearchResponse() {
-        // TODO: test SearchResponse
-    }
-
-    /**
-     * Test the property 'took'
-     */
-    @Test
-    public void tookTest() {
-        // TODO: test took
-    }
-
-    /**
-     * Test the property 'timedOut'
-     */
-    @Test
-    public void timedOutTest() {
-        // TODO: test timedOut
-    }
-
-    /**
-     * Test the property 'aggregations'
-     */
-    @Test
-    public void aggregationsTest() {
-        // TODO: test aggregations
-    }
-
-    /**
-     * Test the property 'hits'
-     */
-    @Test
-    public void hitsTest() {
-        // TODO: test hits
-    }
-
-    /**
-     * Test the property 'profile'
-     */
-    @Test
-    public void profileTest() {
-        // TODO: test profile
-    }
-
-    /**
-     * Test the property 'warning'
-     */
-    @Test
-    public void warningTest() {
-        // TODO: test warning
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SortMVATest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SortMVATest.java
deleted file mode 100644
index 0f1e36e..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SortMVATest.java
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for SortMVA
- */
-public class SortMVATest {
-    private final SortMVA model = new SortMVA();
-
-    /**
-     * Model tests for SortMVA
-     */
-    @Test
-    public void testSortMVA() {
-        // TODO: test SortMVA
-    }
-
-    /**
-     * Test the property 'attr'
-     */
-    @Test
-    public void attrTest() {
-        // TODO: test attr
-    }
-
-    /**
-     * Test the property 'order'
-     */
-    @Test
-    public void orderTest() {
-        // TODO: test order
-    }
-
-    /**
-     * Test the property 'mode'
-     */
-    @Test
-    public void modeTest() {
-        // TODO: test mode
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SortMultipleTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SortMultipleTest.java
deleted file mode 100644
index edb3453..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SortMultipleTest.java
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.Map;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for SortMultiple
- */
-public class SortMultipleTest {
-    private final SortMultiple model = new SortMultiple();
-
-    /**
-     * Model tests for SortMultiple
-     */
-    @Test
-    public void testSortMultiple() {
-        // TODO: test SortMultiple
-    }
-
-    /**
-     * Test the property 'attrs'
-     */
-    @Test
-    public void attrsTest() {
-        // TODO: test attrs
-    }
-
-    /**
-     * Test the property 'replace'
-     */
-    @Test
-    public void replaceTest() {
-        // TODO: test replace
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SortOrderTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SortOrderTest.java
deleted file mode 100644
index c2311cd..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SortOrderTest.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for SortOrder
- */
-public class SortOrderTest {
-    private final SortOrder model = new SortOrder();
-
-    /**
-     * Model tests for SortOrder
-     */
-    @Test
-    public void testSortOrder() {
-        // TODO: test SortOrder
-    }
-
-    /**
-     * Test the property 'attr'
-     */
-    @Test
-    public void attrTest() {
-        // TODO: test attr
-    }
-
-    /**
-     * Test the property 'order'
-     */
-    @Test
-    public void orderTest() {
-        // TODO: test order
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SourceByRulesTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SourceByRulesTest.java
deleted file mode 100644
index 59b0152..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SourceByRulesTest.java
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for SourceByRules
- */
-public class SourceByRulesTest {
-    private final SourceByRules model = new SourceByRules();
-
-    /**
-     * Model tests for SourceByRules
-     */
-    @Test
-    public void testSourceByRules() {
-        // TODO: test SourceByRules
-    }
-
-    /**
-     * Test the property 'includes'
-     */
-    @Test
-    public void includesTest() {
-        // TODO: test includes
-    }
-
-    /**
-     * Test the property 'excludes'
-     */
-    @Test
-    public void excludesTest() {
-        // TODO: test excludes
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SuccessResponseTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SuccessResponseTest.java
deleted file mode 100644
index 68fca96..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/SuccessResponseTest.java
+++ /dev/null
@@ -1,81 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for SuccessResponse
- */
-public class SuccessResponseTest {
-    private final SuccessResponse model = new SuccessResponse();
-
-    /**
-     * Model tests for SuccessResponse
-     */
-    @Test
-    public void testSuccessResponse() {
-        // TODO: test SuccessResponse
-    }
-
-    /**
-     * Test the property 'index'
-     */
-    @Test
-    public void indexTest() {
-        // TODO: test index
-    }
-
-    /**
-     * Test the property 'id'
-     */
-    @Test
-    public void idTest() {
-        // TODO: test id
-    }
-
-    /**
-     * Test the property 'created'
-     */
-    @Test
-    public void createdTest() {
-        // TODO: test created
-    }
-
-    /**
-     * Test the property 'result'
-     */
-    @Test
-    public void resultTest() {
-        // TODO: test result
-    }
-
-    /**
-     * Test the property 'found'
-     */
-    @Test
-    public void foundTest() {
-        // TODO: test found
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/UpdateDocumentRequestTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/UpdateDocumentRequestTest.java
deleted file mode 100644
index 388cc3d..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/UpdateDocumentRequestTest.java
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.Map;
-import org.openapitools.jackson.nullable.JsonNullable;
-import com.fasterxml.jackson.annotation.JsonIgnore;
-import org.openapitools.jackson.nullable.JsonNullable;
-import java.util.NoSuchElementException;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for UpdateDocumentRequest
- */
-public class UpdateDocumentRequestTest {
-    private final UpdateDocumentRequest model = new UpdateDocumentRequest();
-
-    /**
-     * Model tests for UpdateDocumentRequest
-     */
-    @Test
-    public void testUpdateDocumentRequest() {
-        // TODO: test UpdateDocumentRequest
-    }
-
-    /**
-     * Test the property 'index'
-     */
-    @Test
-    public void indexTest() {
-        // TODO: test index
-    }
-
-    /**
-     * Test the property 'doc'
-     */
-    @Test
-    public void docTest() {
-        // TODO: test doc
-    }
-
-    /**
-     * Test the property 'id'
-     */
-    @Test
-    public void idTest() {
-        // TODO: test id
-    }
-
-    /**
-     * Test the property 'query'
-     */
-    @Test
-    public void queryTest() {
-        // TODO: test query
-    }
-
-}
diff --git a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/UpdateResponseTest.java b/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/UpdateResponseTest.java
deleted file mode 100644
index ba87966..0000000
--- a/out/manticoresearch-java-actual/src/test/java/com/manticoresearch/client/model/UpdateResponseTest.java
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * Manticore Search Client
- * Сlient for Manticore Search. 
- *
- * The version of the OpenAPI document: 3.3.1
- * Contact: info@manticoresearch.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-package com.manticoresearch.client.model;
-
-import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
-import com.fasterxml.jackson.annotation.JsonCreator;
-import com.fasterxml.jackson.annotation.JsonTypeName;
-import com.fasterxml.jackson.annotation.JsonValue;
-import java.util.Arrays;
-
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-/**
- * Model tests for UpdateResponse
- */
-public class UpdateResponseTest {
-    private final UpdateResponse model = new UpdateResponse();
-
-    /**
-     * Model tests for UpdateResponse
-     */
-    @Test
-    public void testUpdateResponse() {
-        // TODO: test UpdateResponse
-    }
-
-    /**
-     * Test the property 'index'
-     */
-    @Test
-    public void indexTest() {
-        // TODO: test index
-    }
-
-    /**
-     * Test the property 'updated'
-     */
-    @Test
-    public void updatedTest() {
-        // TODO: test updated
-    }
-
-    /**
-     * Test the property 'id'
-     */
-    @Test
-    public void idTest() {
-        // TODO: test id
-    }
-
-    /**
-     * Test the property 'result'
-     */
-    @Test
-    public void resultTest() {
-        // TODO: test result
-    }
-
-}
diff --git a/out/manticoresearch-javascript-actual/.babelrc b/out/manticoresearch-javascript-actual/.babelrc
deleted file mode 100644
index c73df9d..0000000
--- a/out/manticoresearch-javascript-actual/.babelrc
+++ /dev/null
@@ -1,33 +0,0 @@
-{
-  "presets": [
-    "@babel/preset-env"
-  ],
-  "plugins": [
-    "@babel/plugin-syntax-dynamic-import",
-    "@babel/plugin-syntax-import-meta",
-    "@babel/plugin-proposal-class-properties",
-    "@babel/plugin-proposal-json-strings",
-    [
-      "@babel/plugin-proposal-decorators",
-      {
-        "legacy": true
-      }
-    ],
-    "@babel/plugin-proposal-function-sent",
-    "@babel/plugin-proposal-export-namespace-from",
-    "@babel/plugin-proposal-numeric-separator",
-    "@babel/plugin-proposal-throw-expressions",
-    "@babel/plugin-proposal-export-default-from",
-    "@babel/plugin-proposal-logical-assignment-operators",
-    "@babel/plugin-proposal-optional-chaining",
-    [
-      "@babel/plugin-proposal-pipeline-operator",
-      {
-        "proposal": "minimal"
-      }
-    ],
-    "@babel/plugin-proposal-nullish-coalescing-operator",
-    "@babel/plugin-proposal-do-expressions",
-    "@babel/plugin-proposal-function-bind"
-  ]
-}
diff --git a/out/manticoresearch-javascript-actual/.github/workflows/publish.yml b/out/manticoresearch-javascript-actual/.github/workflows/publish.yml
deleted file mode 100644
index 350063e..0000000
--- a/out/manticoresearch-javascript-actual/.github/workflows/publish.yml
+++ /dev/null
@@ -1,26 +0,0 @@
-name: Publishing
-
-on:
-  push:
-    branches-ignore: [ master ]
-
-jobs:
-  publish:
-    name: Publish the client to the public registry
-    runs-on: ubuntu-latest
-    env:
-      NPMRC: ${{ secrets.NPMRC }}
-    strategy:
-      matrix:
-        node-version: ['18.x']
-
-    steps:
-    - uses: actions/checkout@v4
-    - name: Use Node.js ${{ matrix.node-version }}
-      uses: actions/setup-node@v3
-      with:
-        node-version: ${{ matrix.node-version }}
-    - run: |
-        echo "$NPMRC" > ~/.npmrc
-        npm publish
-
diff --git a/out/manticoresearch-javascript-actual/.github/workflows/test.yml b/out/manticoresearch-javascript-actual/.github/workflows/test.yml
deleted file mode 100755
index 634f8e1..0000000
--- a/out/manticoresearch-javascript-actual/.github/workflows/test.yml
+++ /dev/null
@@ -1,32 +0,0 @@
-name: Testing
-
-on:
-  push:
-    branches: [ master ]
-  pull_request:
-    branches: [ master ]
-
-jobs:
-  test:
-    name: Running basic tests
-    runs-on: ubuntu-22.04
-    strategy:
-      matrix:
-        node-version: ['18.x']
-
-    services:
-      manticoresearch-manticore:
-        image: manticoresearch/manticore:dev
-        ports:
-          - 9408:9308
-
-    steps:
-    - uses: actions/checkout@v4
-    - name: Use Node.js ${{ matrix.node-version }}
-      uses: actions/setup-node@v3
-      with:
-        node-version: ${{ matrix.node-version }}
-    - run: |
-        npm install
-        npm test
-        
\ No newline at end of file
diff --git a/out/manticoresearch-javascript-actual/.gitignore b/out/manticoresearch-javascript-actual/.gitignore
deleted file mode 100644
index e920c16..0000000
--- a/out/manticoresearch-javascript-actual/.gitignore
+++ /dev/null
@@ -1,33 +0,0 @@
-# Logs
-logs
-*.log
-npm-debug.log*
-
-# Runtime data
-pids
-*.pid
-*.seed
-
-# Directory for instrumented libs generated by jscoverage/JSCover
-lib-cov
-
-# Coverage directory used by tools like istanbul
-coverage
-
-# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
-.grunt
-
-# node-waf configuration
-.lock-wscript
-
-# Compiled binary addons (http://nodejs.org/api/addons.html)
-build/Release
-
-# Dependency directory
-node_modules
-
-# Optional npm cache directory
-.npm
-
-# Optional REPL history
-.node_repl_history
diff --git a/out/manticoresearch-javascript-actual/.openapi-generator-ignore b/out/manticoresearch-javascript-actual/.openapi-generator-ignore
deleted file mode 100644
index 7484ee5..0000000
--- a/out/manticoresearch-javascript-actual/.openapi-generator-ignore
+++ /dev/null
@@ -1,23 +0,0 @@
-# OpenAPI Generator Ignore
-# Generated by openapi-generator https://github.com/openapitools/openapi-generator
-
-# Use this file to prevent files from being overwritten by the generator.
-# The patterns follow closely to .gitignore or .dockerignore.
-
-# As an example, the C# client generator defines ApiClient.cs.
-# You can make changes and tell OpenAPI Generator to ignore just this file by uncommenting the following line:
-#ApiClient.cs
-
-# You can match any string of characters against a directory, file or extension with a single asterisk (*):
-#foo/*/qux
-# The above matches foo/bar/qux and foo/baz/qux, but not foo/bar/baz/qux
-
-# You can recursively match patterns against a directory, file or extension with a double asterisk (**):
-#foo/**/qux
-# This matches foo/bar/qux, foo/baz/qux, and foo/bar/baz/qux
-
-# You can also negate patterns with an exclamation (!).
-# For example, you can ignore all files in a docs folder with the file extension .md:
-#docs/*.md
-# Then explicitly reverse the ignore rule for a single file:
-#!docs/README.md
diff --git a/out/manticoresearch-javascript-actual/.openapi-generator/FILES b/out/manticoresearch-javascript-actual/.openapi-generator/FILES
deleted file mode 100644
index fe6a559..0000000
--- a/out/manticoresearch-javascript-actual/.openapi-generator/FILES
+++ /dev/null
@@ -1,139 +0,0 @@
-.babelrc
-.gitignore
-.openapi-generator-ignore
-.travis.yml
-README.md
-docs/Aggregation.md
-docs/AggregationSortInnerValue.md
-docs/AggregationTerms.md
-docs/BoolFilter.md
-docs/BulkResponse.md
-docs/DeleteDocumentRequest.md
-docs/DeleteResponse.md
-docs/EqualsFilter.md
-docs/ErrorResponse.md
-docs/Facet.md
-docs/FilterBoolean.md
-docs/FilterNumber.md
-docs/FilterString.md
-docs/GeoDistanceFilter.md
-docs/GeoDistanceFilterLocationAnchor.md
-docs/Highlight.md
-docs/HighlightField.md
-docs/InFilter.md
-docs/IndexApi.md
-docs/InsertDocumentRequest.md
-docs/MatchFilter.md
-docs/MatchOp.md
-docs/MatchOpFilter.md
-docs/MatchPhraseFilter.md
-docs/NotFilterBoolean.md
-docs/NotFilterNumber.md
-docs/NotFilterString.md
-docs/PercolateRequest.md
-docs/PercolateRequestQuery.md
-docs/QueryFilter.md
-docs/RangeFilter.md
-docs/SearchApi.md
-docs/SearchRequest.md
-docs/SearchResponse.md
-docs/SearchResponseHits.md
-docs/SortMVA.md
-docs/SortMultiple.md
-docs/SortOrder.md
-docs/SourceByRules.md
-docs/SuccessResponse.md
-docs/UpdateDocumentRequest.md
-docs/UpdateResponse.md
-docs/UtilsApi.md
-git_push.sh
-mocha.opts
-package.json
-src/ApiClient.js
-src/api/IndexApi.js
-src/api/SearchApi.js
-src/api/UtilsApi.js
-src/index.js
-src/model/Aggregation.js
-src/model/AggregationSortInnerValue.js
-src/model/AggregationTerms.js
-src/model/BoolFilter.js
-src/model/BulkResponse.js
-src/model/DeleteDocumentRequest.js
-src/model/DeleteResponse.js
-src/model/EqualsFilter.js
-src/model/ErrorResponse.js
-src/model/Facet.js
-src/model/FilterBoolean.js
-src/model/FilterNumber.js
-src/model/FilterString.js
-src/model/GeoDistanceFilter.js
-src/model/GeoDistanceFilterLocationAnchor.js
-src/model/Highlight.js
-src/model/HighlightField.js
-src/model/InFilter.js
-src/model/InsertDocumentRequest.js
-src/model/MatchFilter.js
-src/model/MatchOp.js
-src/model/MatchOpFilter.js
-src/model/MatchPhraseFilter.js
-src/model/NotFilterBoolean.js
-src/model/NotFilterNumber.js
-src/model/NotFilterString.js
-src/model/PercolateRequest.js
-src/model/PercolateRequestQuery.js
-src/model/QueryFilter.js
-src/model/RangeFilter.js
-src/model/SearchRequest.js
-src/model/SearchResponse.js
-src/model/SearchResponseHits.js
-src/model/SortMVA.js
-src/model/SortMultiple.js
-src/model/SortOrder.js
-src/model/SourceByRules.js
-src/model/SuccessResponse.js
-src/model/UpdateDocumentRequest.js
-src/model/UpdateResponse.js
-test/api/IndexApi.spec.js
-test/api/SearchApi.spec.js
-test/api/UtilsApi.spec.js
-test/model/Aggregation.spec.js
-test/model/AggregationSortInnerValue.spec.js
-test/model/AggregationTerms.spec.js
-test/model/BoolFilter.spec.js
-test/model/BulkResponse.spec.js
-test/model/DeleteDocumentRequest.spec.js
-test/model/DeleteResponse.spec.js
-test/model/EqualsFilter.spec.js
-test/model/ErrorResponse.spec.js
-test/model/Facet.spec.js
-test/model/FilterBoolean.spec.js
-test/model/FilterNumber.spec.js
-test/model/FilterString.spec.js
-test/model/GeoDistanceFilter.spec.js
-test/model/GeoDistanceFilterLocationAnchor.spec.js
-test/model/Highlight.spec.js
-test/model/HighlightField.spec.js
-test/model/InFilter.spec.js
-test/model/InsertDocumentRequest.spec.js
-test/model/MatchFilter.spec.js
-test/model/MatchOp.spec.js
-test/model/MatchOpFilter.spec.js
-test/model/MatchPhraseFilter.spec.js
-test/model/NotFilterBoolean.spec.js
-test/model/NotFilterNumber.spec.js
-test/model/NotFilterString.spec.js
-test/model/PercolateRequest.spec.js
-test/model/PercolateRequestQuery.spec.js
-test/model/QueryFilter.spec.js
-test/model/RangeFilter.spec.js
-test/model/SearchRequest.spec.js
-test/model/SearchResponse.spec.js
-test/model/SearchResponseHits.spec.js
-test/model/SortMVA.spec.js
-test/model/SortMultiple.spec.js
-test/model/SortOrder.spec.js
-test/model/SourceByRules.spec.js
-test/model/SuccessResponse.spec.js
-test/model/UpdateDocumentRequest.spec.js
-test/model/UpdateResponse.spec.js
diff --git a/out/manticoresearch-javascript-actual/.openapi-generator/VERSION b/out/manticoresearch-javascript-actual/.openapi-generator/VERSION
deleted file mode 100644
index 358e78e..0000000
--- a/out/manticoresearch-javascript-actual/.openapi-generator/VERSION
+++ /dev/null
@@ -1 +0,0 @@
-6.1.0
\ No newline at end of file
diff --git a/out/manticoresearch-javascript-actual/.travis.yml b/out/manticoresearch-javascript-actual/.travis.yml
deleted file mode 100644
index 1b1103e..0000000
--- a/out/manticoresearch-javascript-actual/.travis.yml
+++ /dev/null
@@ -1,5 +0,0 @@
-language: node_js
-cache: npm
-node_js:
-  - "5"
-  - "5.11"
diff --git a/out/manticoresearch-javascript-actual/LICENSE.txt b/out/manticoresearch-javascript-actual/LICENSE.txt
deleted file mode 100755
index b5084aa..0000000
--- a/out/manticoresearch-javascript-actual/LICENSE.txt
+++ /dev/null
@@ -1,21 +0,0 @@
-The MIT License (MIT)
-
-Copyright (c) 2020-2023, Manticore Software LTD 
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
\ No newline at end of file
diff --git a/out/manticoresearch-javascript-actual/README.md b/out/manticoresearch-javascript-actual/README.md
deleted file mode 100644
index 6edd512..0000000
--- a/out/manticoresearch-javascript-actual/README.md
+++ /dev/null
@@ -1,136 +0,0 @@
-# Manticore Javascript client
-
-Сlient for Manticore Search.
-
-❗ WARNING: this is a development version of the client. The latest release's readme is https://github.com/manticoresoftware/manticoresearch-javascript/tree/4.0.0
-
-## Requirements
-
-Minimum Manticore Search version is 2.5.1 with HTTP protocol enabled.
-
-| Manticore Search  | manticoresearch-javascript   |     Node      |
-| ----------------- | ---------------------------- | ------------- |
-| >= 6.2.0          | 4.0.0                        | >= 10.0       |
-| >= 6.2.0          | 3.3.1                        | >= 10.0       |
-| >= 4.2.1          | 3.0.x                        | >= 10.0       |
-| >= 4.0.2          | 2.0.3                        | >= 10.0       |
-| >= 2.5.1          | 2.0.2                        | >= 8.0        |
-
-
-## Installation
-
-```shell
-npm install manticoresearch 
-```
-
-## Getting Started
-
-Please follow the [installation](#installation) instruction and execute the following Javascript code:
-
-
-```javascript
-var Manticoresearch = require('manticoresearch');
-var client = new Manticoresearch.ApiClient();
-client.basePath="http://localhost:9308";
-/*
-If a custom http agent is needed, e.g., to enable keep-alive connections, the 'requestAgent' option can be set to override 'superagent' agent instance used by default:
-client.requestAgent = new http.Agent({
-  keepAlive: true,
-  maxSockets: 1,
-  keepAliveMsecs: 1000
-});
-*/
-
-var api = new Manticoresearch.IndexApi(client)
-var body = ["'{\"insert\": {\"index\": \"test\", \"id\": 1, \"doc\": {\"title\": \"Title 1\"}}},\\n{\"insert\": {\"index\": \"test\", \"id\": 2, \"doc\": {\"title\": \"Title 2\"}}}'"]; // {String} 
-api.bulk(body).then(function(data) {
-  console.log('API called successfully. Returned data: ' + data);
-}, function(error) {
-  console.error(error);
-});
-
-var searchApi = new Manticoresearch.SearchApi(client);
-
-// Create SearchRequest
-var searchRequest = new Manticoresearch.SearchRequest();
-searchRequest.index = "test";
-searchRequest.fulltext_filter = new Manticoresearch.QueryFilter('Star Trek 2');
-
-// Perform a search
-async function(){
-    var res = await searchApi.search(searchRequest);
-    console.log(JSON.stringify(res, null, 4));
-}
-
-
-```
-
-## Documentation
-
-Full documentation on the API Endpoints and Models used is available in  [docs](https://github.com/manticoresoftware/manticoresearch-javascript/tree/4.0.0/docs) folder as listed below.
-
-Manticore Search server documentation: https://manual.manticoresearch.com.
-
-## Documentation for API Endpoints
-
-All URIs are relative to *http://127.0.0.1:9308*
-
-Class | Method | HTTP request | Description
------------- | ------------- | ------------- | -------------
-*Manticoresearch.IndexApi* | [**bulk**](docs/IndexApi.md#bulk) | **POST** /bulk | Bulk index operations
-*Manticoresearch.IndexApi* | [**callDelete**](docs/IndexApi.md#callDelete) | **POST** /delete | Delete a document in an index
-*Manticoresearch.IndexApi* | [**insert**](docs/IndexApi.md#insert) | **POST** /insert | Create a new document in an index
-*Manticoresearch.IndexApi* | [**replace**](docs/IndexApi.md#replace) | **POST** /replace | Replace new document in an index
-*Manticoresearch.IndexApi* | [**update**](docs/IndexApi.md#update) | **POST** /update | Update a document in an index
-*Manticoresearch.SearchApi* | [**percolate**](docs/SearchApi.md#percolate) | **POST** /pq/{index}/search | Perform reverse search on a percolate index
-*Manticoresearch.SearchApi* | [**search**](docs/SearchApi.md#search) | **POST** /search | Performs a search on an index
-*Manticoresearch.UtilsApi* | [**sql**](docs/UtilsApi.md#sql) | **POST** /sql | Perform SQL requests
-
-
-## Documentation for Models
-
- - [Manticoresearch.Aggregation](docs/Aggregation.md)
- - [Manticoresearch.AggregationSortInnerValue](docs/AggregationSortInnerValue.md)
- - [Manticoresearch.AggregationTerms](docs/AggregationTerms.md)
- - [Manticoresearch.BoolFilter](docs/BoolFilter.md)
- - [Manticoresearch.BulkResponse](docs/BulkResponse.md)
- - [Manticoresearch.DeleteDocumentRequest](docs/DeleteDocumentRequest.md)
- - [Manticoresearch.DeleteResponse](docs/DeleteResponse.md)
- - [Manticoresearch.EqualsFilter](docs/EqualsFilter.md)
- - [Manticoresearch.ErrorResponse](docs/ErrorResponse.md)
- - [Manticoresearch.Facet](docs/Facet.md)
- - [Manticoresearch.FilterBoolean](docs/FilterBoolean.md)
- - [Manticoresearch.FilterNumber](docs/FilterNumber.md)
- - [Manticoresearch.FilterString](docs/FilterString.md)
- - [Manticoresearch.GeoDistanceFilter](docs/GeoDistanceFilter.md)
- - [Manticoresearch.GeoDistanceFilterLocationAnchor](docs/GeoDistanceFilterLocationAnchor.md)
- - [Manticoresearch.Highlight](docs/Highlight.md)
- - [Manticoresearch.HighlightField](docs/HighlightField.md)
- - [Manticoresearch.InFilter](docs/InFilter.md)
- - [Manticoresearch.InsertDocumentRequest](docs/InsertDocumentRequest.md)
- - [Manticoresearch.MatchFilter](docs/MatchFilter.md)
- - [Manticoresearch.MatchOp](docs/MatchOp.md)
- - [Manticoresearch.MatchOpFilter](docs/MatchOpFilter.md)
- - [Manticoresearch.MatchPhraseFilter](docs/MatchPhraseFilter.md)
- - [Manticoresearch.NotFilterBoolean](docs/NotFilterBoolean.md)
- - [Manticoresearch.NotFilterNumber](docs/NotFilterNumber.md)
- - [Manticoresearch.NotFilterString](docs/NotFilterString.md)
- - [Manticoresearch.PercolateRequest](docs/PercolateRequest.md)
- - [Manticoresearch.PercolateRequestQuery](docs/PercolateRequestQuery.md)
- - [Manticoresearch.QueryFilter](docs/QueryFilter.md)
- - [Manticoresearch.RangeFilter](docs/RangeFilter.md)
- - [Manticoresearch.SearchRequest](docs/SearchRequest.md)
- - [Manticoresearch.SearchResponse](docs/SearchResponse.md)
- - [Manticoresearch.SearchResponseHits](docs/SearchResponseHits.md)
- - [Manticoresearch.SortMVA](docs/SortMVA.md)
- - [Manticoresearch.SortMultiple](docs/SortMultiple.md)
- - [Manticoresearch.SortOrder](docs/SortOrder.md)
- - [Manticoresearch.SourceByRules](docs/SourceByRules.md)
- - [Manticoresearch.SuccessResponse](docs/SuccessResponse.md)
- - [Manticoresearch.UpdateDocumentRequest](docs/UpdateDocumentRequest.md)
- - [Manticoresearch.UpdateResponse](docs/UpdateResponse.md)
-
-
-## Documentation for Authorization
-
-All endpoints do not require authorization.
diff --git a/out/manticoresearch-javascript-actual/docs/Aggregation.md b/out/manticoresearch-javascript-actual/docs/Aggregation.md
deleted file mode 100644
index e38767b..0000000
--- a/out/manticoresearch-javascript-actual/docs/Aggregation.md
+++ /dev/null
@@ -1,13 +0,0 @@
-# Manticoresearch.Aggregation
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**terms** | [**AggregationTerms**](AggregationTerms.md) |  | [optional] 
-**sort** | **[{String: AggregationSortInnerValue}]** |  | [optional] 
-
-[[Using in search requests]](SearchRequest.md#Aggregation)
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/AggregationSortInnerValue.md b/out/manticoresearch-javascript-actual/docs/AggregationSortInnerValue.md
deleted file mode 100644
index a2ac448..0000000
--- a/out/manticoresearch-javascript-actual/docs/AggregationSortInnerValue.md
+++ /dev/null
@@ -1,11 +0,0 @@
-# Manticoresearch.AggregationSortInnerValue
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**order** | **String** |  | [optional] 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/AggregationTerms.md b/out/manticoresearch-javascript-actual/docs/AggregationTerms.md
deleted file mode 100644
index 4e90a24..0000000
--- a/out/manticoresearch-javascript-actual/docs/AggregationTerms.md
+++ /dev/null
@@ -1,12 +0,0 @@
-# Manticoresearch.AggregationTerms
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**field** | **String** | Attribute Name to Aggregate | [optional] 
-**size** | **Number** | Maximum Number of Buckets in the Result | [optional] 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/BoolFilter.md b/out/manticoresearch-javascript-actual/docs/BoolFilter.md
deleted file mode 100644
index 51d628d..0000000
--- a/out/manticoresearch-javascript-actual/docs/BoolFilter.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# Manticoresearch.BoolFilter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**should** | **[Object]** |  | [optional] 
-**must** | **[Object]** |  | [optional] 
-**mustNot** | **[Object]** |  | [optional] 
-
-[[Using in search requests]](SearchRequest.md#BoolFilter)
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/BulkResponse.md b/out/manticoresearch-javascript-actual/docs/BulkResponse.md
deleted file mode 100644
index 7b7ae23..0000000
--- a/out/manticoresearch-javascript-actual/docs/BulkResponse.md
+++ /dev/null
@@ -1,13 +0,0 @@
-# Manticoresearch.BulkResponse
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**items** | **Object** |  | [optional] 
-**errors** | **Boolean** |  | [optional] 
-**error** | **String** |  | [optional] 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/DeleteDocumentRequest.md b/out/manticoresearch-javascript-actual/docs/DeleteDocumentRequest.md
deleted file mode 100644
index 4912e6f..0000000
--- a/out/manticoresearch-javascript-actual/docs/DeleteDocumentRequest.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# Manticoresearch.DeleteDocumentRequest
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**index** | **String** | Index name | 
-**cluster** | **String** | cluster name | [optional] 
-**id** | **Number** | Document ID | [optional] 
-**query** | **Object** | Query tree object | [optional] 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/DeleteResponse.md b/out/manticoresearch-javascript-actual/docs/DeleteResponse.md
deleted file mode 100644
index 3804dce..0000000
--- a/out/manticoresearch-javascript-actual/docs/DeleteResponse.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# Manticoresearch.DeleteResponse
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**index** | **String** |  | [optional] 
-**deleted** | **Number** |  | [optional] 
-**id** | **Number** |  | [optional] 
-**result** | **String** |  | [optional] 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/EqualsFilter.md b/out/manticoresearch-javascript-actual/docs/EqualsFilter.md
deleted file mode 100644
index 033df09..0000000
--- a/out/manticoresearch-javascript-actual/docs/EqualsFilter.md
+++ /dev/null
@@ -1,13 +0,0 @@
-# Manticoresearch.EqualsFilter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**field** | **String** |  | 
-**value** | **Object** |  | 
-
-[[Using in search requests]](SearchRequest.md#EqualsFilter)
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/ErrorResponse.md b/out/manticoresearch-javascript-actual/docs/ErrorResponse.md
deleted file mode 100644
index 6ec2bd3..0000000
--- a/out/manticoresearch-javascript-actual/docs/ErrorResponse.md
+++ /dev/null
@@ -1,12 +0,0 @@
-# Manticoresearch.ErrorResponse
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**error** | **{String: Object}** |  | 
-**status** | **Number** |  | 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/Facet.md b/out/manticoresearch-javascript-actual/docs/Facet.md
deleted file mode 100644
index db4e8a9..0000000
--- a/out/manticoresearch-javascript-actual/docs/Facet.md
+++ /dev/null
@@ -1,13 +0,0 @@
-# Manticoresearch.Facet
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**attr** | **String** | The name of an attribute to facet | 
-**alias** | **String** | Facet alias | [optional] 
-**limit** | **Number** | The number of facet values to return | [optional] 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/FilterBoolean.md b/out/manticoresearch-javascript-actual/docs/FilterBoolean.md
deleted file mode 100644
index 64026de..0000000
--- a/out/manticoresearch-javascript-actual/docs/FilterBoolean.md
+++ /dev/null
@@ -1,13 +0,0 @@
-# Manticoresearch.FilterBoolean
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**filterField** | **String** |  | 
-**operation** | **String** |  | 
-**filterValue** | **Boolean** |  | 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/FilterNumber.md b/out/manticoresearch-javascript-actual/docs/FilterNumber.md
deleted file mode 100644
index faecdf6..0000000
--- a/out/manticoresearch-javascript-actual/docs/FilterNumber.md
+++ /dev/null
@@ -1,13 +0,0 @@
-# Manticoresearch.FilterNumber
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**filterField** | **String** |  | 
-**operation** | **String** |  | 
-**filterValue** | **Number** |  | 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/FilterString.md b/out/manticoresearch-javascript-actual/docs/FilterString.md
deleted file mode 100644
index 1524c0a..0000000
--- a/out/manticoresearch-javascript-actual/docs/FilterString.md
+++ /dev/null
@@ -1,13 +0,0 @@
-# Manticoresearch.FilterString
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**filterField** | **String** |  | 
-**operation** | **String** |  | 
-**filterValue** | **String** |  | 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/GeoDistanceFilter.md b/out/manticoresearch-javascript-actual/docs/GeoDistanceFilter.md
deleted file mode 100644
index b758d93..0000000
--- a/out/manticoresearch-javascript-actual/docs/GeoDistanceFilter.md
+++ /dev/null
@@ -1,26 +0,0 @@
-# Manticoresearch.GeoDistanceFilter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**locationAnchor** | [**GeoDistanceFilterLocationAnchor**](GeoDistanceFilterLocationAnchor.md) |  | [optional] 
-**locationSource** | **String** | Attribute containing latitude and longitude data | [optional] 
-**distanceType** | **String** |  | [optional] 
-**distance** | **String** |  | [optional] 
-
-[[Using in search requests]](SearchRequest.md#GeoDistanceFilter)
-
-
-
-
-## Enum: DistanceTypeEnum
-
-
-* `adaptive` (value: `"adaptive"`)
-
-* `haversine` (value: `"haversine"`)
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/GeoDistanceFilterLocationAnchor.md b/out/manticoresearch-javascript-actual/docs/GeoDistanceFilterLocationAnchor.md
deleted file mode 100644
index d431797..0000000
--- a/out/manticoresearch-javascript-actual/docs/GeoDistanceFilterLocationAnchor.md
+++ /dev/null
@@ -1,12 +0,0 @@
-# Manticoresearch.GeoDistanceFilterLocationAnchor
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**lat** | **Number** | Geo latitude of pin point in degrees | [optional] 
-**lon** | **Number** | Geo longitude pf pin point in degrees | [optional] 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/Highlight.md b/out/manticoresearch-javascript-actual/docs/Highlight.md
deleted file mode 100644
index 503b8d3..0000000
--- a/out/manticoresearch-javascript-actual/docs/Highlight.md
+++ /dev/null
@@ -1,83 +0,0 @@
-# Manticoresearch.Highlight
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**fieldnames** | **[String]** |  | [optional] 
-**fields** | [**[HighlightField]**](HighlightField.md) |  | [optional] 
-**encoder** | **String** |  | [optional] 
-**highlightQuery** | **{String: Object}** |  | [optional] 
-**preTags** | **String** |  | [optional] [default to &#39;&lt;strong&gt;&#39;]
-**postTags** | **String** |  | [optional] [default to &#39;&lt;/strong&gt;&#39;]
-**noMatchSize** | **Number** |  | [optional] 
-**fragmentSize** | **Number** |  | [optional] [default to 256]
-**numberOfFragments** | **Number** |  | [optional] [default to 0]
-**limit** | **Number** |  | [optional] [default to 256]
-**limitWords** | **Number** |  | [optional] [default to 0]
-**limitSnippets** | **Number** |  | [optional] [default to 0]
-**limitsPerField** | **Boolean** |  | [optional] [default to false]
-**useBoundaries** | **Boolean** |  | [optional] [default to false]
-**forceAllWords** | **Boolean** |  | [optional] [default to false]
-**allowEmpty** | **Boolean** |  | [optional] [default to false]
-**emitZones** | **Boolean** |  | [optional] [default to false]
-**forceSnippets** | **Boolean** |  | [optional] [default to false]
-**around** | **Number** |  | [optional] [default to 5]
-**startSnippetId** | **Number** |  | [optional] [default to 1]
-**htmlStripMode** | **String** |  | [optional] 
-**snippetBoundary** | **String** |  | [optional] 
-
-[[Using in search requests]](SearchRequest.md#Highlight)
-
-
-
-
-## Enum: EncoderEnum
-
-
-* `default` (value: `"default"`)
-
-* `html` (value: `"html"`)
-
-
-
-
-
-## Enum: NoMatchSizeEnum
-
-
-* `0` (value: `0`)
-
-* `1` (value: `1`)
-
-
-
-
-
-## Enum: HtmlStripModeEnum
-
-
-* `none` (value: `"none"`)
-
-* `strip` (value: `"strip"`)
-
-* `index` (value: `"index"`)
-
-* `retain` (value: `"retain"`)
-
-
-
-
-
-## Enum: SnippetBoundaryEnum
-
-
-* `sentence` (value: `"sentence"`)
-
-* `paragraph` (value: `"paragraph"`)
-
-* `zone` (value: `"zone"`)
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/HighlightField.md b/out/manticoresearch-javascript-actual/docs/HighlightField.md
deleted file mode 100644
index a8ebe80..0000000
--- a/out/manticoresearch-javascript-actual/docs/HighlightField.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# Manticoresearch.HighlightField
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**name** | **String** |  | 
-**limit** | **Number** |  | [optional] [default to 256]
-**limitWords** | **Number** |  | [optional] [default to 0]
-**limitSnippets** | **Number** |  | [optional] [default to 0]
-
-[[Using in search requests]](SearchRequest.md#HighlightField)
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/InFilter.md b/out/manticoresearch-javascript-actual/docs/InFilter.md
deleted file mode 100644
index 6d6528a..0000000
--- a/out/manticoresearch-javascript-actual/docs/InFilter.md
+++ /dev/null
@@ -1,13 +0,0 @@
-# Manticoresearch.InFilter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**field** | **String** |  | 
-**values** | **[Object]** |  | 
-
-[[Using in search requests]](SearchRequest.md#InFilter)
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/IndexApi.md b/out/manticoresearch-javascript-actual/docs/IndexApi.md
deleted file mode 100644
index 4f9838d..0000000
--- a/out/manticoresearch-javascript-actual/docs/IndexApi.md
+++ /dev/null
@@ -1,311 +0,0 @@
-# Manticoresearch.IndexApi
-
-All URIs are relative to *http://127.0.0.1:9308*
-
-Method | HTTP request | Description
-------------- | ------------- | -------------
-[**bulk**](IndexApi.md#bulk) | **POST** /json/bulk | Bulk index operations
-[**callDelete**](IndexApi.md#callDelete) | **POST** /json/delete | Delete a document in an index
-[**insert**](IndexApi.md#insert) | **POST** /json/insert | Create a new document in an index
-[**replace**](IndexApi.md#replace) | **POST** /json/replace | Replace new document in an index
-[**update**](IndexApi.md#update) | **POST** /json/update | Update a document in an index
-
-
-
-## bulk
-
-> BulkResponse bulk(body)
-
-Bulk index operations
-
-Sends multiple operatons like inserts, updates, replaces or deletes. 
-For each operation it's object must have same format as in their dedicated method. 
-The method expects a raw string as the batch in NDJSON.
- Each operation object needs to be serialized to 
- JSON and separated by endline (\n). 
- 
-  An example of raw input:
-  
-  ```
-    {"insert": {"index" : "products", "id" : 3, "doc" : {"title" : "Crossbody Bag with Tassel", "price" : 19.85}}}\n
-    {"insert": {"index" : "products", "id" : 4, "doc" : {"title" : "microfiber sheet set", "price" : 19.99}}}\n
-    {"insert": {"index" : "products", "id" : 5, "doc" : {"title" : "CPet Hair Remover Glove", "price" : 7.99}}}
-  ```
-  
-  Responds with an object telling whenever any errors occured and an array with status for each operation:
-  
-  ```
-  {'items':[{'update':{'_index':'products','_id':1,'result':'updated'}},{'update':{'_index':'products','_id':2,'result':'updated'}}],'errors':false}
-  ```
- 
-
-
-### Example
-
-```javascript
-var Manticoresearch = require('manticoresearch');
-
-var indexApi = new Manticoresearch.IndexApi();
-async function(){
-    let docs = [ 
-            {"insert": {"index" : "products", "id" : 3, "doc" : {"title" : "Crossbody Bag with Tassel", "price" : 19.85}}}, 
-            {"insert": {"index" : "products", "id" : 4, "doc" : {"title" : "microfiber sheet set", "price" : 19.99}}}, 
-            {"insert": {"index" : "products", "id" : 5, "doc" : {"title" : "CPet Hair Remover Glove", "price" : 7.99}}}
-    ];
-    res =  await indexApi.bulk(docs.map(e=>JSON.stringify(e)).join('\n'));
-    console.log(JSON.stringify(res));
-}
-
-```
-
-### Parameters
-
-
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **body** | **String**|  | 
-
-### Return type
-
-[**BulkResponse**](BulkResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: application/x-ndjson
-- **Accept**: application/json
-
-
-## callDelete
-
-> DeleteResponse callDelete(deleteDocumentRequest)
-
-Delete a document in an index
-
-Delete one or several documents.
-The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a  match query, in which case multiple documents can be delete .
-Example of input to delete by id:
-
-  ```
-  {"index" : "products", "id" : 1}
-  ```
-
-Example of input to delete using a query:
-
-  ```
-  {"index" : "products", "query": { "match": { "*": "superseeded" }}}
-  ```
-
-The match query has same syntax as in for searching.
-Responds with an object telling how many documents got deleted: 
-
-  ```
-  {'_index':'products','updated':1}
-  ```
-
-
-### Example
-
-```javascript
-var Manticoresearch = require('manticoresearch');
-
-var indexApi = new Manticoresearch.IndexApi();
-async function() {
-    res =  await indexApi.callDelete({"index" : "products", "id" : 1});
-    console.log(JSON.stringify(res));
-}
-
-```
-
-### Parameters
-
-
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **deleteDocumentRequest** | [**DeleteDocumentRequest**](DeleteDocumentRequest.md)|  | 
-
-### Return type
-
-[**DeleteResponse**](DeleteResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: application/json
-- **Accept**: application/json
-
-
-## insert
-
-> SuccessResponse insert(insertDocumentRequest)
-
-Create a new document in an index
-
-Insert a document. 
-Expects an object like:
- 
-  ```
-  {"index" : "products", "id" : 1, "doc" : {"title" : "Crossbody Bag with Tassel", "price" : 19.85}}
-  ```
- 
-The document id can also be missing, in which case an autogenerated one will be used:
-         
-  ```
-  {"index" : "products", "id" : 0, "doc" : {"title" : "Yellow bag"}}
-  ```
- 
-It responds with an object in format:
-  
-  ```
-  {'_index':'products','_id':1,'created':true,'result':'created','status':201}
-  ```
-
-
-### Example
-
-```javascript
-var Manticoresearch = require('manticoresearch');
-
-var indexApi = new Manticoresearch.IndexApi();
-async function(){
-    res =  await indexApi.insert({"index" : "products", "id" : 1, "doc" : {"title" : "Crossbody Bag with Tassel", "price" : 19.85}});
-}
-```
-
-### Parameters
-
-
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **insertDocumentRequest** | [**InsertDocumentRequest**](InsertDocumentRequest.md)|  | 
-
-### Return type
-
-[**SuccessResponse**](SuccessResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: application/json
-- **Accept**: application/json
-
-
-## replace
-
-> SuccessResponse replace(insertDocumentRequest)
-
-Replace new document in an index
-
-Replace an existing document. Input has same format as `insert` operation. <br/>
-Responds with an object in format: <br/>
-
-  ```
-  {'_index':'products','_id':1,'created':false,'result':'updated','status':200}
-  ```
-
-
-### Example
-
-```javascript
-var Manticoresearch = require('manticoresearch');
-
-var indexApi = new Manticoresearch.IndexApi();
-async function(){
-    res =  await indexApi.replace({"index" : "products", "id" : 1, "doc" : {"title" : "document one","price":10}});
-}    
-
-```
-
-### Parameters
-
-
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **insertDocumentRequest** | [**InsertDocumentRequest**](InsertDocumentRequest.md)|  | 
-
-### Return type
-
-[**SuccessResponse**](SuccessResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: application/json
-- **Accept**: application/json
-
-
-## update
-
-> UpdateResponse update(updateDocumentRequest)
-
-Update a document in an index
-
-Update one or several documents.
-The update can be made by passing the id or by using a match query in case multiple documents can be updated.  For example update a document using document id:
-
-  ```
-  {"index" : "products", "id" : 1, "doc" : {"price":10}}
-  ```
-
-And update by using a match query:
-
-  ```
-  {'index':'products','doc':"price":10},'query':{'bool':{'must':[{'query_string':'yellow bag'}]}}}
-  ``` 
-
-The match query has same syntax as for searching.
-Responds with an object that tells how many documents where updated in format: 
-
-  ```
-  {'_index':'products','updated':1}
-  ```
-
-
-### Example
-
-```javascript
-var Manticoresearch = require('manticoresearch');
-
-var indexApi = new Manticoresearch.IndexApi();
-async function() {
-    res =  await indexApi.update({"index" : "products", "id" : 1, "doc" : {"price":10}});
-}
-```
-
-### Parameters
-
-
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **updateDocumentRequest** | [**UpdateDocumentRequest**](UpdateDocumentRequest.md)|  | 
-
-### Return type
-
-[**UpdateResponse**](UpdateResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: application/json
-- **Accept**: application/json
-
diff --git a/out/manticoresearch-javascript-actual/docs/InsertDocumentRequest.md b/out/manticoresearch-javascript-actual/docs/InsertDocumentRequest.md
deleted file mode 100644
index 1b07899..0000000
--- a/out/manticoresearch-javascript-actual/docs/InsertDocumentRequest.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# Manticoresearch.InsertDocumentRequest
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**index** | **String** | Name of the index | 
-**cluster** | **String** | cluster name | [optional] 
-**id** | **Number** | Document ID.  | [optional] 
-**doc** | **{String: Object}** | Object with document data  | 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/MatchFilter.md b/out/manticoresearch-javascript-actual/docs/MatchFilter.md
deleted file mode 100644
index 30df7fe..0000000
--- a/out/manticoresearch-javascript-actual/docs/MatchFilter.md
+++ /dev/null
@@ -1,13 +0,0 @@
-# Manticoresearch.MatchFilter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**queryString** | **String** |  | [default to &#39;&#39;]
-**queryFields** | **String** |  | [default to &#39;*&#39;]
-
-[[Using in search requests]](SearchRequest.md#MatchFilter)
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/MatchOp.md b/out/manticoresearch-javascript-actual/docs/MatchOp.md
deleted file mode 100644
index 5a43754..0000000
--- a/out/manticoresearch-javascript-actual/docs/MatchOp.md
+++ /dev/null
@@ -1,11 +0,0 @@
-# Manticoresearch.MatchOp
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**queryInfo** | **Object** |  | 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/MatchOpFilter.md b/out/manticoresearch-javascript-actual/docs/MatchOpFilter.md
deleted file mode 100644
index 2d7f281..0000000
--- a/out/manticoresearch-javascript-actual/docs/MatchOpFilter.md
+++ /dev/null
@@ -1,25 +0,0 @@
-# Manticoresearch.MatchOpFilter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**queryString** | **String** |  | 
-**queryFields** | **String** |  | 
-**operator** | **String** |  | 
-
-[[Using in search requests]](SearchRequest.md#MatchOpFilter)
-
-
-
-
-## Enum: OperatorEnum
-
-
-* `or` (value: `"or"`)
-
-* `and` (value: `"and"`)
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/MatchPhraseFilter.md b/out/manticoresearch-javascript-actual/docs/MatchPhraseFilter.md
deleted file mode 100644
index 4a284cf..0000000
--- a/out/manticoresearch-javascript-actual/docs/MatchPhraseFilter.md
+++ /dev/null
@@ -1,13 +0,0 @@
-# Manticoresearch.MatchPhraseFilter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**queryPhrase** | **String** |  | 
-**queryFields** | **String** |  | 
-
-[[Using in search requests]](SearchRequest.md#MatchPhraseFilter)
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/NotFilterBoolean.md b/out/manticoresearch-javascript-actual/docs/NotFilterBoolean.md
deleted file mode 100644
index 7e0ab7f..0000000
--- a/out/manticoresearch-javascript-actual/docs/NotFilterBoolean.md
+++ /dev/null
@@ -1,13 +0,0 @@
-# Manticoresearch.NotFilterBoolean
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**filterField** | **String** |  | 
-**operation** | **String** |  | 
-**filterValue** | **Boolean** |  | 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/NotFilterNumber.md b/out/manticoresearch-javascript-actual/docs/NotFilterNumber.md
deleted file mode 100644
index 5151be6..0000000
--- a/out/manticoresearch-javascript-actual/docs/NotFilterNumber.md
+++ /dev/null
@@ -1,13 +0,0 @@
-# Manticoresearch.NotFilterNumber
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**filterField** | **String** |  | 
-**operation** | **String** |  | 
-**filterValue** | **Number** |  | 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/NotFilterString.md b/out/manticoresearch-javascript-actual/docs/NotFilterString.md
deleted file mode 100644
index 5720b8f..0000000
--- a/out/manticoresearch-javascript-actual/docs/NotFilterString.md
+++ /dev/null
@@ -1,13 +0,0 @@
-# Manticoresearch.NotFilterString
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**filterField** | **String** |  | 
-**operation** | **String** |  | 
-**filterValue** | **String** |  | 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/PercolateRequest.md b/out/manticoresearch-javascript-actual/docs/PercolateRequest.md
deleted file mode 100644
index 8033c92..0000000
--- a/out/manticoresearch-javascript-actual/docs/PercolateRequest.md
+++ /dev/null
@@ -1,11 +0,0 @@
-# Manticoresearch.PercolateRequest
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**query** | [**PercolateRequestQuery**](PercolateRequestQuery.md) |  | 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/PercolateRequestQuery.md b/out/manticoresearch-javascript-actual/docs/PercolateRequestQuery.md
deleted file mode 100644
index cec99c0..0000000
--- a/out/manticoresearch-javascript-actual/docs/PercolateRequestQuery.md
+++ /dev/null
@@ -1,11 +0,0 @@
-# Manticoresearch.PercolateRequestQuery
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**percolate** | **Object** |  | 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/QueryFilter.md b/out/manticoresearch-javascript-actual/docs/QueryFilter.md
deleted file mode 100644
index 81fcdde..0000000
--- a/out/manticoresearch-javascript-actual/docs/QueryFilter.md
+++ /dev/null
@@ -1,11 +0,0 @@
-# Manticoresearch.QueryFilter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**queryString** | **String** |  | 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/RangeFilter.md b/out/manticoresearch-javascript-actual/docs/RangeFilter.md
deleted file mode 100644
index 75f0136..0000000
--- a/out/manticoresearch-javascript-actual/docs/RangeFilter.md
+++ /dev/null
@@ -1,16 +0,0 @@
-# Manticoresearch.RangeFilter
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**field** | **String** |  | 
-**lte** | **Number** |  | [optional] 
-**gte** | **Number** |  | [optional] 
-**lt** | **Number** |  | [optional] 
-**gt** | **Number** |  | [optional] 
-
-[[Using in search requests]](SearchRequest.md#RangeFilter)
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/SearchApi.md b/out/manticoresearch-javascript-actual/docs/SearchApi.md
deleted file mode 100644
index 9e1b120..0000000
--- a/out/manticoresearch-javascript-actual/docs/SearchApi.md
+++ /dev/null
@@ -1,219 +0,0 @@
-# Manticoresearch.SearchApi
-
-All URIs are relative to *http://127.0.0.1:9308*
-
-Method | HTTP request | Description
-------------- | ------------- | -------------
-[**search**](SearchApi.md#search) | **POST** /search | Performs a search on an index.
-[**percolate**](SearchApi.md#percolate) | **POST** /pq/{index}/search | Perform a reverse search on a percolate index
-
-
-## search
-
-> SearchResponse search(searchRequest)
-
-Performs a search on an index. 
-
-The method expects a SearchRequest object with the following mandatory properties:
-        
-* the name of the index to search | string
-        
-For details, see the documentation on [**SearchRequest**](SearchRequest.md)
-
-The method returns an object with the following properties:
-        
-- hits: an object with the following properties:
-  - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:
-    - _id: the ID of the matched document.
-    - _score: the score of the matched document.
-    - _source: the source data of the matched document.
-  - total: the total number of hits found.
-- timed_out: a boolean indicating whether the query timed out.
-- took: the time taken to execute the search query.
-
-In addition, if profiling is enabled, the response will include an additional array with profiling information attached.
-
-Here is an example search response:
-```
-{
-  "hits":
-  {
-    "hits":
-    [
-      {
-        "_id":"1",
-        "_score":1,
-        "_source":{"title":"first find me fast","gid":11}
-      },
-      {
-        "_id":"2",
-        "_score":1,
-        "_source":{"title":"second find me fast","gid":12}
-      }
-    ],
-    "total":2
-  },
-  "profile":None,
-  "timed_out":False,
-  "took":0
-}
-```
-
-For more information about the match query syntax and additional parameters that can be added to  request and response, please check: https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON.
-
-
-### Example
-```javascript
-var Manticoresearch = require('manticoresearch');
-var client = new Manticoresearch.ApiClient();
-client.basePath="http://localhost:9308";
-var searchApi = new Manticoresearch.SearchApi(client);
-
-// Create SearchRequest
-var searchRequest = new Manticoresearch.SearchRequest();
-searchRequest.index = "test";
-searchRequest.fulltext_filter = new Manticoresearch.QueryFilter('Star Trek 2');
-
-// or create SearchRequest in an alternative way as in the previous versions of the client. It uses a single complex JSON object for a query field
-searchRequest = {"index":"test","query":{"query_string":"find smth"}};
-
-// Perform a search
-(async function searchExample() {
-    var res = await searchApi.search(searchRequest);
-    console.log(JSON.stringify(res, null, 4));
-})();
-
-```
-
-### Parameters
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **searchRequest** | [**SearchRequest**](SearchRequest.md)|  | 
-
-### Return type
-
-[**SearchResponse**](SearchResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: application/json
-- **Accept**: application/json
-
-
-## percolate
-
-> SearchResponse percolate(index, percolateRequest)
-
-Performs a reverse search on a percolate index. [[More info on percolate indexes in Manticore Search Manual]](https://manual.manticoresearch.com/Creating_a_table/Local_tables/Percolate_table#Percolate-table)
-
-This method must be used only on percolate indexes.
-
-Expects two parameters: the index name and an object with a document or an array of documents to search by.
-Here is an example of the object with a single document:
-
-```
-{
-  "query":
-  {
-    "percolate":
-    {
-      "document":
-      {
-        "content":"sample content"
-      }
-    }
-  }
-}
-```
-
-Responds with an object with matched stored queries: 
-
-```
-{
-  "took":0,
-  "timed_out":false,
-  "hits":
-  {
-    "total":1,
-    "hits":
-    [
-      {
-        "_index":"products",
-        "_type":"doc",
-        "_id":"2811045522851233808",
-        "_score":"1",
-        "_source":
-        {
-          "query":
-          {
-            "ql":"@title bag"
-          }
-        },
-        "fields":{"_percolator_document_slot":[1]}
-      }
-    ]
-  }
-}
-```
-
-And here is an example of the object with multiple documents:
-
-```
-{
-  "query":
-  {
-    "percolate":
-    {
-      "documents": [
-        {
-          "content":"sample content"
-        },
-        {
-          "content":"another sample content"
-        }
-      ]
-    }
-  }
-}
-```
-
-
-### Example
-
-```javascript
-var Manticoresearch = require('manticoresearch');
-
-var searchApi = new Manticoresearch.SearchApi();
-(async function percolateExample() {
-    res = await searchApi.percolate('products',{"query":{"percolate":{"document":{"title":"What a nice bag"}}}});
-})();
-
-```
-
-### Parameters
-
-
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **index** | **String**| Name of the percolate index | 
- **percolateRequest** | [**PercolateRequest**](PercolateRequest.md)|  | 
-
-### Return type
-
-[**SearchResponse**](SearchResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: application/json
-- **Accept**: application/json
-
diff --git a/out/manticoresearch-javascript-actual/docs/SearchRequest.md b/out/manticoresearch-javascript-actual/docs/SearchRequest.md
deleted file mode 100644
index 0dcf71c..0000000
--- a/out/manticoresearch-javascript-actual/docs/SearchRequest.md
+++ /dev/null
@@ -1,412 +0,0 @@
-# Manticoresearch.SearchRequest
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**index** | **String** |  | [default to &#39;&#39;]
-**query** | **Object** |  | [optional] 
-**fulltextFilter** | **Object** |  | [optional] 
-**attrFilter** | **Object** |  | [optional] 
-**limit** | **Number** |  | [optional] 
-**offset** | **Number** |  | [optional] 
-**maxMatches** | **Number** |  | [optional] 
-**sort** | **[Object]** |  | [optional] 
-**aggs** | [**{String: Aggregation}**](Aggregation.md) |  | [optional] 
-**expressions** | **{String: String}** |  | [optional] 
-**highlight** | [**Highlight**](Highlight.md) |  | [optional] 
-**source** | **Object** |  | [optional] 
-**options** | **{String: Object}** |  | [optional] 
-**profile** | **Boolean** |  | [optional] 
-**trackScores** | **Boolean** |  | [optional] 
-
-
-## Building a search request
-
-[[Docs on search options in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Options#Search-options)
-```javascript
-
-var searchRequest = new Manticoresearch.SearchRequest();
-searchRequest.index = "movies";
-searchRequest.query = {"match_all": {}};
-	
-searchRequest.limit = 10;
-searchRequest.track_scores = true;
-searchRequest.options = {'cutoff': 5};
-searchRequest.options['ranker'] = 'bm25';
-searchRequest.source = 'title';
-
-async function(){
-	var res = await searchApi.search(searchRequest);
-	console.log(JSON.stringify(res, null, 4));  
-}
-```
-
-### SourceByRules
-
-[[SourceByRules - input parameters]](SourceByRules.md)
-
-[[Docs on the `source` property in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Search_results#Source-selection)
-```javascript
-var searchRequest = new Manticoresearch.SearchRequest();
-searchRequest.index = "movies";
-searchRequest.query = {"match_all": {}};
-
-searchRequest.source = new Manticoresearch.SourceByRules();
-searchRequest.source.includes = ['title', 'year'];
-searchRequest.source.excludes = ['code'];
-
-async function(){
-	var res = await searchApi.search(searchRequest);
-	console.log(JSON.stringify(res, null, 4));  
-}
-```
-
-### Sort
-```javascript
-//Setting the `sort` property:
-var searchRequest = new Manticoresearch.SearchRequest();
-searchRequest.index = "movies";
-searchRequest.query = {"match_all": {}};
-
-searchRequest.sort = ['year']
-
-async function(){
-	var res = await searchApi.search(searchRequest);
-	console.log(JSON.stringify(res, null, 4));  
-}
-```
-
-### SortOrder
-
-[[SortOrder - input parameters]](SortOrder.md)
-
-### SortMVA
-
-[[SortMVA - input parameters]](SortMVA.md)
-
-[[Docs on sorting in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Sorting_and_ranking#HTTP)
-```javascript
-var searchRequest = new Manticoresearch.SearchRequest();
-searchRequest.index = "movies";
-searchRequest.query = {"match_all": {}};
-
-var sort2 = new Manticoresearch.SortOrder('rating', 'asc');
-var sort3 = new Manticoresearch.SortMVA('code', 'desc', 'max');
-searchRequest.sort.push(...[sort2,sort3]);
-
-async function(){
-	var res = await searchApi.search(searchRequest);
-	console.log(JSON.stringify(res, null, 4));  
-}
-```
-
-### Expressions
-
-[[Docs on expressions in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Expressions#Expressions-in-HTTP-JSON)
-```javascript    
-//Setting the `expressions` property:
-var searchRequest = new Manticoresearch.SearchRequest();
-searchRequest.index = "movies";
-searchRequest.query = {"match_all": {}};
-
-var expr = {'expr1': 'min(year,2900)'};
-searchRequest.expressions = expr;
-searchRequest.expressions['expr2'] = 'max(year,2100)';
-searchRequest.source.includes.push('expr1', 'expr2');
-
-async function(){
-	var res = await searchApi.search(searchRequest);
-	console.log(JSON.stringify(res, null, 4));  
-}
-```
-
-### Aggregations
-
-[[Aggregation - input parameters]](Aggregation.md)
-
-[[Docs on aggregations in Manticore Search Manual](https://manual.manticoresearch.com/Searching/Faceted_search#Aggregations)
-```javascript    
-//Setting the `aggs` property with an auxiliary object:
-var searchRequest = new Manticoresearch.SearchRequest();
-searchRequest.index = "movies";
-searchRequest.query = {"match_all": {}};
-
-var aggTerms = {};
-Manticoresearch.AggregationTerms.constructFromObject({field: 'year', size: 10}, aggTerms);
-var agg1 = new Manticoresearch.Aggregation();
-agg1['terms'] = aggTerms;
-agg1['sort'] = ['year'];
-searchRequest.aggs = {agg1: agg1};
-
-var agg2 = new Manticoresearch.Aggregation();
-agg2['terms'] = Manticoresearch.AggregationTerms.constructFromObject({field: 'rating'});
-searchRequest.aggs['agg2'] = agg2;
-
-async function(){
-	var res = await searchApi.search(searchRequest);
-	console.log(JSON.stringify(res, null, 4));  
-}
-```
-
-### Highlight
-
-[[Highlight - input parameters]](Highlight.md)
-
-[[Docs on highlighting in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Highlighting#Highlighting)
-```javascript
-//Settting the `highlight` property with an auxiliary object:
-var searchRequest = new Manticoresearch.SearchRequest();
-searchRequest.index = "movies";
-searchRequest.query = {"match_all": {}};
-
-var highlight = new Manticoresearch.Highlight();
-highlight.fieldnames = ['title'];
-highlight.post_tags = '</post_tag>';
-highlight.encoder = 'default';
-highlight.snippet_boundary = 'sentence';
-searchRequest.highlight = highlight;
-
-async function(){
-	var res = await searchApi.search(searchRequest);
-	console.log(JSON.stringify(res, null, 4));  
-}
-```
-
-#### HighlightField
-
-[[HighlightField - input parameters]](HighlightField.md)
-
-[[Docs on highlight fields in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Highlighting#Highlighting)
-```javascript
-// settting `highlight.fields` property with an auxiliary HighlightField object
-var searchRequest = new Manticoresearch.SearchRequest();
-searchRequest.index = "movies";
-searchRequest.query = {"match_all": {}};
-
-var highlight = new Manticoresearch.Highlight();
-var highlightField = new Manticoresearch.HighlightField('title');
-var highlightField2 = new Manticoresearch.HighlightField('plot');
-Manticoresearch.HighlightField.constructFromObject({limit:5}, highlightField2);
-Manticoresearch.HighlightField.constructFromObject({limit_words:10}, highlightField2);
-highlight.fields = [highlightField, highlightField2];
-searchRequest.highlight = highlight;
-
-async function(){
-	var res = await searchApi.search(searchRequest);
-	console.log(JSON.stringify(res, null, 4));  
-}
-```
-
-### FulltextFilter
-#### QueryFilter
-
-[[Docs on fulltext filters in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON)
-
-[[QueryFilter - input parameters]](QueryFilter.md)
-```javascript    
-//Setting the `fulltext_filter` property using different fulltext filter objects:
-
-//Using a QueryFilter object
-var searchRequest = manticoresearch.model.SearchRequest();
-searchRequest.index = "movies";
-
-searchRequest.fulltext_filter = new Manticoresearch.QueryFilter('Star Trek 2');
-
-async function(){
-	var res = await searchApi.search(searchRequest);
-	console.log(JSON.stringify(res, null, 4));  
-}
-```
-
-#### MatchFilter
-
-[[MatchFilter - input parameters]](MatchFilter.md)
-```javascript    
-//Using a MatchFilter object
-var searchRequest = manticoresearch.model.SearchRequest();
-searchRequest.index = "movies";
-
-searchRequest.fulltext_filter = new Manticoresearch.MatchFilter('Nemesis', 'title');
-
-async function(){
-	var res = await searchApi.search(searchRequest);
-	console.log(JSON.stringify(res, null, 4));  
-}
-```
-
-#### MatchPhraseFilter
-
-[[MatchPhraseFilter - input parameters]](MatchPhraseFilter.md)
-```javascript    
-//Using a MatchPhraseFilter object
-var searchRequest = manticoresearch.model.SearchRequest();
-searchRequest.index = "movies";
-
-searchRequest.fulltext_filter = new Manticoresearch.MatchPhraseFilter('Star Trek 2', 'title');
-
-async function(){
-	var res = await searchApi.search(searchRequest);
-	console.log(JSON.stringify(res, null, 4));  
-}
-```
-
-#### MatchOpFilter
-
-[[MatchOpFilter - input parameters]](MatchOpFilter.md)
-```javascript
-//Using a MatchOpFilter object
-var searchRequest = manticoresearch.model.SearchRequest();
-searchRequest.index = "movies";
-
-searchRequest.fulltext_filter = new Manticoresearch.MatchOpFilter('Enterprise test', 'title,plot', 'or');
-
-async function(){
-	var res = await searchApi.search(searchRequest);
-	console.log(JSON.stringify(res, null, 4));  
-}
-```    
-
-### AttrFilter
-#### EqualsFilter
-
-[[EqualsFilter - input parameters]](EqualsFilter.md)
-
-[[Docs on equality filters in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Filters#Equality-filters)
-```javascript
-//Setting the `attr_filter` property using different attribute filter objects:
-
-//Using EqualsFilter object
-var searchRequest = manticoresearch.model.SearchRequest();
-searchRequest.index = "movies";
-
-searchRequest.attr_filter = new Manticoresearch.EqualsFilter('year', 2003);
-
-async function(){
-	var res = await searchApi.search(searchRequest);
-	console.log(JSON.stringify(res, null, 4));  
-}
-```
-
-#### InFilter
-
-[[InFilter - input parameters]](InFilter.md)
-
-[[Docs on set filters in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Filters#Set-filters)
-```javascript
-//Using InFilter object
-var searchRequest = manticoresearch.model.SearchRequest();
-searchRequest.index = "movies";
-
-var inFilter = new Manticoresearch.InFilter('year', [2001, 2002]);
-inFilter.values = inFilter.values.concat([10,11]);
-searchRequest.attr_filter = inFilter;
-
-async function(){
-	var res = await searchApi.search(searchRequest);
-	console.log(JSON.stringify(res, null, 4));  
-}
-```
-			
-#### RangeFilter
-
-[[RangeFilter - input parameters]](RangeFilter.md)
-
-[[Docs on range filters in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Filters#Range-filters)
-```javascript
-//Using RangeFilter object
-var searchRequest = manticoresearch.model.SearchRequest();
-searchRequest.index = "movies";
-
-var rangeFilter = new Manticoresearch.RangeFilter('year');
-Manticoresearch.RangeFilter.constructFromObject({lte: 2002}, rangeFilter);
-Manticoresearch.RangeFilter.constructFromObject({gte: 1000}, rangeFilter);
-searchRequest.attr_filter = rangeFilter;
-
-async function(){
-	var res = await searchApi.search(searchRequest);
-	console.log(JSON.stringify(res, null, 4));  
-}	
-```
-
-#### GeoDistanceFilter
-
-[[GeoDistanceFilter - input parameters]](GeoDistanceFilter.md)
-
-[[Docs on geo distance filters in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Filters#Geo-distance-filters)
-```javascript
-//Using GeoDistanceFilter object
-var searchRequest = manticoresearch.model.SearchRequest();
-searchRequest.index = "geo";
-
-var geoFilter = new Manticoresearch.GeoDistanceFilter();
-var locAnchor = {'location_anchor': {'lat':10,'lon':20}};
-Manticoresearch.GeoDistanceFilter.constructFromObject(locAnchor, geoFilter);
-Manticoresearch.GeoDistanceFilter.constructFromObject({'location_source':'field3,field4'}, geoFilter);
-Manticoresearch.GeoDistanceFilter.constructFromObject({'distance_type': 'adaptive', 'distance': '100km'}, geoFilter);
-searchRequest.attr_filter = geoFilter;
-
-async function(){
-	var res = await searchApi.search(searchRequest);
-	console.log(JSON.stringify(res, null, 4));  
-}
-```
-
-#### BoolFilter
-
-[[BoolFilter - input parameters]](BoolFilter.md)
-
-[[Docs on bool queries in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Filters#bool-query)
-```javascript
-//Setting the `attr_filter` property using a bool filter object:
-var searchRequest = manticoresearch.model.SearchRequest();
-searchRequest.index = "movies";
-
-var boolFilter = new Manticoresearch.BoolFilter();
-boolFilter.must = [ new Manticoresearch.EqualsFilter('year', 2001) ];
-rangeFilter = new Manticoresearch.RangeFilter('rating');
-Manticoresearch.RangeFilter.constructFromObject({lte: 20}, rangeFilter);
-boolFilter.must.push(rangeFilter);
-searchRequest.attr_filter = boolFilter;
-
-async function(){
-	var res = await searchApi.search(searchRequest);
-	console.log(JSON.stringify(res, null, 4));  
-}
-
-boolFilter.must_not = [ new Manticoresearch.EqualsFilter('year', 2001) ];
-searchRequest.attr_filter = boolFilter;
-
-async function(){
-	res = await searchApi.search(searchRequest);
-	console.log(JSON.stringify(res, null, 4));  
-}
-
-//Using nested bool filters
-searchRequest = manticoresearch.model.SearchRequest();
-searchRequest.index = "movies";
-	
-var fulltextFilter = new Manticoresearch.MatchFilter('Star', 'title');
-var nestedBoolFilter = new Manticoresearch.BoolFilter();
-nestedBoolFilter.should = [ new Manticoresearch.EqualsFilter('rating', 6.5), fulltextFilter];
-boolFilter.must = [nestedBoolFilter];
-searchRequest.attr_filter = boolFilter;
-
-async function(){
-	res = await searchApi.search(searchRequest);
-	console.log(JSON.stringify(res, null, 4));  
-}
-```
-			
-## Creating a search request in an alternative way with a single literal object 
-```javascript
-
-var searchRequest = {"index":"myindex","query":{"query_string":"@title \"find me fast \"/2"}};
-async function(){
-    var res = await searchApi.search(searchRequest);
-    console.log(JSON.stringify(res, null, 4));
-}
-```
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/SearchResponse.md b/out/manticoresearch-javascript-actual/docs/SearchResponse.md
deleted file mode 100644
index c309917..0000000
--- a/out/manticoresearch-javascript-actual/docs/SearchResponse.md
+++ /dev/null
@@ -1,16 +0,0 @@
-# Manticoresearch.SearchResponse
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**took** | **Number** |  | [optional] 
-**timedOut** | **Boolean** |  | [optional] 
-**aggregations** | **{String: Object}** |  | [optional] 
-**hits** | [**SearchResponseHits**](SearchResponseHits.md) |  | [optional] 
-**profile** | **Object** |  | [optional] 
-**warning** | **{String: Object}** |  | [optional] 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/SearchResponseHits.md b/out/manticoresearch-javascript-actual/docs/SearchResponseHits.md
deleted file mode 100644
index b117814..0000000
--- a/out/manticoresearch-javascript-actual/docs/SearchResponseHits.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# Manticoresearch.SearchResponseHits
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**maxScore** | **Number** |  | [optional] 
-**total** | **Number** |  | [optional] 
-**totalRelation** | **String** |  | [optional] 
-**hits** | **[Object]** |  | [optional] 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/SortMVA.md b/out/manticoresearch-javascript-actual/docs/SortMVA.md
deleted file mode 100644
index 62c25c9..0000000
--- a/out/manticoresearch-javascript-actual/docs/SortMVA.md
+++ /dev/null
@@ -1,36 +0,0 @@
-# Manticoresearch.SortMVA
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**attr** | **String** |  | 
-**order** | **String** |  | 
-**mode** | **String** |  | 
-
-[[Using in search requests]](SearchRequest.md#SortMVA)
-
-
-
-
-## Enum: OrderEnum
-
-
-* `asc` (value: `"asc"`)
-
-* `desc` (value: `"desc"`)
-
-
-
-
-
-## Enum: ModeEnum
-
-
-* `min` (value: `"min"`)
-
-* `max` (value: `"max"`)
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/SortMultiple.md b/out/manticoresearch-javascript-actual/docs/SortMultiple.md
deleted file mode 100644
index 405fa1c..0000000
--- a/out/manticoresearch-javascript-actual/docs/SortMultiple.md
+++ /dev/null
@@ -1,12 +0,0 @@
-# Manticoresearch.SortMultiple
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**attrs** | **{String: Object}** |  | 
-**replace** | **Boolean** |  | 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/SortOrder.md b/out/manticoresearch-javascript-actual/docs/SortOrder.md
deleted file mode 100644
index 2165601..0000000
--- a/out/manticoresearch-javascript-actual/docs/SortOrder.md
+++ /dev/null
@@ -1,24 +0,0 @@
-# Manticoresearch.SortOrder
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**attr** | **String** |  | 
-**order** | **String** |  | 
-
-[[Using in search requests]](SearchRequest.md#SortOrder)
-
-
-
-
-## Enum: OrderEnum
-
-
-* `asc` (value: `"asc"`)
-
-* `desc` (value: `"desc"`)
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/SourceByRules.md b/out/manticoresearch-javascript-actual/docs/SourceByRules.md
deleted file mode 100644
index 5896da2..0000000
--- a/out/manticoresearch-javascript-actual/docs/SourceByRules.md
+++ /dev/null
@@ -1,13 +0,0 @@
-# Manticoresearch.SourceByRules
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**includes** | **[String]** |  | 
-**excludes** | **[String]** |  | 
-
-[[Using in search requests]](SearchRequest.md#SourceByRules)
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/SuccessResponse.md b/out/manticoresearch-javascript-actual/docs/SuccessResponse.md
deleted file mode 100644
index a45b0ae..0000000
--- a/out/manticoresearch-javascript-actual/docs/SuccessResponse.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# Manticoresearch.SuccessResponse
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**index** | **String** |  | [optional] 
-**id** | **Number** |  | [optional] 
-**created** | **Boolean** |  | [optional] 
-**result** | **String** |  | [optional] 
-**found** | **Boolean** |  | [optional] 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/UpdateDocumentRequest.md b/out/manticoresearch-javascript-actual/docs/UpdateDocumentRequest.md
deleted file mode 100644
index b88cdff..0000000
--- a/out/manticoresearch-javascript-actual/docs/UpdateDocumentRequest.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# Manticoresearch.UpdateDocumentRequest
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**index** | **String** |  | 
-**doc** | **{String: Object}** | Index name | 
-**id** | **Number** | Document ID | [optional] 
-**query** | **{String: Object}** | Query tree object | [optional] 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/UpdateResponse.md b/out/manticoresearch-javascript-actual/docs/UpdateResponse.md
deleted file mode 100644
index b42e686..0000000
--- a/out/manticoresearch-javascript-actual/docs/UpdateResponse.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# Manticoresearch.UpdateResponse
-
-## Properties
-
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**index** | **String** |  | [optional] 
-**updated** | **Number** |  | [optional] 
-**id** | **Number** |  | [optional] 
-**result** | **String** |  | [optional] 
-
-
-
-
diff --git a/out/manticoresearch-javascript-actual/docs/UtilsApi.md b/out/manticoresearch-javascript-actual/docs/UtilsApi.md
deleted file mode 100644
index 35984f8..0000000
--- a/out/manticoresearch-javascript-actual/docs/UtilsApi.md
+++ /dev/null
@@ -1,57 +0,0 @@
-# Manticoresearch.UtilsApi
-
-All URIs are relative to *http://127.0.0.1:9308*
-
-Method | HTTP request | Description
-------------- | ------------- | -------------
-[**sql**](UtilsApi.md#sql) | **POST** /sql | Perform SQL requests
-
-
-
-## sql
-
-> {String: Array} sql(body, opts)
-
-Perform SQL requests
-
-Run a query in SQL format.
-Expects a query string passed through `body` parameter and `opts` Object parameter that defines a format of response:
-* `opts` Object parameter can contain `{raw_response: false}` for Select only queries, e.g., `SELECT * FROM myindex`.  
-* `opts` Object parameter can contain `{raw_response: true}` for any type of query (including Select qieries as well) , e.g., `SHOW TABLES`. 
-The query string must stay as it is, no URL encoding is needed.
-The response object depends on the query executed. In select mode the response has same format as `/search` operation.
-
-
-### Example
-
-```javascript
-var Manticoresearch = require('manticoresearch');
-
-var utilsApi = new Manticoresearch.UtilsApi();
-async function() {
-    res =  await utilsApi.sql('SHOW TABLES');
-}
-```
-
-### Parameters
-
-
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **body** | **String**| A query string. | 
- **opts** | **Object**| Optional, expects to contain a boolean `raw_response` value that defines a format of response. `raw_response` can be set to false for Select only queries or can be set to true for any queries (including Select queries).  if `opts` parameter is omitted it has the same effect as setting it to `{raw_response: true}` |
-
-### Return type
-
-**{String: Array}**
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: text/plain
-- **Accept**: application/json
-
diff --git a/out/manticoresearch-javascript-actual/git_push.sh b/out/manticoresearch-javascript-actual/git_push.sh
deleted file mode 100644
index 8a089b7..0000000
--- a/out/manticoresearch-javascript-actual/git_push.sh
+++ /dev/null
@@ -1,58 +0,0 @@
-#!/bin/sh
-# ref: https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/
-#
-# Usage example: /bin/sh ./git_push.sh wing328 openapi-pestore-perl "minor update" "gitlab.com"
-
-git_user_id=$1
-git_repo_id=$2
-release_note=$3
-git_host=$4
-
-if [ "$git_host" = "" ]; then
-    git_host="github.com"
-    echo "[INFO] No command line input provided. Set \$git_host to $git_host"
-fi
-
-if [ "$git_user_id" = "" ]; then
-    git_user_id="manticoresoftware"
-    echo "[INFO] No command line input provided. Set \$git_user_id to $git_user_id"
-fi
-
-if [ "$git_repo_id" = "" ]; then
-    git_repo_id="manticoresearch-javascript"
-    echo "[INFO] No command line input provided. Set \$git_repo_id to $git_repo_id"
-fi
-
-if [ "$release_note" = "" ]; then
-    release_note="Minor update"
-    echo "[INFO] No command line input provided. Set \$release_note to $release_note"
-fi
-
-# Initialize the local directory as a Git repository
-git init
-
-# Adds the files in the local repository and stages them for commit.
-git add .
-
-# Commits the tracked changes and prepares them to be pushed to a remote repository.
-git commit -m "$release_note"
-
-# Sets the new remote
-git_remote=`git remote`
-if [ "$git_remote" = "" ]; then # git remote not defined
-
-    if [ "$GIT_TOKEN" = "" ]; then
-        echo "[INFO] \$GIT_TOKEN (environment variable) is not set. Using the git credential in your environment."
-        git remote add origin https://${git_host}/${git_user_id}/${git_repo_id}.git
-    else
-        git remote add origin https://${git_user_id}:${GIT_TOKEN}@${git_host}/${git_user_id}/${git_repo_id}.git
-    fi
-
-fi
-
-git pull origin master
-
-# Pushes (Forces) the changes in the local repository up to the remote repository
-echo "Git pushing to https://${git_host}/${git_user_id}/${git_repo_id}.git"
-git push origin master 2>&1 | grep -v 'To https'
-
diff --git a/out/manticoresearch-javascript-actual/mocha.opts b/out/manticoresearch-javascript-actual/mocha.opts
deleted file mode 100644
index 9070118..0000000
--- a/out/manticoresearch-javascript-actual/mocha.opts
+++ /dev/null
@@ -1 +0,0 @@
---timeout 10000
diff --git a/out/manticoresearch-javascript-actual/package.json b/out/manticoresearch-javascript-actual/package.json
deleted file mode 100644
index 7b747b1..0000000
--- a/out/manticoresearch-javascript-actual/package.json
+++ /dev/null
@@ -1,28 +0,0 @@
-{
-  "name": "manticoresearch",
-  "version": "4.0.0",
-  "description": "Javascript client for Manticore Search",
-  "license": "MIT",
-  "main": "src/index.js",
-  "scripts": {
-    "test": "mocha --recursive"
-  },
-  "browser": {
-    "fs": false
-  },
-  "keywords": [
-    "manticoresearch",
-    "REST",
-    "search",
-    "client",
-    "index"
-  ],  
-  "dependencies": {
-    "superagent": "5.1.0"
-  },
-  "devDependencies": {
-    "expect.js": "^0.3.1",
-    "mocha": "^5.2.0",
-    "sinon": "^7.2.0"
-  }
-}
diff --git a/out/manticoresearch-javascript-actual/src/ApiClient.js b/out/manticoresearch-javascript-actual/src/ApiClient.js
deleted file mode 100644
index e44687b..0000000
--- a/out/manticoresearch-javascript-actual/src/ApiClient.js
+++ /dev/null
@@ -1,645 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['superagent', 'querystring'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('superagent'), require('querystring'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.ApiClient = factory(root.superagent, root.querystring);
-  }
-}(this, function(superagent, querystring) {
-  'use strict';
-
-  /**
-   * @module ApiClient
-   * @version 4.0.0
-   */
-
-  /**
-   * Manages low level client-server communications, parameter marshalling, etc. There should not be any need for an
-   * application to use this class directly - the *Api and model classes provide the public API for the service. The
-   * contents of this file should be regarded as internal but are documented for completeness.
-   * @alias module:ApiClient
-   * @class
-   */
-  var exports = function() {
-    /**
-     * The base URL against which to resolve every API call's (relative) path.
-     * @type {String}
-     * @default http://127.0.0.1:9308
-     */
-    this.basePath = 'http://127.0.0.1:9308'.replace(/\/+$/, '');
-
-    /**
-     * The authentication methods to be included for all API calls.
-     * @type {Array.<String>}
-     */
-    this.authentications = {
-    };
-    /**
-     * The default HTTP headers to be included for all API calls.
-     * @type {Array.<String>}
-     * @default {}
-     */
-    this.defaultHeaders = {};
-
-    /**
-     * The default HTTP timeout for all API calls.
-     * @type {Number}
-     * @default 60000
-     */
-    this.timeout = 60000;
-
-    /**
-     * If set to false an additional timestamp parameter is added to all API GET calls to
-     * prevent browser caching
-     * @type {Boolean}
-     * @default true
-     */
-    this.cache = true;
-
-    /**
-     * If set to true, the client will save the cookies from each server
-     * response, and return them in the next request.
-     * @default false
-     */
-    this.enableCookies = false;
-
-    /*
-     * Used to save and return cookies in a node.js (non-browser) setting,
-     * if this.enableCookies is set to true.
-     */
-    if (typeof window === 'undefined') {
-      this.agent = new superagent.agent();
-    }
-
-    /*
-     * Allow user to override superagent agent
-     */
-    this.requestAgent = null;
-
-    /*
-     * Allow user to add superagent plugins
-     */
-    this.plugins = null;
-  };
-
-  /**
-   * Returns a string representation for an actual parameter.
-   * @param param The actual parameter.
-   * @returns {String} The string representation of <code>param</code>.
-   */
-  exports.prototype.paramToString = function(param) {
-    if (param == undefined || param == null) {
-      return '';
-    }
-    if (param instanceof Date) {
-      return param.toJSON();
-    }
-    return param.toString();
-  };
-
- /**
-   * Builds full URL by appending the given path to the base URL and replacing path parameter place-holders with parameter values.
-   * NOTE: query parameters are not handled here.
-   * @param {String} path The path to append to the base URL.
-   * @param {Object} pathParams The parameter values to append.
-   * @returns {String} The encoded path with parameter values substituted.
-   */
-  exports.prototype.buildUrl = function(path, pathParams, apiBasePath) {
-    if (!path.match(/^\//)) {
-      path = '/' + path;
-    }
-    var url = this.basePath + path;
-
-
-    // use API (operation, path) base path if defined
-    if (apiBasePath !== null && apiBasePath !== undefined) {
-        url = apiBasePath + path;
-    }
-
-    var _this = this;
-    url = url.replace(/\{([\w-]+)\}/g, function(fullMatch, key) {
-      var value;
-      if (pathParams.hasOwnProperty(key)) {
-        value = _this.paramToString(pathParams[key]);
-      } else {
-        value = fullMatch;
-      }
-      return encodeURIComponent(value);
-    });
-    return url;
-  };
-
-  /**
-   * Checks whether the given content type represents JSON.<br>
-   * JSON content type examples:<br>
-   * <ul>
-   * <li>application/json</li>
-   * <li>application/json; charset=UTF8</li>
-   * <li>APPLICATION/JSON</li>
-   * </ul>
-   * @param {String} contentType The MIME content type to check.
-   * @returns {Boolean} <code>true</code> if <code>contentType</code> represents JSON, otherwise <code>false</code>.
-   */
-  exports.prototype.isJsonMime = function(contentType) {
-    return Boolean(contentType != null && contentType.match(/^application\/json(;.*)?$/i));
-  };
-
-  /**
-   * Chooses a content type from the given array, with JSON preferred; i.e. return JSON if included, otherwise return the first.
-   * @param {Array.<String>} contentTypes
-   * @returns {String} The chosen content type, preferring JSON.
-   */
-  exports.prototype.jsonPreferredMime = function(contentTypes) {
-    for (var i = 0; i < contentTypes.length; i++) {
-      if (this.isJsonMime(contentTypes[i])) {
-        return contentTypes[i];
-      }
-    }
-    return contentTypes[0];
-  };
-
-  /**
-   * Checks whether the given parameter value represents file-like content.
-   * @param param The parameter to check.
-   * @returns {Boolean} <code>true</code> if <code>param</code> represents a file.
-   */
-  exports.prototype.isFileParam = function(param) {
-    // fs.ReadStream in Node.js and Electron (but not in runtime like browserify)
-    if (typeof require === 'function') {
-      var fs;
-      try {
-        fs = require('fs');
-      } catch (err) {}
-      if (fs && fs.ReadStream && param instanceof fs.ReadStream) {
-        return true;
-      }
-    }
-    // Buffer in Node.js
-    if (typeof Buffer === 'function' && param instanceof Buffer) {
-      return true;
-    }
-    // Blob in browser
-    if (typeof Blob === 'function' && param instanceof Blob) {
-      return true;
-    }
-    // File in browser (it seems File object is also instance of Blob, but keep this for safe)
-    if (typeof File === 'function' && param instanceof File) {
-      return true;
-    }
-    return false;
-  };
-
-  /**
-   * Normalizes parameter values:
-   * <ul>
-   * <li>remove nils</li>
-   * <li>keep files and arrays</li>
-   * <li>format to string with `paramToString` for other cases</li>
-   * </ul>
-   * @param {Object.<String, Object>} params The parameters as object properties.
-   * @returns {Object.<String, Object>} normalized parameters.
-   */
-  exports.prototype.normalizeParams = function(params) {
-    var newParams = {};
-    for (var key in params) {
-      if (params.hasOwnProperty(key) && params[key] != undefined && params[key] != null) {
-        var value = params[key];
-        if (this.isFileParam(value) || Array.isArray(value)) {
-          newParams[key] = value;
-        } else {
-          newParams[key] = this.paramToString(value);
-        }
-      }
-    }
-    return newParams;
-  };
-
-  /**
-   * Enumeration of collection format separator strategies.
-   * @enum {String}
-   * @readonly
-   */
-  exports.CollectionFormatEnum = {
-    /**
-     * Comma-separated values. Value: <code>csv</code>
-     * @const
-     */
-    CSV: ',',
-    /**
-     * Space-separated values. Value: <code>ssv</code>
-     * @const
-     */
-    SSV: ' ',
-    /**
-     * Tab-separated values. Value: <code>tsv</code>
-     * @const
-     */
-    TSV: '\t',
-    /**
-     * Pipe(|)-separated values. Value: <code>pipes</code>
-     * @const
-     */
-    PIPES: '|',
-    /**
-     * Native array. Value: <code>multi</code>
-     * @const
-     */
-    MULTI: 'multi'
-  };
-
-  /**
-   * Builds a string representation of an array-type actual parameter, according to the given collection format.
-   * @param {Array} param An array parameter.
-   * @param {module:ApiClient.CollectionFormatEnum} collectionFormat The array element separator strategy.
-   * @returns {String|Array} A string representation of the supplied collection, using the specified delimiter. Returns
-   * <code>param</code> as is if <code>collectionFormat</code> is <code>multi</code>.
-   */
-  exports.prototype.buildCollectionParam = function buildCollectionParam(param, collectionFormat) {
-    if (param == null) {
-      return null;
-    }
-    switch (collectionFormat) {
-      case 'csv':
-        return param.map(this.paramToString).join(',');
-      case 'ssv':
-        return param.map(this.paramToString).join(' ');
-      case 'tsv':
-        return param.map(this.paramToString).join('\t');
-      case 'pipes':
-        return param.map(this.paramToString).join('|');
-      case 'multi':
-        // return the array directly as SuperAgent will handle it as expected
-        return param.map(this.paramToString);
-      default:
-        throw new Error('Unknown collection format: ' + collectionFormat);
-    }
-  };
-
-  /**
-   * Applies authentication headers to the request.
-   * @param {Object} request The request object created by a <code>superagent()</code> call.
-   * @param {Array.<String>} authNames An array of authentication method names.
-   */
-  exports.prototype.applyAuthToRequest = function(request, authNames) {
-    var _this = this;
-    authNames.forEach(function(authName) {
-      var auth = _this.authentications[authName];
-      switch (auth.type) {
-        case 'basic':
-          if (auth.username || auth.password) {
-            request.auth(auth.username || '', auth.password || '');
-          }
-          break;
-        case 'bearer':
-          if (auth.accessToken) {
-            request.set({'Authorization': 'Bearer ' + auth.accessToken});
-          }
-          break;
-        case 'apiKey':
-          if (auth.apiKey) {
-            var data = {};
-            if (auth.apiKeyPrefix) {
-              data[auth.name] = auth.apiKeyPrefix + ' ' + auth.apiKey;
-            } else {
-              data[auth.name] = auth.apiKey;
-            }
-            if (auth['in'] === 'header') {
-              request.set(data);
-            } else {
-              request.query(data);
-            }
-          }
-          break;
-        case 'oauth2':
-          if (auth.accessToken) {
-            request.set({'Authorization': 'Bearer ' + auth.accessToken});
-          }
-          break;
-        default:
-          throw new Error('Unknown authentication type: ' + auth.type);
-      }
-    });
-  };
-
-  /**
-   * Deserializes an HTTP response body into a value of the specified type.
-   * @param {Object} response A SuperAgent response object.
-   * @param {(String|Array.<String>|Object.<String, Object>|Function)} returnType The type to return. Pass a string for simple types
-   * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To
-   * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:
-   * all properties on <code>data<code> will be converted to this type.
-   * @returns A value of the specified type.
-   */
-  exports.prototype.deserialize = function deserialize(response, returnType) {
-    if (response == null || returnType == null || response.status == 204) {
-      return null;
-    }
-    // Rely on SuperAgent for parsing response body.
-    // See http://visionmedia.github.io/superagent/#parsing-response-bodies
-    var data = response.body;
-    if (data == null || (typeof data === 'object' && typeof data.length === 'undefined' && !Object.keys(data).length)) {
-      // SuperAgent does not always produce a body; use the unparsed response as a fallback
-      data = response.text;
-    }
-    return exports.convertToType(data, returnType);
-  };
-
-  /**
-   * Invokes the REST service using the supplied settings and parameters.
-   * @param {String} path The base URL to invoke.
-   * @param {String} httpMethod The HTTP method to use.
-   * @param {Object.<String, String>} pathParams A map of path parameters and their values.
-   * @param {Object.<String, Object>} queryParams A map of query parameters and their values.
-   * @param {Object.<String, Object>} collectionQueryParams A map of collection query parameters and their values.
-   * @param {Object.<String, Object>} headerParams A map of header parameters and their values.
-   * @param {Object.<String, Object>} formParams A map of form parameters and their values.
-   * @param {Object} bodyParam The value to pass as the request body.
-   * @param {Array.<String>} authNames An array of authentication type names.
-   * @param {Array.<String>} contentTypes An array of request MIME types.
-   * @param {Array.<String>} accepts An array of acceptable response MIME types.
-   * @param {(String|Array|ObjectFunction)} returnType The required type to return; can be a string for simple types or the
-   * constructor for a complex type.
-   * @returns {Promise} A {@link https://www.promisejs.org/|Promise} object.
-   */
-  exports.prototype.callApi = function callApi(path, httpMethod, pathParams,
-      queryParams, collectionQueryParams, headerParams, formParams, bodyParam, authNames, contentTypes, accepts,
-      returnType, apiBasePath) {
-
-    var _this = this;
-    var url = this.buildUrl(path, pathParams, apiBasePath);
-    var request = superagent(httpMethod, url);
-
-    if (this.plugins !== null) {
-        for (var index in this.plugins) {
-            if (this.plugins.hasOwnProperty(index)) {
-                request.use(this.plugins[index])
-            }
-        }
-    }
-
-    // apply authentications
-    this.applyAuthToRequest(request, authNames);
-
-    // set collection query parameters
-    for (var key in collectionQueryParams) {
-      if (collectionQueryParams.hasOwnProperty(key)) {
-        var param = collectionQueryParams[key];
-        if (param.collectionFormat === 'csv') {
-          // SuperAgent normally percent-encodes all reserved characters in a query parameter. However,
-          // commas are used as delimiters for the 'csv' collectionFormat so they must not be encoded. We
-          // must therefore construct and encode 'csv' collection query parameters manually.
-          if (param.value != null) {
-            var value = param.value.map(this.paramToString).map(encodeURIComponent).join(',');
-            request.query(encodeURIComponent(key) + "=" + value);
-          }
-        } else {
-          // All other collection query parameters should be treated as ordinary query parameters.
-          queryParams[key] = this.buildCollectionParam(param.value, param.collectionFormat);
-        }
-      }
-    }
-
-    // set query parameters
-    if (httpMethod.toUpperCase() === 'GET' && this.cache === false) {
-        queryParams['_'] = new Date().getTime();
-    }
-    request.query(this.normalizeParams(queryParams));
-
-    // set header parameters
-    request.set(this.defaultHeaders).set(this.normalizeParams(headerParams));
-
-
-    // set requestAgent if it is set by user
-    if (this.requestAgent) {
-      request.agent(this.requestAgent);
-    }
-
-    // set request timeout
-    request.timeout(this.timeout);
-
-    var contentType = this.jsonPreferredMime(contentTypes);
-    if (contentType) {
-      // Issue with superagent and multipart/form-data (https://github.com/visionmedia/superagent/issues/746)
-      if(contentType != 'multipart/form-data') {
-        request.type(contentType);
-      }
-    }
-
-    if (contentType === 'application/x-www-form-urlencoded') {
-      request.send(querystring.stringify(this.normalizeParams(formParams)));
-    } else if (contentType == 'multipart/form-data') {
-      var _formParams = this.normalizeParams(formParams);
-      for (var key in _formParams) {
-        if (_formParams.hasOwnProperty(key)) {
-          if (this.isFileParam(_formParams[key])) {
-            // file field
-            request.attach(key, _formParams[key]);
-          } else {
-            request.field(key, _formParams[key]);
-          }
-        }
-      }
-    } else if (bodyParam !== null && bodyParam !== undefined) {
-      if (!request.header['Content-Type']) {
-          request.type('application/json');
-      }
-      request.send(bodyParam);
-    }
-
-    var accept = this.jsonPreferredMime(accepts);
-    if (accept) {
-      request.accept(accept);
-    }
-
-    if (returnType === 'Blob') {
-      request.responseType('blob');
-    } else if (returnType === 'String') {
-      request.responseType('string');
-    }
-
-    // Attach previously saved cookies, if enabled
-    if (this.enableCookies){
-      if (typeof window === 'undefined') {
-        this.agent._attachCookies(request);
-      }
-      else {
-        request.withCredentials();
-      }
-    }
-
-    return new Promise(function(resolve, reject) {
-      request.end(function(error, response) {
-        if (error) {
-          reject(error);
-        } else {
-          try {
-            var data = _this.deserialize(response, returnType);
-            if (_this.enableCookies && typeof window === 'undefined'){
-              _this.agent._saveCookies(response);
-            }
-            resolve({data: data, response: response});
-          } catch (err) {
-            reject(err);
-          }
-        }
-      });
-    });
-  };
-
-  /**
-   * Parses an ISO-8601 string representation of a date value.
-   * @param {String} str The date value as a string.
-   * @returns {Date} The parsed date object.
-   */
-  exports.parseDate = function(str) {
-    return new Date(str.replace(/T/i, ' '));
-  };
-
-  /**
-   * Converts a value to the specified type.
-   * @param {(String|Object)} data The data to convert, as a string or object.
-   * @param {(String|Array.<String>|Object.<String, Object>|Function)} type The type to return. Pass a string for simple types
-   * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To
-   * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:
-   * all properties on <code>data<code> will be converted to this type.
-   * @returns An instance of the specified type or null or undefined if data is null or undefined.
-   */
-  exports.convertToType = function(data, type) {
-    if (data === null || data === undefined)
-      return data
-
-    switch (type) {
-      case 'Boolean':
-        return Boolean(data);
-      case 'Integer':
-        return parseInt(data, 10);
-      case 'Number':
-        return parseFloat(data);
-      case 'String':
-        return String(data);
-      case 'Date':
-        return this.parseDate(String(data));
-      case 'Blob':
-      	return data;
-      default:
-        if (type === Object) {
-          // generic object, return directly
-          return data;
-        } else if (typeof type.constructFromObject === 'function') {
-          // for model type like User or enum class
-          return type.constructFromObject(data);
-        } else if (Array.isArray(type)) {
-          // for array type like: ['String']
-          var itemType = type[0];
-          return data.map(function(item) {
-            return exports.convertToType(item, itemType);
-          });
-        } else if (typeof type === 'object') {
-          // for plain object type like: {'String': 'Integer'}
-          var keyType, valueType;
-          for (var k in type) {
-            if (type.hasOwnProperty(k)) {
-              keyType = k;
-              valueType = type[k];
-              break;
-            }
-          }
-          var result = {};
-          for (var k in data) {
-            if (data.hasOwnProperty(k)) {
-              var key = exports.convertToType(k, keyType);
-              var value = exports.convertToType(data[k], valueType);
-              result[key] = value;
-            }
-          }
-          return result;
-        } else {
-          // for unknown type, return the data directly
-          return data;
-        }
-    }
-  };
-
-  /**
-    * Gets an array of host settings
-    * @returns An array of host settings
-    */
-    exports.hostSettings = function() {
-        return [
-            {
-              'url': "http://127.0.0.1:9308",
-              'description': "Default Manticore Search HTTP",
-            }
-      ];
-    };
-
-    exports.getBasePathFromSettings = function(index, variables) {
-        var variables = variables || {};
-        var servers = this.hostSettings();
-
-        // check array index out of bound
-        if (index < 0 || index >= servers.length) {
-            throw new Error("Invalid index " + index + " when selecting the host settings. Must be less than " + servers.length);
-        }
-
-        var server = servers[index];
-        var url = server['url'];
-
-        // go through variable and assign a value
-        for (var variable_name in server['variables']) {
-            if (variable_name in variables) {
-                let variable = server['variables'][variable_name];
-                if ( !('enum_values' in variable) || variable['enum_values'].includes(variables[variable_name]) ) {
-                    url = url.replace("{" + variable_name + "}", variables[variable_name]);
-                } else {
-                    throw new Error("The variable `" + variable_name + "` in the host URL has invalid value " + variables[variable_name] + ". Must be " + server['variables'][variable_name]['enum_values'] + ".");
-                }
-            } else {
-                // use default value
-                url = url.replace("{" + variable_name + "}", server['variables'][variable_name]['default_value'])
-            }
-        }
-        return url;
-    };
-
-  /**
-   * Constructs a new map or array model from REST data.
-   * @param data {Object|Array} The REST data.
-   * @param obj {Object|Array} The target object or array.
-   */
-  exports.constructFromObject = function(data, obj, itemType) {
-    if (Array.isArray(data)) {
-      for (var i = 0; i < data.length; i++) {
-        if (data.hasOwnProperty(i))
-          obj[i] = exports.convertToType(data[i], itemType);
-      }
-    } else {
-      for (var k in data) {
-        if (data.hasOwnProperty(k))
-          obj[k] = exports.convertToType(data[k], itemType);
-      }
-    }
-  };
-
-  /**
-   * The default API client implementation.
-   * @type {module:ApiClient}
-   */
-  exports.instance = new exports();
-
-  return exports;
-}));
diff --git a/out/manticoresearch-javascript-actual/src/api/IndexApi.js b/out/manticoresearch-javascript-actual/src/api/IndexApi.js
deleted file mode 100644
index 1e8a4c5..0000000
--- a/out/manticoresearch-javascript-actual/src/api/IndexApi.js
+++ /dev/null
@@ -1,309 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient', 'model/BulkResponse', 'model/DeleteDocumentRequest', 'model/DeleteResponse', 'model/ErrorResponse', 'model/InsertDocumentRequest', 'model/SuccessResponse', 'model/UpdateDocumentRequest', 'model/UpdateResponse'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'), require('../model/BulkResponse'), require('../model/DeleteDocumentRequest'), require('../model/DeleteResponse'), require('../model/ErrorResponse'), require('../model/InsertDocumentRequest'), require('../model/SuccessResponse'), require('../model/UpdateDocumentRequest'), require('../model/UpdateResponse'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.IndexApi = factory(root.Manticoresearch.ApiClient, root.Manticoresearch.BulkResponse, root.Manticoresearch.DeleteDocumentRequest, root.Manticoresearch.DeleteResponse, root.Manticoresearch.ErrorResponse, root.Manticoresearch.InsertDocumentRequest, root.Manticoresearch.SuccessResponse, root.Manticoresearch.UpdateDocumentRequest, root.Manticoresearch.UpdateResponse);
-  }
-}(this, function(ApiClient, BulkResponse, DeleteDocumentRequest, DeleteResponse, ErrorResponse, InsertDocumentRequest, SuccessResponse, UpdateDocumentRequest, UpdateResponse) {
-  'use strict';
-
-  /**
-   * Index service.
-   * @module api/IndexApi
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new IndexApi. 
-   * @alias module:api/IndexApi
-   * @class
-   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
-   * default to {@link module:ApiClient#instance} if unspecified.
-   */
-  var exports = function(apiClient) {
-    this.apiClient = apiClient || ApiClient.instance;
-
-
-
-    /**
-     * Bulk index operations
-     * Sends multiple operatons like inserts, updates, replaces or deletes.  For each operation it's object must have same format as in their dedicated method.  The method expects a raw string as the batch in NDJSON.  Each operation object needs to be serialized to   JSON and separated by endline (\\n).      An example of raw input:      ```   {\"insert\": {\"index\": \"movies\", \"doc\": {\"plot\": \"A secret team goes to North Pole\", \"rating\": 9.5, \"language\": [2, 3], \"title\": \"This is an older movie\", \"lon\": 51.99, \"meta\": {\"keywords\":[\"travel\",\"ice\"],\"genre\":[\"adventure\"]}, \"year\": 1950, \"lat\": 60.4, \"advise\": \"PG-13\"}}}   \\n   {\"delete\": {\"index\": \"movies\",\"id\":700}}   ```      Responds with an object telling whenever any errors occured and an array with status for each operation:      ```   {     'items':     [       {         'update':{'_index':'products','_id':1,'result':'updated'}       },       {         'update':{'_index':'products','_id':2,'result':'updated'}       }     ],     'errors':false   }   ```   
-     * @param {String} body 
-     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/BulkResponse} and HTTP response
-     */
-    this.bulkWithHttpInfo = function(body) {
-      var postBody = JSON.parse(JSON.stringify(body));
-
-
-      // verify the required parameter 'body' is set
-      if (body === undefined || body === null) {
-        throw new Error("Missing the required parameter 'body' when calling bulk");
-      }
-
-      var pathParams = {
-      };
-      var queryParams = {
-      };
-      var collectionQueryParams = {
-      };
-      var headerParams = {
-      };
-      var formParams = {
-      };
-
-      var authNames = [];
-      var contentTypes = ['application/x-ndjson'];
-      var accepts = ['application/json'];
-      var returnType = BulkResponse;
-      return this.apiClient.callApi(
-        '/bulk', 'POST',
-        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
-        authNames, contentTypes, accepts, returnType, null
-      ).then( function(res) {
-        return res;
-      });
-    }
-
-    /**
-     * Bulk index operations
-     * Sends multiple operatons like inserts, updates, replaces or deletes.  For each operation it's object must have same format as in their dedicated method.  The method expects a raw string as the batch in NDJSON.  Each operation object needs to be serialized to   JSON and separated by endline (\\n).      An example of raw input:      ```   {\"insert\": {\"index\": \"movies\", \"doc\": {\"plot\": \"A secret team goes to North Pole\", \"rating\": 9.5, \"language\": [2, 3], \"title\": \"This is an older movie\", \"lon\": 51.99, \"meta\": {\"keywords\":[\"travel\",\"ice\"],\"genre\":[\"adventure\"]}, \"year\": 1950, \"lat\": 60.4, \"advise\": \"PG-13\"}}}   \\n   {\"delete\": {\"index\": \"movies\",\"id\":700}}   ```      Responds with an object telling whenever any errors occured and an array with status for each operation:      ```   {     'items':     [       {         'update':{'_index':'products','_id':1,'result':'updated'}       },       {         'update':{'_index':'products','_id':2,'result':'updated'}       }     ],     'errors':false   }   ```   
-     * @param {String} body 
-     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/BulkResponse}
-     */
-    this.bulk = function(body) {
-      return this.bulkWithHttpInfo(body)
-        .then(function(response_and_data) {
-          return response_and_data.data;
-        });
-    }
-
-
-    /**
-     * Delete a document in an index
-     * Delete one or several documents. The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a  match query, in which case multiple documents can be delete . Example of input to delete by id:    ```   {'index':'movies','id':100}   ```  Example of input to delete using a query:    ```   {     'index':'movies',     'query':     {       'bool':       {         'must':         [           {'query_string':'new movie'}         ]       }     }   }   ```  The match query has same syntax as in for searching. Responds with an object telling how many documents got deleted:     ```   {'_index':'products','updated':1}   ``` 
-     * @param {module:model/DeleteDocumentRequest} deleteDocumentRequest 
-     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/DeleteResponse} and HTTP response
-     */
-    this.callDeleteWithHttpInfo = function(deleteDocumentRequest) {
-      var postBody = JSON.parse(JSON.stringify(deleteDocumentRequest));
-
-
-      // verify the required parameter 'deleteDocumentRequest' is set
-      if (deleteDocumentRequest === undefined || deleteDocumentRequest === null) {
-        throw new Error("Missing the required parameter 'deleteDocumentRequest' when calling callDelete");
-      }
-
-      var pathParams = {
-      };
-      var queryParams = {
-      };
-      var collectionQueryParams = {
-      };
-      var headerParams = {
-      };
-      var formParams = {
-      };
-
-      var authNames = [];
-      var contentTypes = ['application/json'];
-      var accepts = ['application/json'];
-      var returnType = DeleteResponse;
-      return this.apiClient.callApi(
-        '/delete', 'POST',
-        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
-        authNames, contentTypes, accepts, returnType, null
-      ).then( function(res) {
-        return res;
-      });
-    }
-
-    /**
-     * Delete a document in an index
-     * Delete one or several documents. The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a  match query, in which case multiple documents can be delete . Example of input to delete by id:    ```   {'index':'movies','id':100}   ```  Example of input to delete using a query:    ```   {     'index':'movies',     'query':     {       'bool':       {         'must':         [           {'query_string':'new movie'}         ]       }     }   }   ```  The match query has same syntax as in for searching. Responds with an object telling how many documents got deleted:     ```   {'_index':'products','updated':1}   ``` 
-     * @param {module:model/DeleteDocumentRequest} deleteDocumentRequest 
-     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/DeleteResponse}
-     */
-    this.callDelete = function(deleteDocumentRequest) {
-      return this.callDeleteWithHttpInfo(deleteDocumentRequest)
-        .then(function(response_and_data) {
-          return response_and_data.data;
-        });
-    }
-
-
-    /**
-     * Create a new document in an index
-     * Insert a document.  Expects an object like:     ```   {     'index':'movies',     'id':701,     'doc':     {       'title':'This is an old movie',       'plot':'A secret team goes to North Pole',       'year':1950,       'rating':9.5,       'lat':60.4,       'lon':51.99,       'advise':'PG-13',       'meta':'{\"keywords\":{\"travel\",\"ice\"},\"genre\":{\"adventure\"}}',       'language':[2,3]     }   }   ```   The document id can also be missing, in which case an autogenerated one will be used:             ```   {     'index':'movies',     'doc':     {       'title':'This is a new movie',       'plot':'A secret team goes to North Pole',       'year':2020,       'rating':9.5,       'lat':60.4,       'lon':51.99,       'advise':'PG-13',       'meta':'{\"keywords\":{\"travel\",\"ice\"},\"genre\":{\"adventure\"}}',       'language':[2,3]     }   }   ```   It responds with an object in format:      ```   {'_index':'products','_id':701,'created':true,'result':'created','status':201}   ``` 
-     * @param {module:model/InsertDocumentRequest} insertDocumentRequest 
-     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SuccessResponse} and HTTP response
-     */
-    this.insertWithHttpInfo = function(insertDocumentRequest) {
-      var postBody = JSON.parse(JSON.stringify(insertDocumentRequest));
-
-
-      // verify the required parameter 'insertDocumentRequest' is set
-      if (insertDocumentRequest === undefined || insertDocumentRequest === null) {
-        throw new Error("Missing the required parameter 'insertDocumentRequest' when calling insert");
-      }
-
-      var pathParams = {
-      };
-      var queryParams = {
-      };
-      var collectionQueryParams = {
-      };
-      var headerParams = {
-      };
-      var formParams = {
-      };
-
-      var authNames = [];
-      var contentTypes = ['application/json'];
-      var accepts = ['application/json'];
-      var returnType = SuccessResponse;
-      return this.apiClient.callApi(
-        '/insert', 'POST',
-        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
-        authNames, contentTypes, accepts, returnType, null
-      ).then( function(res) {
-        return res;
-      });
-    }
-
-    /**
-     * Create a new document in an index
-     * Insert a document.  Expects an object like:     ```   {     'index':'movies',     'id':701,     'doc':     {       'title':'This is an old movie',       'plot':'A secret team goes to North Pole',       'year':1950,       'rating':9.5,       'lat':60.4,       'lon':51.99,       'advise':'PG-13',       'meta':'{\"keywords\":{\"travel\",\"ice\"},\"genre\":{\"adventure\"}}',       'language':[2,3]     }   }   ```   The document id can also be missing, in which case an autogenerated one will be used:             ```   {     'index':'movies',     'doc':     {       'title':'This is a new movie',       'plot':'A secret team goes to North Pole',       'year':2020,       'rating':9.5,       'lat':60.4,       'lon':51.99,       'advise':'PG-13',       'meta':'{\"keywords\":{\"travel\",\"ice\"},\"genre\":{\"adventure\"}}',       'language':[2,3]     }   }   ```   It responds with an object in format:      ```   {'_index':'products','_id':701,'created':true,'result':'created','status':201}   ``` 
-     * @param {module:model/InsertDocumentRequest} insertDocumentRequest 
-     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SuccessResponse}
-     */
-    this.insert = function(insertDocumentRequest) {
-      return this.insertWithHttpInfo(insertDocumentRequest)
-        .then(function(response_and_data) {
-          return response_and_data.data;
-        });
-    }
-
-
-    /**
-     * Replace new document in an index
-     * Replace an existing document. Input has same format as `insert` operation. <br/> Responds with an object in format: <br/>    ```   {'_index':'products','_id':1,'created':false,'result':'updated','status':200}   ``` 
-     * @param {module:model/InsertDocumentRequest} insertDocumentRequest 
-     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SuccessResponse} and HTTP response
-     */
-    this.replaceWithHttpInfo = function(insertDocumentRequest) {
-      var postBody = JSON.parse(JSON.stringify(insertDocumentRequest));
-
-
-      // verify the required parameter 'insertDocumentRequest' is set
-      if (insertDocumentRequest === undefined || insertDocumentRequest === null) {
-        throw new Error("Missing the required parameter 'insertDocumentRequest' when calling replace");
-      }
-
-      var pathParams = {
-      };
-      var queryParams = {
-      };
-      var collectionQueryParams = {
-      };
-      var headerParams = {
-      };
-      var formParams = {
-      };
-
-      var authNames = [];
-      var contentTypes = ['application/json'];
-      var accepts = ['application/json'];
-      var returnType = SuccessResponse;
-      return this.apiClient.callApi(
-        '/replace', 'POST',
-        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
-        authNames, contentTypes, accepts, returnType, null
-      ).then( function(res) {
-        return res;
-      });
-    }
-
-    /**
-     * Replace new document in an index
-     * Replace an existing document. Input has same format as `insert` operation. <br/> Responds with an object in format: <br/>    ```   {'_index':'products','_id':1,'created':false,'result':'updated','status':200}   ``` 
-     * @param {module:model/InsertDocumentRequest} insertDocumentRequest 
-     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SuccessResponse}
-     */
-    this.replace = function(insertDocumentRequest) {
-      return this.replaceWithHttpInfo(insertDocumentRequest)
-        .then(function(response_and_data) {
-          return response_and_data.data;
-        });
-    }
-
-
-    /**
-     * Update a document in an index
-     * Update one or several documents. The update can be made by passing the id or by using a match query in case multiple documents can be updated.  For example update a document using document id:    ```   {'index':'movies','doc':{'rating':9.49},'id':100}   ```  And update by using a match query:    ```   {     'index':'movies',     'doc':{'rating':9.49},     'query':     {       'bool':       {         'must':         [           {'query_string':'new movie'}         ]       }     }   }   ```   The match query has same syntax as for searching. Responds with an object that tells how many documents where updated in format:     ```   {'_index':'products','updated':1}   ``` 
-     * @param {module:model/UpdateDocumentRequest} updateDocumentRequest 
-     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/UpdateResponse} and HTTP response
-     */
-    this.updateWithHttpInfo = function(updateDocumentRequest) {
-      var postBody = JSON.parse(JSON.stringify(updateDocumentRequest));
-
-
-      // verify the required parameter 'updateDocumentRequest' is set
-      if (updateDocumentRequest === undefined || updateDocumentRequest === null) {
-        throw new Error("Missing the required parameter 'updateDocumentRequest' when calling update");
-      }
-
-      var pathParams = {
-      };
-      var queryParams = {
-      };
-      var collectionQueryParams = {
-      };
-      var headerParams = {
-      };
-      var formParams = {
-      };
-
-      var authNames = [];
-      var contentTypes = ['application/json'];
-      var accepts = ['application/json'];
-      var returnType = UpdateResponse;
-      return this.apiClient.callApi(
-        '/update', 'POST',
-        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
-        authNames, contentTypes, accepts, returnType, null
-      ).then( function(res) {
-        return res;
-      });
-    }
-
-    /**
-     * Update a document in an index
-     * Update one or several documents. The update can be made by passing the id or by using a match query in case multiple documents can be updated.  For example update a document using document id:    ```   {'index':'movies','doc':{'rating':9.49},'id':100}   ```  And update by using a match query:    ```   {     'index':'movies',     'doc':{'rating':9.49},     'query':     {       'bool':       {         'must':         [           {'query_string':'new movie'}         ]       }     }   }   ```   The match query has same syntax as for searching. Responds with an object that tells how many documents where updated in format:     ```   {'_index':'products','updated':1}   ``` 
-     * @param {module:model/UpdateDocumentRequest} updateDocumentRequest 
-     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/UpdateResponse}
-     */
-    this.update = function(updateDocumentRequest) {
-      return this.updateWithHttpInfo(updateDocumentRequest)
-        .then(function(response_and_data) {
-          return response_and_data.data;
-        });
-    }
-  };
-
-  return exports;
-}));
diff --git a/out/manticoresearch-javascript-actual/src/api/SearchApi.js b/out/manticoresearch-javascript-actual/src/api/SearchApi.js
deleted file mode 100644
index a693d73..0000000
--- a/out/manticoresearch-javascript-actual/src/api/SearchApi.js
+++ /dev/null
@@ -1,270 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient', 'model/ErrorResponse', 'model/PercolateRequest', 'model/SearchRequest', 'model/SearchResponse'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'), require('../model/ErrorResponse'), require('../model/PercolateRequest'), require('../model/SearchRequest'), require('../model/SearchResponse'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.SearchApi = factory(root.Manticoresearch.ApiClient, root.Manticoresearch.ErrorResponse, root.Manticoresearch.PercolateRequest, root.Manticoresearch.SearchRequest, root.Manticoresearch.SearchResponse);
-  }
-}(this, function(ApiClient, ErrorResponse, PercolateRequest, SearchRequest, SearchResponse) {
-  'use strict';
-
-  /**
-   * Search service.
-   * @module api/SearchApi
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new SearchApi. 
-   * @alias module:api/SearchApi
-   * @class
-   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
-   * default to {@link module:ApiClient#instance} if unspecified.
-   */
-  var exports = function(apiClient) {
-    this.apiClient = apiClient || ApiClient.instance;
-
-
-
-    /**
-     * Perform reverse search on a percolate index
-     * Performs a percolate search.  This method must be used only on percolate indexes.  Expects two parameters: the index name and an object with array of documents to be tested. An example of the documents object:    ```   {     \"query\":     {       \"percolate\":       {         \"document\":         {           \"content\":\"sample content\"         }       }     }   }   ```  Responds with an object with matched stored queries:     ```   {     'timed_out':false,     'hits':     {       'total':2,       'max_score':1,       'hits':       [         {           '_index':'idx_pq_1',           '_type':'doc',           '_id':'2',           '_score':'1',           '_source':           {             'query':             {               'match':{'title':'some'}             }           }         },         {           '_index':'idx_pq_1',           '_type':'doc',           '_id':'5',           '_score':'1',           '_source':           {             'query':             {               'ql':'some | none'             }           }         }       ]     }   }   ``` 
-     * @param {String} index Name of the percolate index
-     * @param {module:model/PercolateRequest} percolateRequest 
-     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SearchResponse} and HTTP response
-     */
-    this.percolateWithHttpInfo = function(index, percolateRequest) {
-      var postBody = JSON.parse(JSON.stringify(percolateRequest));
-
-
-      // verify the required parameter 'index' is set
-      if (index === undefined || index === null) {
-        throw new Error("Missing the required parameter 'index' when calling percolate");
-      }
-      // verify the required parameter 'percolateRequest' is set
-      if (percolateRequest === undefined || percolateRequest === null) {
-        throw new Error("Missing the required parameter 'percolateRequest' when calling percolate");
-      }
-
-      var pathParams = {
-        'index': index
-      };
-      var queryParams = {
-      };
-      var collectionQueryParams = {
-      };
-      var headerParams = {
-      };
-      var formParams = {
-      };
-
-      var authNames = [];
-      var contentTypes = ['application/json'];
-      var accepts = ['application/json'];
-      var returnType = SearchResponse;
-      return this.apiClient.callApi(
-        '/pq/{index}/search', 'POST',
-        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
-        authNames, contentTypes, accepts, returnType, null
-      ).then( function(res) {
-        return res;
-      });
-    }
-
-    /**
-     * Perform reverse search on a percolate index
-     * Performs a percolate search.  This method must be used only on percolate indexes.  Expects two parameters: the index name and an object with array of documents to be tested. An example of the documents object:    ```   {     \"query\":     {       \"percolate\":       {         \"document\":         {           \"content\":\"sample content\"         }       }     }   }   ```  Responds with an object with matched stored queries:     ```   {     'timed_out':false,     'hits':     {       'total':2,       'max_score':1,       'hits':       [         {           '_index':'idx_pq_1',           '_type':'doc',           '_id':'2',           '_score':'1',           '_source':           {             'query':             {               'match':{'title':'some'}             }           }         },         {           '_index':'idx_pq_1',           '_type':'doc',           '_id':'5',           '_score':'1',           '_source':           {             'query':             {               'ql':'some | none'             }           }         }       ]     }   }   ``` 
-     * @param {String} index Name of the percolate index
-     * @param {module:model/PercolateRequest} percolateRequest 
-     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SearchResponse}
-     */
-    this.percolate = function(index, percolateRequest) {
-      return this.percolateWithHttpInfo(index, percolateRequest)
-        .then(function(response_and_data) {
-          return response_and_data.data;
-        });
-    }
-
-
-    /**
-     * Performs a search on an index
-     *  The method expects an object with the following mandatory properties: * the name of the index to search * the match query object For details, see the documentation on [**SearchRequest**](SearchRequest.md) The method returns an object with the following properties: - took: the time taken to execute the search query. - timed_out: a boolean indicating whether the query timed out. - hits: an object with the following properties:    - total: the total number of hits found.    - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:      - _id: the ID of the matched document.      - _score: the score of the matched document.      - _source: the source data of the matched document.  In addition, if profiling is enabled, the response will include an additional array with profiling information attached. Here is an example search response:    ```   {     'took':10,     'timed_out':false,     'hits':     {       'total':2,       'hits':       [         {'_id':'1','_score':1,'_source':{'gid':11}},         {'_id':'2','_score':1,'_source':{'gid':12}}       ]     }   }   ```  For more information about the match query syntax and additional parameters that can be added to request and response, please see the documentation [here](https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON). 
-     * @param {module:model/SearchRequest} searchRequest 
-     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SearchResponse} and HTTP response
-     */
-    this.searchWithHttpInfo = function(searchRequest) {
-      var postBody = JSON.parse(JSON.stringify(searchRequest));
-
-
-      // verify the required parameter 'searchRequest' is set
-      if (searchRequest === undefined || searchRequest === null) {
-        throw new Error("Missing the required parameter 'searchRequest' when calling search");
-      }
-	  
-      if (postBody['source']) {
-		postBody['_source'] = postBody['source']; 
-		delete postBody['source'];
-	  }
-
-	  let restructObj = function(obj, objType) {
-		if (!obj['attr'] && !obj['name'] && !obj['query_fields'] && !obj['value'] && !obj['values']
-			&& !obj['field'] && !obj['location_anchor'] && !obj['must'] && !obj['must_not'] && !obj['should']
-		) {
-			return obj;
-		}
-		
-		let keyPropVal;
-		let newObj = {};
-		if (objType == 'fulltext_filter') {
-			if (obj['query_fields']) {
-				keyPropVal = obj['query_fields'];
-				if (obj['query_phrase']) {
-					newObj[keyPropVal] = obj['query_phrase']; 
-					newObj = {'match_phrase': newObj};
-				} else { 
-					newObj[keyPropVal] = obj['operator'] ? {'query': obj['query_string'], 'operator':obj['operator']} : obj['query_string'];
-					newObj = {'match': newObj};
-				}
-			} else {
-				newObj = obj;
-			}
-		} else if (objType == 'attr_filter') {
-			if (obj['field']) {
-				keyPropVal = obj['field'];
-				if (obj['value']) {
-					newObj[keyPropVal] = obj['value']; 
-					newObj = {'equals': newObj};
-				} else if (obj['values']) {
-					newObj[keyPropVal] = obj['values']; 
-					newObj = {'in': newObj};
-				} else  {
-					newObj[keyPropVal] = obj;
-					delete newObj[keyPropVal]['field'];
-					newObj = {'range': newObj};
-				} 
-			} else {
-				if (!obj['must'] && !obj['must_not'] && !obj['should']) {
-					newObj = {'geo_distance': obj};
-				} else {
-					['must', 'must_not', 'should'].forEach(propName => {
-						if (obj[propName]) {
-							newObj[propName] = obj[propName].map(filter => {
-								if (filter['query_fields'] || filter['query_string']) 
-									return restructObj(filter, 'fulltext_filter');
-								else 
-									return restructObj(filter, 'attr_filter');
-							});
-						}
-					});
-					newObj = {'bool': newObj};
-				}
-			}
-		} else {
-			let keyPropName = obj['attr'] ? 'attr' : 'name';
-			keyPropVal = obj[keyPropName];
-			delete obj[keyPropName];
-			newObj[keyPropVal] = obj;
-		}
-		
-		return newObj;
-	  };
-
-	  let restructNestedObj = function(nestedObj, propNames) {
-	    let newProp = {};
-	  	nestedObj[nestedObj.length-1].forEach( propVal => {
-			let oldProp = restructObj(propVal, propNames[propNames.length-1]);
-			newProp = {...newProp, ...oldProp};
-		});
-		nestedObj[nestedObj.length-1] = newProp;
-	  	
-		for (let i=propNames.length-1; i >=0; i--) {
-			nestedObj[i][propNames[i]] = nestedObj[i+1];
-		}
-	  };   
-
-	  if (postBody['sort']) {
-		postBody['sort'] = postBody['sort'].map(
-			sort => restructObj(sort, 'sort')
-		);
-	  }
-
-	  if (postBody['fulltext_filter'] || postBody['attr_filter']) {
-		postBody['query'] = {};
-		let filterObj;
-		['fulltext_filter', 'attr_filter'].forEach(propName => {
-			if (postBody[propName]) {
-				filterObj = restructObj(postBody[propName], propName);
-				postBody['query'] = {...postBody['query'], ...filterObj};
-				delete postBody[propName];
-			}
-		});
-	  }
-	  
-	  ['highlight.fields'].forEach(propSign => {
-		const propNames = propSign.split('.');
-		let nestedObj = [postBody];
-		for (let i=0; i < propNames.length; i++) {
-			if (!nestedObj[i][propNames[i]]) {
-				return;
-			}
-			nestedObj.push(nestedObj[i][propNames[i]]);
-		}
-		
-		restructNestedObj(nestedObj, propNames);
-	  });
-
-
-      var pathParams = {
-      };
-      var queryParams = {
-      };
-      var collectionQueryParams = {
-      };
-      var headerParams = {
-      };
-      var formParams = {
-      };
-
-      var authNames = [];
-      var contentTypes = ['application/json'];
-      var accepts = ['application/json'];
-      var returnType = SearchResponse;
-      return this.apiClient.callApi(
-        '/search', 'POST',
-        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
-        authNames, contentTypes, accepts, returnType, null
-      ).then( function(res) {
-        return res;
-      });
-    }
-
-    /**
-     * Performs a search on an index
-     *  The method expects an object with the following mandatory properties: * the name of the index to search * the match query object For details, see the documentation on [**SearchRequest**](SearchRequest.md) The method returns an object with the following properties: - took: the time taken to execute the search query. - timed_out: a boolean indicating whether the query timed out. - hits: an object with the following properties:    - total: the total number of hits found.    - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:      - _id: the ID of the matched document.      - _score: the score of the matched document.      - _source: the source data of the matched document.  In addition, if profiling is enabled, the response will include an additional array with profiling information attached. Here is an example search response:    ```   {     'took':10,     'timed_out':false,     'hits':     {       'total':2,       'hits':       [         {'_id':'1','_score':1,'_source':{'gid':11}},         {'_id':'2','_score':1,'_source':{'gid':12}}       ]     }   }   ```  For more information about the match query syntax and additional parameters that can be added to request and response, please see the documentation [here](https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON). 
-     * @param {module:model/SearchRequest} searchRequest 
-     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SearchResponse}
-     */
-    this.search = function(searchRequest) {
-      return this.searchWithHttpInfo(searchRequest)
-        .then(function(response_and_data) {
-          return response_and_data.data;
-        });
-    }
-  };
-
-  return exports;
-}));
diff --git a/out/manticoresearch-javascript-actual/src/api/UtilsApi.js b/out/manticoresearch-javascript-actual/src/api/UtilsApi.js
deleted file mode 100644
index 5d01dcd..0000000
--- a/out/manticoresearch-javascript-actual/src/api/UtilsApi.js
+++ /dev/null
@@ -1,113 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient', 'model/ErrorResponse'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'), require('../model/ErrorResponse'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.UtilsApi = factory(root.Manticoresearch.ApiClient, root.Manticoresearch.ErrorResponse);
-  }
-}(this, function(ApiClient, ErrorResponse) {
-  'use strict';
-
-  /**
-   * Utils service.
-   * @module api/UtilsApi
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new UtilsApi. 
-   * @alias module:api/UtilsApi
-   * @class
-   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
-   * default to {@link module:ApiClient#instance} if unspecified.
-   */
-  var exports = function(apiClient) {
-    this.apiClient = apiClient || ApiClient.instance;
-
-
-
-    /**
-     * Perform SQL requests
-     * Run a query in SQL format. Expects a query string passed through `body` parameter and optional `raw_response` parameter that defines a format of response. `raw_response` can be set to `False` for Select queries only, e.g., `SELECT * FROM myindex` The query string must stay as it is, no URL encoding is needed. The response object depends on the query executed. In select mode the response has same format as `/search` operation. 
-     * @param {String} body A query parameter string. 
-     * @param {Object} opts Optional parameters
-     * @param {Boolean} opts.rawResponse Optional parameter, defines a format of response. Can be set to `False` for Select only queries and set to `True` or omitted for any type of queries:  (default to true)
-     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Array.<Object>} and HTTP response
-     */
-    this.sqlWithHttpInfo = function(body, opts) {
-      opts = opts || {};
-      var postBody = JSON.parse(JSON.stringify(body));
-
-      if (postBody) {
-        if  ('rawResponse' in opts && !opts.rawResponse)
-          postBody = 'query=' + encodeURIComponent( String( postBody ) );
-        else if ( !('rawResponse' in opts) || opts.rawResponse)
-          postBody = 'mode=raw&query=' + encodeURIComponent( String( postBody ) );
-      }
-
-      // verify the required parameter 'body' is set
-      if (body === undefined || body === null) {
-        throw new Error("Missing the required parameter 'body' when calling sql");
-      }
-
-      var pathParams = {
-      };
-      var queryParams = {
-        'raw_response': opts['rawResponse'],
-      };
-      var collectionQueryParams = {
-      };
-      var headerParams = {
-      };
-      var formParams = {
-      };
-
-      var authNames = [];
-      var contentTypes = ['text/plain'];
-      var accepts = ['application/json'];
-      var returnType = [Object];
-      if ('rawResponse' in opts && !opts.rawResponse) 
-        returnType = Object;
-      return this.apiClient.callApi(
-        '/sql', 'POST',
-        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
-        authNames, contentTypes, accepts, returnType, null
-      ).then( function(res) {
-        if ('rawResponse' in opts && !opts.rawResponse)
-          res['data'] = [ res['data'] ];
-        return res;
-      });
-    }
-
-    /**
-     * Perform SQL requests
-     * Run a query in SQL format. Expects a query string passed through `body` parameter and optional `raw_response` parameter that defines a format of response. `raw_response` can be set to `False` for Select queries only, e.g., `SELECT * FROM myindex` The query string must stay as it is, no URL encoding is needed. The response object depends on the query executed. In select mode the response has same format as `/search` operation. 
-     * @param {String} body A query parameter string. 
-     * @param {Object} opts Optional parameters
-     * @param {Boolean} opts.rawResponse Optional parameter, defines a format of response. Can be set to `False` for Select only queries and set to `True` or omitted for any type of queries:  (default to true)
-     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Array.<Object>}
-     */
-    this.sql = function(body, opts) {
-      return this.sqlWithHttpInfo(body, opts)
-        .then(function(response_and_data) {
-          return response_and_data.data;
-        });
-    }
-  };
-
-  return exports;
-}));
diff --git a/out/manticoresearch-javascript-actual/src/index.js b/out/manticoresearch-javascript-actual/src/index.js
deleted file mode 100644
index fd24110..0000000
--- a/out/manticoresearch-javascript-actual/src/index.js
+++ /dev/null
@@ -1,274 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient', 'model/Aggregation', 'model/AggregationSortInnerValue', 'model/AggregationTerms', 'model/BoolFilter', 'model/BulkResponse', 'model/DeleteDocumentRequest', 'model/DeleteResponse', 'model/EqualsFilter', 'model/ErrorResponse', 'model/Facet', 'model/FilterBoolean', 'model/FilterNumber', 'model/FilterString', 'model/GeoDistanceFilter', 'model/GeoDistanceFilterLocationAnchor', 'model/Highlight', 'model/HighlightField', 'model/InFilter', 'model/InsertDocumentRequest', 'model/MatchFilter', 'model/MatchOp', 'model/MatchOpFilter', 'model/MatchPhraseFilter', 'model/NotFilterBoolean', 'model/NotFilterNumber', 'model/NotFilterString', 'model/PercolateRequest', 'model/PercolateRequestQuery', 'model/QueryFilter', 'model/RangeFilter', 'model/SearchRequest', 'model/SearchResponse', 'model/SearchResponseHits', 'model/SortMVA', 'model/SortMultiple', 'model/SortOrder', 'model/SourceByRules', 'model/SuccessResponse', 'model/UpdateDocumentRequest', 'model/UpdateResponse', 'api/IndexApi', 'api/SearchApi', 'api/UtilsApi'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('./ApiClient'), require('./model/Aggregation'), require('./model/AggregationSortInnerValue'), require('./model/AggregationTerms'), require('./model/BoolFilter'), require('./model/BulkResponse'), require('./model/DeleteDocumentRequest'), require('./model/DeleteResponse'), require('./model/EqualsFilter'), require('./model/ErrorResponse'), require('./model/Facet'), require('./model/FilterBoolean'), require('./model/FilterNumber'), require('./model/FilterString'), require('./model/GeoDistanceFilter'), require('./model/GeoDistanceFilterLocationAnchor'), require('./model/Highlight'), require('./model/HighlightField'), require('./model/InFilter'), require('./model/InsertDocumentRequest'), require('./model/MatchFilter'), require('./model/MatchOp'), require('./model/MatchOpFilter'), require('./model/MatchPhraseFilter'), require('./model/NotFilterBoolean'), require('./model/NotFilterNumber'), require('./model/NotFilterString'), require('./model/PercolateRequest'), require('./model/PercolateRequestQuery'), require('./model/QueryFilter'), require('./model/RangeFilter'), require('./model/SearchRequest'), require('./model/SearchResponse'), require('./model/SearchResponseHits'), require('./model/SortMVA'), require('./model/SortMultiple'), require('./model/SortOrder'), require('./model/SourceByRules'), require('./model/SuccessResponse'), require('./model/UpdateDocumentRequest'), require('./model/UpdateResponse'), require('./api/IndexApi'), require('./api/SearchApi'), require('./api/UtilsApi'));
-  }
-}(function(ApiClient, Aggregation, AggregationSortInnerValue, AggregationTerms, BoolFilter, BulkResponse, DeleteDocumentRequest, DeleteResponse, EqualsFilter, ErrorResponse, Facet, FilterBoolean, FilterNumber, FilterString, GeoDistanceFilter, GeoDistanceFilterLocationAnchor, Highlight, HighlightField, InFilter, InsertDocumentRequest, MatchFilter, MatchOp, MatchOpFilter, MatchPhraseFilter, NotFilterBoolean, NotFilterNumber, NotFilterString, PercolateRequest, PercolateRequestQuery, QueryFilter, RangeFilter, SearchRequest, SearchResponse, SearchResponseHits, SortMVA, SortMultiple, SortOrder, SourceByRules, SuccessResponse, UpdateDocumentRequest, UpdateResponse, IndexApi, SearchApi, UtilsApi) {
-  'use strict';
-
-  /**
-   * Сlient for Manticore Search. .<br>
-   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
-   * <p>
-   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
-   * <pre>
-   * var Manticoresearch = require('index'); // See note below*.
-   * var xxxSvc = new Manticoresearch.XxxApi(); // Allocate the API class we're going to use.
-   * var yyyModel = new Manticoresearch.Yyy(); // Construct a model instance.
-   * yyyModel.someProperty = 'someValue';
-   * ...
-   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
-   * ...
-   * </pre>
-   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
-   * and put the application logic within the callback function.</em>
-   * </p>
-   * <p>
-   * A non-AMD browser application (discouraged) might do something like this:
-   * <pre>
-   * var xxxSvc = new Manticoresearch.XxxApi(); // Allocate the API class we're going to use.
-   * var yyy = new Manticoresearch.Yyy(); // Construct a model instance.
-   * yyyModel.someProperty = 'someValue';
-   * ...
-   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
-   * ...
-   * </pre>
-   * </p>
-   * @module index
-   * @version 4.0.0
-   */
-  var exports = {
-    /**
-     * The ApiClient constructor.
-     * @property {module:ApiClient}
-     */
-    ApiClient: ApiClient,
-    /**
-     * The Aggregation model constructor.
-     * @property {module:model/Aggregation}
-     */
-    Aggregation: Aggregation,
-    /**
-     * The AggregationSortInnerValue model constructor.
-     * @property {module:model/AggregationSortInnerValue}
-     */
-    AggregationSortInnerValue: AggregationSortInnerValue,
-    /**
-     * The AggregationTerms model constructor.
-     * @property {module:model/AggregationTerms}
-     */
-    AggregationTerms: AggregationTerms,
-    /**
-     * The BoolFilter model constructor.
-     * @property {module:model/BoolFilter}
-     */
-    BoolFilter: BoolFilter,
-    /**
-     * The BulkResponse model constructor.
-     * @property {module:model/BulkResponse}
-     */
-    BulkResponse: BulkResponse,
-    /**
-     * The DeleteDocumentRequest model constructor.
-     * @property {module:model/DeleteDocumentRequest}
-     */
-    DeleteDocumentRequest: DeleteDocumentRequest,
-    /**
-     * The DeleteResponse model constructor.
-     * @property {module:model/DeleteResponse}
-     */
-    DeleteResponse: DeleteResponse,
-    /**
-     * The EqualsFilter model constructor.
-     * @property {module:model/EqualsFilter}
-     */
-    EqualsFilter: EqualsFilter,
-    /**
-     * The ErrorResponse model constructor.
-     * @property {module:model/ErrorResponse}
-     */
-    ErrorResponse: ErrorResponse,
-    /**
-     * The Facet model constructor.
-     * @property {module:model/Facet}
-     */
-    Facet: Facet,
-    /**
-     * The FilterBoolean model constructor.
-     * @property {module:model/FilterBoolean}
-     */
-    FilterBoolean: FilterBoolean,
-    /**
-     * The FilterNumber model constructor.
-     * @property {module:model/FilterNumber}
-     */
-    FilterNumber: FilterNumber,
-    /**
-     * The FilterString model constructor.
-     * @property {module:model/FilterString}
-     */
-    FilterString: FilterString,
-    /**
-     * The GeoDistanceFilter model constructor.
-     * @property {module:model/GeoDistanceFilter}
-     */
-    GeoDistanceFilter: GeoDistanceFilter,
-    /**
-     * The GeoDistanceFilterLocationAnchor model constructor.
-     * @property {module:model/GeoDistanceFilterLocationAnchor}
-     */
-    GeoDistanceFilterLocationAnchor: GeoDistanceFilterLocationAnchor,
-    /**
-     * The Highlight model constructor.
-     * @property {module:model/Highlight}
-     */
-    Highlight: Highlight,
-    /**
-     * The HighlightField model constructor.
-     * @property {module:model/HighlightField}
-     */
-    HighlightField: HighlightField,
-    /**
-     * The InFilter model constructor.
-     * @property {module:model/InFilter}
-     */
-    InFilter: InFilter,
-    /**
-     * The InsertDocumentRequest model constructor.
-     * @property {module:model/InsertDocumentRequest}
-     */
-    InsertDocumentRequest: InsertDocumentRequest,
-    /**
-     * The MatchFilter model constructor.
-     * @property {module:model/MatchFilter}
-     */
-    MatchFilter: MatchFilter,
-    /**
-     * The MatchOp model constructor.
-     * @property {module:model/MatchOp}
-     */
-    MatchOp: MatchOp,
-    /**
-     * The MatchOpFilter model constructor.
-     * @property {module:model/MatchOpFilter}
-     */
-    MatchOpFilter: MatchOpFilter,
-    /**
-     * The MatchPhraseFilter model constructor.
-     * @property {module:model/MatchPhraseFilter}
-     */
-    MatchPhraseFilter: MatchPhraseFilter,
-    /**
-     * The NotFilterBoolean model constructor.
-     * @property {module:model/NotFilterBoolean}
-     */
-    NotFilterBoolean: NotFilterBoolean,
-    /**
-     * The NotFilterNumber model constructor.
-     * @property {module:model/NotFilterNumber}
-     */
-    NotFilterNumber: NotFilterNumber,
-    /**
-     * The NotFilterString model constructor.
-     * @property {module:model/NotFilterString}
-     */
-    NotFilterString: NotFilterString,
-    /**
-     * The PercolateRequest model constructor.
-     * @property {module:model/PercolateRequest}
-     */
-    PercolateRequest: PercolateRequest,
-    /**
-     * The PercolateRequestQuery model constructor.
-     * @property {module:model/PercolateRequestQuery}
-     */
-    PercolateRequestQuery: PercolateRequestQuery,
-    /**
-     * The QueryFilter model constructor.
-     * @property {module:model/QueryFilter}
-     */
-    QueryFilter: QueryFilter,
-    /**
-     * The RangeFilter model constructor.
-     * @property {module:model/RangeFilter}
-     */
-    RangeFilter: RangeFilter,
-    /**
-     * The SearchRequest model constructor.
-     * @property {module:model/SearchRequest}
-     */
-    SearchRequest: SearchRequest,
-    /**
-     * The SearchResponse model constructor.
-     * @property {module:model/SearchResponse}
-     */
-    SearchResponse: SearchResponse,
-    /**
-     * The SearchResponseHits model constructor.
-     * @property {module:model/SearchResponseHits}
-     */
-    SearchResponseHits: SearchResponseHits,
-    /**
-     * The SortMVA model constructor.
-     * @property {module:model/SortMVA}
-     */
-    SortMVA: SortMVA,
-    /**
-     * The SortMultiple model constructor.
-     * @property {module:model/SortMultiple}
-     */
-    SortMultiple: SortMultiple,
-    /**
-     * The SortOrder model constructor.
-     * @property {module:model/SortOrder}
-     */
-    SortOrder: SortOrder,
-    /**
-     * The SourceByRules model constructor.
-     * @property {module:model/SourceByRules}
-     */
-    SourceByRules: SourceByRules,
-    /**
-     * The SuccessResponse model constructor.
-     * @property {module:model/SuccessResponse}
-     */
-    SuccessResponse: SuccessResponse,
-    /**
-     * The UpdateDocumentRequest model constructor.
-     * @property {module:model/UpdateDocumentRequest}
-     */
-    UpdateDocumentRequest: UpdateDocumentRequest,
-    /**
-     * The UpdateResponse model constructor.
-     * @property {module:model/UpdateResponse}
-     */
-    UpdateResponse: UpdateResponse,
-    /**
-     * The IndexApi service constructor.
-     * @property {module:api/IndexApi}
-     */
-    IndexApi: IndexApi,
-    /**
-     * The SearchApi service constructor.
-     * @property {module:api/SearchApi}
-     */
-    SearchApi: SearchApi,
-    /**
-     * The UtilsApi service constructor.
-     * @property {module:api/UtilsApi}
-     */
-    UtilsApi: UtilsApi
-  };
-
-  return exports;
-}));
diff --git a/out/manticoresearch-javascript-actual/src/model/Aggregation.js b/out/manticoresearch-javascript-actual/src/model/Aggregation.js
deleted file mode 100644
index df090b2..0000000
--- a/out/manticoresearch-javascript-actual/src/model/Aggregation.js
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient', 'model/AggregationSortInnerValue', 'model/AggregationTerms'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'), require('./AggregationSortInnerValue'), require('./AggregationTerms'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.Aggregation = factory(root.Manticoresearch.ApiClient, root.Manticoresearch.AggregationSortInnerValue, root.Manticoresearch.AggregationTerms);
-  }
-}(this, function(ApiClient, AggregationSortInnerValue, AggregationTerms) {
-  'use strict';
-
-
-
-  /**
-   * The Aggregation model module.
-   * @module model/Aggregation
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>Aggregation</code>.
-   * Aggregation Alias
-   * @alias module:model/Aggregation
-   * @class
-   */
-  var exports = function() {
-    var _this = this;
-
-  };
-
-  /**
-   * Constructs a <code>Aggregation</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/Aggregation} obj Optional instance to populate.
-   * @return {module:model/Aggregation} The populated <code>Aggregation</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('terms')) {
-        obj['terms'] = AggregationTerms.constructFromObject(data['terms']);
-      }
-      if (data.hasOwnProperty('sort')) {
-        obj['sort'] = ApiClient.convertToType(data['sort'], [{'String': AggregationSortInnerValue}]);
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {module:model/AggregationTerms} terms
-   */
-  exports.prototype['terms'] = undefined;
-  /**
-   * @member {Array.<Object.<String, module:model/AggregationSortInnerValue>>} sort
-   */
-  exports.prototype['sort'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/AggregationSortInnerValue.js b/out/manticoresearch-javascript-actual/src/model/AggregationSortInnerValue.js
deleted file mode 100644
index 11dbdc4..0000000
--- a/out/manticoresearch-javascript-actual/src/model/AggregationSortInnerValue.js
+++ /dev/null
@@ -1,70 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.AggregationSortInnerValue = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The AggregationSortInnerValue model module.
-   * @module model/AggregationSortInnerValue
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>AggregationSortInnerValue</code>.
-   * @alias module:model/AggregationSortInnerValue
-   * @class
-   */
-  var exports = function() {
-    var _this = this;
-
-  };
-
-  /**
-   * Constructs a <code>AggregationSortInnerValue</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/AggregationSortInnerValue} obj Optional instance to populate.
-   * @return {module:model/AggregationSortInnerValue} The populated <code>AggregationSortInnerValue</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('order')) {
-        obj['order'] = ApiClient.convertToType(data['order'], 'String');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} order
-   */
-  exports.prototype['order'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/AggregationTerms.js b/out/manticoresearch-javascript-actual/src/model/AggregationTerms.js
deleted file mode 100644
index 0169e0c..0000000
--- a/out/manticoresearch-javascript-actual/src/model/AggregationTerms.js
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.AggregationTerms = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The AggregationTerms model module.
-   * @module model/AggregationTerms
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>AggregationTerms</code>.
-   * @alias module:model/AggregationTerms
-   * @class
-   */
-  var exports = function() {
-    var _this = this;
-
-  };
-
-  /**
-   * Constructs a <code>AggregationTerms</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/AggregationTerms} obj Optional instance to populate.
-   * @return {module:model/AggregationTerms} The populated <code>AggregationTerms</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('field')) {
-        obj['field'] = ApiClient.convertToType(data['field'], 'String');
-      }
-      if (data.hasOwnProperty('size')) {
-        obj['size'] = ApiClient.convertToType(data['size'], 'Number');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * Attribute Name to Aggregate
-   * @member {String} field
-   */
-  exports.prototype['field'] = undefined;
-  /**
-   * Maximum Number of Buckets in the Result
-   * @member {Number} size
-   */
-  exports.prototype['size'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/BoolFilter.js b/out/manticoresearch-javascript-actual/src/model/BoolFilter.js
deleted file mode 100644
index fd35305..0000000
--- a/out/manticoresearch-javascript-actual/src/model/BoolFilter.js
+++ /dev/null
@@ -1,85 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.BoolFilter = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The BoolFilter model module.
-   * @module model/BoolFilter
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>BoolFilter</code>.
-   * Boolean attribute filter
-   * @alias module:model/BoolFilter
-   * @class
-   */
-  var exports = function() {
-    var _this = this;
-
-  };
-
-  /**
-   * Constructs a <code>BoolFilter</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/BoolFilter} obj Optional instance to populate.
-   * @return {module:model/BoolFilter} The populated <code>BoolFilter</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('should')) {
-        obj['should'] = ApiClient.convertToType(data['should'], [Object]);
-      }
-      if (data.hasOwnProperty('must')) {
-        obj['must'] = ApiClient.convertToType(data['must'], [Object]);
-      }
-      if (data.hasOwnProperty('must_not')) {
-        obj['must_not'] = ApiClient.convertToType(data['must_not'], [Object]);
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {Array.<Object>} should
-   */
-  exports.prototype['should'] = undefined;
-  /**
-   * @member {Array.<Object>} must
-   */
-  exports.prototype['must'] = undefined;
-  /**
-   * @member {Array.<Object>} must_not
-   */
-  exports.prototype['must_not'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/BulkResponse.js b/out/manticoresearch-javascript-actual/src/model/BulkResponse.js
deleted file mode 100644
index d9fe22b..0000000
--- a/out/manticoresearch-javascript-actual/src/model/BulkResponse.js
+++ /dev/null
@@ -1,88 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.BulkResponse = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The BulkResponse model module.
-   * @module model/BulkResponse
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>BulkResponse</code>.
-   * Success bulk response
-   * @alias module:model/BulkResponse
-   * @class
-   * @extends Object
-   */
-  var exports = function() {
-    var _this = this;
-
-    return _this;
-  };
-
-  /**
-   * Constructs a <code>BulkResponse</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/BulkResponse} obj Optional instance to populate.
-   * @return {module:model/BulkResponse} The populated <code>BulkResponse</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      ApiClient.constructFromObject(data, obj, 'Object');
-      if (data.hasOwnProperty('items')) {
-        obj['items'] = ApiClient.convertToType(data['items'], Object);
-      }
-      if (data.hasOwnProperty('errors')) {
-        obj['errors'] = ApiClient.convertToType(data['errors'], 'Boolean');
-      }
-      if (data.hasOwnProperty('error')) {
-        obj['error'] = ApiClient.convertToType(data['error'], 'String');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {Object} items
-   */
-  exports.prototype['items'] = undefined;
-  /**
-   * @member {Boolean} errors
-   */
-  exports.prototype['errors'] = undefined;
-  /**
-   * @member {String} error
-   */
-  exports.prototype['error'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/DeleteDocumentRequest.js b/out/manticoresearch-javascript-actual/src/model/DeleteDocumentRequest.js
deleted file mode 100644
index a731b64..0000000
--- a/out/manticoresearch-javascript-actual/src/model/DeleteDocumentRequest.js
+++ /dev/null
@@ -1,98 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.DeleteDocumentRequest = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The DeleteDocumentRequest model module.
-   * @module model/DeleteDocumentRequest
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>DeleteDocumentRequest</code>.
-   * Payload for delete request. Documents can be deleted either one by one by specifying the document id or by providing a query object. For more information see  [Delete API](https://manual.manticoresearch.com/Deleting_documents) 
-   * @alias module:model/DeleteDocumentRequest
-   * @class
-   * @param index {String} Index name
-   */
-  var exports = function(index) {
-    var _this = this;
-
-    _this['index'] = index;
-  };
-
-  /**
-   * Constructs a <code>DeleteDocumentRequest</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/DeleteDocumentRequest} obj Optional instance to populate.
-   * @return {module:model/DeleteDocumentRequest} The populated <code>DeleteDocumentRequest</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('index')) {
-        obj['index'] = ApiClient.convertToType(data['index'], 'String');
-      }
-      if (data.hasOwnProperty('cluster')) {
-        obj['cluster'] = ApiClient.convertToType(data['cluster'], 'String');
-      }
-      if (data.hasOwnProperty('id')) {
-        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
-      }
-      if (data.hasOwnProperty('query')) {
-        obj['query'] = ApiClient.convertToType(data['query'], Object);
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * Index name
-   * @member {String} index
-   */
-  exports.prototype['index'] = undefined;
-  /**
-   * cluster name
-   * @member {String} cluster
-   */
-  exports.prototype['cluster'] = undefined;
-  /**
-   * Document ID
-   * @member {Number} id
-   */
-  exports.prototype['id'] = undefined;
-  /**
-   * Query tree object
-   * @member {Object} query
-   */
-  exports.prototype['query'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/DeleteResponse.js b/out/manticoresearch-javascript-actual/src/model/DeleteResponse.js
deleted file mode 100644
index f1d41fe..0000000
--- a/out/manticoresearch-javascript-actual/src/model/DeleteResponse.js
+++ /dev/null
@@ -1,92 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.DeleteResponse = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The DeleteResponse model module.
-   * @module model/DeleteResponse
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>DeleteResponse</code>.
-   * Success response
-   * @alias module:model/DeleteResponse
-   * @class
-   */
-  var exports = function() {
-    var _this = this;
-
-  };
-
-  /**
-   * Constructs a <code>DeleteResponse</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/DeleteResponse} obj Optional instance to populate.
-   * @return {module:model/DeleteResponse} The populated <code>DeleteResponse</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('_index')) {
-        obj['_index'] = ApiClient.convertToType(data['_index'], 'String');
-      }
-      if (data.hasOwnProperty('deleted')) {
-        obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Number');
-      }
-      if (data.hasOwnProperty('_id')) {
-        obj['_id'] = ApiClient.convertToType(data['_id'], 'Number');
-      }
-      if (data.hasOwnProperty('result')) {
-        obj['result'] = ApiClient.convertToType(data['result'], 'String');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} _index
-   */
-  exports.prototype['_index'] = undefined;
-  /**
-   * @member {Number} deleted
-   */
-  exports.prototype['deleted'] = undefined;
-  /**
-   * @member {Number} _id
-   */
-  exports.prototype['_id'] = undefined;
-  /**
-   * @member {String} result
-   */
-  exports.prototype['result'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/EqualsFilter.js b/out/manticoresearch-javascript-actual/src/model/EqualsFilter.js
deleted file mode 100644
index 2226c98..0000000
--- a/out/manticoresearch-javascript-actual/src/model/EqualsFilter.js
+++ /dev/null
@@ -1,82 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.EqualsFilter = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The EqualsFilter model module.
-   * @module model/EqualsFilter
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>EqualsFilter</code>.
-   * Equals attribute filter
-   * @alias module:model/EqualsFilter
-   * @class
-   * @param field {String} 
-   * @param value {Object} 
-   */
-  var exports = function(field, value) {
-    var _this = this;
-
-    _this['field'] = field;
-    _this['value'] = value;
-  };
-
-  /**
-   * Constructs a <code>EqualsFilter</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/EqualsFilter} obj Optional instance to populate.
-   * @return {module:model/EqualsFilter} The populated <code>EqualsFilter</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('field')) {
-        obj['field'] = ApiClient.convertToType(data['field'], 'String');
-      }
-      if (data.hasOwnProperty('value')) {
-        obj['value'] = ApiClient.convertToType(data['value'], Object);
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} field
-   */
-  exports.prototype['field'] = undefined;
-  /**
-   * @member {Object} value
-   */
-  exports.prototype['value'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/ErrorResponse.js b/out/manticoresearch-javascript-actual/src/model/ErrorResponse.js
deleted file mode 100644
index 7f418e8..0000000
--- a/out/manticoresearch-javascript-actual/src/model/ErrorResponse.js
+++ /dev/null
@@ -1,82 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.ErrorResponse = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The ErrorResponse model module.
-   * @module model/ErrorResponse
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>ErrorResponse</code>.
-   * Error response
-   * @alias module:model/ErrorResponse
-   * @class
-   * @param error {Object.<String, Object>} 
-   * @param status {Number} 
-   */
-  var exports = function(error, status) {
-    var _this = this;
-
-    _this['error'] = error;
-    _this['status'] = status;
-  };
-
-  /**
-   * Constructs a <code>ErrorResponse</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/ErrorResponse} obj Optional instance to populate.
-   * @return {module:model/ErrorResponse} The populated <code>ErrorResponse</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('error')) {
-        obj['error'] = ApiClient.convertToType(data['error'], {'String': Object});
-      }
-      if (data.hasOwnProperty('status')) {
-        obj['status'] = ApiClient.convertToType(data['status'], 'Number');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {Object.<String, Object>} error
-   */
-  exports.prototype['error'] = undefined;
-  /**
-   * @member {Number} status
-   */
-  exports.prototype['status'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/Facet.js b/out/manticoresearch-javascript-actual/src/model/Facet.js
deleted file mode 100644
index 54abc37..0000000
--- a/out/manticoresearch-javascript-actual/src/model/Facet.js
+++ /dev/null
@@ -1,90 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.Facet = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The Facet model module.
-   * @module model/Facet
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>Facet</code>.
-   * Query FACET expression
-   * @alias module:model/Facet
-   * @class
-   * @param attr {String} The name of an attribute to facet
-   */
-  var exports = function(attr) {
-    var _this = this;
-
-    _this['attr'] = attr;
-  };
-
-  /**
-   * Constructs a <code>Facet</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/Facet} obj Optional instance to populate.
-   * @return {module:model/Facet} The populated <code>Facet</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('attr')) {
-        obj['attr'] = ApiClient.convertToType(data['attr'], 'String');
-      }
-      if (data.hasOwnProperty('alias')) {
-        obj['alias'] = ApiClient.convertToType(data['alias'], 'String');
-      }
-      if (data.hasOwnProperty('limit')) {
-        obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * The name of an attribute to facet
-   * @member {String} attr
-   */
-  exports.prototype['attr'] = undefined;
-  /**
-   * Facet alias
-   * @member {String} alias
-   */
-  exports.prototype['alias'] = undefined;
-  /**
-   * The number of facet values to return
-   * @member {Number} limit
-   */
-  exports.prototype['limit'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/FilterBoolean.js b/out/manticoresearch-javascript-actual/src/model/FilterBoolean.js
deleted file mode 100644
index 1adb73d..0000000
--- a/out/manticoresearch-javascript-actual/src/model/FilterBoolean.js
+++ /dev/null
@@ -1,91 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.FilterBoolean = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The FilterBoolean model module.
-   * @module model/FilterBoolean
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>FilterBoolean</code>.
-   * Query filter
-   * @alias module:model/FilterBoolean
-   * @class
-   * @param filterField {String} 
-   * @param operation {String} 
-   * @param filterValue {Boolean} 
-   */
-  var exports = function(filterField, operation, filterValue) {
-    var _this = this;
-
-    _this['filter_field'] = filterField;
-    _this['operation'] = operation;
-    _this['filter_value'] = filterValue;
-  };
-
-  /**
-   * Constructs a <code>FilterBoolean</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/FilterBoolean} obj Optional instance to populate.
-   * @return {module:model/FilterBoolean} The populated <code>FilterBoolean</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('filter_field')) {
-        obj['filter_field'] = ApiClient.convertToType(data['filter_field'], 'String');
-      }
-      if (data.hasOwnProperty('operation')) {
-        obj['operation'] = ApiClient.convertToType(data['operation'], 'String');
-      }
-      if (data.hasOwnProperty('filter_value')) {
-        obj['filter_value'] = ApiClient.convertToType(data['filter_value'], 'Boolean');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} filter_field
-   */
-  exports.prototype['filter_field'] = undefined;
-  /**
-   * @member {String} operation
-   */
-  exports.prototype['operation'] = undefined;
-  /**
-   * @member {Boolean} filter_value
-   */
-  exports.prototype['filter_value'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/FilterNumber.js b/out/manticoresearch-javascript-actual/src/model/FilterNumber.js
deleted file mode 100644
index 8bf2775..0000000
--- a/out/manticoresearch-javascript-actual/src/model/FilterNumber.js
+++ /dev/null
@@ -1,91 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.FilterNumber = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The FilterNumber model module.
-   * @module model/FilterNumber
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>FilterNumber</code>.
-   * Query filter
-   * @alias module:model/FilterNumber
-   * @class
-   * @param filterField {String} 
-   * @param operation {String} 
-   * @param filterValue {Number} 
-   */
-  var exports = function(filterField, operation, filterValue) {
-    var _this = this;
-
-    _this['filter_field'] = filterField;
-    _this['operation'] = operation;
-    _this['filter_value'] = filterValue;
-  };
-
-  /**
-   * Constructs a <code>FilterNumber</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/FilterNumber} obj Optional instance to populate.
-   * @return {module:model/FilterNumber} The populated <code>FilterNumber</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('filter_field')) {
-        obj['filter_field'] = ApiClient.convertToType(data['filter_field'], 'String');
-      }
-      if (data.hasOwnProperty('operation')) {
-        obj['operation'] = ApiClient.convertToType(data['operation'], 'String');
-      }
-      if (data.hasOwnProperty('filter_value')) {
-        obj['filter_value'] = ApiClient.convertToType(data['filter_value'], 'Number');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} filter_field
-   */
-  exports.prototype['filter_field'] = undefined;
-  /**
-   * @member {String} operation
-   */
-  exports.prototype['operation'] = undefined;
-  /**
-   * @member {Number} filter_value
-   */
-  exports.prototype['filter_value'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/FilterString.js b/out/manticoresearch-javascript-actual/src/model/FilterString.js
deleted file mode 100644
index 9c39de8..0000000
--- a/out/manticoresearch-javascript-actual/src/model/FilterString.js
+++ /dev/null
@@ -1,91 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.FilterString = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The FilterString model module.
-   * @module model/FilterString
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>FilterString</code>.
-   * Query filter
-   * @alias module:model/FilterString
-   * @class
-   * @param filterField {String} 
-   * @param operation {String} 
-   * @param filterValue {String} 
-   */
-  var exports = function(filterField, operation, filterValue) {
-    var _this = this;
-
-    _this['filter_field'] = filterField;
-    _this['operation'] = operation;
-    _this['filter_value'] = filterValue;
-  };
-
-  /**
-   * Constructs a <code>FilterString</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/FilterString} obj Optional instance to populate.
-   * @return {module:model/FilterString} The populated <code>FilterString</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('filter_field')) {
-        obj['filter_field'] = ApiClient.convertToType(data['filter_field'], 'String');
-      }
-      if (data.hasOwnProperty('operation')) {
-        obj['operation'] = ApiClient.convertToType(data['operation'], 'String');
-      }
-      if (data.hasOwnProperty('filter_value')) {
-        obj['filter_value'] = ApiClient.convertToType(data['filter_value'], 'String');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} filter_field
-   */
-  exports.prototype['filter_field'] = undefined;
-  /**
-   * @member {String} operation
-   */
-  exports.prototype['operation'] = undefined;
-  /**
-   * @member {String} filter_value
-   */
-  exports.prototype['filter_value'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/GeoDistanceFilter.js b/out/manticoresearch-javascript-actual/src/model/GeoDistanceFilter.js
deleted file mode 100644
index 51e3304..0000000
--- a/out/manticoresearch-javascript-actual/src/model/GeoDistanceFilter.js
+++ /dev/null
@@ -1,110 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient', 'model/GeoDistanceFilterLocationAnchor'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'), require('./GeoDistanceFilterLocationAnchor'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.GeoDistanceFilter = factory(root.Manticoresearch.ApiClient, root.Manticoresearch.GeoDistanceFilterLocationAnchor);
-  }
-}(this, function(ApiClient, GeoDistanceFilterLocationAnchor) {
-  'use strict';
-
-
-
-  /**
-   * The GeoDistanceFilter model module.
-   * @module model/GeoDistanceFilter
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>GeoDistanceFilter</code>.
-   * Geo distance attribute filter
-   * @alias module:model/GeoDistanceFilter
-   * @class
-   */
-  var exports = function() {
-    var _this = this;
-
-  };
-
-  /**
-   * Constructs a <code>GeoDistanceFilter</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/GeoDistanceFilter} obj Optional instance to populate.
-   * @return {module:model/GeoDistanceFilter} The populated <code>GeoDistanceFilter</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('location_anchor')) {
-        obj['location_anchor'] = GeoDistanceFilterLocationAnchor.constructFromObject(data['location_anchor']);
-      }
-      if (data.hasOwnProperty('location_source')) {
-        obj['location_source'] = ApiClient.convertToType(data['location_source'], 'String');
-      }
-      if (data.hasOwnProperty('distance_type')) {
-        obj['distance_type'] = ApiClient.convertToType(data['distance_type'], 'String');
-      }
-      if (data.hasOwnProperty('distance')) {
-        obj['distance'] = ApiClient.convertToType(data['distance'], 'String');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {module:model/GeoDistanceFilterLocationAnchor} location_anchor
-   */
-  exports.prototype['location_anchor'] = undefined;
-  /**
-   * Attribute containing latitude and longitude data
-   * @member {String} location_source
-   */
-  exports.prototype['location_source'] = undefined;
-  /**
-   * @member {module:model/GeoDistanceFilter.DistanceTypeEnum} distance_type
-   */
-  exports.prototype['distance_type'] = undefined;
-  /**
-   * @member {String} distance
-   */
-  exports.prototype['distance'] = undefined;
-
-
-  /**
-   * Allowed values for the <code>distance_type</code> property.
-   * @enum {String}
-   * @readonly
-   */
-  exports.DistanceTypeEnum = {
-    /**
-     * value: "adaptive"
-     * @const
-     */
-    "adaptive": "adaptive",
-    /**
-     * value: "haversine"
-     * @const
-     */
-    "haversine": "haversine"  };
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/GeoDistanceFilterLocationAnchor.js b/out/manticoresearch-javascript-actual/src/model/GeoDistanceFilterLocationAnchor.js
deleted file mode 100644
index a393f81..0000000
--- a/out/manticoresearch-javascript-actual/src/model/GeoDistanceFilterLocationAnchor.js
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.GeoDistanceFilterLocationAnchor = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The GeoDistanceFilterLocationAnchor model module.
-   * @module model/GeoDistanceFilterLocationAnchor
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>GeoDistanceFilterLocationAnchor</code>.
-   * Geo pin point object
-   * @alias module:model/GeoDistanceFilterLocationAnchor
-   * @class
-   */
-  var exports = function() {
-    var _this = this;
-
-  };
-
-  /**
-   * Constructs a <code>GeoDistanceFilterLocationAnchor</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/GeoDistanceFilterLocationAnchor} obj Optional instance to populate.
-   * @return {module:model/GeoDistanceFilterLocationAnchor} The populated <code>GeoDistanceFilterLocationAnchor</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('lat')) {
-        obj['lat'] = ApiClient.convertToType(data['lat'], 'Number');
-      }
-      if (data.hasOwnProperty('lon')) {
-        obj['lon'] = ApiClient.convertToType(data['lon'], 'Number');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * Geo latitude of pin point in degrees
-   * @member {Number} lat
-   */
-  exports.prototype['lat'] = undefined;
-  /**
-   * Geo longitude pf pin point in degrees
-   * @member {Number} lon
-   */
-  exports.prototype['lon'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/Highlight.js b/out/manticoresearch-javascript-actual/src/model/Highlight.js
deleted file mode 100644
index 2b1511d..0000000
--- a/out/manticoresearch-javascript-actual/src/model/Highlight.js
+++ /dev/null
@@ -1,331 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient', 'model/HighlightField'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'), require('./HighlightField'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.Highlight = factory(root.Manticoresearch.ApiClient, root.Manticoresearch.HighlightField);
-  }
-}(this, function(ApiClient, HighlightField) {
-  'use strict';
-
-
-
-  /**
-   * The Highlight model module.
-   * @module model/Highlight
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>Highlight</code>.
-   * Query HIGHLIGHT expression
-   * @alias module:model/Highlight
-   * @class
-   */
-  var exports = function() {
-    var _this = this;
-
-    _this['pre_tags'] = this.preTags;
-    _this['post_tags'] = this.postTags;
-    _this['fragment_size'] = this.fragmentSize;
-    _this['number_of_fragments'] = this.numberOfFragments;
-    _this['limit'] = this.limit;
-    _this['limit_words'] = this.limitWords;
-    _this['limit_snippets'] = this.limitSnippets;
-    _this['limits_per_field'] = this.limitsPerField;
-    _this['use_boundaries'] = this.useBoundaries;
-    _this['force_all_words'] = this.forceAllWords;
-    _this['allow_empty'] = this.allowEmpty;
-    _this['emit_zones'] = this.emitZones;
-    _this['force_snippets'] = this.forceSnippets;
-    _this['around'] = this.around;
-    _this['start_snippet_id'] = this.startSnippetId;
-  };
-
-  /**
-   * Constructs a <code>Highlight</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/Highlight} obj Optional instance to populate.
-   * @return {module:model/Highlight} The populated <code>Highlight</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('fieldnames')) {
-        obj['fieldnames'] = ApiClient.convertToType(data['fieldnames'], ['String']);
-      }
-      if (data.hasOwnProperty('fields')) {
-        obj['fields'] = ApiClient.convertToType(data['fields'], [HighlightField]);
-      }
-      if (data.hasOwnProperty('encoder')) {
-        obj['encoder'] = ApiClient.convertToType(data['encoder'], 'String');
-      }
-      if (data.hasOwnProperty('highlight_query')) {
-        obj['highlight_query'] = ApiClient.convertToType(data['highlight_query'], {'String': Object});
-      }
-      if (data.hasOwnProperty('pre_tags')) {
-        obj['pre_tags'] = ApiClient.convertToType(data['pre_tags'], 'String');
-      }
-      if (data.hasOwnProperty('post_tags')) {
-        obj['post_tags'] = ApiClient.convertToType(data['post_tags'], 'String');
-      }
-      if (data.hasOwnProperty('no_match_size')) {
-        obj['no_match_size'] = ApiClient.convertToType(data['no_match_size'], 'Number');
-      }
-      if (data.hasOwnProperty('fragment_size')) {
-        obj['fragment_size'] = ApiClient.convertToType(data['fragment_size'], 'Number');
-      }
-      if (data.hasOwnProperty('number_of_fragments')) {
-        obj['number_of_fragments'] = ApiClient.convertToType(data['number_of_fragments'], 'Number');
-      }
-      if (data.hasOwnProperty('limit')) {
-        obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
-      }
-      if (data.hasOwnProperty('limit_words')) {
-        obj['limit_words'] = ApiClient.convertToType(data['limit_words'], 'Number');
-      }
-      if (data.hasOwnProperty('limit_snippets')) {
-        obj['limit_snippets'] = ApiClient.convertToType(data['limit_snippets'], 'Number');
-      }
-      if (data.hasOwnProperty('limits_per_field')) {
-        obj['limits_per_field'] = ApiClient.convertToType(data['limits_per_field'], 'Boolean');
-      }
-      if (data.hasOwnProperty('use_boundaries')) {
-        obj['use_boundaries'] = ApiClient.convertToType(data['use_boundaries'], 'Boolean');
-      }
-      if (data.hasOwnProperty('force_all_words')) {
-        obj['force_all_words'] = ApiClient.convertToType(data['force_all_words'], 'Boolean');
-      }
-      if (data.hasOwnProperty('allow_empty')) {
-        obj['allow_empty'] = ApiClient.convertToType(data['allow_empty'], 'Boolean');
-      }
-      if (data.hasOwnProperty('emit_zones')) {
-        obj['emit_zones'] = ApiClient.convertToType(data['emit_zones'], 'Boolean');
-      }
-      if (data.hasOwnProperty('force_snippets')) {
-        obj['force_snippets'] = ApiClient.convertToType(data['force_snippets'], 'Boolean');
-      }
-      if (data.hasOwnProperty('around')) {
-        obj['around'] = ApiClient.convertToType(data['around'], 'Number');
-      }
-      if (data.hasOwnProperty('start_snippet_id')) {
-        obj['start_snippet_id'] = ApiClient.convertToType(data['start_snippet_id'], 'Number');
-      }
-      if (data.hasOwnProperty('html_strip_mode')) {
-        obj['html_strip_mode'] = ApiClient.convertToType(data['html_strip_mode'], 'String');
-      }
-      if (data.hasOwnProperty('snippet_boundary')) {
-        obj['snippet_boundary'] = ApiClient.convertToType(data['snippet_boundary'], 'String');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {Array.<String>} fieldnames
-   */
-  exports.prototype['fieldnames'] = undefined;
-  /**
-   * @member {Array.<module:model/HighlightField>} fields
-   */
-  exports.prototype['fields'] = undefined;
-  /**
-   * @member {module:model/Highlight.EncoderEnum} encoder
-   */
-  exports.prototype['encoder'] = undefined;
-  /**
-   * @member {Object.<String, Object>} highlight_query
-   */
-  exports.prototype['highlight_query'] = undefined;
-  /**
-   * @member {String} pre_tags
-   * @default '<strong>'
-   */
-  exports.prototype['pre_tags'] = '<strong>';
-  /**
-   * @member {String} post_tags
-   * @default '</strong>'
-   */
-  exports.prototype['post_tags'] = '</strong>';
-  /**
-   * @member {module:model/Highlight.NoMatchSizeEnum} no_match_size
-   */
-  exports.prototype['no_match_size'] = undefined;
-  /**
-   * @member {Number} fragment_size
-   * @default 256
-   */
-  exports.prototype['fragment_size'] = 256;
-  /**
-   * @member {Number} number_of_fragments
-   * @default 0
-   */
-  exports.prototype['number_of_fragments'] = 0;
-  /**
-   * @member {Number} limit
-   * @default 256
-   */
-  exports.prototype['limit'] = 256;
-  /**
-   * @member {Number} limit_words
-   * @default 0
-   */
-  exports.prototype['limit_words'] = 0;
-  /**
-   * @member {Number} limit_snippets
-   * @default 0
-   */
-  exports.prototype['limit_snippets'] = 0;
-  /**
-   * @member {Boolean} limits_per_field
-   * @default false
-   */
-  exports.prototype['limits_per_field'] = false;
-  /**
-   * @member {Boolean} use_boundaries
-   * @default false
-   */
-  exports.prototype['use_boundaries'] = false;
-  /**
-   * @member {Boolean} force_all_words
-   * @default false
-   */
-  exports.prototype['force_all_words'] = false;
-  /**
-   * @member {Boolean} allow_empty
-   * @default false
-   */
-  exports.prototype['allow_empty'] = false;
-  /**
-   * @member {Boolean} emit_zones
-   * @default false
-   */
-  exports.prototype['emit_zones'] = false;
-  /**
-   * @member {Boolean} force_snippets
-   * @default false
-   */
-  exports.prototype['force_snippets'] = false;
-  /**
-   * @member {Number} around
-   * @default 5
-   */
-  exports.prototype['around'] = 5;
-  /**
-   * @member {Number} start_snippet_id
-   * @default 1
-   */
-  exports.prototype['start_snippet_id'] = 1;
-  /**
-   * @member {module:model/Highlight.HtmlStripModeEnum} html_strip_mode
-   */
-  exports.prototype['html_strip_mode'] = undefined;
-  /**
-   * @member {module:model/Highlight.SnippetBoundaryEnum} snippet_boundary
-   */
-  exports.prototype['snippet_boundary'] = undefined;
-
-
-  /**
-   * Allowed values for the <code>encoder</code> property.
-   * @enum {String}
-   * @readonly
-   */
-  exports.EncoderEnum = {
-    /**
-     * value: "default"
-     * @const
-     */
-    "default": "default",
-    /**
-     * value: "html"
-     * @const
-     */
-    "html": "html"  };
-
-  /**
-   * Allowed values for the <code>no_match_size</code> property.
-   * @enum {Number}
-   * @readonly
-   */
-  exports.NoMatchSizeEnum = {
-    /**
-     * value: 0
-     * @const
-     */
-    "0": 0,
-    /**
-     * value: 1
-     * @const
-     */
-    "1": 1  };
-
-  /**
-   * Allowed values for the <code>html_strip_mode</code> property.
-   * @enum {String}
-   * @readonly
-   */
-  exports.HtmlStripModeEnum = {
-    /**
-     * value: "none"
-     * @const
-     */
-    "none": "none",
-    /**
-     * value: "strip"
-     * @const
-     */
-    "strip": "strip",
-    /**
-     * value: "index"
-     * @const
-     */
-    "index": "index",
-    /**
-     * value: "retain"
-     * @const
-     */
-    "retain": "retain"  };
-
-  /**
-   * Allowed values for the <code>snippet_boundary</code> property.
-   * @enum {String}
-   * @readonly
-   */
-  exports.SnippetBoundaryEnum = {
-    /**
-     * value: "sentence"
-     * @const
-     */
-    "sentence": "sentence",
-    /**
-     * value: "paragraph"
-     * @const
-     */
-    "paragraph": "paragraph",
-    /**
-     * value: "zone"
-     * @const
-     */
-    "zone": "zone"  };
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/HighlightField.js b/out/manticoresearch-javascript-actual/src/model/HighlightField.js
deleted file mode 100644
index 06b2e02..0000000
--- a/out/manticoresearch-javascript-actual/src/model/HighlightField.js
+++ /dev/null
@@ -1,100 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.HighlightField = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The HighlightField model module.
-   * @module model/HighlightField
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>HighlightField</code>.
-   * Query Highlight field with options set
-   * @alias module:model/HighlightField
-   * @class
-   * @param name {String} 
-   */
-  var exports = function(name) {
-    var _this = this;
-
-    _this['name'] = name;
-    _this['limit'] = this.limit;
-    _this['limit_words'] = this.limitWords;
-    _this['limit_snippets'] = this.limitSnippets;
-  };
-
-  /**
-   * Constructs a <code>HighlightField</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/HighlightField} obj Optional instance to populate.
-   * @return {module:model/HighlightField} The populated <code>HighlightField</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('name')) {
-        obj['name'] = ApiClient.convertToType(data['name'], 'String');
-      }
-      if (data.hasOwnProperty('limit')) {
-        obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
-      }
-      if (data.hasOwnProperty('limit_words')) {
-        obj['limit_words'] = ApiClient.convertToType(data['limit_words'], 'Number');
-      }
-      if (data.hasOwnProperty('limit_snippets')) {
-        obj['limit_snippets'] = ApiClient.convertToType(data['limit_snippets'], 'Number');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} name
-   */
-  exports.prototype['name'] = undefined;
-  /**
-   * @member {Number} limit
-   * @default 256
-   */
-  exports.prototype['limit'] = 256;
-  /**
-   * @member {Number} limit_words
-   * @default 0
-   */
-  exports.prototype['limit_words'] = 0;
-  /**
-   * @member {Number} limit_snippets
-   * @default 0
-   */
-  exports.prototype['limit_snippets'] = 0;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/InFilter.js b/out/manticoresearch-javascript-actual/src/model/InFilter.js
deleted file mode 100644
index 8c15bd3..0000000
--- a/out/manticoresearch-javascript-actual/src/model/InFilter.js
+++ /dev/null
@@ -1,82 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.InFilter = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The InFilter model module.
-   * @module model/InFilter
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>InFilter</code>.
-   * In attribute filter
-   * @alias module:model/InFilter
-   * @class
-   * @param field {String} 
-   * @param values {Array.<Object>} 
-   */
-  var exports = function(field, values) {
-    var _this = this;
-
-    _this['field'] = field;
-    _this['values'] = values;
-  };
-
-  /**
-   * Constructs a <code>InFilter</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/InFilter} obj Optional instance to populate.
-   * @return {module:model/InFilter} The populated <code>InFilter</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('field')) {
-        obj['field'] = ApiClient.convertToType(data['field'], 'String');
-      }
-      if (data.hasOwnProperty('values')) {
-        obj['values'] = ApiClient.convertToType(data['values'], [Object]);
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} field
-   */
-  exports.prototype['field'] = undefined;
-  /**
-   * @member {Array.<Object>} values
-   */
-  exports.prototype['values'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/InsertDocumentRequest.js b/out/manticoresearch-javascript-actual/src/model/InsertDocumentRequest.js
deleted file mode 100644
index 7cfe405..0000000
--- a/out/manticoresearch-javascript-actual/src/model/InsertDocumentRequest.js
+++ /dev/null
@@ -1,100 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.InsertDocumentRequest = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The InsertDocumentRequest model module.
-   * @module model/InsertDocumentRequest
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>InsertDocumentRequest</code>.
-   * Object with document data. 
-   * @alias module:model/InsertDocumentRequest
-   * @class
-   * @param index {String} Name of the index
-   * @param doc {Object.<String, Object>} Object with document data 
-   */
-  var exports = function(index, doc) {
-    var _this = this;
-
-    _this['index'] = index;
-    _this['doc'] = doc;
-  };
-
-  /**
-   * Constructs a <code>InsertDocumentRequest</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/InsertDocumentRequest} obj Optional instance to populate.
-   * @return {module:model/InsertDocumentRequest} The populated <code>InsertDocumentRequest</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('index')) {
-        obj['index'] = ApiClient.convertToType(data['index'], 'String');
-      }
-      if (data.hasOwnProperty('cluster')) {
-        obj['cluster'] = ApiClient.convertToType(data['cluster'], 'String');
-      }
-      if (data.hasOwnProperty('id')) {
-        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
-      }
-      if (data.hasOwnProperty('doc')) {
-        obj['doc'] = ApiClient.convertToType(data['doc'], {'String': Object});
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * Name of the index
-   * @member {String} index
-   */
-  exports.prototype['index'] = undefined;
-  /**
-   * cluster name
-   * @member {String} cluster
-   */
-  exports.prototype['cluster'] = undefined;
-  /**
-   * Document ID. 
-   * @member {Number} id
-   */
-  exports.prototype['id'] = undefined;
-  /**
-   * Object with document data 
-   * @member {Object.<String, Object>} doc
-   */
-  exports.prototype['doc'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/MatchFilter.js b/out/manticoresearch-javascript-actual/src/model/MatchFilter.js
deleted file mode 100644
index 676b495..0000000
--- a/out/manticoresearch-javascript-actual/src/model/MatchFilter.js
+++ /dev/null
@@ -1,84 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.MatchFilter = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The MatchFilter model module.
-   * @module model/MatchFilter
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>MatchFilter</code>.
-   * Query match filter
-   * @alias module:model/MatchFilter
-   * @class
-   * @param queryString {String} 
-   * @param queryFields {String} 
-   */
-  var exports = function(queryString, queryFields) {
-    var _this = this;
-
-    _this['query_string'] = queryString;
-    _this['query_fields'] = queryFields;
-  };
-
-  /**
-   * Constructs a <code>MatchFilter</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/MatchFilter} obj Optional instance to populate.
-   * @return {module:model/MatchFilter} The populated <code>MatchFilter</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('query_string')) {
-        obj['query_string'] = ApiClient.convertToType(data['query_string'], 'String');
-      }
-      if (data.hasOwnProperty('query_fields')) {
-        obj['query_fields'] = ApiClient.convertToType(data['query_fields'], 'String');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} query_string
-   * @default ''
-   */
-  exports.prototype['query_string'] = '';
-  /**
-   * @member {String} query_fields
-   * @default '*'
-   */
-  exports.prototype['query_fields'] = '*';
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/MatchOp.js b/out/manticoresearch-javascript-actual/src/model/MatchOp.js
deleted file mode 100644
index 3706a9c..0000000
--- a/out/manticoresearch-javascript-actual/src/model/MatchOp.js
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.MatchOp = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The MatchOp model module.
-   * @module model/MatchOp
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>MatchOp</code>.
-   * Query match expression with logical operator
-   * @alias module:model/MatchOp
-   * @class
-   * @param queryInfo {Object} 
-   */
-  var exports = function(queryInfo) {
-    var _this = this;
-
-    _this['query_info'] = queryInfo;
-  };
-
-  /**
-   * Constructs a <code>MatchOp</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/MatchOp} obj Optional instance to populate.
-   * @return {module:model/MatchOp} The populated <code>MatchOp</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('query_info')) {
-        obj['query_info'] = ApiClient.convertToType(data['query_info'], Object);
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {Object} query_info
-   */
-  exports.prototype['query_info'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/MatchOpFilter.js b/out/manticoresearch-javascript-actual/src/model/MatchOpFilter.js
deleted file mode 100644
index 29e04f5..0000000
--- a/out/manticoresearch-javascript-actual/src/model/MatchOpFilter.js
+++ /dev/null
@@ -1,108 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.MatchOpFilter = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The MatchOpFilter model module.
-   * @module model/MatchOpFilter
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>MatchOpFilter</code>.
-   * Query match expression
-   * @alias module:model/MatchOpFilter
-   * @class
-   * @param queryString {String} 
-   * @param queryFields {String} 
-   * @param operator {module:model/MatchOpFilter.OperatorEnum} 
-   */
-  var exports = function(queryString, queryFields, operator) {
-    var _this = this;
-
-    _this['query_string'] = queryString;
-    _this['query_fields'] = queryFields;
-    _this['operator'] = operator;
-  };
-
-  /**
-   * Constructs a <code>MatchOpFilter</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/MatchOpFilter} obj Optional instance to populate.
-   * @return {module:model/MatchOpFilter} The populated <code>MatchOpFilter</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('query_string')) {
-        obj['query_string'] = ApiClient.convertToType(data['query_string'], 'String');
-      }
-      if (data.hasOwnProperty('query_fields')) {
-        obj['query_fields'] = ApiClient.convertToType(data['query_fields'], 'String');
-      }
-      if (data.hasOwnProperty('operator')) {
-        obj['operator'] = ApiClient.convertToType(data['operator'], 'String');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} query_string
-   */
-  exports.prototype['query_string'] = undefined;
-  /**
-   * @member {String} query_fields
-   */
-  exports.prototype['query_fields'] = undefined;
-  /**
-   * @member {module:model/MatchOpFilter.OperatorEnum} operator
-   */
-  exports.prototype['operator'] = undefined;
-
-
-  /**
-   * Allowed values for the <code>operator</code> property.
-   * @enum {String}
-   * @readonly
-   */
-  exports.OperatorEnum = {
-    /**
-     * value: "or"
-     * @const
-     */
-    "or": "or",
-    /**
-     * value: "and"
-     * @const
-     */
-    "and": "and"  };
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/MatchPhraseFilter.js b/out/manticoresearch-javascript-actual/src/model/MatchPhraseFilter.js
deleted file mode 100644
index 90c5d6a..0000000
--- a/out/manticoresearch-javascript-actual/src/model/MatchPhraseFilter.js
+++ /dev/null
@@ -1,82 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.MatchPhraseFilter = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The MatchPhraseFilter model module.
-   * @module model/MatchPhraseFilter
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>MatchPhraseFilter</code>.
-   * Query match expression
-   * @alias module:model/MatchPhraseFilter
-   * @class
-   * @param queryPhrase {String} 
-   * @param queryFields {String} 
-   */
-  var exports = function(queryPhrase, queryFields) {
-    var _this = this;
-
-    _this['query_phrase'] = queryPhrase;
-    _this['query_fields'] = queryFields;
-  };
-
-  /**
-   * Constructs a <code>MatchPhraseFilter</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/MatchPhraseFilter} obj Optional instance to populate.
-   * @return {module:model/MatchPhraseFilter} The populated <code>MatchPhraseFilter</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('query_phrase')) {
-        obj['query_phrase'] = ApiClient.convertToType(data['query_phrase'], 'String');
-      }
-      if (data.hasOwnProperty('query_fields')) {
-        obj['query_fields'] = ApiClient.convertToType(data['query_fields'], 'String');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} query_phrase
-   */
-  exports.prototype['query_phrase'] = undefined;
-  /**
-   * @member {String} query_fields
-   */
-  exports.prototype['query_fields'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/NotFilterBoolean.js b/out/manticoresearch-javascript-actual/src/model/NotFilterBoolean.js
deleted file mode 100644
index d967563..0000000
--- a/out/manticoresearch-javascript-actual/src/model/NotFilterBoolean.js
+++ /dev/null
@@ -1,91 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.NotFilterBoolean = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The NotFilterBoolean model module.
-   * @module model/NotFilterBoolean
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>NotFilterBoolean</code>.
-   * Query filter
-   * @alias module:model/NotFilterBoolean
-   * @class
-   * @param filterField {String} 
-   * @param operation {String} 
-   * @param filterValue {Boolean} 
-   */
-  var exports = function(filterField, operation, filterValue) {
-    var _this = this;
-
-    _this['filter_field'] = filterField;
-    _this['operation'] = operation;
-    _this['filter_value'] = filterValue;
-  };
-
-  /**
-   * Constructs a <code>NotFilterBoolean</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/NotFilterBoolean} obj Optional instance to populate.
-   * @return {module:model/NotFilterBoolean} The populated <code>NotFilterBoolean</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('filter_field')) {
-        obj['filter_field'] = ApiClient.convertToType(data['filter_field'], 'String');
-      }
-      if (data.hasOwnProperty('operation')) {
-        obj['operation'] = ApiClient.convertToType(data['operation'], 'String');
-      }
-      if (data.hasOwnProperty('filter_value')) {
-        obj['filter_value'] = ApiClient.convertToType(data['filter_value'], 'Boolean');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} filter_field
-   */
-  exports.prototype['filter_field'] = undefined;
-  /**
-   * @member {String} operation
-   */
-  exports.prototype['operation'] = undefined;
-  /**
-   * @member {Boolean} filter_value
-   */
-  exports.prototype['filter_value'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/NotFilterNumber.js b/out/manticoresearch-javascript-actual/src/model/NotFilterNumber.js
deleted file mode 100644
index 072cf9e..0000000
--- a/out/manticoresearch-javascript-actual/src/model/NotFilterNumber.js
+++ /dev/null
@@ -1,91 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.NotFilterNumber = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The NotFilterNumber model module.
-   * @module model/NotFilterNumber
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>NotFilterNumber</code>.
-   * Query filter
-   * @alias module:model/NotFilterNumber
-   * @class
-   * @param filterField {String} 
-   * @param operation {String} 
-   * @param filterValue {Number} 
-   */
-  var exports = function(filterField, operation, filterValue) {
-    var _this = this;
-
-    _this['filter_field'] = filterField;
-    _this['operation'] = operation;
-    _this['filter_value'] = filterValue;
-  };
-
-  /**
-   * Constructs a <code>NotFilterNumber</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/NotFilterNumber} obj Optional instance to populate.
-   * @return {module:model/NotFilterNumber} The populated <code>NotFilterNumber</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('filter_field')) {
-        obj['filter_field'] = ApiClient.convertToType(data['filter_field'], 'String');
-      }
-      if (data.hasOwnProperty('operation')) {
-        obj['operation'] = ApiClient.convertToType(data['operation'], 'String');
-      }
-      if (data.hasOwnProperty('filter_value')) {
-        obj['filter_value'] = ApiClient.convertToType(data['filter_value'], 'Number');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} filter_field
-   */
-  exports.prototype['filter_field'] = undefined;
-  /**
-   * @member {String} operation
-   */
-  exports.prototype['operation'] = undefined;
-  /**
-   * @member {Number} filter_value
-   */
-  exports.prototype['filter_value'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/NotFilterString.js b/out/manticoresearch-javascript-actual/src/model/NotFilterString.js
deleted file mode 100644
index ece1a6c..0000000
--- a/out/manticoresearch-javascript-actual/src/model/NotFilterString.js
+++ /dev/null
@@ -1,91 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.NotFilterString = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The NotFilterString model module.
-   * @module model/NotFilterString
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>NotFilterString</code>.
-   * Query filter
-   * @alias module:model/NotFilterString
-   * @class
-   * @param filterField {String} 
-   * @param operation {String} 
-   * @param filterValue {String} 
-   */
-  var exports = function(filterField, operation, filterValue) {
-    var _this = this;
-
-    _this['filter_field'] = filterField;
-    _this['operation'] = operation;
-    _this['filter_value'] = filterValue;
-  };
-
-  /**
-   * Constructs a <code>NotFilterString</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/NotFilterString} obj Optional instance to populate.
-   * @return {module:model/NotFilterString} The populated <code>NotFilterString</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('filter_field')) {
-        obj['filter_field'] = ApiClient.convertToType(data['filter_field'], 'String');
-      }
-      if (data.hasOwnProperty('operation')) {
-        obj['operation'] = ApiClient.convertToType(data['operation'], 'String');
-      }
-      if (data.hasOwnProperty('filter_value')) {
-        obj['filter_value'] = ApiClient.convertToType(data['filter_value'], 'String');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} filter_field
-   */
-  exports.prototype['filter_field'] = undefined;
-  /**
-   * @member {String} operation
-   */
-  exports.prototype['operation'] = undefined;
-  /**
-   * @member {String} filter_value
-   */
-  exports.prototype['filter_value'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/PercolateRequest.js b/out/manticoresearch-javascript-actual/src/model/PercolateRequest.js
deleted file mode 100644
index 5bda32a..0000000
--- a/out/manticoresearch-javascript-actual/src/model/PercolateRequest.js
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient', 'model/PercolateRequestQuery'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'), require('./PercolateRequestQuery'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.PercolateRequest = factory(root.Manticoresearch.ApiClient, root.Manticoresearch.PercolateRequestQuery);
-  }
-}(this, function(ApiClient, PercolateRequestQuery) {
-  'use strict';
-
-
-
-  /**
-   * The PercolateRequest model module.
-   * @module model/PercolateRequest
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>PercolateRequest</code>.
-   * Object with documents to percolate
-   * @alias module:model/PercolateRequest
-   * @class
-   * @param query {module:model/PercolateRequestQuery} 
-   */
-  var exports = function(query) {
-    var _this = this;
-
-    _this['query'] = query;
-  };
-
-  /**
-   * Constructs a <code>PercolateRequest</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/PercolateRequest} obj Optional instance to populate.
-   * @return {module:model/PercolateRequest} The populated <code>PercolateRequest</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('query')) {
-        obj['query'] = PercolateRequestQuery.constructFromObject(data['query']);
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {module:model/PercolateRequestQuery} query
-   */
-  exports.prototype['query'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/PercolateRequestQuery.js b/out/manticoresearch-javascript-actual/src/model/PercolateRequestQuery.js
deleted file mode 100644
index eacce4e..0000000
--- a/out/manticoresearch-javascript-actual/src/model/PercolateRequestQuery.js
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.PercolateRequestQuery = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The PercolateRequestQuery model module.
-   * @module model/PercolateRequestQuery
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>PercolateRequestQuery</code>.
-   * @alias module:model/PercolateRequestQuery
-   * @class
-   * @extends Object
-   * @param percolate {Object} 
-   */
-  var exports = function(percolate) {
-    var _this = this;
-
-    _this['percolate'] = percolate;
-    return _this;
-  };
-
-  /**
-   * Constructs a <code>PercolateRequestQuery</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/PercolateRequestQuery} obj Optional instance to populate.
-   * @return {module:model/PercolateRequestQuery} The populated <code>PercolateRequestQuery</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      ApiClient.constructFromObject(data, obj, 'Object');
-      if (data.hasOwnProperty('percolate')) {
-        obj['percolate'] = ApiClient.convertToType(data['percolate'], Object);
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {Object} percolate
-   */
-  exports.prototype['percolate'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/QueryFilter.js b/out/manticoresearch-javascript-actual/src/model/QueryFilter.js
deleted file mode 100644
index 7362c93..0000000
--- a/out/manticoresearch-javascript-actual/src/model/QueryFilter.js
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.QueryFilter = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The QueryFilter model module.
-   * @module model/QueryFilter
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>QueryFilter</code>.
-   * Query string filter
-   * @alias module:model/QueryFilter
-   * @class
-   * @param queryString {String} 
-   */
-  var exports = function(queryString) {
-    var _this = this;
-
-    _this['query_string'] = queryString;
-  };
-
-  /**
-   * Constructs a <code>QueryFilter</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/QueryFilter} obj Optional instance to populate.
-   * @return {module:model/QueryFilter} The populated <code>QueryFilter</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('query_string')) {
-        obj['query_string'] = ApiClient.convertToType(data['query_string'], 'String');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} query_string
-   */
-  exports.prototype['query_string'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/RangeFilter.js b/out/manticoresearch-javascript-actual/src/model/RangeFilter.js
deleted file mode 100644
index cd7a576..0000000
--- a/out/manticoresearch-javascript-actual/src/model/RangeFilter.js
+++ /dev/null
@@ -1,101 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.RangeFilter = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The RangeFilter model module.
-   * @module model/RangeFilter
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>RangeFilter</code>.
-   * Range attribute filter
-   * @alias module:model/RangeFilter
-   * @class
-   * @param field {String} 
-   */
-  var exports = function(field) {
-    var _this = this;
-
-    _this['field'] = field;
-  };
-
-  /**
-   * Constructs a <code>RangeFilter</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/RangeFilter} obj Optional instance to populate.
-   * @return {module:model/RangeFilter} The populated <code>RangeFilter</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('field')) {
-        obj['field'] = ApiClient.convertToType(data['field'], 'String');
-      }
-      if (data.hasOwnProperty('lte')) {
-        obj['lte'] = ApiClient.convertToType(data['lte'], 'Number');
-      }
-      if (data.hasOwnProperty('gte')) {
-        obj['gte'] = ApiClient.convertToType(data['gte'], 'Number');
-      }
-      if (data.hasOwnProperty('lt')) {
-        obj['lt'] = ApiClient.convertToType(data['lt'], 'Number');
-      }
-      if (data.hasOwnProperty('gt')) {
-        obj['gt'] = ApiClient.convertToType(data['gt'], 'Number');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} field
-   */
-  exports.prototype['field'] = undefined;
-  /**
-   * @member {Number} lte
-   */
-  exports.prototype['lte'] = undefined;
-  /**
-   * @member {Number} gte
-   */
-  exports.prototype['gte'] = undefined;
-  /**
-   * @member {Number} lt
-   */
-  exports.prototype['lt'] = undefined;
-  /**
-   * @member {Number} gt
-   */
-  exports.prototype['gt'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/SearchRequest.js b/out/manticoresearch-javascript-actual/src/model/SearchRequest.js
deleted file mode 100644
index b4d73c7..0000000
--- a/out/manticoresearch-javascript-actual/src/model/SearchRequest.js
+++ /dev/null
@@ -1,172 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient', 'model/Aggregation', 'model/Highlight'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'), require('./Aggregation'), require('./Highlight'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.SearchRequest = factory(root.Manticoresearch.ApiClient, root.Manticoresearch.Aggregation, root.Manticoresearch.Highlight);
-  }
-}(this, function(ApiClient, Aggregation, Highlight) {
-  'use strict';
-
-
-
-  /**
-   * The SearchRequest model module.
-   * @module model/SearchRequest
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>SearchRequest</code>.
-   * Request object for search operation
-   * @alias module:model/SearchRequest
-   * @class
-   * @param index {String} 
-   */
-  var exports = function(index) {
-    var _this = this;
-
-    _this['index'] = index;
-  };
-
-  /**
-   * Constructs a <code>SearchRequest</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/SearchRequest} obj Optional instance to populate.
-   * @return {module:model/SearchRequest} The populated <code>SearchRequest</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('index')) {
-        obj['index'] = ApiClient.convertToType(data['index'], 'String');
-      }
-      if (data.hasOwnProperty('query')) {
-        obj['query'] = ApiClient.convertToType(data['query'], Object);
-      }
-      if (data.hasOwnProperty('fulltext_filter')) {
-        obj['fulltext_filter'] = ApiClient.convertToType(data['fulltext_filter'], Object);
-      }
-      if (data.hasOwnProperty('attr_filter')) {
-        obj['attr_filter'] = ApiClient.convertToType(data['attr_filter'], Object);
-      }
-      if (data.hasOwnProperty('limit')) {
-        obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
-      }
-      if (data.hasOwnProperty('offset')) {
-        obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
-      }
-      if (data.hasOwnProperty('max_matches')) {
-        obj['max_matches'] = ApiClient.convertToType(data['max_matches'], 'Number');
-      }
-      if (data.hasOwnProperty('sort')) {
-        obj['sort'] = ApiClient.convertToType(data['sort'], [Object]);
-      }
-      if (data.hasOwnProperty('aggs')) {
-        obj['aggs'] = ApiClient.convertToType(data['aggs'], {'String': Aggregation});
-      }
-      if (data.hasOwnProperty('expressions')) {
-        obj['expressions'] = ApiClient.convertToType(data['expressions'], {'String': 'String'});
-      }
-      if (data.hasOwnProperty('highlight')) {
-        obj['highlight'] = Highlight.constructFromObject(data['highlight']);
-      }
-      if (data.hasOwnProperty('source')) {
-		obj['_source'] = ApiClient.convertToType(data['source'], Object);
-      }
-      if (data.hasOwnProperty('options')) {
-        obj['options'] = ApiClient.convertToType(data['options'], {'String': Object});
-      }
-      if (data.hasOwnProperty('profile')) {
-        obj['profile'] = ApiClient.convertToType(data['profile'], 'Boolean');
-      }
-      if (data.hasOwnProperty('track_scores')) {
-        obj['track_scores'] = ApiClient.convertToType(data['track_scores'], 'Boolean');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} index
-   * @default ''
-   */
-  exports.prototype['index'] = '';
-  /**
-   * @member {Object} query
-   */
-  exports.prototype['query'] = undefined;
-  /**
-   * @member {Object} fulltext_filter
-   */
-  exports.prototype['fulltext_filter'] = undefined;
-  /**
-   * @member {Object} attr_filter
-   */
-  exports.prototype['attr_filter'] = undefined;
-  /**
-   * @member {Number} limit
-   */
-  exports.prototype['limit'] = undefined;
-  /**
-   * @member {Number} offset
-   */
-  exports.prototype['offset'] = undefined;
-  /**
-   * @member {Number} max_matches
-   */
-  exports.prototype['max_matches'] = undefined;
-  /**
-   * @member {Array.<Object>} sort
-   */
-  exports.prototype['sort'] = undefined;
-  /**
-   * @member {Object.<String, module:model/Aggregation>} aggs
-   */
-  exports.prototype['aggs'] = undefined;
-  /**
-   * @member {Object.<String, String>} expressions
-   */
-  exports.prototype['expressions'] = undefined;
-  /**
-   * @member {module:model/Highlight} highlight
-   */
-  exports.prototype['highlight'] = undefined;
-  /**
-   * @member {Object} source
-   */
-  exports.prototype['_source'] = undefined;
-  /**
-   * @member {Object.<String, Object>} options
-   */
-  exports.prototype['options'] = undefined;
-  /**
-   * @member {Boolean} profile
-   */
-  exports.prototype['profile'] = undefined;
-  /**
-   * @member {Boolean} track_scores
-   */
-  exports.prototype['track_scores'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/SearchResponse.js b/out/manticoresearch-javascript-actual/src/model/SearchResponse.js
deleted file mode 100644
index f05a52d..0000000
--- a/out/manticoresearch-javascript-actual/src/model/SearchResponse.js
+++ /dev/null
@@ -1,106 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient', 'model/SearchResponseHits'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'), require('./SearchResponseHits'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.SearchResponse = factory(root.Manticoresearch.ApiClient, root.Manticoresearch.SearchResponseHits);
-  }
-}(this, function(ApiClient, SearchResponseHits) {
-  'use strict';
-
-
-
-  /**
-   * The SearchResponse model module.
-   * @module model/SearchResponse
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>SearchResponse</code>.
-   * Response object of a search request
-   * @alias module:model/SearchResponse
-   * @class
-   */
-  var exports = function() {
-    var _this = this;
-
-  };
-
-  /**
-   * Constructs a <code>SearchResponse</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/SearchResponse} obj Optional instance to populate.
-   * @return {module:model/SearchResponse} The populated <code>SearchResponse</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('took')) {
-        obj['took'] = ApiClient.convertToType(data['took'], 'Number');
-      }
-      if (data.hasOwnProperty('timed_out')) {
-        obj['timed_out'] = ApiClient.convertToType(data['timed_out'], 'Boolean');
-      }
-      if (data.hasOwnProperty('aggregations')) {
-        obj['aggregations'] = ApiClient.convertToType(data['aggregations'], {'String': Object});
-      }
-      if (data.hasOwnProperty('hits')) {
-        obj['hits'] = SearchResponseHits.constructFromObject(data['hits']);
-      }
-      if (data.hasOwnProperty('profile')) {
-        obj['profile'] = ApiClient.convertToType(data['profile'], Object);
-      }
-      if (data.hasOwnProperty('warning')) {
-        obj['warning'] = ApiClient.convertToType(data['warning'], {'String': Object});
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {Number} took
-   */
-  exports.prototype['took'] = undefined;
-  /**
-   * @member {Boolean} timed_out
-   */
-  exports.prototype['timed_out'] = undefined;
-  /**
-   * @member {Object.<String, Object>} aggregations
-   */
-  exports.prototype['aggregations'] = undefined;
-  /**
-   * @member {module:model/SearchResponseHits} hits
-   */
-  exports.prototype['hits'] = undefined;
-  /**
-   * @member {Object} profile
-   */
-  exports.prototype['profile'] = undefined;
-  /**
-   * @member {Object.<String, Object>} warning
-   */
-  exports.prototype['warning'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/SearchResponseHits.js b/out/manticoresearch-javascript-actual/src/model/SearchResponseHits.js
deleted file mode 100644
index c7e1eaa..0000000
--- a/out/manticoresearch-javascript-actual/src/model/SearchResponseHits.js
+++ /dev/null
@@ -1,91 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.SearchResponseHits = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The SearchResponseHits model module.
-   * @module model/SearchResponseHits
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>SearchResponseHits</code>.
-   * @alias module:model/SearchResponseHits
-   * @class
-   */
-  var exports = function() {
-    var _this = this;
-
-  };
-
-  /**
-   * Constructs a <code>SearchResponseHits</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/SearchResponseHits} obj Optional instance to populate.
-   * @return {module:model/SearchResponseHits} The populated <code>SearchResponseHits</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('max_score')) {
-        obj['max_score'] = ApiClient.convertToType(data['max_score'], 'Number');
-      }
-      if (data.hasOwnProperty('total')) {
-        obj['total'] = ApiClient.convertToType(data['total'], 'Number');
-      }
-      if (data.hasOwnProperty('total_relation')) {
-        obj['total_relation'] = ApiClient.convertToType(data['total_relation'], 'String');
-      }
-      if (data.hasOwnProperty('hits')) {
-        obj['hits'] = ApiClient.convertToType(data['hits'], [Object]);
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {Number} max_score
-   */
-  exports.prototype['max_score'] = undefined;
-  /**
-   * @member {Number} total
-   */
-  exports.prototype['total'] = undefined;
-  /**
-   * @member {String} total_relation
-   */
-  exports.prototype['total_relation'] = undefined;
-  /**
-   * @member {Array.<Object>} hits
-   */
-  exports.prototype['hits'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/SortMVA.js b/out/manticoresearch-javascript-actual/src/model/SortMVA.js
deleted file mode 100644
index cff080b..0000000
--- a/out/manticoresearch-javascript-actual/src/model/SortMVA.js
+++ /dev/null
@@ -1,125 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.SortMVA = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The SortMVA model module.
-   * @module model/SortMVA
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>SortMVA</code>.
-   * Query sort expression for MVA attributes
-   * @alias module:model/SortMVA
-   * @class
-   * @param attr {String} 
-   * @param order {module:model/SortMVA.OrderEnum} 
-   * @param mode {module:model/SortMVA.ModeEnum} 
-   */
-  var exports = function(attr, order, mode) {
-    var _this = this;
-
-    _this['attr'] = attr;
-    _this['order'] = order;
-    _this['mode'] = mode;
-  };
-
-  /**
-   * Constructs a <code>SortMVA</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/SortMVA} obj Optional instance to populate.
-   * @return {module:model/SortMVA} The populated <code>SortMVA</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('attr')) {
-        obj['attr'] = ApiClient.convertToType(data['attr'], 'String');
-      }
-      if (data.hasOwnProperty('order')) {
-        obj['order'] = ApiClient.convertToType(data['order'], 'String');
-      }
-      if (data.hasOwnProperty('mode')) {
-        obj['mode'] = ApiClient.convertToType(data['mode'], 'String');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} attr
-   */
-  exports.prototype['attr'] = undefined;
-  /**
-   * @member {module:model/SortMVA.OrderEnum} order
-   */
-  exports.prototype['order'] = undefined;
-  /**
-   * @member {module:model/SortMVA.ModeEnum} mode
-   */
-  exports.prototype['mode'] = undefined;
-
-
-  /**
-   * Allowed values for the <code>order</code> property.
-   * @enum {String}
-   * @readonly
-   */
-  exports.OrderEnum = {
-    /**
-     * value: "asc"
-     * @const
-     */
-    "asc": "asc",
-    /**
-     * value: "desc"
-     * @const
-     */
-    "desc": "desc"  };
-
-  /**
-   * Allowed values for the <code>mode</code> property.
-   * @enum {String}
-   * @readonly
-   */
-  exports.ModeEnum = {
-    /**
-     * value: "min"
-     * @const
-     */
-    "min": "min",
-    /**
-     * value: "max"
-     * @const
-     */
-    "max": "max"  };
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/SortMultiple.js b/out/manticoresearch-javascript-actual/src/model/SortMultiple.js
deleted file mode 100644
index c3c9cd7..0000000
--- a/out/manticoresearch-javascript-actual/src/model/SortMultiple.js
+++ /dev/null
@@ -1,82 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.SortMultiple = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The SortMultiple model module.
-   * @module model/SortMultiple
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>SortMultiple</code>.
-   * Query sort expression for multiple attributes
-   * @alias module:model/SortMultiple
-   * @class
-   * @param attrs {Object.<String, Object>} 
-   * @param replace {Boolean} 
-   */
-  var exports = function(attrs, replace) {
-    var _this = this;
-
-    _this['attrs'] = attrs;
-    _this['replace'] = replace;
-  };
-
-  /**
-   * Constructs a <code>SortMultiple</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/SortMultiple} obj Optional instance to populate.
-   * @return {module:model/SortMultiple} The populated <code>SortMultiple</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('attrs')) {
-        obj['attrs'] = ApiClient.convertToType(data['attrs'], {'String': Object});
-      }
-      if (data.hasOwnProperty('replace')) {
-        obj['replace'] = ApiClient.convertToType(data['replace'], 'Boolean');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {Object.<String, Object>} attrs
-   */
-  exports.prototype['attrs'] = undefined;
-  /**
-   * @member {Boolean} replace
-   */
-  exports.prototype['replace'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/SortOrder.js b/out/manticoresearch-javascript-actual/src/model/SortOrder.js
deleted file mode 100644
index bbdf43d..0000000
--- a/out/manticoresearch-javascript-actual/src/model/SortOrder.js
+++ /dev/null
@@ -1,99 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.SortOrder = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The SortOrder model module.
-   * @module model/SortOrder
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>SortOrder</code>.
-   * Query sort expression
-   * @alias module:model/SortOrder
-   * @class
-   * @param attr {String} 
-   * @param order {module:model/SortOrder.OrderEnum} 
-   */
-  var exports = function(attr, order) {
-    var _this = this;
-
-    _this['attr'] = attr;
-    _this['order'] = order;
-  };
-
-  /**
-   * Constructs a <code>SortOrder</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/SortOrder} obj Optional instance to populate.
-   * @return {module:model/SortOrder} The populated <code>SortOrder</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('attr')) {
-        obj['attr'] = ApiClient.convertToType(data['attr'], 'String');
-      }
-      if (data.hasOwnProperty('order')) {
-        obj['order'] = ApiClient.convertToType(data['order'], 'String');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} attr
-   */
-  exports.prototype['attr'] = undefined;
-  /**
-   * @member {module:model/SortOrder.OrderEnum} order
-   */
-  exports.prototype['order'] = undefined;
-
-
-  /**
-   * Allowed values for the <code>order</code> property.
-   * @enum {String}
-   * @readonly
-   */
-  exports.OrderEnum = {
-    /**
-     * value: "asc"
-     * @const
-     */
-    "asc": "asc",
-    /**
-     * value: "desc"
-     * @const
-     */
-    "desc": "desc"  };
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/SourceByRules.js b/out/manticoresearch-javascript-actual/src/model/SourceByRules.js
deleted file mode 100644
index 628a28b..0000000
--- a/out/manticoresearch-javascript-actual/src/model/SourceByRules.js
+++ /dev/null
@@ -1,82 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.SourceByRules = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The SourceByRules model module.
-   * @module model/SourceByRules
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>SourceByRules</code>.
-   * Query fields to be included/excluded to/from response
-   * @alias module:model/SourceByRules
-   * @class
-   * @param includes {Array.<String>} 
-   * @param excludes {Array.<String>} 
-   */
-  var exports = function(includes, excludes) {
-    var _this = this;
-
-    _this['includes'] = includes;
-    _this['excludes'] = excludes;
-  };
-
-  /**
-   * Constructs a <code>SourceByRules</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/SourceByRules} obj Optional instance to populate.
-   * @return {module:model/SourceByRules} The populated <code>SourceByRules</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('includes')) {
-        obj['includes'] = ApiClient.convertToType(data['includes'], ['String']);
-      }
-      if (data.hasOwnProperty('excludes')) {
-        obj['excludes'] = ApiClient.convertToType(data['excludes'], ['String']);
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {Array.<String>} includes
-   */
-  exports.prototype['includes'] = undefined;
-  /**
-   * @member {Array.<String>} excludes
-   */
-  exports.prototype['excludes'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/SuccessResponse.js b/out/manticoresearch-javascript-actual/src/model/SuccessResponse.js
deleted file mode 100644
index 34696b9..0000000
--- a/out/manticoresearch-javascript-actual/src/model/SuccessResponse.js
+++ /dev/null
@@ -1,99 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.SuccessResponse = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The SuccessResponse model module.
-   * @module model/SuccessResponse
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>SuccessResponse</code>.
-   * Success response
-   * @alias module:model/SuccessResponse
-   * @class
-   */
-  var exports = function() {
-    var _this = this;
-
-  };
-
-  /**
-   * Constructs a <code>SuccessResponse</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/SuccessResponse} obj Optional instance to populate.
-   * @return {module:model/SuccessResponse} The populated <code>SuccessResponse</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('_index')) {
-        obj['_index'] = ApiClient.convertToType(data['_index'], 'String');
-      }
-      if (data.hasOwnProperty('_id')) {
-        obj['_id'] = ApiClient.convertToType(data['_id'], 'Number');
-      }
-      if (data.hasOwnProperty('created')) {
-        obj['created'] = ApiClient.convertToType(data['created'], 'Boolean');
-      }
-      if (data.hasOwnProperty('result')) {
-        obj['result'] = ApiClient.convertToType(data['result'], 'String');
-      }
-      if (data.hasOwnProperty('found')) {
-        obj['found'] = ApiClient.convertToType(data['found'], 'Boolean');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} _index
-   */
-  exports.prototype['_index'] = undefined;
-  /**
-   * @member {Number} _id
-   */
-  exports.prototype['_id'] = undefined;
-  /**
-   * @member {Boolean} created
-   */
-  exports.prototype['created'] = undefined;
-  /**
-   * @member {String} result
-   */
-  exports.prototype['result'] = undefined;
-  /**
-   * @member {Boolean} found
-   */
-  exports.prototype['found'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/UpdateDocumentRequest.js b/out/manticoresearch-javascript-actual/src/model/UpdateDocumentRequest.js
deleted file mode 100644
index 8d3d6d9..0000000
--- a/out/manticoresearch-javascript-actual/src/model/UpdateDocumentRequest.js
+++ /dev/null
@@ -1,99 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.UpdateDocumentRequest = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The UpdateDocumentRequest model module.
-   * @module model/UpdateDocumentRequest
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>UpdateDocumentRequest</code>.
-   * Payload for update document
-   * @alias module:model/UpdateDocumentRequest
-   * @class
-   * @param index {String} 
-   * @param doc {Object.<String, Object>} Index name
-   */
-  var exports = function(index, doc) {
-    var _this = this;
-
-    _this['index'] = index;
-    _this['doc'] = doc;
-  };
-
-  /**
-   * Constructs a <code>UpdateDocumentRequest</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/UpdateDocumentRequest} obj Optional instance to populate.
-   * @return {module:model/UpdateDocumentRequest} The populated <code>UpdateDocumentRequest</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('index')) {
-        obj['index'] = ApiClient.convertToType(data['index'], 'String');
-      }
-      if (data.hasOwnProperty('doc')) {
-        obj['doc'] = ApiClient.convertToType(data['doc'], {'String': Object});
-      }
-      if (data.hasOwnProperty('id')) {
-        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
-      }
-      if (data.hasOwnProperty('query')) {
-        obj['query'] = ApiClient.convertToType(data['query'], {'String': Object});
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} index
-   */
-  exports.prototype['index'] = undefined;
-  /**
-   * Index name
-   * @member {Object.<String, Object>} doc
-   */
-  exports.prototype['doc'] = undefined;
-  /**
-   * Document ID
-   * @member {Number} id
-   */
-  exports.prototype['id'] = undefined;
-  /**
-   * Query tree object
-   * @member {Object.<String, Object>} query
-   */
-  exports.prototype['query'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/src/model/UpdateResponse.js b/out/manticoresearch-javascript-actual/src/model/UpdateResponse.js
deleted file mode 100644
index d137112..0000000
--- a/out/manticoresearch-javascript-actual/src/model/UpdateResponse.js
+++ /dev/null
@@ -1,92 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD. Register as an anonymous module.
-    define(['ApiClient'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    module.exports = factory(require('../ApiClient'));
-  } else {
-    // Browser globals (root is window)
-    if (!root.Manticoresearch) {
-      root.Manticoresearch = {};
-    }
-    root.Manticoresearch.UpdateResponse = factory(root.Manticoresearch.ApiClient);
-  }
-}(this, function(ApiClient) {
-  'use strict';
-
-
-
-  /**
-   * The UpdateResponse model module.
-   * @module model/UpdateResponse
-   * @version 4.0.0
-   */
-
-  /**
-   * Constructs a new <code>UpdateResponse</code>.
-   * Success response
-   * @alias module:model/UpdateResponse
-   * @class
-   */
-  var exports = function() {
-    var _this = this;
-
-  };
-
-  /**
-   * Constructs a <code>UpdateResponse</code> from a plain JavaScript object, optionally creating a new instance.
-   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
-   * @param {Object} data The plain JavaScript object bearing properties of interest.
-   * @param {module:model/UpdateResponse} obj Optional instance to populate.
-   * @return {module:model/UpdateResponse} The populated <code>UpdateResponse</code> instance.
-   */
-  exports.constructFromObject = function(data, obj) {
-    if (data) {
-      obj = obj || new exports();
-      if (data.hasOwnProperty('_index')) {
-        obj['_index'] = ApiClient.convertToType(data['_index'], 'String');
-      }
-      if (data.hasOwnProperty('updated')) {
-        obj['updated'] = ApiClient.convertToType(data['updated'], 'Number');
-      }
-      if (data.hasOwnProperty('_id')) {
-        obj['_id'] = ApiClient.convertToType(data['_id'], 'Number');
-      }
-      if (data.hasOwnProperty('result')) {
-        obj['result'] = ApiClient.convertToType(data['result'], 'String');
-      }
-    }
-    return obj;
-  }
-
-  /**
-   * @member {String} _index
-   */
-  exports.prototype['_index'] = undefined;
-  /**
-   * @member {Number} updated
-   */
-  exports.prototype['updated'] = undefined;
-  /**
-   * @member {Number} _id
-   */
-  exports.prototype['_id'] = undefined;
-  /**
-   * @member {String} result
-   */
-  exports.prototype['result'] = undefined;
-
-
-
-  return exports;
-}));
-
-
diff --git a/out/manticoresearch-javascript-actual/test/api/Manual.spec.js b/out/manticoresearch-javascript-actual/test/api/Manual.spec.js
deleted file mode 100755
index 37633b5..0000000
--- a/out/manticoresearch-javascript-actual/test/api/Manual.spec.js
+++ /dev/null
@@ -1,359 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var indexApi;
-  var searchApi;
-  var utilsApi;
-
-  beforeEach(function() {
-    var client= new Manticoresearch.ApiClient()
-    client.basePath="http://localhost:9408";
-    indexApi = new Manticoresearch.IndexApi(client);
-    searchApi = new Manticoresearch.SearchApi(client);
-    utilsApi = new Manticoresearch.UtilsApi(client);
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('Manual', function() {
-    describe('test', function() {
-      it('run manual code samples',async function() {
-	
-		try {
-			let res =  await utilsApi.sql('DROP TABLE IF EXISTS movies');
-			res =  await utilsApi.sql('CREATE TABLE IF NOT EXISTS movies (title text, plot text, year integer, rating float, code multi)');
-			let docs = [ 
-				{"insert": {"index" : "movies", "id" : 1, "doc" : {"title" : "Star Trek 2: Nemesis", "plot": "The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.", "year": 2002, "rating": 6.4, "code": [1,2,3]}}},
-				{"insert": {"index" : "movies", "id" : 2, "doc" : {"title" : "Star Trek 1: Nemesis", "plot": "The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.", "year": 2001, "rating": 6.5, "code": [1,12,3]}}},
-				{"insert": {"index" : "movies", "id" : 3, "doc" : {"title" : "Star Trek 3: Nemesis", "plot": "The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.", "year": 2003, "rating": 6.6, "code": [11,2,3]}}},
-				{"insert": {"index" : "movies", "id" : 4, "doc" : {"title" : "Star Trek 4: Nemesis", "plot": "The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.", "year": 2003, "rating": 6.5, "code": [1,2,4]}}}
-			];
-			res =  await indexApi.bulk(docs.map(e=>JSON.stringify(e)).join('\n'));
-			
-			let search_request = {"index":"movies"};
-
-			res =  await searchApi.search(search_request);
-			
-			search_request.limit = 10;
-			search_request.options = {'cutoff': 5};
-			search_request.options['ranker'] = 'bm25';
-			search_request.source = 'title';
-
-			res =  await searchApi.search(search_request);
-
-			search_request.source = new Manticoresearch.SourceByRules();
-      		search_request.source.includes = ['title', 'year'];
-      		search_request.source.excludes = ['code'];
-
-      		res =  await searchApi.search(search_request);
-
-			search_request.sort = ['year']
-      		let sort2 = new Manticoresearch.SortOrder('rating', 'asc');
-      		let sort3 = new Manticoresearch.SortMVA('code', 'desc', 'max');
-      		search_request.sort.push(...[sort2,sort3]);
-
-      		res =  await searchApi.search(search_request);
-
-      		search_request.expressions = {'expr': 'min(year,2900)'};
-      		let expr2 = 'max(year,2100)';
-      		search_request.expressions['expr2'] = expr2;
-      		search_request.source.includes.push('expr', 'expr2');
-
-      		res =  await searchApi.search(search_request);
-
-			let terms = {};
-			Manticoresearch.AggregationTerms.constructFromObject({field: 'year', size: 10}, terms);
-			let agg1 = new Manticoresearch.Aggregation();
-			agg1['terms'] = terms;
-			agg1['sort'] = ['year'];
-			search_request.aggs = {agg1: agg1};
-			let agg2 = new Manticoresearch.Aggregation();
-			agg2['terms'] = Manticoresearch.AggregationTerms.constructFromObject({field: 'rating'});
-      		search_request.aggs['agg2'] = agg2;
-
-      		res =  await searchApi.search(search_request);
-
-			let highlight = new Manticoresearch.Highlight();
-      		highlight.fieldnames = ['title'];
-      		highlight.post_tags = '</post_tag>';
-    		highlight.encoder = 'default';
-	    	highlight.snippet_boundary = 'sentence';
-      		search_request.highlight = highlight;
-
-      		res =  await searchApi.search(search_request);
- 
-			let highlightField = new Manticoresearch.HighlightField('title');
-			let highlightField2 = new Manticoresearch.HighlightField('plot');
-			Manticoresearch.HighlightField.constructFromObject({limit:5}, highlightField2);
-			Manticoresearch.HighlightField.constructFromObject({limit_words:10}, highlightField2);
-			highlight.fields = [highlightField, highlightField2];
-			search_request.highlight = highlight;
-
-			res =  await searchApi.search(search_request);
-
-			highlight.highlight_query = {'match': { '*': "Star" } };
-			search_request.highlight = highlight;
-
-			res =  await searchApi.search(search_request);
-
-			search_request.fulltext_filter = new Manticoresearch.QueryFilter('Star Trek 2');
-
-			res =  await searchApi.search(search_request);
-
-			search_request.fulltext_filter = new Manticoresearch.MatchFilter('Nemesis', 'title');
-
-			res =  await searchApi.search(search_request);
-
-			search_request.fulltext_filter = new Manticoresearch.MatchPhraseFilter('Star Trek 2', 'title');
-
-			res =  await searchApi.search(search_request);
-
-			search_request.fulltext_filter = new Manticoresearch.MatchOpFilter('Enterprise test', 'title,plot', 'or');
-
-			res =  await searchApi.search(search_request);
-
-			search_request.attr_filter = new Manticoresearch.EqualsFilter('year', 2003);
-
-			res =  await searchApi.search(search_request);
-			
-			let inFilter = new Manticoresearch.InFilter('year', [2001, 2002]);
-			inFilter.values = inFilter.values.concat([10,11]);
-			search_request.attr_filter = inFilter;
-
-			res =  await searchApi.search(search_request);
-
-			let rangeFilter = new Manticoresearch.RangeFilter('year');
-			Manticoresearch.RangeFilter.constructFromObject({lte: 2002}, rangeFilter);
-			Manticoresearch.RangeFilter.constructFromObject({gte: 1000}, rangeFilter);
-			search_request.attr_filter = rangeFilter;
-
-			res =  await searchApi.search(search_request);
-
-			let geoFilter = new Manticoresearch.GeoDistanceFilter();
-			let loc_anchor = {'location_anchor': {'lat':10,'lon':20.5}};
-			Manticoresearch.GeoDistanceFilter.constructFromObject(loc_anchor, geoFilter);
-			Manticoresearch.GeoDistanceFilter.constructFromObject({'location_source':'year,rating'}, geoFilter);
-			Manticoresearch.GeoDistanceFilter.constructFromObject({'distance_type': 'adaptive', 'distance': '100km'}, geoFilter);
-			search_request.attr_filter = geoFilter;
-
-			res =  await searchApi.search(search_request);
-
-			let boolFilter = new Manticoresearch.BoolFilter();
-			boolFilter.must = [ new Manticoresearch.EqualsFilter('year', 2001) ];
-			rangeFilter = new Manticoresearch.RangeFilter('rating');
-			Manticoresearch.RangeFilter.constructFromObject({lte: 20}, rangeFilter);
-			boolFilter.must.push(rangeFilter);
-			search_request.attr_filter = boolFilter;
-
-			res =  await searchApi.search(search_request);
-
-			boolFilter.must_not = [ new Manticoresearch.EqualsFilter('year', 2001) ];
-			search_request.attr_filter = boolFilter;
-
-			res =  await searchApi.search(search_request);
-
-			let fulltext_filter = new Manticoresearch.MatchFilter('Star', 'title');
-			let nestedBoolFilter = new Manticoresearch.BoolFilter();
-			nestedBoolFilter.should = [ new Manticoresearch.EqualsFilter('rating', 6.5), fulltext_filter];
-      		boolFilter.must = [nestedBoolFilter];
-			search_request.attr_filter = boolFilter;
-
-			res =  await searchApi.search(search_request);
-
-			console.log("Search tests finished");
-		} catch (e) {
-			console.error(e);
-		}
-				
-        let res =  await utilsApi.sql('DROP TABLE IF EXISTS products');
-
-        res =  await utilsApi.sql('CREATE TABLE IF NOT EXISTS products (title text, price float, sizes multi, meta json, coeff float, tags1 multi, tags2 multi)', {'rawResponse': true});
-
-		res =  await utilsApi.sql('SELECT * FROM products', {'rawResponse': false} );
-		res =  await utilsApi.sql('SELECT * FROM products', {'rawResponse': true} );
-
-        res =  await indexApi.insert({"index" : "products", "id" : 1, "doc" : {"title" : "Crossbody Bag with Tassel", "price" : 19.85}});
-        res =  await indexApi.insert({"index" : "products", "id" : 2, "doc" : {"title" : "Crossbody Bag with Tassel"}});
-        res =  await indexApi.insert({"index" : "products", "id" : 0, "doc" : {"title" : "Yellow bag"}});
-        
-        res =  await indexApi.insert({"index" : "products", "id" : 0, "doc" : {"title" : "Yellow bag"}});
-        
-        let docs = [ 
-            {"insert": {"index" : "products", "id" : 3, "doc" : {"title" : "Crossbody Bag with Tassel", "price" : 19.85}}}, 
-            {"insert": {"index" : "products", "id" : 4, "doc" : {"title" : "microfiber sheet set", "price" : 19.99}}}, 
-            {"insert": {"index" : "products", "id" : 5, "doc" : {"title" : "CPet Hair Remover Glove", "price" : 7.99}}}
-        ];
-        res =  await indexApi.bulk(docs.map(e=>JSON.stringify(e)).join('\n'));
-         
-        
-        res =  await indexApi.insert({"index" : "products", "id" : 0, "doc" : {"title" : "Yellow bag","sizes":[40,41,42,43]}});
-        res =  await indexApi.insert({"index" : "products", "id" : 0, "doc" : {"title" : "Yellow bag","meta":'{"size": 41, "color": "red"}'}});
-        res =  await indexApi.replace({"index" : "products", "id" : 1, "doc" : {"title" : "document one","price":10}});
-         
-        docs = [ 
-            {"replace": {"index" : "products", "id" : 1, "doc" : {"title" : "document one"}}}, 
-            {"replace": {"index" : "products", "id" : 2, "doc" : {"title" : "document two"}}} ];
-        res =  await indexApi.bulk(docs.map(e=>JSON.stringify(e)).join('\n'));
-        
-        
-        res =  await indexApi.update({"index" : "products", "id" : 1, "doc" : {"price":10}});
-
-        res =  await indexApi.update({"index" : "products", "id" : 1, "doc" : {
-            "price": 100000000000,
-            "coeff": 3465.23,
-            "tags1": [3,6,4],
-            "tags2": []}});
-         
-        res =  await indexApi.insert({"index" : "products", "id" : 100, "doc" : {"title" : "title", "meta" : {"tags":[1,2,3]}}});
-         
-        res =  await indexApi.update({"index" : "products", "id" : 100, "doc" : {
-            "meta.tags[0]": 100}});
-         
-        res =  await indexApi.update({"index" : "products", "id" : 1, "doc" : {"tags1": []}});
-         
-        docs = [ 
-            { "update" : { "index" : "products", "doc": { "coeff" : 1000 }, "query": { "range": { "price": { "gte": 1000 } } } } }, 
-            { "update" : { "index" : "products", "doc": { "coeff" : 0 }, "query": { "range": { "price": { "lt": 1000 } } } } } ];
-        res =  await indexApi.bulk(docs.map(e=>JSON.stringify(e)).join('\n'));
-         
-        res =  await indexApi.callDelete({"index" : "products", "query": { "match": { "*": "document" }}});
-         
-        res =  await indexApi.insert({"index" : "products", "id" : 1, "doc" : {"title" : "Crossbody Bag with Tassel", "price" : 19.85}});
-        res =  await indexApi.callDelete({"index" : "products", "id" : 1});
-         
-        res =  await utilsApi.sql('TRUNCATE TABLE products');
-         
-        res =  await utilsApi.sql('SHOW TABLES LIKE \'pro%\'');
-        
-        res =  await utilsApi.sql('drop table if exists forum');
-         
-        res =  await utilsApi.sql('create table forum(title text, content text, author_id int, forum_id int, post_date timestamp) min_infix_len=\'3\'');
-         
-        res =  await searchApi.search({"index":"forum","query":{"match_all":{},"bool":{"must":[{"equals":{"author_id":123}},{"in":{"forum_id":[1,3,7]}}]}},"sort":[{"post_date":"desc"}]});
-         
-        res =  await indexApi.insert({"index" : "forum", "id" : 0, "doc" : {"title" : "i me"}});
-        res =  await indexApi.insert({"index" : "forum", "id" : 0, "doc" : {"title" : "wayne","content":"hey"}});
-        res =  await searchApi.search({"index":"forum","query":{"query_string":"i me"},"_source":{"excludes":["*"]},"limit":1,"profile":true});
-         
-        res =  await searchApi.search({"index":"forum","query":{"query_string":"@title way* @content hey"},"_source":{"excludes":["*"]},"limit":1,"profile":true});
-
-        res =  await utilsApi.sql('DROP TABLE products');
-        res =  await utilsApi.sql('CREATE TABLE IF NOT EXISTS products (title text,product_codes multi)');
-        
-        res =  await indexApi.insert({"index":"products","id":1,"doc":{"title":"first","product_codes":[4,2,1,3]}});
-         
-        res =  await searchApi.search({"index":"products","query":{"match_all":{}}});
-         
-        res =  await utilsApi.sql('DROP TABLE products');
-        
-        res =  await utilsApi.sql('SHOW AGENT STATUS');
-        
-        res =  await utilsApi.sql('create table products(title text, color string) type=\'pq\'');
-        res =  await indexApi.insert({"index" : "products", "doc" : {"query" : "@title bag" }});
-         
-        res =  await indexApi.insert({"index" : "products",  "doc" : {"query" : "@title shoes", "filters": "color='red'" }});
-         
-        res =  await indexApi.insert({"index" : "products",  "doc" : {"query" : "@title shoes","filters": "color in ('blue', 'green')" }});
-         
-        res =  await searchApi.percolate('products',{"query":{"percolate":{"document":{"title":"What a nice bag"}}}});
-         
-        res =  await searchApi.percolate('products',{"query":{"percolate":{"documents":[{"title":"nice pair of shoes","color":"blue"},{"title":"beautiful bag"}]}}});
-         
-        res =  await searchApi.search({"index":"products","query":{"match_all":{}}});
-
-        res =  await searchApi.search({"index":"products","query":{"match_all":{}},"options":{"max_matches":1}});
-
-        res =  await utilsApi.sql('DROP TABLE products');
-        /*
-        res =  await searchApi.search({"index":"facetdemo2","query":{"match_all":{}},"limit":5,"aggs":{"group_property":{"terms":{"field":"price",}},"group_brand_id":{"terms":{"field":"brand_id"}}}});
-        console.log(JSON.stringify(res));
-        
-        res =  await searchApi.search({"index":"facetdemo2","query":{"match_all":{}},"expressions":{"price_range":"INTERVAL(price,200,400,600,800)"},"aggs":{"group_property":{"terms":{"field":"price_range"}}}});
-        console.log(JSON.stringify(res));
-        
-        res =  await searchApi.search({"index":"facetdemo2","query":{"match_all":{}},"limit":5,"aggs":{"group_property":{"terms":{"field":"price","size":1,}},"group_brand_id":{"terms":{"field":"brand_id","size":3}}}});
-        console.log(JSON.stringify(res));
-         console.log('-----');
-        
-        res =  await searchApi.search({"index":"books","query":{"match":{"content":"and first"}},"highlight":{"fields":{"content":{"limit":50}},"limits_per_field":false}});
-        console.log(JSON.stringify(res));
-        
-        res =  await searchApi.search({"index":"books","query":{"match":{"*":"one|robots"}},"highlight":{"fields":{"title":{},"content":{"limit":50}}}});
-        console.log(JSON.stringify(res));
-        
-                res =  await searchApi.search({"index":"books","query":{"match":{"*":"one|robots"}},"highlight":{"fields":["content","title"],"number_of_fragments":10}});
-        console.log(JSON.stringify(res));
-        
-                res =  await searchApi.search({"index":"books","query":{"match":{"*":"one|robots"}},"highlight":{"fields":["content","title"],"fragment_size":100}});
-        console.log(JSON.stringify(res));
-                res =  await searchApi.search({"index":"books","query":{"match":{"*":"one|robots"}},"highlight":{"fields":["content","title"],"order":"score"}});
-        console.log(JSON.stringify(res));
-                res =  await searchApi.search({"index":"books","query":{"match":{"*":"one|robots"}},"highlight":{"fields":["content","title"],"no_match_size":0}});
-        console.log(JSON.stringify(res));
-        
-                res =  await searchApi.search({"index":"books","query":{"match":{"*":"one|robots"}},"highlight":{"fields":["content","title"],"pre_tags":"before_","post_tags":"_after"}});
-        console.log(JSON.stringify(res));
-                res =  await searchApi.search({"index":"books","query":{"match":{"content":"one|robots"}},"highlight":{"fields":["content"],"highlight_query":{"match":{"*":"polite distance"}}}});
-        console.log(JSON.stringify(res));
-                res =  await searchApi.search({"index":"books","query":{"match":{"*":"one|robots"}},"highlight":{}});
-        console.log(JSON.stringify(res));
-                res =  await searchApi.search({"index":"books","query":{"match":{"*":"one|robots"}},"highlight":{"fields":["content"]}});
-        console.log(JSON.stringify(res));
-                res =  await searchApi.search({"index":"books","query":{"query_string":"try|gets|down|said"},"highlight":{"limit":50}});
-        console.log(JSON.stringify(res));
-                res =  await searchApi.search({"index":"books","query":{"match":{"*":"try"}},"highlight":{}});
-        console.log(JSON.stringify(res));
-             console.log('-----');
-                res =  await searchApi.search({"index":"facetdemo2","query":{"match_all":{}},"limit":5,"aggs":{"group_property":{"terms":{"field":"price",}},"group_brand_id":{"terms":{"field":"brand_id",}}}});
-        console.log(JSON.stringify(res));             
-                res =  await searchApi.search({"index":"facetdemo2","query":{"match_all":{}},"expressions":{"price_range":"INTERVAL(price,200,400,600,800)"},"aggs":{"group_property":{"terms":{"field":"price_range"}}}});
-        console.log(JSON.stringify(res));
-                res =  await searchApi.search({"index":"facetdemo2","query":{"match_all":{}},"limit":5,"aggs":{"group_property":{"terms":{"field":"price","size":1,}},"group_brand_id":{"terms":{"field":"brand_id","size":3}}}});
-        console.log(JSON.stringify(res));       
-
-        res = await searchApi.search({"index":"films","limit":0,"aggs":{"release_year":{"terms":{"field":"release_year","size":100}}}});
-        console.log(JSON.stringify(res)); 
-        res = await searchApi.search({"index":"shoes","limit":0,"aggs":{"sizes":{"terms":{"field":"sizes","size":100}}}});
-        console.log(JSON.stringify(res));    
-        res = await searchApi.search({"index":"products2","limit":0,"aggs":{"color":{"terms":{"field":"meta.color","size":100}}}});
-        console.log(JSON.stringify(res));
-        */
-		console.log("Tests finished");
-      });
-    });
-
- });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/Aggregation.spec.js b/out/manticoresearch-javascript-actual/test/model/Aggregation.spec.js
deleted file mode 100644
index a8fe9ef..0000000
--- a/out/manticoresearch-javascript-actual/test/model/Aggregation.spec.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.Aggregation();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('Aggregation', function() {
-    it('should create an instance of Aggregation', function() {
-      // uncomment below and update the code to test Aggregation
-      //var instance = new Manticoresearch.Aggregation();
-      //expect(instance).to.be.a(Manticoresearch.Aggregation);
-    });
-
-    it('should have the property terms (base name: "terms")', function() {
-      // uncomment below and update the code to test the property terms
-      //var instance = new Manticoresearch.Aggregation();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property sort (base name: "sort")', function() {
-      // uncomment below and update the code to test the property sort
-      //var instance = new Manticoresearch.Aggregation();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/AggregationSortInnerValue.spec.js b/out/manticoresearch-javascript-actual/test/model/AggregationSortInnerValue.spec.js
deleted file mode 100644
index 8fba6c9..0000000
--- a/out/manticoresearch-javascript-actual/test/model/AggregationSortInnerValue.spec.js
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.AggregationSortInnerValue();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('AggregationSortInnerValue', function() {
-    it('should create an instance of AggregationSortInnerValue', function() {
-      // uncomment below and update the code to test AggregationSortInnerValue
-      //var instance = new Manticoresearch.AggregationSortInnerValue();
-      //expect(instance).to.be.a(Manticoresearch.AggregationSortInnerValue);
-    });
-
-    it('should have the property order (base name: "order")', function() {
-      // uncomment below and update the code to test the property order
-      //var instance = new Manticoresearch.AggregationSortInnerValue();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/AggregationTerms.spec.js b/out/manticoresearch-javascript-actual/test/model/AggregationTerms.spec.js
deleted file mode 100644
index 467b93c..0000000
--- a/out/manticoresearch-javascript-actual/test/model/AggregationTerms.spec.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.AggregationTerms();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('AggregationTerms', function() {
-    it('should create an instance of AggregationTerms', function() {
-      // uncomment below and update the code to test AggregationTerms
-      //var instance = new Manticoresearch.AggregationTerms();
-      //expect(instance).to.be.a(Manticoresearch.AggregationTerms);
-    });
-
-    it('should have the property field (base name: "field")', function() {
-      // uncomment below and update the code to test the property field
-      //var instance = new Manticoresearch.AggregationTerms();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property size (base name: "size")', function() {
-      // uncomment below and update the code to test the property size
-      //var instance = new Manticoresearch.AggregationTerms();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/BoolFilter.spec.js b/out/manticoresearch-javascript-actual/test/model/BoolFilter.spec.js
deleted file mode 100644
index 4e48698..0000000
--- a/out/manticoresearch-javascript-actual/test/model/BoolFilter.spec.js
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.BoolFilter();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('BoolFilter', function() {
-    it('should create an instance of BoolFilter', function() {
-      // uncomment below and update the code to test BoolFilter
-      //var instance = new Manticoresearch.BoolFilter();
-      //expect(instance).to.be.a(Manticoresearch.BoolFilter);
-    });
-
-    it('should have the property should (base name: "should")', function() {
-      // uncomment below and update the code to test the property should
-      //var instance = new Manticoresearch.BoolFilter();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property must (base name: "must")', function() {
-      // uncomment below and update the code to test the property must
-      //var instance = new Manticoresearch.BoolFilter();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property mustNot (base name: "must_not")', function() {
-      // uncomment below and update the code to test the property mustNot
-      //var instance = new Manticoresearch.BoolFilter();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/BulkResponse.spec.js b/out/manticoresearch-javascript-actual/test/model/BulkResponse.spec.js
deleted file mode 100644
index 63a40c0..0000000
--- a/out/manticoresearch-javascript-actual/test/model/BulkResponse.spec.js
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.BulkResponse();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('BulkResponse', function() {
-    it('should create an instance of BulkResponse', function() {
-      // uncomment below and update the code to test BulkResponse
-      //var instance = new Manticoresearch.BulkResponse();
-      //expect(instance).to.be.a(Manticoresearch.BulkResponse);
-    });
-
-    it('should have the property items (base name: "items")', function() {
-      // uncomment below and update the code to test the property items
-      //var instance = new Manticoresearch.BulkResponse();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property errors (base name: "errors")', function() {
-      // uncomment below and update the code to test the property errors
-      //var instance = new Manticoresearch.BulkResponse();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property error (base name: "error")', function() {
-      // uncomment below and update the code to test the property error
-      //var instance = new Manticoresearch.BulkResponse();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/DeleteDocumentRequest.spec.js b/out/manticoresearch-javascript-actual/test/model/DeleteDocumentRequest.spec.js
deleted file mode 100644
index b2fabee..0000000
--- a/out/manticoresearch-javascript-actual/test/model/DeleteDocumentRequest.spec.js
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.DeleteDocumentRequest();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('DeleteDocumentRequest', function() {
-    it('should create an instance of DeleteDocumentRequest', function() {
-      // uncomment below and update the code to test DeleteDocumentRequest
-      //var instance = new Manticoresearch.DeleteDocumentRequest();
-      //expect(instance).to.be.a(Manticoresearch.DeleteDocumentRequest);
-    });
-
-    it('should have the property index (base name: "index")', function() {
-      // uncomment below and update the code to test the property index
-      //var instance = new Manticoresearch.DeleteDocumentRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property cluster (base name: "cluster")', function() {
-      // uncomment below and update the code to test the property cluster
-      //var instance = new Manticoresearch.DeleteDocumentRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property id (base name: "id")', function() {
-      // uncomment below and update the code to test the property id
-      //var instance = new Manticoresearch.DeleteDocumentRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property query (base name: "query")', function() {
-      // uncomment below and update the code to test the property query
-      //var instance = new Manticoresearch.DeleteDocumentRequest();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/DeleteResponse.spec.js b/out/manticoresearch-javascript-actual/test/model/DeleteResponse.spec.js
deleted file mode 100644
index 3da03f4..0000000
--- a/out/manticoresearch-javascript-actual/test/model/DeleteResponse.spec.js
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.DeleteResponse();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('DeleteResponse', function() {
-    it('should create an instance of DeleteResponse', function() {
-      // uncomment below and update the code to test DeleteResponse
-      //var instance = new Manticoresearch.DeleteResponse();
-      //expect(instance).to.be.a(Manticoresearch.DeleteResponse);
-    });
-
-    it('should have the property index (base name: "_index")', function() {
-      // uncomment below and update the code to test the property index
-      //var instance = new Manticoresearch.DeleteResponse();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property deleted (base name: "deleted")', function() {
-      // uncomment below and update the code to test the property deleted
-      //var instance = new Manticoresearch.DeleteResponse();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property id (base name: "_id")', function() {
-      // uncomment below and update the code to test the property id
-      //var instance = new Manticoresearch.DeleteResponse();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property result (base name: "result")', function() {
-      // uncomment below and update the code to test the property result
-      //var instance = new Manticoresearch.DeleteResponse();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/EqualsFilter.spec.js b/out/manticoresearch-javascript-actual/test/model/EqualsFilter.spec.js
deleted file mode 100644
index 17273fe..0000000
--- a/out/manticoresearch-javascript-actual/test/model/EqualsFilter.spec.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.EqualsFilter();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('EqualsFilter', function() {
-    it('should create an instance of EqualsFilter', function() {
-      // uncomment below and update the code to test EqualsFilter
-      //var instance = new Manticoresearch.EqualsFilter();
-      //expect(instance).to.be.a(Manticoresearch.EqualsFilter);
-    });
-
-    it('should have the property field (base name: "field")', function() {
-      // uncomment below and update the code to test the property field
-      //var instance = new Manticoresearch.EqualsFilter();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property value (base name: "value")', function() {
-      // uncomment below and update the code to test the property value
-      //var instance = new Manticoresearch.EqualsFilter();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/ErrorResponse.spec.js b/out/manticoresearch-javascript-actual/test/model/ErrorResponse.spec.js
deleted file mode 100644
index b1b67ee..0000000
--- a/out/manticoresearch-javascript-actual/test/model/ErrorResponse.spec.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.ErrorResponse();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('ErrorResponse', function() {
-    it('should create an instance of ErrorResponse', function() {
-      // uncomment below and update the code to test ErrorResponse
-      //var instance = new Manticoresearch.ErrorResponse();
-      //expect(instance).to.be.a(Manticoresearch.ErrorResponse);
-    });
-
-    it('should have the property error (base name: "error")', function() {
-      // uncomment below and update the code to test the property error
-      //var instance = new Manticoresearch.ErrorResponse();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property status (base name: "status")', function() {
-      // uncomment below and update the code to test the property status
-      //var instance = new Manticoresearch.ErrorResponse();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/Facet.spec.js b/out/manticoresearch-javascript-actual/test/model/Facet.spec.js
deleted file mode 100644
index 6e60f20..0000000
--- a/out/manticoresearch-javascript-actual/test/model/Facet.spec.js
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.Facet();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('Facet', function() {
-    it('should create an instance of Facet', function() {
-      // uncomment below and update the code to test Facet
-      //var instance = new Manticoresearch.Facet();
-      //expect(instance).to.be.a(Manticoresearch.Facet);
-    });
-
-    it('should have the property attr (base name: "attr")', function() {
-      // uncomment below and update the code to test the property attr
-      //var instance = new Manticoresearch.Facet();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property alias (base name: "alias")', function() {
-      // uncomment below and update the code to test the property alias
-      //var instance = new Manticoresearch.Facet();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property limit (base name: "limit")', function() {
-      // uncomment below and update the code to test the property limit
-      //var instance = new Manticoresearch.Facet();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/FilterBoolean.spec.js b/out/manticoresearch-javascript-actual/test/model/FilterBoolean.spec.js
deleted file mode 100644
index 23cec09..0000000
--- a/out/manticoresearch-javascript-actual/test/model/FilterBoolean.spec.js
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.FilterBoolean();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('FilterBoolean', function() {
-    it('should create an instance of FilterBoolean', function() {
-      // uncomment below and update the code to test FilterBoolean
-      //var instance = new Manticoresearch.FilterBoolean();
-      //expect(instance).to.be.a(Manticoresearch.FilterBoolean);
-    });
-
-    it('should have the property filterField (base name: "filter_field")', function() {
-      // uncomment below and update the code to test the property filterField
-      //var instance = new Manticoresearch.FilterBoolean();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property operation (base name: "operation")', function() {
-      // uncomment below and update the code to test the property operation
-      //var instance = new Manticoresearch.FilterBoolean();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property filterValue (base name: "filter_value")', function() {
-      // uncomment below and update the code to test the property filterValue
-      //var instance = new Manticoresearch.FilterBoolean();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/FilterNumber.spec.js b/out/manticoresearch-javascript-actual/test/model/FilterNumber.spec.js
deleted file mode 100644
index 583f16e..0000000
--- a/out/manticoresearch-javascript-actual/test/model/FilterNumber.spec.js
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.FilterNumber();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('FilterNumber', function() {
-    it('should create an instance of FilterNumber', function() {
-      // uncomment below and update the code to test FilterNumber
-      //var instance = new Manticoresearch.FilterNumber();
-      //expect(instance).to.be.a(Manticoresearch.FilterNumber);
-    });
-
-    it('should have the property filterField (base name: "filter_field")', function() {
-      // uncomment below and update the code to test the property filterField
-      //var instance = new Manticoresearch.FilterNumber();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property operation (base name: "operation")', function() {
-      // uncomment below and update the code to test the property operation
-      //var instance = new Manticoresearch.FilterNumber();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property filterValue (base name: "filter_value")', function() {
-      // uncomment below and update the code to test the property filterValue
-      //var instance = new Manticoresearch.FilterNumber();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/FilterString.spec.js b/out/manticoresearch-javascript-actual/test/model/FilterString.spec.js
deleted file mode 100644
index 7847dba..0000000
--- a/out/manticoresearch-javascript-actual/test/model/FilterString.spec.js
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.FilterString();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('FilterString', function() {
-    it('should create an instance of FilterString', function() {
-      // uncomment below and update the code to test FilterString
-      //var instance = new Manticoresearch.FilterString();
-      //expect(instance).to.be.a(Manticoresearch.FilterString);
-    });
-
-    it('should have the property filterField (base name: "filter_field")', function() {
-      // uncomment below and update the code to test the property filterField
-      //var instance = new Manticoresearch.FilterString();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property operation (base name: "operation")', function() {
-      // uncomment below and update the code to test the property operation
-      //var instance = new Manticoresearch.FilterString();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property filterValue (base name: "filter_value")', function() {
-      // uncomment below and update the code to test the property filterValue
-      //var instance = new Manticoresearch.FilterString();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/GeoDistanceFilter.spec.js b/out/manticoresearch-javascript-actual/test/model/GeoDistanceFilter.spec.js
deleted file mode 100644
index 95d4440..0000000
--- a/out/manticoresearch-javascript-actual/test/model/GeoDistanceFilter.spec.js
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.GeoDistanceFilter();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('GeoDistanceFilter', function() {
-    it('should create an instance of GeoDistanceFilter', function() {
-      // uncomment below and update the code to test GeoDistanceFilter
-      //var instance = new Manticoresearch.GeoDistanceFilter();
-      //expect(instance).to.be.a(Manticoresearch.GeoDistanceFilter);
-    });
-
-    it('should have the property locationAnchor (base name: "location_anchor")', function() {
-      // uncomment below and update the code to test the property locationAnchor
-      //var instance = new Manticoresearch.GeoDistanceFilter();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property locationSource (base name: "location_source")', function() {
-      // uncomment below and update the code to test the property locationSource
-      //var instance = new Manticoresearch.GeoDistanceFilter();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property distanceType (base name: "distance_type")', function() {
-      // uncomment below and update the code to test the property distanceType
-      //var instance = new Manticoresearch.GeoDistanceFilter();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property distance (base name: "distance")', function() {
-      // uncomment below and update the code to test the property distance
-      //var instance = new Manticoresearch.GeoDistanceFilter();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/GeoDistanceFilterLocationAnchor.spec.js b/out/manticoresearch-javascript-actual/test/model/GeoDistanceFilterLocationAnchor.spec.js
deleted file mode 100644
index 4bde8f2..0000000
--- a/out/manticoresearch-javascript-actual/test/model/GeoDistanceFilterLocationAnchor.spec.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.GeoDistanceFilterLocationAnchor();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('GeoDistanceFilterLocationAnchor', function() {
-    it('should create an instance of GeoDistanceFilterLocationAnchor', function() {
-      // uncomment below and update the code to test GeoDistanceFilterLocationAnchor
-      //var instance = new Manticoresearch.GeoDistanceFilterLocationAnchor();
-      //expect(instance).to.be.a(Manticoresearch.GeoDistanceFilterLocationAnchor);
-    });
-
-    it('should have the property lat (base name: "lat")', function() {
-      // uncomment below and update the code to test the property lat
-      //var instance = new Manticoresearch.GeoDistanceFilterLocationAnchor();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property lon (base name: "lon")', function() {
-      // uncomment below and update the code to test the property lon
-      //var instance = new Manticoresearch.GeoDistanceFilterLocationAnchor();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/Highlight.spec.js b/out/manticoresearch-javascript-actual/test/model/Highlight.spec.js
deleted file mode 100644
index 2617cbf..0000000
--- a/out/manticoresearch-javascript-actual/test/model/Highlight.spec.js
+++ /dev/null
@@ -1,186 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.Highlight();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('Highlight', function() {
-    it('should create an instance of Highlight', function() {
-      // uncomment below and update the code to test Highlight
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be.a(Manticoresearch.Highlight);
-    });
-
-    it('should have the property fieldnames (base name: "fieldnames")', function() {
-      // uncomment below and update the code to test the property fieldnames
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property fields (base name: "fields")', function() {
-      // uncomment below and update the code to test the property fields
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property encoder (base name: "encoder")', function() {
-      // uncomment below and update the code to test the property encoder
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property highlightQuery (base name: "highlight_query")', function() {
-      // uncomment below and update the code to test the property highlightQuery
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property preTags (base name: "pre_tags")', function() {
-      // uncomment below and update the code to test the property preTags
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property postTags (base name: "post_tags")', function() {
-      // uncomment below and update the code to test the property postTags
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property noMatchSize (base name: "no_match_size")', function() {
-      // uncomment below and update the code to test the property noMatchSize
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property fragmentSize (base name: "fragment_size")', function() {
-      // uncomment below and update the code to test the property fragmentSize
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property numberOfFragments (base name: "number_of_fragments")', function() {
-      // uncomment below and update the code to test the property numberOfFragments
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property limit (base name: "limit")', function() {
-      // uncomment below and update the code to test the property limit
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property limitWords (base name: "limit_words")', function() {
-      // uncomment below and update the code to test the property limitWords
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property limitSnippets (base name: "limit_snippets")', function() {
-      // uncomment below and update the code to test the property limitSnippets
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property limitsPerField (base name: "limits_per_field")', function() {
-      // uncomment below and update the code to test the property limitsPerField
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property useBoundaries (base name: "use_boundaries")', function() {
-      // uncomment below and update the code to test the property useBoundaries
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property forceAllWords (base name: "force_all_words")', function() {
-      // uncomment below and update the code to test the property forceAllWords
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property allowEmpty (base name: "allow_empty")', function() {
-      // uncomment below and update the code to test the property allowEmpty
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property emitZones (base name: "emit_zones")', function() {
-      // uncomment below and update the code to test the property emitZones
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property forceSnippets (base name: "force_snippets")', function() {
-      // uncomment below and update the code to test the property forceSnippets
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property around (base name: "around")', function() {
-      // uncomment below and update the code to test the property around
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property startSnippetId (base name: "start_snippet_id")', function() {
-      // uncomment below and update the code to test the property startSnippetId
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property htmlStripMode (base name: "html_strip_mode")', function() {
-      // uncomment below and update the code to test the property htmlStripMode
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property snippetBoundary (base name: "snippet_boundary")', function() {
-      // uncomment below and update the code to test the property snippetBoundary
-      //var instance = new Manticoresearch.Highlight();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/HighlightField.spec.js b/out/manticoresearch-javascript-actual/test/model/HighlightField.spec.js
deleted file mode 100644
index d847073..0000000
--- a/out/manticoresearch-javascript-actual/test/model/HighlightField.spec.js
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.HighlightField();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('HighlightField', function() {
-    it('should create an instance of HighlightField', function() {
-      // uncomment below and update the code to test HighlightField
-      //var instance = new Manticoresearch.HighlightField();
-      //expect(instance).to.be.a(Manticoresearch.HighlightField);
-    });
-
-    it('should have the property name (base name: "name")', function() {
-      // uncomment below and update the code to test the property name
-      //var instance = new Manticoresearch.HighlightField();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property limit (base name: "limit")', function() {
-      // uncomment below and update the code to test the property limit
-      //var instance = new Manticoresearch.HighlightField();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property limitWords (base name: "limit_words")', function() {
-      // uncomment below and update the code to test the property limitWords
-      //var instance = new Manticoresearch.HighlightField();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property limitSnippets (base name: "limit_snippets")', function() {
-      // uncomment below and update the code to test the property limitSnippets
-      //var instance = new Manticoresearch.HighlightField();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/InFilter.spec.js b/out/manticoresearch-javascript-actual/test/model/InFilter.spec.js
deleted file mode 100644
index 9898899..0000000
--- a/out/manticoresearch-javascript-actual/test/model/InFilter.spec.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.InFilter();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('InFilter', function() {
-    it('should create an instance of InFilter', function() {
-      // uncomment below and update the code to test InFilter
-      //var instance = new Manticoresearch.InFilter();
-      //expect(instance).to.be.a(Manticoresearch.InFilter);
-    });
-
-    it('should have the property field (base name: "field")', function() {
-      // uncomment below and update the code to test the property field
-      //var instance = new Manticoresearch.InFilter();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property values (base name: "values")', function() {
-      // uncomment below and update the code to test the property values
-      //var instance = new Manticoresearch.InFilter();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/InsertDocumentRequest.spec.js b/out/manticoresearch-javascript-actual/test/model/InsertDocumentRequest.spec.js
deleted file mode 100644
index 350ad55..0000000
--- a/out/manticoresearch-javascript-actual/test/model/InsertDocumentRequest.spec.js
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.InsertDocumentRequest();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('InsertDocumentRequest', function() {
-    it('should create an instance of InsertDocumentRequest', function() {
-      // uncomment below and update the code to test InsertDocumentRequest
-      //var instance = new Manticoresearch.InsertDocumentRequest();
-      //expect(instance).to.be.a(Manticoresearch.InsertDocumentRequest);
-    });
-
-    it('should have the property index (base name: "index")', function() {
-      // uncomment below and update the code to test the property index
-      //var instance = new Manticoresearch.InsertDocumentRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property cluster (base name: "cluster")', function() {
-      // uncomment below and update the code to test the property cluster
-      //var instance = new Manticoresearch.InsertDocumentRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property id (base name: "id")', function() {
-      // uncomment below and update the code to test the property id
-      //var instance = new Manticoresearch.InsertDocumentRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property doc (base name: "doc")', function() {
-      // uncomment below and update the code to test the property doc
-      //var instance = new Manticoresearch.InsertDocumentRequest();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/MatchFilter.spec.js b/out/manticoresearch-javascript-actual/test/model/MatchFilter.spec.js
deleted file mode 100644
index 5cf7a13..0000000
--- a/out/manticoresearch-javascript-actual/test/model/MatchFilter.spec.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.MatchFilter();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('MatchFilter', function() {
-    it('should create an instance of MatchFilter', function() {
-      // uncomment below and update the code to test MatchFilter
-      //var instance = new Manticoresearch.MatchFilter();
-      //expect(instance).to.be.a(Manticoresearch.MatchFilter);
-    });
-
-    it('should have the property queryString (base name: "query_string")', function() {
-      // uncomment below and update the code to test the property queryString
-      //var instance = new Manticoresearch.MatchFilter();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property queryFields (base name: "query_fields")', function() {
-      // uncomment below and update the code to test the property queryFields
-      //var instance = new Manticoresearch.MatchFilter();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/MatchOp.spec.js b/out/manticoresearch-javascript-actual/test/model/MatchOp.spec.js
deleted file mode 100644
index acedd0d..0000000
--- a/out/manticoresearch-javascript-actual/test/model/MatchOp.spec.js
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.MatchOp();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('MatchOp', function() {
-    it('should create an instance of MatchOp', function() {
-      // uncomment below and update the code to test MatchOp
-      //var instance = new Manticoresearch.MatchOp();
-      //expect(instance).to.be.a(Manticoresearch.MatchOp);
-    });
-
-    it('should have the property queryInfo (base name: "query_info")', function() {
-      // uncomment below and update the code to test the property queryInfo
-      //var instance = new Manticoresearch.MatchOp();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/MatchOpFilter.spec.js b/out/manticoresearch-javascript-actual/test/model/MatchOpFilter.spec.js
deleted file mode 100644
index ac1cabf..0000000
--- a/out/manticoresearch-javascript-actual/test/model/MatchOpFilter.spec.js
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.MatchOpFilter();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('MatchOpFilter', function() {
-    it('should create an instance of MatchOpFilter', function() {
-      // uncomment below and update the code to test MatchOpFilter
-      //var instance = new Manticoresearch.MatchOpFilter();
-      //expect(instance).to.be.a(Manticoresearch.MatchOpFilter);
-    });
-
-    it('should have the property queryString (base name: "query_string")', function() {
-      // uncomment below and update the code to test the property queryString
-      //var instance = new Manticoresearch.MatchOpFilter();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property queryFields (base name: "query_fields")', function() {
-      // uncomment below and update the code to test the property queryFields
-      //var instance = new Manticoresearch.MatchOpFilter();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property operator (base name: "operator")', function() {
-      // uncomment below and update the code to test the property operator
-      //var instance = new Manticoresearch.MatchOpFilter();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/MatchPhraseFilter.spec.js b/out/manticoresearch-javascript-actual/test/model/MatchPhraseFilter.spec.js
deleted file mode 100644
index c562528..0000000
--- a/out/manticoresearch-javascript-actual/test/model/MatchPhraseFilter.spec.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.MatchPhraseFilter();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('MatchPhraseFilter', function() {
-    it('should create an instance of MatchPhraseFilter', function() {
-      // uncomment below and update the code to test MatchPhraseFilter
-      //var instance = new Manticoresearch.MatchPhraseFilter();
-      //expect(instance).to.be.a(Manticoresearch.MatchPhraseFilter);
-    });
-
-    it('should have the property queryPhrase (base name: "query_phrase")', function() {
-      // uncomment below and update the code to test the property queryPhrase
-      //var instance = new Manticoresearch.MatchPhraseFilter();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property queryFields (base name: "query_fields")', function() {
-      // uncomment below and update the code to test the property queryFields
-      //var instance = new Manticoresearch.MatchPhraseFilter();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/NotFilterBoolean.spec.js b/out/manticoresearch-javascript-actual/test/model/NotFilterBoolean.spec.js
deleted file mode 100644
index d3588d4..0000000
--- a/out/manticoresearch-javascript-actual/test/model/NotFilterBoolean.spec.js
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.NotFilterBoolean();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('NotFilterBoolean', function() {
-    it('should create an instance of NotFilterBoolean', function() {
-      // uncomment below and update the code to test NotFilterBoolean
-      //var instance = new Manticoresearch.NotFilterBoolean();
-      //expect(instance).to.be.a(Manticoresearch.NotFilterBoolean);
-    });
-
-    it('should have the property filterField (base name: "filter_field")', function() {
-      // uncomment below and update the code to test the property filterField
-      //var instance = new Manticoresearch.NotFilterBoolean();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property operation (base name: "operation")', function() {
-      // uncomment below and update the code to test the property operation
-      //var instance = new Manticoresearch.NotFilterBoolean();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property filterValue (base name: "filter_value")', function() {
-      // uncomment below and update the code to test the property filterValue
-      //var instance = new Manticoresearch.NotFilterBoolean();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/NotFilterNumber.spec.js b/out/manticoresearch-javascript-actual/test/model/NotFilterNumber.spec.js
deleted file mode 100644
index d2ed4e6..0000000
--- a/out/manticoresearch-javascript-actual/test/model/NotFilterNumber.spec.js
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.NotFilterNumber();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('NotFilterNumber', function() {
-    it('should create an instance of NotFilterNumber', function() {
-      // uncomment below and update the code to test NotFilterNumber
-      //var instance = new Manticoresearch.NotFilterNumber();
-      //expect(instance).to.be.a(Manticoresearch.NotFilterNumber);
-    });
-
-    it('should have the property filterField (base name: "filter_field")', function() {
-      // uncomment below and update the code to test the property filterField
-      //var instance = new Manticoresearch.NotFilterNumber();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property operation (base name: "operation")', function() {
-      // uncomment below and update the code to test the property operation
-      //var instance = new Manticoresearch.NotFilterNumber();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property filterValue (base name: "filter_value")', function() {
-      // uncomment below and update the code to test the property filterValue
-      //var instance = new Manticoresearch.NotFilterNumber();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/NotFilterString.spec.js b/out/manticoresearch-javascript-actual/test/model/NotFilterString.spec.js
deleted file mode 100644
index 1b7e933..0000000
--- a/out/manticoresearch-javascript-actual/test/model/NotFilterString.spec.js
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.NotFilterString();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('NotFilterString', function() {
-    it('should create an instance of NotFilterString', function() {
-      // uncomment below and update the code to test NotFilterString
-      //var instance = new Manticoresearch.NotFilterString();
-      //expect(instance).to.be.a(Manticoresearch.NotFilterString);
-    });
-
-    it('should have the property filterField (base name: "filter_field")', function() {
-      // uncomment below and update the code to test the property filterField
-      //var instance = new Manticoresearch.NotFilterString();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property operation (base name: "operation")', function() {
-      // uncomment below and update the code to test the property operation
-      //var instance = new Manticoresearch.NotFilterString();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property filterValue (base name: "filter_value")', function() {
-      // uncomment below and update the code to test the property filterValue
-      //var instance = new Manticoresearch.NotFilterString();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/PercolateRequest.spec.js b/out/manticoresearch-javascript-actual/test/model/PercolateRequest.spec.js
deleted file mode 100644
index 8668977..0000000
--- a/out/manticoresearch-javascript-actual/test/model/PercolateRequest.spec.js
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.PercolateRequest();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('PercolateRequest', function() {
-    it('should create an instance of PercolateRequest', function() {
-      // uncomment below and update the code to test PercolateRequest
-      //var instance = new Manticoresearch.PercolateRequest();
-      //expect(instance).to.be.a(Manticoresearch.PercolateRequest);
-    });
-
-    it('should have the property query (base name: "query")', function() {
-      // uncomment below and update the code to test the property query
-      //var instance = new Manticoresearch.PercolateRequest();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/PercolateRequestQuery.spec.js b/out/manticoresearch-javascript-actual/test/model/PercolateRequestQuery.spec.js
deleted file mode 100644
index ddf9be7..0000000
--- a/out/manticoresearch-javascript-actual/test/model/PercolateRequestQuery.spec.js
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.PercolateRequestQuery();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('PercolateRequestQuery', function() {
-    it('should create an instance of PercolateRequestQuery', function() {
-      // uncomment below and update the code to test PercolateRequestQuery
-      //var instance = new Manticoresearch.PercolateRequestQuery();
-      //expect(instance).to.be.a(Manticoresearch.PercolateRequestQuery);
-    });
-
-    it('should have the property percolate (base name: "percolate")', function() {
-      // uncomment below and update the code to test the property percolate
-      //var instance = new Manticoresearch.PercolateRequestQuery();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/QueryFilter.spec.js b/out/manticoresearch-javascript-actual/test/model/QueryFilter.spec.js
deleted file mode 100644
index 5cb241e..0000000
--- a/out/manticoresearch-javascript-actual/test/model/QueryFilter.spec.js
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.QueryFilter();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('QueryFilter', function() {
-    it('should create an instance of QueryFilter', function() {
-      // uncomment below and update the code to test QueryFilter
-      //var instance = new Manticoresearch.QueryFilter();
-      //expect(instance).to.be.a(Manticoresearch.QueryFilter);
-    });
-
-    it('should have the property queryString (base name: "query_string")', function() {
-      // uncomment below and update the code to test the property queryString
-      //var instance = new Manticoresearch.QueryFilter();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/RangeFilter.spec.js b/out/manticoresearch-javascript-actual/test/model/RangeFilter.spec.js
deleted file mode 100644
index 833f4f3..0000000
--- a/out/manticoresearch-javascript-actual/test/model/RangeFilter.spec.js
+++ /dev/null
@@ -1,84 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.RangeFilter();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('RangeFilter', function() {
-    it('should create an instance of RangeFilter', function() {
-      // uncomment below and update the code to test RangeFilter
-      //var instance = new Manticoresearch.RangeFilter();
-      //expect(instance).to.be.a(Manticoresearch.RangeFilter);
-    });
-
-    it('should have the property field (base name: "field")', function() {
-      // uncomment below and update the code to test the property field
-      //var instance = new Manticoresearch.RangeFilter();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property lte (base name: "lte")', function() {
-      // uncomment below and update the code to test the property lte
-      //var instance = new Manticoresearch.RangeFilter();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property gte (base name: "gte")', function() {
-      // uncomment below and update the code to test the property gte
-      //var instance = new Manticoresearch.RangeFilter();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property lt (base name: "lt")', function() {
-      // uncomment below and update the code to test the property lt
-      //var instance = new Manticoresearch.RangeFilter();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property gt (base name: "gt")', function() {
-      // uncomment below and update the code to test the property gt
-      //var instance = new Manticoresearch.RangeFilter();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/SearchRequest.spec.js b/out/manticoresearch-javascript-actual/test/model/SearchRequest.spec.js
deleted file mode 100644
index 5c4d2d0..0000000
--- a/out/manticoresearch-javascript-actual/test/model/SearchRequest.spec.js
+++ /dev/null
@@ -1,144 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.SearchRequest();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('SearchRequest', function() {
-    it('should create an instance of SearchRequest', function() {
-      // uncomment below and update the code to test SearchRequest
-      //var instance = new Manticoresearch.SearchRequest();
-      //expect(instance).to.be.a(Manticoresearch.SearchRequest);
-    });
-
-    it('should have the property index (base name: "index")', function() {
-      // uncomment below and update the code to test the property index
-      //var instance = new Manticoresearch.SearchRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property query (base name: "query")', function() {
-      // uncomment below and update the code to test the property query
-      //var instance = new Manticoresearch.SearchRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property fulltextFilter (base name: "fulltext_filter")', function() {
-      // uncomment below and update the code to test the property fulltextFilter
-      //var instance = new Manticoresearch.SearchRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property attrFilter (base name: "attr_filter")', function() {
-      // uncomment below and update the code to test the property attrFilter
-      //var instance = new Manticoresearch.SearchRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property limit (base name: "limit")', function() {
-      // uncomment below and update the code to test the property limit
-      //var instance = new Manticoresearch.SearchRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property offset (base name: "offset")', function() {
-      // uncomment below and update the code to test the property offset
-      //var instance = new Manticoresearch.SearchRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property maxMatches (base name: "max_matches")', function() {
-      // uncomment below and update the code to test the property maxMatches
-      //var instance = new Manticoresearch.SearchRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property sort (base name: "sort")', function() {
-      // uncomment below and update the code to test the property sort
-      //var instance = new Manticoresearch.SearchRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property aggs (base name: "aggs")', function() {
-      // uncomment below and update the code to test the property aggs
-      //var instance = new Manticoresearch.SearchRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property expressions (base name: "expressions")', function() {
-      // uncomment below and update the code to test the property expressions
-      //var instance = new Manticoresearch.SearchRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property highlight (base name: "highlight")', function() {
-      // uncomment below and update the code to test the property highlight
-      //var instance = new Manticoresearch.SearchRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property source (base name: "source")', function() {
-      // uncomment below and update the code to test the property source
-      //var instance = new Manticoresearch.SearchRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property options (base name: "options")', function() {
-      // uncomment below and update the code to test the property options
-      //var instance = new Manticoresearch.SearchRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property profile (base name: "profile")', function() {
-      // uncomment below and update the code to test the property profile
-      //var instance = new Manticoresearch.SearchRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property trackScores (base name: "track_scores")', function() {
-      // uncomment below and update the code to test the property trackScores
-      //var instance = new Manticoresearch.SearchRequest();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/SearchResponse.spec.js b/out/manticoresearch-javascript-actual/test/model/SearchResponse.spec.js
deleted file mode 100644
index a87c287..0000000
--- a/out/manticoresearch-javascript-actual/test/model/SearchResponse.spec.js
+++ /dev/null
@@ -1,90 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.SearchResponse();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('SearchResponse', function() {
-    it('should create an instance of SearchResponse', function() {
-      // uncomment below and update the code to test SearchResponse
-      //var instance = new Manticoresearch.SearchResponse();
-      //expect(instance).to.be.a(Manticoresearch.SearchResponse);
-    });
-
-    it('should have the property took (base name: "took")', function() {
-      // uncomment below and update the code to test the property took
-      //var instance = new Manticoresearch.SearchResponse();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property timedOut (base name: "timed_out")', function() {
-      // uncomment below and update the code to test the property timedOut
-      //var instance = new Manticoresearch.SearchResponse();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property aggregations (base name: "aggregations")', function() {
-      // uncomment below and update the code to test the property aggregations
-      //var instance = new Manticoresearch.SearchResponse();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property hits (base name: "hits")', function() {
-      // uncomment below and update the code to test the property hits
-      //var instance = new Manticoresearch.SearchResponse();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property profile (base name: "profile")', function() {
-      // uncomment below and update the code to test the property profile
-      //var instance = new Manticoresearch.SearchResponse();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property warning (base name: "warning")', function() {
-      // uncomment below and update the code to test the property warning
-      //var instance = new Manticoresearch.SearchResponse();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/SearchResponseHits.spec.js b/out/manticoresearch-javascript-actual/test/model/SearchResponseHits.spec.js
deleted file mode 100644
index daa6b04..0000000
--- a/out/manticoresearch-javascript-actual/test/model/SearchResponseHits.spec.js
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.SearchResponseHits();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('SearchResponseHits', function() {
-    it('should create an instance of SearchResponseHits', function() {
-      // uncomment below and update the code to test SearchResponseHits
-      //var instance = new Manticoresearch.SearchResponseHits();
-      //expect(instance).to.be.a(Manticoresearch.SearchResponseHits);
-    });
-
-    it('should have the property maxScore (base name: "max_score")', function() {
-      // uncomment below and update the code to test the property maxScore
-      //var instance = new Manticoresearch.SearchResponseHits();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property total (base name: "total")', function() {
-      // uncomment below and update the code to test the property total
-      //var instance = new Manticoresearch.SearchResponseHits();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property totalRelation (base name: "total_relation")', function() {
-      // uncomment below and update the code to test the property totalRelation
-      //var instance = new Manticoresearch.SearchResponseHits();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property hits (base name: "hits")', function() {
-      // uncomment below and update the code to test the property hits
-      //var instance = new Manticoresearch.SearchResponseHits();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/SortMVA.spec.js b/out/manticoresearch-javascript-actual/test/model/SortMVA.spec.js
deleted file mode 100644
index f6d95bf..0000000
--- a/out/manticoresearch-javascript-actual/test/model/SortMVA.spec.js
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.SortMVA();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('SortMVA', function() {
-    it('should create an instance of SortMVA', function() {
-      // uncomment below and update the code to test SortMVA
-      //var instance = new Manticoresearch.SortMVA();
-      //expect(instance).to.be.a(Manticoresearch.SortMVA);
-    });
-
-    it('should have the property attr (base name: "attr")', function() {
-      // uncomment below and update the code to test the property attr
-      //var instance = new Manticoresearch.SortMVA();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property order (base name: "order")', function() {
-      // uncomment below and update the code to test the property order
-      //var instance = new Manticoresearch.SortMVA();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property mode (base name: "mode")', function() {
-      // uncomment below and update the code to test the property mode
-      //var instance = new Manticoresearch.SortMVA();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/SortMultiple.spec.js b/out/manticoresearch-javascript-actual/test/model/SortMultiple.spec.js
deleted file mode 100644
index 48de82e..0000000
--- a/out/manticoresearch-javascript-actual/test/model/SortMultiple.spec.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.SortMultiple();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('SortMultiple', function() {
-    it('should create an instance of SortMultiple', function() {
-      // uncomment below and update the code to test SortMultiple
-      //var instance = new Manticoresearch.SortMultiple();
-      //expect(instance).to.be.a(Manticoresearch.SortMultiple);
-    });
-
-    it('should have the property attrs (base name: "attrs")', function() {
-      // uncomment below and update the code to test the property attrs
-      //var instance = new Manticoresearch.SortMultiple();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property replace (base name: "replace")', function() {
-      // uncomment below and update the code to test the property replace
-      //var instance = new Manticoresearch.SortMultiple();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/SortOrder.spec.js b/out/manticoresearch-javascript-actual/test/model/SortOrder.spec.js
deleted file mode 100644
index 2b71c5c..0000000
--- a/out/manticoresearch-javascript-actual/test/model/SortOrder.spec.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.SortOrder();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('SortOrder', function() {
-    it('should create an instance of SortOrder', function() {
-      // uncomment below and update the code to test SortOrder
-      //var instance = new Manticoresearch.SortOrder();
-      //expect(instance).to.be.a(Manticoresearch.SortOrder);
-    });
-
-    it('should have the property attr (base name: "attr")', function() {
-      // uncomment below and update the code to test the property attr
-      //var instance = new Manticoresearch.SortOrder();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property order (base name: "order")', function() {
-      // uncomment below and update the code to test the property order
-      //var instance = new Manticoresearch.SortOrder();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/SourceByRules.spec.js b/out/manticoresearch-javascript-actual/test/model/SourceByRules.spec.js
deleted file mode 100644
index ebda08b..0000000
--- a/out/manticoresearch-javascript-actual/test/model/SourceByRules.spec.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.SourceByRules();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('SourceByRules', function() {
-    it('should create an instance of SourceByRules', function() {
-      // uncomment below and update the code to test SourceByRules
-      //var instance = new Manticoresearch.SourceByRules();
-      //expect(instance).to.be.a(Manticoresearch.SourceByRules);
-    });
-
-    it('should have the property includes (base name: "includes")', function() {
-      // uncomment below and update the code to test the property includes
-      //var instance = new Manticoresearch.SourceByRules();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property excludes (base name: "excludes")', function() {
-      // uncomment below and update the code to test the property excludes
-      //var instance = new Manticoresearch.SourceByRules();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/SuccessResponse.spec.js b/out/manticoresearch-javascript-actual/test/model/SuccessResponse.spec.js
deleted file mode 100644
index 462a0b1..0000000
--- a/out/manticoresearch-javascript-actual/test/model/SuccessResponse.spec.js
+++ /dev/null
@@ -1,84 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.SuccessResponse();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('SuccessResponse', function() {
-    it('should create an instance of SuccessResponse', function() {
-      // uncomment below and update the code to test SuccessResponse
-      //var instance = new Manticoresearch.SuccessResponse();
-      //expect(instance).to.be.a(Manticoresearch.SuccessResponse);
-    });
-
-    it('should have the property index (base name: "_index")', function() {
-      // uncomment below and update the code to test the property index
-      //var instance = new Manticoresearch.SuccessResponse();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property id (base name: "_id")', function() {
-      // uncomment below and update the code to test the property id
-      //var instance = new Manticoresearch.SuccessResponse();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property created (base name: "created")', function() {
-      // uncomment below and update the code to test the property created
-      //var instance = new Manticoresearch.SuccessResponse();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property result (base name: "result")', function() {
-      // uncomment below and update the code to test the property result
-      //var instance = new Manticoresearch.SuccessResponse();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property found (base name: "found")', function() {
-      // uncomment below and update the code to test the property found
-      //var instance = new Manticoresearch.SuccessResponse();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/UpdateDocumentRequest.spec.js b/out/manticoresearch-javascript-actual/test/model/UpdateDocumentRequest.spec.js
deleted file mode 100644
index 40beab8..0000000
--- a/out/manticoresearch-javascript-actual/test/model/UpdateDocumentRequest.spec.js
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.UpdateDocumentRequest();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('UpdateDocumentRequest', function() {
-    it('should create an instance of UpdateDocumentRequest', function() {
-      // uncomment below and update the code to test UpdateDocumentRequest
-      //var instance = new Manticoresearch.UpdateDocumentRequest();
-      //expect(instance).to.be.a(Manticoresearch.UpdateDocumentRequest);
-    });
-
-    it('should have the property index (base name: "index")', function() {
-      // uncomment below and update the code to test the property index
-      //var instance = new Manticoresearch.UpdateDocumentRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property doc (base name: "doc")', function() {
-      // uncomment below and update the code to test the property doc
-      //var instance = new Manticoresearch.UpdateDocumentRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property id (base name: "id")', function() {
-      // uncomment below and update the code to test the property id
-      //var instance = new Manticoresearch.UpdateDocumentRequest();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property query (base name: "query")', function() {
-      // uncomment below and update the code to test the property query
-      //var instance = new Manticoresearch.UpdateDocumentRequest();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-javascript-actual/test/model/UpdateResponse.spec.js b/out/manticoresearch-javascript-actual/test/model/UpdateResponse.spec.js
deleted file mode 100644
index 2d53932..0000000
--- a/out/manticoresearch-javascript-actual/test/model/UpdateResponse.spec.js
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-(function(root, factory) {
-  if (typeof define === 'function' && define.amd) {
-    // AMD.
-    define(['expect.js', process.cwd()+'/src/index'], factory);
-  } else if (typeof module === 'object' && module.exports) {
-    // CommonJS-like environments that support module.exports, like Node.
-    factory(require('expect.js'), require(process.cwd()+'/src/index'));
-  } else {
-    // Browser globals (root is window)
-    factory(root.expect, root.Manticoresearch);
-  }
-}(this, function(expect, Manticoresearch) {
-  'use strict';
-
-  var instance;
-
-  beforeEach(function() {
-    // create a new instance
-    //instance = new Manticoresearch.UpdateResponse();
-  });
-
-  var getProperty = function(object, getter, property) {
-    // Use getter method if present; otherwise, get the property directly.
-    if (typeof object[getter] === 'function')
-      return object[getter]();
-    else
-      return object[property];
-  }
-
-  var setProperty = function(object, setter, property, value) {
-    // Use setter method if present; otherwise, set the property directly.
-    if (typeof object[setter] === 'function')
-      object[setter](value);
-    else
-      object[property] = value;
-  }
-
-  describe('UpdateResponse', function() {
-    it('should create an instance of UpdateResponse', function() {
-      // uncomment below and update the code to test UpdateResponse
-      //var instance = new Manticoresearch.UpdateResponse();
-      //expect(instance).to.be.a(Manticoresearch.UpdateResponse);
-    });
-
-    it('should have the property index (base name: "_index")', function() {
-      // uncomment below and update the code to test the property index
-      //var instance = new Manticoresearch.UpdateResponse();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property updated (base name: "updated")', function() {
-      // uncomment below and update the code to test the property updated
-      //var instance = new Manticoresearch.UpdateResponse();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property id (base name: "_id")', function() {
-      // uncomment below and update the code to test the property id
-      //var instance = new Manticoresearch.UpdateResponse();
-      //expect(instance).to.be();
-    });
-
-    it('should have the property result (base name: "result")', function() {
-      // uncomment below and update the code to test the property result
-      //var instance = new Manticoresearch.UpdateResponse();
-      //expect(instance).to.be();
-    });
-
-  });
-
-}));
diff --git a/out/manticoresearch-python-actual/.github/workflows/publish.yml b/out/manticoresearch-python-actual/.github/workflows/publish.yml
deleted file mode 100644
index ef2344d..0000000
--- a/out/manticoresearch-python-actual/.github/workflows/publish.yml
+++ /dev/null
@@ -1,26 +0,0 @@
-name: Publishing
-
-on:
-  push:
-    branches-ignore: [ master ]
-
-jobs:
-  publish:
-    name: Publish the client to the public registry
-    runs-on: ubuntu-latest
-    env:
-      NPMRC: ${{ secrets.NPMRC }}
-
-    steps:
-    - uses: actions/checkout@v4
-    - name: Use Python 3.8
-      uses: actions/setup-python@v4
-      with:
-        python-version: '3,8'
-    - run: |
-        echo $PYPIRC > ~/.pypirc
-        python -m pip install --user --upgrade twine
-        python setup.py sdist bdist_wheel
-        python -m twine upload dist/*
-
-
diff --git a/out/manticoresearch-python-actual/.github/workflows/test.yml b/out/manticoresearch-python-actual/.github/workflows/test.yml
deleted file mode 100755
index 80b8866..0000000
--- a/out/manticoresearch-python-actual/.github/workflows/test.yml
+++ /dev/null
@@ -1,33 +0,0 @@
-name: Testing
-
-on:
-  push:
-    branches: [ master ]
-  pull_request:
-    branches: [ master ]
-
-jobs:
-  test:
-    name: Running basic tests
-    runs-on: ubuntu-22.04
-    strategy:
-      matrix:
-        python-version: ["3.10", "3.12"]
-
-    services:
-      manticoresearch-manticore:
-        image: manticoresearch/manticore:dev
-        ports:
-          - 9408:9308
-
-    steps:
-    - uses: actions/checkout@v4
-    - name: Use Python ${{ matrix.python-version }}
-      uses: actions/setup-python@v4
-      with:
-        python-version: ${{ matrix.python-version }}
-    - run: |
-        apt update && apt -y install python3-pip
-        python3 -m pip install -e .
-        python3 test/test.py
-        
\ No newline at end of file
diff --git a/out/manticoresearch-python-actual/.gitignore b/out/manticoresearch-python-actual/.gitignore
deleted file mode 100644
index 43995bd..0000000
--- a/out/manticoresearch-python-actual/.gitignore
+++ /dev/null
@@ -1,66 +0,0 @@
-# Byte-compiled / optimized / DLL files
-__pycache__/
-*.py[cod]
-*$py.class
-
-# C extensions
-*.so
-
-# Distribution / packaging
-.Python
-env/
-build/
-develop-eggs/
-dist/
-downloads/
-eggs/
-.eggs/
-lib/
-lib64/
-parts/
-sdist/
-var/
-*.egg-info/
-.installed.cfg
-*.egg
-
-# PyInstaller
-#  Usually these files are written by a python script from a template
-#  before PyInstaller builds the exe, so as to inject date/other infos into it.
-*.manifest
-*.spec
-
-# Installer logs
-pip-log.txt
-pip-delete-this-directory.txt
-
-# Unit test / coverage reports
-htmlcov/
-.tox/
-.coverage
-.coverage.*
-.cache
-nosetests.xml
-coverage.xml
-*,cover
-.hypothesis/
-venv/
-.venv/
-.python-version
-.pytest_cache
-
-# Translations
-*.mo
-*.pot
-
-# Django stuff:
-*.log
-
-# Sphinx documentation
-docs/_build/
-
-# PyBuilder
-target/
-
-#Ipython Notebook
-.ipynb_checkpoints
diff --git a/out/manticoresearch-python-actual/.gitlab-ci.yml b/out/manticoresearch-python-actual/.gitlab-ci.yml
deleted file mode 100644
index 6f861ac..0000000
--- a/out/manticoresearch-python-actual/.gitlab-ci.yml
+++ /dev/null
@@ -1,33 +0,0 @@
-# ref: https://docs.gitlab.com/ee/ci/README.html
-
-stages:
-  - test
-
-.nosetest:
-  stage: test
-  script:
-   - pip install -r requirements.txt
-   - pip install -r test-requirements.txt
-   - pytest --cov=manticoresearch
-
-nosetest-2.7:
-  extends: .nosetest
-  image: python:2.7-alpine
-nosetest-3.3:
-  extends: .nosetest
-  image: python:3.3-alpine
-nosetest-3.4:
-  extends: .nosetest
-  image: python:3.4-alpine
-nosetest-3.5:
-  extends: .nosetest
-  image: python:3.5-alpine
-nosetest-3.6:
-  extends: .nosetest
-  image: python:3.6-alpine
-nosetest-3.7:
-  extends: .nosetest
-  image: python:3.7-alpine
-nosetest-3.8:
-  extends: .nosetest
-  image: python:3.8-alpine
diff --git a/out/manticoresearch-python-actual/.openapi-generator-ignore b/out/manticoresearch-python-actual/.openapi-generator-ignore
deleted file mode 100644
index 7484ee5..0000000
--- a/out/manticoresearch-python-actual/.openapi-generator-ignore
+++ /dev/null
@@ -1,23 +0,0 @@
-# OpenAPI Generator Ignore
-# Generated by openapi-generator https://github.com/openapitools/openapi-generator
-
-# Use this file to prevent files from being overwritten by the generator.
-# The patterns follow closely to .gitignore or .dockerignore.
-
-# As an example, the C# client generator defines ApiClient.cs.
-# You can make changes and tell OpenAPI Generator to ignore just this file by uncommenting the following line:
-#ApiClient.cs
-
-# You can match any string of characters against a directory, file or extension with a single asterisk (*):
-#foo/*/qux
-# The above matches foo/bar/qux and foo/baz/qux, but not foo/bar/baz/qux
-
-# You can recursively match patterns against a directory, file or extension with a double asterisk (**):
-#foo/**/qux
-# This matches foo/bar/qux, foo/baz/qux, and foo/bar/baz/qux
-
-# You can also negate patterns with an exclamation (!).
-# For example, you can ignore all files in a docs folder with the file extension .md:
-#docs/*.md
-# Then explicitly reverse the ignore rule for a single file:
-#!docs/README.md
diff --git a/out/manticoresearch-python-actual/.openapi-generator/FILES b/out/manticoresearch-python-actual/.openapi-generator/FILES
deleted file mode 100644
index cd9b1b6..0000000
--- a/out/manticoresearch-python-actual/.openapi-generator/FILES
+++ /dev/null
@@ -1,166 +0,0 @@
-.gitignore
-.gitlab-ci.yml
-.openapi-generator-ignore
-.travis.yml
-README.md
-docs/Aggregation.md
-docs/AggregationSortInnerValue.md
-docs/AggregationTerms.md
-docs/AttrFilter.md
-docs/BoolFilter.md
-docs/BulkResponse.md
-docs/DeleteDocumentRequest.md
-docs/DeleteResponse.md
-docs/EqualsFilter.md
-docs/ErrorResponse.md
-docs/Facet.md
-docs/FilterBoolean.md
-docs/FilterNumber.md
-docs/FilterString.md
-docs/FulltextFilter.md
-docs/GeoDistanceFilter.md
-docs/GeoDistanceFilterLocationAnchor.md
-docs/Highlight.md
-docs/HighlightField.md
-docs/InFilter.md
-docs/IndexApi.md
-docs/InsertDocumentRequest.md
-docs/MatchFilter.md
-docs/MatchOp.md
-docs/MatchOpFilter.md
-docs/MatchPhraseFilter.md
-docs/NotFilterBoolean.md
-docs/NotFilterNumber.md
-docs/NotFilterString.md
-docs/Option.md
-docs/PercolateRequest.md
-docs/PercolateRequestQuery.md
-docs/QueryFilter.md
-docs/RangeFilter.md
-docs/SearchApi.md
-docs/SearchRequest.md
-docs/SearchResponse.md
-docs/SearchResponseHits.md
-docs/SortMVA.md
-docs/SortMultiple.md
-docs/SortOrder.md
-docs/SourceByRules.md
-docs/SourceMultiple.md
-docs/SqlResponse.md
-docs/SuccessResponse.md
-docs/UpdateDocumentRequest.md
-docs/UpdateResponse.md
-docs/UtilsApi.md
-git_push.sh
-manticoresearch/__init__.py
-manticoresearch/api/__init__.py
-manticoresearch/api/index_api.py
-manticoresearch/api/search_api.py
-manticoresearch/api/utils_api.py
-manticoresearch/api_client.py
-manticoresearch/apis/__init__.py
-manticoresearch/configuration.py
-manticoresearch/exceptions.py
-manticoresearch/model/__init__.py
-manticoresearch/model/aggregation.py
-manticoresearch/model/aggregation_sort_inner_value.py
-manticoresearch/model/aggregation_terms.py
-manticoresearch/model/attr_filter.py
-manticoresearch/model/bool_filter.py
-manticoresearch/model/bulk_response.py
-manticoresearch/model/delete_document_request.py
-manticoresearch/model/delete_response.py
-manticoresearch/model/equals_filter.py
-manticoresearch/model/error_response.py
-manticoresearch/model/facet.py
-manticoresearch/model/filter_boolean.py
-manticoresearch/model/filter_number.py
-manticoresearch/model/filter_string.py
-manticoresearch/model/fulltext_filter.py
-manticoresearch/model/geo_distance_filter.py
-manticoresearch/model/geo_distance_filter_location_anchor.py
-manticoresearch/model/highlight.py
-manticoresearch/model/highlight_field.py
-manticoresearch/model/in_filter.py
-manticoresearch/model/insert_document_request.py
-manticoresearch/model/match_filter.py
-manticoresearch/model/match_op.py
-manticoresearch/model/match_op_filter.py
-manticoresearch/model/match_phrase_filter.py
-manticoresearch/model/not_filter_boolean.py
-manticoresearch/model/not_filter_number.py
-manticoresearch/model/not_filter_string.py
-manticoresearch/model/option.py
-manticoresearch/model/percolate_request.py
-manticoresearch/model/percolate_request_query.py
-manticoresearch/model/query_filter.py
-manticoresearch/model/range_filter.py
-manticoresearch/model/search_request.py
-manticoresearch/model/search_response.py
-manticoresearch/model/search_response_hits.py
-manticoresearch/model/sort_multiple.py
-manticoresearch/model/sort_mva.py
-manticoresearch/model/sort_order.py
-manticoresearch/model/source_by_rules.py
-manticoresearch/model/source_multiple.py
-manticoresearch/model/sql_response.py
-manticoresearch/model/success_response.py
-manticoresearch/model/update_document_request.py
-manticoresearch/model/update_response.py
-manticoresearch/model_utils.py
-manticoresearch/models/__init__.py
-manticoresearch/rest.py
-requirements.txt
-setup.cfg
-setup.py
-test-requirements.txt
-test/__init__.py
-test/test_aggregation.py
-test/test_aggregation_sort_inner_value.py
-test/test_aggregation_terms.py
-test/test_attr_filter.py
-test/test_bool_filter.py
-test/test_bulk_response.py
-test/test_delete_document_request.py
-test/test_delete_response.py
-test/test_equals_filter.py
-test/test_error_response.py
-test/test_facet.py
-test/test_filter_boolean.py
-test/test_filter_number.py
-test/test_filter_string.py
-test/test_fulltext_filter.py
-test/test_geo_distance_filter.py
-test/test_geo_distance_filter_location_anchor.py
-test/test_highlight.py
-test/test_highlight_field.py
-test/test_in_filter.py
-test/test_index_api.py
-test/test_insert_document_request.py
-test/test_match_filter.py
-test/test_match_op.py
-test/test_match_op_filter.py
-test/test_match_phrase_filter.py
-test/test_not_filter_boolean.py
-test/test_not_filter_number.py
-test/test_not_filter_string.py
-test/test_option.py
-test/test_percolate_request.py
-test/test_percolate_request_query.py
-test/test_query_filter.py
-test/test_range_filter.py
-test/test_search_api.py
-test/test_search_request.py
-test/test_search_response.py
-test/test_search_response_hits.py
-test/test_sort_multiple.py
-test/test_sort_mva.py
-test/test_sort_order.py
-test/test_source_by_rules.py
-test/test_source_multiple.py
-test/test_sql_response.py
-test/test_success_response.py
-test/test_update_document_request.py
-test/test_update_response.py
-test/test_utils_api.py
-tox.ini
diff --git a/out/manticoresearch-python-actual/.openapi-generator/VERSION b/out/manticoresearch-python-actual/.openapi-generator/VERSION
deleted file mode 100644
index 358e78e..0000000
--- a/out/manticoresearch-python-actual/.openapi-generator/VERSION
+++ /dev/null
@@ -1 +0,0 @@
-6.1.0
\ No newline at end of file
diff --git a/out/manticoresearch-python-actual/.travis.yml b/out/manticoresearch-python-actual/.travis.yml
deleted file mode 100644
index 98b01f1..0000000
--- a/out/manticoresearch-python-actual/.travis.yml
+++ /dev/null
@@ -1,17 +0,0 @@
-# ref: https://docs.travis-ci.com/user/languages/python
-language: python
-python:
-  - "2.7"
-  - "3.2"
-  - "3.3"
-  - "3.4"
-  - "3.5"
-  - "3.6"
-  - "3.7"
-  - "3.8"
-# command to install dependencies
-install:
-  - "pip install -r requirements.txt"
-  - "pip install -r test-requirements.txt"
-# command to run tests
-script: pytest --cov=manticoresearch
diff --git a/out/manticoresearch-python-actual/LICENSE.txt b/out/manticoresearch-python-actual/LICENSE.txt
deleted file mode 100755
index b5084aa..0000000
--- a/out/manticoresearch-python-actual/LICENSE.txt
+++ /dev/null
@@ -1,21 +0,0 @@
-The MIT License (MIT)
-
-Copyright (c) 2020-2023, Manticore Software LTD 
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
\ No newline at end of file
diff --git a/out/manticoresearch-python-actual/README.md b/out/manticoresearch-python-actual/README.md
deleted file mode 100644
index 3ce7421..0000000
--- a/out/manticoresearch-python-actual/README.md
+++ /dev/null
@@ -1,179 +0,0 @@
-# Manticore Python client
-
-Сlient for Manticore Search.
-
-❗ WARNING: this is a development version of the client. The latest release's readme is https://github.com/manticoresoftware/manticoresearch-python/tree/4.0.0
-
-## Requirements.
-
-Minimum Manticore Search version is >= 2.5.1 with HTTP protocol enabled.
-
-| Manticore Search  | manticoresearch-python   |     Python    |
-| ----------------- | ------------------------ | ------------- |
-| >= 6.2.0          | 4.0.0                    | >= 3.4        |
-| >= 6.2.0          | 3.3.1                    | >= 3.4        |
-| >= 4.2.1          | 2.0.x                    | >= 3.4        |
-| >= 4.0.2  < 4.2.1 | 1.0.6                    | >= 3.4        |
-| >= 2.5.1  < 4.0.2 | 1.0.5                    | >= 2.7        |
-
-
-## Installation & Usage
-### pip install
-Install the `manticoresearch` package with [pip](http://pypi.python.org)
-
-```sh
-pip install manticoresearch
-```
-
-Then import the package:
-```python
-import manticoresearch
-```
-
-### Setuptools
-
-Install via [Setuptools](http://pypi.python.org/pypi/setuptools).
-
-```sh
-python setup.py install --user
-```
-(or `sudo python setup.py install` to install the package for all users)
-
-Then import the package:
-```python
-import manticoresearch
-```
-
-## Getting Started
-
-Please follow the [installation procedure](#installation--usage) and then run the following:
-
-```python
-from __future__ import print_function
-
-import time
-import manticoresearch
-from manticoresearch import *
-from manticoresearch.rest import ApiException
-from pprint import pprint
-
-# Defining the host is optional and defaults to http://127.0.0.1:9308
-# See configuration.py for a list of all supported configuration parameters.
-configuration = manticoresearch.Configuration(
-    host = "http://127.0.0.1:9308"
-)
-
-
-
-# Enter a context with an instance of the API client
-with manticoresearch.ApiClient(configuration) as api_client:
-    # Create an instance of the IndexApi API class
-    api_instance = manticoresearch.IndexApi(api_client)
-    body = "["'{\"insert\": {\"index\": \"test\", \"id\": 1, \"doc\": {\"title\": \"Title 1\"}}},\\n{\"insert\": {\"index\": \"test\", \"id\": 2, \"doc\": {\"title\": \"Title 2\"}}}'"]" # str | 
-
-    try:
-        # Bulk index operations
-        api_response = api_instance.bulk(body)
-        pprint(api_response)
-    except ApiException as e:
-        print("Exception when calling IndexApi->bulk: %s\n" % e)
-    
-    
-    # Create an instance of the Search API class
-    api_instance = manticoresearch.SearchApi(api_client)
-
-    # Create SearchRequest
-    search_request = SearchRequest()
-    search_request.index='test'
-    search_request.fullltext_filter=QueryFilter('Title 1') 
-    
-    # The example passes only required values which don't have defaults set
-    try:
-        # Perform a search
-        api_response = api_instance.search(search_request)
-        pprint(api_response)
-    except manticoresearch.ApiException as e:
-        print("Exception when calling SearchApi->search: %s\n" % e)
-```
-
-# Documentation
-
-
-Full documentation on the API Endpoints and Models used is available in  [docs](https://github.com/manticoresoftware/manticoresearch-python/tree/master/docs) folder as listed below.
-
-Manticore Search server documentation: https://manual.manticoresearch.com.
-
-## Documentation for API Endpoints
-
-All URIs are relative to *http://127.0.0.1:9308*
-
-Class | Method | HTTP request | Description
------------- | ------------- | ------------- | -------------
-*IndexApi* | [**bulk**](docs/IndexApi.md#bulk) | **POST** /bulk | Bulk index operations
-*IndexApi* | [**delete**](docs/IndexApi.md#delete) | **POST** /delete | Delete a document in an index
-*IndexApi* | [**insert**](docs/IndexApi.md#insert) | **POST** /insert | Create a new document in an index
-*IndexApi* | [**replace**](docs/IndexApi.md#replace) | **POST** /replace | Replace new document in an index
-*IndexApi* | [**update**](docs/IndexApi.md#update) | **POST** /update | Update a document in an index
-*SearchApi* | [**percolate**](docs/SearchApi.md#percolate) | **POST** /pq/{index}/search | Perform reverse search on a percolate index
-*SearchApi* | [**search**](docs/SearchApi.md#search) | **POST** /search | Performs a search on an index
-*UtilsApi* | [**sql**](docs/UtilsApi.md#sql) | **POST** /sql | Perform SQL requests
-
-
-## Documentation For Models
-
- - [Aggregation](docs/Aggregation.md)
- - [AggregationSortInnerValue](docs/AggregationSortInnerValue.md)
- - [AggregationTerms](docs/AggregationTerms.md)
- - [AttrFilter](docs/AttrFilter.md)
- - [BoolFilter](docs/BoolFilter.md)
- - [BulkResponse](docs/BulkResponse.md)
- - [DeleteDocumentRequest](docs/DeleteDocumentRequest.md)
- - [DeleteResponse](docs/DeleteResponse.md)
- - [EqualsFilter](docs/EqualsFilter.md)
- - [ErrorResponse](docs/ErrorResponse.md)
- - [Facet](docs/Facet.md)
- - [FilterBoolean](docs/FilterBoolean.md)
- - [FilterNumber](docs/FilterNumber.md)
- - [FilterString](docs/FilterString.md)
- - [FulltextFilter](docs/FulltextFilter.md)
- - [GeoDistanceFilter](docs/GeoDistanceFilter.md)
- - [GeoDistanceFilterLocationAnchor](docs/GeoDistanceFilterLocationAnchor.md)
- - [Highlight](docs/Highlight.md)
- - [HighlightField](docs/HighlightField.md)
- - [InFilter](docs/InFilter.md)
- - [InsertDocumentRequest](docs/InsertDocumentRequest.md)
- - [MatchFilter](docs/MatchFilter.md)
- - [MatchOp](docs/MatchOp.md)
- - [MatchOpFilter](docs/MatchOpFilter.md)
- - [MatchPhraseFilter](docs/MatchPhraseFilter.md)
- - [NotFilterBoolean](docs/NotFilterBoolean.md)
- - [NotFilterNumber](docs/NotFilterNumber.md)
- - [NotFilterString](docs/NotFilterString.md)
- - [Option](docs/Option.md)
- - [PercolateRequest](docs/PercolateRequest.md)
- - [PercolateRequestQuery](docs/PercolateRequestQuery.md)
- - [QueryFilter](docs/QueryFilter.md)
- - [RangeFilter](docs/RangeFilter.md)
- - [SearchRequest](docs/SearchRequest.md)
- - [SearchResponse](docs/SearchResponse.md)
- - [SearchResponseHits](docs/SearchResponseHits.md)
- - [SortMVA](docs/SortMVA.md)
- - [SortMultiple](docs/SortMultiple.md)
- - [SortOrder](docs/SortOrder.md)
- - [SourceByRules](docs/SourceByRules.md)
- - [SourceMultiple](docs/SourceMultiple.md)
- - [SqlResponse](docs/SqlResponse.md)
- - [SuccessResponse](docs/SuccessResponse.md)
- - [UpdateDocumentRequest](docs/UpdateDocumentRequest.md)
- - [UpdateResponse](docs/UpdateResponse.md)
-
-
-## Documentation For Authorization
-
- All endpoints do not require authorization.
-
-## Author
-
-info@manticoresearch.com
-
-
diff --git a/out/manticoresearch-python-actual/docs/Aggregation.md b/out/manticoresearch-python-actual/docs/Aggregation.md
deleted file mode 100644
index 7a16e00..0000000
--- a/out/manticoresearch-python-actual/docs/Aggregation.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# Aggregation
-
-Aggregation Alias
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**terms** | [**AggregationTerms**](AggregationTerms.md) |  | [optional] 
-**sort** | [**[{str: (AggregationSortInnerValue,)}]**](AggregationSortInnerValue.md) |  | [optional] 
-
-[[Using in search requests]](SearchApi.md#Aggregation)
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/AggregationSortInnerValue.md b/out/manticoresearch-python-actual/docs/AggregationSortInnerValue.md
deleted file mode 100644
index a9a09ca..0000000
--- a/out/manticoresearch-python-actual/docs/AggregationSortInnerValue.md
+++ /dev/null
@@ -1,11 +0,0 @@
-# AggregationSortInnerValue
-
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**order** | **str** |  | [optional] 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/AggregationTerms.md b/out/manticoresearch-python-actual/docs/AggregationTerms.md
deleted file mode 100644
index dbd5b4b..0000000
--- a/out/manticoresearch-python-actual/docs/AggregationTerms.md
+++ /dev/null
@@ -1,12 +0,0 @@
-# AggregationTerms
-
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**field** | **str** | Attribute Name to Aggregate | [optional] 
-**size** | **int** | Maximum Number of Buckets in the Result | [optional] 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/AttrFilter.md b/out/manticoresearch-python-actual/docs/AttrFilter.md
deleted file mode 100644
index 721347c..0000000
--- a/out/manticoresearch-python-actual/docs/AttrFilter.md
+++ /dev/null
@@ -1,10 +0,0 @@
-# AttrFilter
-
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/BoolFilter.md b/out/manticoresearch-python-actual/docs/BoolFilter.md
deleted file mode 100644
index 8360fb1..0000000
--- a/out/manticoresearch-python-actual/docs/BoolFilter.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# BoolFilter
-
-Boolean attribute filter
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**should** | **[{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]** |  | [optional] 
-**must** | **[{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]** |  | [optional] 
-**must_not** | **[{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]** |  | [optional] 
-
-[[Using in search requests]](SearchRequest.md#BoolFilter)
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/BulkResponse.md b/out/manticoresearch-python-actual/docs/BulkResponse.md
deleted file mode 100644
index 82250ce..0000000
--- a/out/manticoresearch-python-actual/docs/BulkResponse.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# BulkResponse
-
-Success bulk response
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**items** | **{str: (bool, date, datetime, dict, float, int, list, str, none_type)}** |  | [optional] 
-**errors** | **bool** |  | [optional] 
-**error** | **str** |  | [optional] 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/DeleteDocumentRequest.md b/out/manticoresearch-python-actual/docs/DeleteDocumentRequest.md
deleted file mode 100644
index ed57aca..0000000
--- a/out/manticoresearch-python-actual/docs/DeleteDocumentRequest.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# DeleteDocumentRequest
-
-Payload for delete request. Documents can be deleted either one by one by specifying the document id or by providing a query object. For more information see  [Delete API](https://manual.manticoresearch.com/Deleting_documents) 
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**index** | **str** | Index name | 
-**cluster** | **str** | cluster name | [optional] 
-**id** | **int** | Document ID | [optional] 
-**query** | **{str: (bool, date, datetime, dict, float, int, list, str, none_type)}** | Query tree object | [optional] 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/DeleteResponse.md b/out/manticoresearch-python-actual/docs/DeleteResponse.md
deleted file mode 100644
index e3ac69a..0000000
--- a/out/manticoresearch-python-actual/docs/DeleteResponse.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# DeleteResponse
-
-Success response
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**index** | **str** |  | [optional] 
-**deleted** | **int** |  | [optional] 
-**id** | **int** |  | [optional] 
-**result** | **str** |  | [optional] 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/EqualsFilter.md b/out/manticoresearch-python-actual/docs/EqualsFilter.md
deleted file mode 100644
index 609d7fc..0000000
--- a/out/manticoresearch-python-actual/docs/EqualsFilter.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# EqualsFilter
-
-Equals attribute filter
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**field** | **str** |  | 
-**value** | **{str: (bool, date, datetime, dict, float, int, list, str, none_type)}** |  | 
-
-[[Using in search requests]](SearchRequest.md#EqualsFilter)
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/ErrorResponse.md b/out/manticoresearch-python-actual/docs/ErrorResponse.md
deleted file mode 100644
index f8f275c..0000000
--- a/out/manticoresearch-python-actual/docs/ErrorResponse.md
+++ /dev/null
@@ -1,13 +0,0 @@
-# ErrorResponse
-
-Error response
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**error** | **{str: (bool, date, datetime, dict, float, int, list, str, none_type)}** |  | 
-**status** | **int** |  | 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/Facet.md b/out/manticoresearch-python-actual/docs/Facet.md
deleted file mode 100644
index bb68c41..0000000
--- a/out/manticoresearch-python-actual/docs/Facet.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# Facet
-
-Query FACET expression
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**attr** | **str** | The name of an attribute to facet | 
-**alias** | **str** | Facet alias | [optional] 
-**limit** | **int** | The number of facet values to return | [optional] 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/FilterBoolean.md b/out/manticoresearch-python-actual/docs/FilterBoolean.md
deleted file mode 100644
index 21b313e..0000000
--- a/out/manticoresearch-python-actual/docs/FilterBoolean.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# FilterBoolean
-
-Query filter
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**filter_field** | **str** |  | 
-**operation** | **str** |  | 
-**filter_value** | **bool** |  | 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/FilterNumber.md b/out/manticoresearch-python-actual/docs/FilterNumber.md
deleted file mode 100644
index 9c9ba5f..0000000
--- a/out/manticoresearch-python-actual/docs/FilterNumber.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# FilterNumber
-
-Query filter
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**filter_field** | **str** |  | 
-**operation** | **str** |  | 
-**filter_value** | **float** |  | 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/FilterString.md b/out/manticoresearch-python-actual/docs/FilterString.md
deleted file mode 100644
index b227514..0000000
--- a/out/manticoresearch-python-actual/docs/FilterString.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# FilterString
-
-Query filter
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**filter_field** | **str** |  | 
-**operation** | **str** |  | 
-**filter_value** | **str** |  | 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/FulltextFilter.md b/out/manticoresearch-python-actual/docs/FulltextFilter.md
deleted file mode 100644
index e0ff36e..0000000
--- a/out/manticoresearch-python-actual/docs/FulltextFilter.md
+++ /dev/null
@@ -1,10 +0,0 @@
-# FulltextFilter
-
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/GeoDistanceFilter.md b/out/manticoresearch-python-actual/docs/GeoDistanceFilter.md
deleted file mode 100644
index 90bcf96..0000000
--- a/out/manticoresearch-python-actual/docs/GeoDistanceFilter.md
+++ /dev/null
@@ -1,16 +0,0 @@
-# GeoDistanceFilter
-
-Geo distance attribute filter
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**location_anchor** | [**GeoDistanceFilterLocationAnchor**](GeoDistanceFilterLocationAnchor.md) |  | [optional] 
-**location_source** | **str** | Attribute containing latitude and longitude data | [optional] 
-**distance_type** | **str** |  | [optional] 
-**distance** | **str** |  | [optional] 
-
-[[Using in search requests]](SearchRequest.md#GeoDistanceFilter)
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/GeoDistanceFilterLocationAnchor.md b/out/manticoresearch-python-actual/docs/GeoDistanceFilterLocationAnchor.md
deleted file mode 100644
index ba31ab1..0000000
--- a/out/manticoresearch-python-actual/docs/GeoDistanceFilterLocationAnchor.md
+++ /dev/null
@@ -1,13 +0,0 @@
-# GeoDistanceFilterLocationAnchor
-
-Geo pin point object
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**lat** | **float** | Geo latitude of pin point in degrees | [optional] 
-**lon** | **float** | Geo longitude pf pin point in degrees | [optional] 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/Highlight.md b/out/manticoresearch-python-actual/docs/Highlight.md
deleted file mode 100644
index f95a56c..0000000
--- a/out/manticoresearch-python-actual/docs/Highlight.md
+++ /dev/null
@@ -1,34 +0,0 @@
-# Highlight
-
-Query HIGHLIGHT expression
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**fieldnames** | **[str]** |  | [optional] 
-**fields** | [**[HighlightField]**](HighlightField.md) |  | [optional] 
-**encoder** | **str** |  | [optional] 
-**highlight_query** | **{str: (bool, date, datetime, dict, float, int, list, str, none_type)}, none_type** |  | [optional] 
-**pre_tags** | **str** |  | [optional] [default to "<strong>"]
-**post_tags** | **str** |  | [optional] [default to "</strong>"]
-**no_match_size** | **int** |  | [optional] 
-**fragment_size** | **int** |  | [optional] [default to 256]
-**number_of_fragments** | **int** |  | [optional] [default to 0]
-**limit** | **int** |  | [optional] [default to 256]
-**limit_words** | **int** |  | [optional] [default to 0]
-**limit_snippets** | **int** |  | [optional] [default to 0]
-**limits_per_field** | **bool** |  | [optional] [default to False]
-**use_boundaries** | **bool** |  | [optional] [default to False]
-**force_all_words** | **bool** |  | [optional] [default to False]
-**allow_empty** | **bool** |  | [optional] [default to False]
-**emit_zones** | **bool** |  | [optional] [default to False]
-**force_snippets** | **bool** |  | [optional] [default to False]
-**around** | **int** |  | [optional] [default to 5]
-**start_snippet_id** | **int** |  | [optional] [default to 1]
-**html_strip_mode** | **str** |  | [optional] 
-**snippet_boundary** | **str** |  | [optional] 
-
-[[Using in search requests]](SearchApi.md#Highlight)
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/HighlightField.md b/out/manticoresearch-python-actual/docs/HighlightField.md
deleted file mode 100644
index 44aa3ac..0000000
--- a/out/manticoresearch-python-actual/docs/HighlightField.md
+++ /dev/null
@@ -1,16 +0,0 @@
-# HighlightField
-
-Query Highlight field with options set
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**name** | **str** |  | 
-**limit** | **int** |  | [optional] [default to 256]
-**limit_words** | **int** |  | [optional] [default to 0]
-**limit_snippets** | **int** |  | [optional] [default to 0]
-
-[[Using in search requests]](SearchRequest.md#HighlightField)
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/InFilter.md b/out/manticoresearch-python-actual/docs/InFilter.md
deleted file mode 100644
index 78802fe..0000000
--- a/out/manticoresearch-python-actual/docs/InFilter.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# InFilter
-
-In attribute filter
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**field** | **str** |  | 
-**values** | **[{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]** |  | 
-
-[[Using in search requests]](SearchRequest.md#InFilter)
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/IndexApi.md b/out/manticoresearch-python-actual/docs/IndexApi.md
deleted file mode 100644
index 17432ab..0000000
--- a/out/manticoresearch-python-actual/docs/IndexApi.md
+++ /dev/null
@@ -1,525 +0,0 @@
-# manticoresearch.IndexApi
-
-All URIs are relative to *http://127.0.0.1:9308*
-
-Method | HTTP request | Description
-------------- | ------------- | -------------
-[**bulk**](IndexApi.md#bulk) | **POST** /bulk | Bulk index operations
-[**delete**](IndexApi.md#delete) | **POST** /delete | Delete a document in an index
-[**insert**](IndexApi.md#insert) | **POST** /insert | Create a new document in an index
-[**replace**](IndexApi.md#replace) | **POST** /replace | Replace new document in an index
-[**update**](IndexApi.md#update) | **POST** /update | Update a document in an index
-
-
-## **bulk**
-> BulkResponse bulk(body)
-
-Bulk index operations
-
-Sends multiple operatons like inserts, updates, replaces or deletes. 
-For each operation it's object must have same format as in their dedicated method. 
-The method expects a raw string as the batch in NDJSON.
- Each operation object needs to be serialized to 
- JSON and separated by endline (\n). 
- 
-  An example of raw input:
-  
-  ```
-  {"insert": {"index": "movies", "doc": {"plot": "A secret team goes to North Pole", "rating": 9.5, "language": [2, 3], "title": "This is an older movie", "lon": 51.99, "meta": {"keywords":["travel","ice"],"genre":["adventure"]}, "year": 1950, "lat": 60.4, "advise": "PG-13"}}}
-  \n
-  {"delete": {"index": "movies","id":700}}
-  ```
-  
-  Responds with an object telling whenever any errors occured and an array with status for each operation:
-  
-  ```
-  {
-    'items':
-    [
-      {
-        'update':{'_index':'products','_id':1,'result':'updated'}
-      },
-      {
-        'update':{'_index':'products','_id':2,'result':'updated'}
-      }
-    ],
-    'errors':false
-  }
-  ```
- 
-
-
-### Example
-
-```python
-import manticoresearch
-from manticoresearch.api import index_api
-from manticoresearch.model.bulk_response import BulkResponse
-from manticoresearch.model.error_response import ErrorResponse
-from pprint import pprint
-
-# Defining the host is optional and defaults to http://127.0.0.1:9308
-# See configuration.py for a list of all supported configuration parameters.
-configuration = manticoresearch.Configuration(
-    host = "http://127.0.0.1:9308"
-)
-
-
-# Enter a context with an instance of the API client
-with manticoresearch.ApiClient(configuration) as api_client:
-    # Create an instance of the API class
-    api_instance = index_api.IndexApi(api_client)
-
-    body = "["'{\"insert\": {\"index\": \"test\", \"id\": 1, \"doc\": {\"title\": \"Title 1\"}}},\\n{\"insert\": {\"index\": \"test\", \"id\": 2, \"doc\": {\"title\": \"Title 2\"}}}'"]" # str  
-
-    # example passing only required values which don't have defaults set
-    try:
-        # Bulk index operations
-        api_response = api_instance.bulk(body)
-        pprint(api_response)
-    except manticoresearch.ApiException as e:
-        print("Exception when calling IndexApi->bulk: %s\n" % e)
-
-
-```
-
-### Parameters
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **body** | **str**|  | 
-
-### Return type
-
-[**BulkResponse**](BulkResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
- - **Content-Type**: application/x-ndjson
- - **Accept**: application/json
-
-### HTTP response details
-| Status code | Description | Response headers |
-|-------------|-------------|------------------|
-**200** | item updated |  -  |
-**0** | error |  -  |
-
-[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
-
-## **delete**
-> DeleteResponse delete(delete_document_request)
-
-Delete a document in an index
-
-Delete one or several documents.
-The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a  match query, in which case multiple documents can be delete .
-Example of input to delete by id:
-
-  ```
-  {'index':'movies','id':100}
-  ```
-
-Example of input to delete using a query:
-
-  ```
-  {
-    'index':'movies',
-    'query':
-    {
-      'bool':
-      {
-        'must':
-        [
-          {'query_string':'new movie'}
-        ]
-      }
-    }
-  }
-  ```
-
-The match query has same syntax as in for searching.
-Responds with an object telling how many documents got deleted: 
-
-  ```
-  {'_index':'products','updated':1}
-  ```
-
-
-### Example
-
-```python
-import manticoresearch
-from manticoresearch.api import index_api
-from manticoresearch.model.delete_response import DeleteResponse
-from manticoresearch.model.error_response import ErrorResponse
-from manticoresearch.model.delete_document_request import DeleteDocumentRequest
-from pprint import pprint
-
-# Defining the host is optional and defaults to http://127.0.0.1:9308
-# See configuration.py for a list of all supported configuration parameters.
-configuration = manticoresearch.Configuration(
-    host = "http://127.0.0.1:9308"
-)
-
-
-# Enter a context with an instance of the API client
-with manticoresearch.ApiClient(configuration) as api_client:
-    # Create an instance of the API class
-    api_instance = index_api.IndexApi(api_client)
-
-    delete_document_request = DeleteDocumentRequest(
-        index="index_example",
-        cluster="cluster_example",
-        id=1,
-        query={},
-    ) # DeleteDocumentRequest  
-
-    # example passing only required values which don't have defaults set
-    try:
-        # Delete a document in an index
-        api_response = api_instance.delete(delete_document_request)
-        pprint(api_response)
-    except manticoresearch.ApiException as e:
-        print("Exception when calling IndexApi->delete: %s\n" % e)
-
-
-```
-
-### Parameters
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **delete_document_request** | [**DeleteDocumentRequest**](DeleteDocumentRequest.md)|  | 
-
-### Return type
-
-[**DeleteResponse**](DeleteResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
- - **Content-Type**: application/json
- - **Accept**: application/json
-
-### HTTP response details
-| Status code | Description | Response headers |
-|-------------|-------------|------------------|
-**200** | item updated |  -  |
-**0** | error |  -  |
-
-[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
-
-## **insert**
-> SuccessResponse insert(insert_document_request)
-
-Create a new document in an index
-
-Insert a document. 
-Expects an object like:
- 
-  ```
-  {
-    'index':'movies',
-    'id':701,
-    'doc':
-    {
-      'title':'This is an old movie',
-      'plot':'A secret team goes to North Pole',
-      'year':1950,
-      'rating':9.5,
-      'lat':60.4,
-      'lon':51.99,
-      'advise':'PG-13',
-      'meta':'{"keywords":{"travel","ice"},"genre":{"adventure"}}',
-      'language':[2,3]
-    }
-  }
-  ```
- 
-The document id can also be missing, in which case an autogenerated one will be used:
-         
-  ```
-  {
-    'index':'movies',
-    'doc':
-    {
-      'title':'This is a new movie',
-      'plot':'A secret team goes to North Pole',
-      'year':2020,
-      'rating':9.5,
-      'lat':60.4,
-      'lon':51.99,
-      'advise':'PG-13',
-      'meta':'{"keywords":{"travel","ice"},"genre":{"adventure"}}',
-      'language':[2,3]
-    }
-  }
-  ```
- 
-It responds with an object in format:
-  
-  ```
-  {'_index':'products','_id':701,'created':true,'result':'created','status':201}
-  ```
-
-
-### Example
-
-```python
-import manticoresearch
-from manticoresearch.api import index_api
-from manticoresearch.model.insert_document_request import InsertDocumentRequest
-from manticoresearch.model.error_response import ErrorResponse
-from manticoresearch.model.success_response import SuccessResponse
-from pprint import pprint
-
-# Defining the host is optional and defaults to http://127.0.0.1:9308
-# See configuration.py for a list of all supported configuration parameters.
-configuration = manticoresearch.Configuration(
-    host = "http://127.0.0.1:9308"
-)
-
-
-# Enter a context with an instance of the API client
-with manticoresearch.ApiClient(configuration) as api_client:
-    # Create an instance of the API class
-    api_instance = index_api.IndexApi(api_client)
-
-    insert_document_request = InsertDocumentRequest(
-        index="index_example",
-        cluster="cluster_example",
-        id=1,
-        doc={},
-    ) # InsertDocumentRequest  
-
-    # example passing only required values which don't have defaults set
-    try:
-        # Create a new document in an index
-        api_response = api_instance.insert(insert_document_request)
-        pprint(api_response)
-    except manticoresearch.ApiException as e:
-        print("Exception when calling IndexApi->insert: %s\n" % e)
-
-
-```
-
-### Parameters
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **insert_document_request** | [**InsertDocumentRequest**](InsertDocumentRequest.md)|  | 
-
-### Return type
-
-[**SuccessResponse**](SuccessResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
- - **Content-Type**: application/json
- - **Accept**: application/json
-
-### HTTP response details
-| Status code | Description | Response headers |
-|-------------|-------------|------------------|
-**200** | OK |  -  |
-**0** | error |  -  |
-
-[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
-
-## **replace**
-> SuccessResponse replace(insert_document_request)
-
-Replace new document in an index
-
-Replace an existing document. Input has same format as `insert` operation. <br/>
-Responds with an object in format: <br/>
-
-  ```
-  {'_index':'products','_id':1,'created':false,'result':'updated','status':200}
-  ```
-
-
-### Example
-
-```python
-import manticoresearch
-from manticoresearch.api import index_api
-from manticoresearch.model.insert_document_request import InsertDocumentRequest
-from manticoresearch.model.error_response import ErrorResponse
-from manticoresearch.model.success_response import SuccessResponse
-from pprint import pprint
-
-# Defining the host is optional and defaults to http://127.0.0.1:9308
-# See configuration.py for a list of all supported configuration parameters.
-configuration = manticoresearch.Configuration(
-    host = "http://127.0.0.1:9308"
-)
-
-
-# Enter a context with an instance of the API client
-with manticoresearch.ApiClient(configuration) as api_client:
-    # Create an instance of the API class
-    api_instance = index_api.IndexApi(api_client)
-
-    insert_document_request = InsertDocumentRequest(
-        index="index_example",
-        cluster="cluster_example",
-        id=1,
-        doc={},
-    ) # InsertDocumentRequest  
-
-    # example passing only required values which don't have defaults set
-    try:
-        # Replace new document in an index
-        api_response = api_instance.replace(insert_document_request)
-        pprint(api_response)
-    except manticoresearch.ApiException as e:
-        print("Exception when calling IndexApi->replace: %s\n" % e)
-
-
-```
-
-### Parameters
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **insert_document_request** | [**InsertDocumentRequest**](InsertDocumentRequest.md)|  | 
-
-### Return type
-
-[**SuccessResponse**](SuccessResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
- - **Content-Type**: application/json
- - **Accept**: application/json
-
-### HTTP response details
-| Status code | Description | Response headers |
-|-------------|-------------|------------------|
-**200** | OK |  -  |
-**0** | error |  -  |
-
-[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
-
-## **update**
-> UpdateResponse update(update_document_request)
-
-Update a document in an index
-
-Update one or several documents.
-The update can be made by passing the id or by using a match query in case multiple documents can be updated.  For example update a document using document id:
-
-  ```
-  {'index':'movies','doc':{'rating':9.49},'id':100}
-  ```
-
-And update by using a match query:
-
-  ```
-  {
-    'index':'movies',
-    'doc':{'rating':9.49},
-    'query':
-    {
-      'bool':
-      {
-        'must':
-        [
-          {'query_string':'new movie'}
-        ]
-      }
-    }
-  }
-  ``` 
-
-The match query has same syntax as for searching.
-Responds with an object that tells how many documents where updated in format: 
-
-  ```
-  {'_index':'products','updated':1}
-  ```
-
-
-### Example
-
-```python
-import manticoresearch
-from manticoresearch.api import index_api
-from manticoresearch.model.error_response import ErrorResponse
-from manticoresearch.model.update_response import UpdateResponse
-from manticoresearch.model.update_document_request import UpdateDocumentRequest
-from pprint import pprint
-
-# Defining the host is optional and defaults to http://127.0.0.1:9308
-# See configuration.py for a list of all supported configuration parameters.
-configuration = manticoresearch.Configuration(
-    host = "http://127.0.0.1:9308"
-)
-
-
-# Enter a context with an instance of the API client
-with manticoresearch.ApiClient(configuration) as api_client:
-    # Create an instance of the API class
-    api_instance = index_api.IndexApi(api_client)
-
-    update_document_request = UpdateDocumentRequest(
-        index="index_example",
-        doc={},
-        id=1,
-        query={},
-    ) # UpdateDocumentRequest  
-
-    # example passing only required values which don't have defaults set
-    try:
-        # Update a document in an index
-        api_response = api_instance.update(update_document_request)
-        pprint(api_response)
-    except manticoresearch.ApiException as e:
-        print("Exception when calling IndexApi->update: %s\n" % e)
-
-
-```
-
-### Parameters
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **update_document_request** | [**UpdateDocumentRequest**](UpdateDocumentRequest.md)|  | 
-
-### Return type
-
-[**UpdateResponse**](UpdateResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
- - **Content-Type**: application/json
- - **Accept**: application/json
-
-### HTTP response details
-| Status code | Description | Response headers |
-|-------------|-------------|------------------|
-**200** | item updated |  -  |
-**0** | error |  -  |
-
-[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-python-actual/docs/InsertDocumentRequest.md b/out/manticoresearch-python-actual/docs/InsertDocumentRequest.md
deleted file mode 100644
index 91ef62e..0000000
--- a/out/manticoresearch-python-actual/docs/InsertDocumentRequest.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# InsertDocumentRequest
-
-Object with document data. 
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**index** | **str** | Name of the index | 
-**cluster** | **str** | cluster name | [optional] 
-**id** | **int** | Document ID.  | [optional] 
-**doc** | **{str: (bool, date, datetime, dict, float, int, list, str, none_type)}** | Object with document data  | 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/MatchFilter.md b/out/manticoresearch-python-actual/docs/MatchFilter.md
deleted file mode 100644
index 07e5d0e..0000000
--- a/out/manticoresearch-python-actual/docs/MatchFilter.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# MatchFilter
-
-Query match filter
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**query_string** | **str** |  | [default to ""]
-**query_fields** | **str** |  | [default to "*"]
-
-[[Using in search requests]](SearchRequest.md#MatchFilter)
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/MatchOp.md b/out/manticoresearch-python-actual/docs/MatchOp.md
deleted file mode 100644
index 6fdae34..0000000
--- a/out/manticoresearch-python-actual/docs/MatchOp.md
+++ /dev/null
@@ -1,12 +0,0 @@
-# MatchOp
-
-Query match expression with logical operator
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**query_info** | **{str: (bool, date, datetime, dict, float, int, list, str, none_type)}** |  | 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/MatchOpFilter.md b/out/manticoresearch-python-actual/docs/MatchOpFilter.md
deleted file mode 100644
index 856b4f6..0000000
--- a/out/manticoresearch-python-actual/docs/MatchOpFilter.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# MatchOpFilter
-
-Query match expression
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**query_string** | **str** |  | 
-**query_fields** | **str** |  | 
-**operator** | **str** |  | 
-
-[[Using in search requests]](SearchRequest.md#MatchOpFilter)
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/MatchPhraseFilter.md b/out/manticoresearch-python-actual/docs/MatchPhraseFilter.md
deleted file mode 100644
index b864f77..0000000
--- a/out/manticoresearch-python-actual/docs/MatchPhraseFilter.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# MatchPhraseFilter
-
-Query match expression
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**query_phrase** | **str** |  | 
-**query_fields** | **str** |  | 
-
-[[Using in search requests]](SearchRequest.md#MatchPhraseFilter)
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/NotFilterBoolean.md b/out/manticoresearch-python-actual/docs/NotFilterBoolean.md
deleted file mode 100644
index db15fe1..0000000
--- a/out/manticoresearch-python-actual/docs/NotFilterBoolean.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# NotFilterBoolean
-
-Query filter
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**filter_field** | **str** |  | 
-**operation** | **str** |  | 
-**filter_value** | **bool** |  | 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/NotFilterNumber.md b/out/manticoresearch-python-actual/docs/NotFilterNumber.md
deleted file mode 100644
index d35ba8c..0000000
--- a/out/manticoresearch-python-actual/docs/NotFilterNumber.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# NotFilterNumber
-
-Query filter
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**filter_field** | **str** |  | 
-**operation** | **str** |  | 
-**filter_value** | **float** |  | 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/NotFilterString.md b/out/manticoresearch-python-actual/docs/NotFilterString.md
deleted file mode 100644
index 26cf05c..0000000
--- a/out/manticoresearch-python-actual/docs/NotFilterString.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# NotFilterString
-
-Query filter
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**filter_field** | **str** |  | 
-**operation** | **str** |  | 
-**filter_value** | **str** |  | 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/Option.md b/out/manticoresearch-python-actual/docs/Option.md
deleted file mode 100644
index cf25ce6..0000000
--- a/out/manticoresearch-python-actual/docs/Option.md
+++ /dev/null
@@ -1,11 +0,0 @@
-# Option
-
-Query OPTION expression
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/PercolateRequest.md b/out/manticoresearch-python-actual/docs/PercolateRequest.md
deleted file mode 100644
index 8fc2cfd..0000000
--- a/out/manticoresearch-python-actual/docs/PercolateRequest.md
+++ /dev/null
@@ -1,12 +0,0 @@
-# PercolateRequest
-
-Object with documents to percolate
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**query** | [**PercolateRequestQuery**](PercolateRequestQuery.md) |  | 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/PercolateRequestQuery.md b/out/manticoresearch-python-actual/docs/PercolateRequestQuery.md
deleted file mode 100644
index 3e789a7..0000000
--- a/out/manticoresearch-python-actual/docs/PercolateRequestQuery.md
+++ /dev/null
@@ -1,11 +0,0 @@
-# PercolateRequestQuery
-
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**percolate** | **{str: (bool, date, datetime, dict, float, int, list, str, none_type)}** |  | 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/QueryFilter.md b/out/manticoresearch-python-actual/docs/QueryFilter.md
deleted file mode 100644
index c75bc5c..0000000
--- a/out/manticoresearch-python-actual/docs/QueryFilter.md
+++ /dev/null
@@ -1,12 +0,0 @@
-# QueryFilter
-
-Query string filter
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**query_string** | **str** |  | 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/RangeFilter.md b/out/manticoresearch-python-actual/docs/RangeFilter.md
deleted file mode 100644
index 0d36b7c..0000000
--- a/out/manticoresearch-python-actual/docs/RangeFilter.md
+++ /dev/null
@@ -1,17 +0,0 @@
-# RangeFilter
-
-Range attribute filter
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**field** | **str** |  | 
-**lte** | **float, none_type** |  | [optional] 
-**gte** | **float, none_type** |  | [optional] 
-**lt** | **float, none_type** |  | [optional] 
-**gt** | **float, none_type** |  | [optional] 
-
-[[Using in search requests]](SearchRequest.md#RangeFilter)
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/SearchApi.md b/out/manticoresearch-python-actual/docs/SearchApi.md
deleted file mode 100644
index 755d0d7..0000000
--- a/out/manticoresearch-python-actual/docs/SearchApi.md
+++ /dev/null
@@ -1,292 +0,0 @@
-# manticoresearch.SearchApi
-
-All URIs are relative to *http://127.0.0.1:9308*
-
-Method | HTTP request | Description
-------------- | ------------- | -------------
-[**search**](SearchApi.md#search) | **POST** /search | Performs a search on an index.
-[**percolate**](SearchApi.md#percolate) | **POST** /pq/{index}/search | Perform a reverse search on a percolate index
-
-
-## **search**
-> SearchResponse search(search_request)
-
-Performs a search on an index. 
-
-The method expects a SearchRequest object with the following mandatory properties:
-        
-* the name of the index to search | string
-        
-For details, see the documentation on [**SearchRequest**](SearchRequest.md)
-
-The method returns an object with the following properties:
-        
-- hits: an object with the following properties:
-  - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:
-    - _id: the ID of the matched document.
-    - _score: the score of the matched document.
-    - _source: the source data of the matched document.
-  - total: the total number of hits found.
-- timed_out: a boolean indicating whether the query timed out.
-- took: the time taken to execute the search query.
-
-In addition, if profiling is enabled, the response will include an additional array with profiling information attached.
-
-Here is an example search response:
-  ```
-  {
-    'took':10,
-    'timed_out':false,
-    'hits':
-    {
-      'total':2,
-      'hits':
-      [
-        {'_id':'1','_score':1,'_source':{'gid':11}},
-        {'_id':'2','_score':1,'_source':{'gid':12}}
-      ]
-    }
-  }
-  ```
-
-For more information about the match query syntax and additional parameters that can be added to request and response, please check: https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON.
-
-
-### Example
-
-```python
-import manticoresearch
-from manticoresearch.api import search_api
-from manticoresearch.model.search_request import SearchRequest
-from manticoresearch.model.error_response import ErrorResponse
-from manticoresearch.model.search_response import SearchResponse
-from manticoresearch.model.query_filter import QueryFilter
-from pprint import pprint
-
-# Defining the host is optional and defaults to http://127.0.0.1:9308
-# See configuration.py for a list of all supported configuration parameters.
-configuration = manticoresearch.Configuration(
-    host = "http://127.0.0.1:9308"
-)
-
-
-# Enter a context with an instance of the API client
-with manticoresearch.ApiClient(configuration) as api_client:
-    # Create an instance of the API class
-    api_instance = search_api.SearchApi(api_client)
-
-	# Create SearchRequest
-    search_request = SearchRequest()
-    search_request.index='test'
-    search_request.fulltext_filter=QueryFilter('find smth') 
-    
-    # or create SearchRequest in an alternative way as in the previous versions of the client. It uses a single complex JSON object for a query field 
-    search_request = SearchRequest(
-        index='test',
-        query={'query_string': 'find smth'},
-    )
-    
-    # Both ways of creating SearchRequest are interchangeable and produce the same result  
-
-    # example passing only required values which don't have defaults set
-    try:
-        # Performs a search
-        api_response = api_instance.search(search_request)
-        pprint(api_response)
-    except manticoresearch.ApiException as e:
-        print("Exception when calling SearchApi->search: %s\n" % e)
-
-
-```
-
-### Parameters
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **search_request** | [**SearchRequest**](SearchRequest.md)|  | 
-
-### Return type
-
-[**SearchResponse**](SearchResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
- - **Content-Type**: application/json
- - **Accept**: application/json
-
-### HTTP response details
-| Status code | Description |
-|-------------|-------------|
-**200** | Success, query processed |
-**500** | Server error |
-
-[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
-
-
-## **percolate**
-> SearchResponse percolate(index,percolate_request)
-
-Perform a reverse search on a percolate index. [[More info on percolate indexes in Manticore Search Manual]](https://manual.manticoresearch.com/Creating_a_table/Local_tables/Percolate_table#Percolate-table)
-
-This method must be used only on percolate indexes.
-
-Expects two parameters: the index name and an object with a document or an array of documents to search by.
-Here is an example of the object with a single document:
-
-```
-{
-  "query":
-  {
-    "percolate":
-    {
-      "document":
-      {
-        "content":"sample content"
-      }
-    }
-  }
-}
-```
-
-Responds with an object with matched stored queries: 
-
-  ```
-  {
-    'timed_out':false,
-    'hits':
-    {
-      'total':2,
-      'max_score':1,
-      'hits':
-      [
-        {
-          '_index':'idx_pq_1',
-          '_type':'doc',
-          '_id':'2',
-          '_score':'1',
-          '_source':
-          {
-            'query':
-            {
-              'match':{'title':'some'}
-            }
-          }
-        },
-        {
-          '_index':'idx_pq_1',
-          '_type':'doc',
-          '_id':'5',
-          '_score':'1',
-          '_source':
-          {
-            'query':
-            {
-              'ql':'some | none'
-            }
-          }
-        }
-      ]
-    }
-  }
-  ```
-
-And here is an example of the object with multiple documents:
-
-```
-{
-  "query":
-  {
-    "percolate":
-    {
-      "documents": [
-        {
-          "content":"sample content"
-        },
-        {
-          "content":"another sample content"
-        }
-      ]
-    }
-  }
-}
-```
-
-### Example
-
-```python
-import manticoresearch
-from manticoresearch.api import search_api
-from manticoresearch.model.error_response import ErrorResponse
-from manticoresearch.model.search_response import SearchResponse
-from manticoresearch.model.percolate_request import PercolateRequest
-from manticoresearch.model.percolate_request_query import PercolateRequestQuery
-from pprint import pprint
-
-# Defining the host is optional and defaults to http://127.0.0.1:9308
-# See configuration.py for a list of all supported configuration parameters.
-configuration = manticoresearch.Configuration(
-    host = "http://127.0.0.1:9308"
-)
-
-
-# Enter a context with an instance of the API client
-with manticoresearch.ApiClient(configuration) as api_client:
-    # Create an instance of the API class
-    api_instance = search_api.SearchApi(api_client)
-
-    index = "index_example" # str  | Name of the percolate index
-    percolate_query = { 
-        "query": { 
-            "percolate": { 
-                "document":  {  
-                    "content":"sample content" 
-                } 
-            } 
-        } 
-    }
-    percolate_request = PercolateRequest(
-        query=PercolateRequestQuery(percolate_query),
-    ) # PercolateRequest  
-
-    # example passing only required values which don't have defaults set
-    try:
-        # Perform reverse search on a percolate index
-        api_response = api_instance.percolate(index, percolate_request)
-        pprint(api_response)
-    except manticoresearch.ApiException as e:
-        print("Exception when calling SearchApi->percolate: %s\n" % e)
-
-```
-
-### Parameters
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **index** | **str**| Name of the percolate index | 
- **percolate_request** | [**PercolateRequest**](PercolateRequest.md)|  | 
-
-### Return type
-
-[**SearchResponse**](SearchResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
- - **Content-Type**: application/json
- - **Accept**: application/json
-
-### HTTP response details
-| Status code | Description |
-|-------------|-------------|
-**200** | Success, query processed |
-**500** | Server error |
-
-[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-python-actual/docs/SearchRequest.md b/out/manticoresearch-python-actual/docs/SearchRequest.md
deleted file mode 100644
index 486203d..0000000
--- a/out/manticoresearch-python-actual/docs/SearchRequest.md
+++ /dev/null
@@ -1,360 +0,0 @@
-# SearchRequest
-
-Request object for search operation
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**index** | **str** |  | [default to ""]
-**query** | **{str: (bool, date, datetime, dict, float, int, list, str, none_type)}** |  | [optional] 
-**fulltext_filter** | **{str: (bool, date, datetime, dict, float, int, list, str, none_type)}** |  | [optional] 
-**attr_filter** | **{str: (bool, date, datetime, dict, float, int, list, str, none_type)}** |  | [optional] 
-**limit** | **int** |  | [optional] 
-**offset** | **int** |  | [optional] 
-**max_matches** | **int** |  | [optional] 
-**sort** | **[{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]** |  | [optional] 
-**aggs** | [**{str: (Aggregation,)}**](Aggregation.md) |  | [optional] 
-**expressions** | **{str: (str,)}** |  | [optional] 
-**highlight** | [**Highlight**](Highlight.md) |  | [optional] 
-**source** | **{str: (bool, date, datetime, dict, float, int, list, str, none_type)}** |  | [optional] 
-**options** | **{str: (bool, date, datetime, dict, float, int, list, str, none_type)}** |  | [optional] 
-**profile** | **bool** |  | [optional] 
-**track_scores** | **bool** |  | [optional] 
-
-## Building a search request
-
-[[Docs on search options in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Options#Search-options)
-```python
-    #Setting a search index:
-    search_req = manticoresearch.model.SearchRequest()
-    search_req.index = 'test'
-    
-    api_response = api_instance.search(search_req)
-    pprint(api_response)
-    
-    #Setting extra search settings:
-    search_req = manticoresearch.model.SearchRequest(index='test')
-    
-    search_req.offset = 0
-    search_req.limit = 10
-    search_req.profile = True
-    search_req.options = {'ranker': 'bm25'}
-    search_req.options['retry_count'] = 2
-    
-    api_response = api_instance.search(search_req)
-    pprint(api_response)
-
-    #Setting the `_source` property with a single field:
-    search_req = manticoresearch.model.SearchRequest(index='test')
-    
-    search_req.source = 'field1'
-    
-    api_response = api_instance.search(search_req)
-    pprint(api_response)
-    
-    #Setting the `_source` property with multiple fields:
-    search_req = manticoresearch.model.SearchRequest(index='test')
-    
-    search_req.source = ['field1', 'field2*']
-    
-    api_response = api_instance.search(search_req)
-    pprint(api_response)
-```
-
-### SourceByRules
-
-[[SourceByRules - input parameters]](SourceByRules.md)
-
-[[Docs on the `source` property ]](https://manual.manticoresearch.com/Searching/Search_results#Source-selection)
-```python
-    #Setting the `_source` property with an auxillary SourceByRules object
-    search_req = manticoresearch.model.SearchRequest(index='test')
-    
-    search_req.source = manticoresearch.model.SourceByRules()
-    search_req.source.includes = ['field1', 'field2*']
-    search_req.source.excludes = ['field3']
-    
-    api_response = api_instance.search(search_req)
-    pprint(api_response)
-```
-
-### Sort
-```python
-    #Setting the `sort` property:
-    search_req = manticoresearch.model.SearchRequest(index='test')
-    
-    search_req.sort = ['body']
-    
-    api_response = api_instance.search(search_req)
-    pprint(api_response)
-```
-
-### SortOrder
-
-[[SortOrder - input parameters]](SortOrder.md)
-
-### SortMVA
-
-[[SortMVA - input parameters]](SortMVA.md)
-
-[[Docs on sorting in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Sorting_and_ranking#HTTP)
-```python
-    #Setting the `sort` property with auxiliary objects
-    search_req = manticoresearch.model.SearchRequest(index='test')
-    
-    search_req.sort = ['body']
-    sort2 = manticoresearch.model.SortOrder('price', 'desc')
-    sort3 = manticoresearch.model.SortMVA('codes', 'desc', 'max')
-    search_req.sort += [sort2,sort3]
-    
-    api_response = api_instance.search(search_req)
-    pprint(api_response)
-```
-
-### Expressions
-
-[[Docs on expressions in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Expressions#Expressions-in-HTTP-JSON)
-```python    
-    #Setting the `expressions` property:
-    search_req = manticoresearch.model.SearchRequest(index='test')
-    
-    search_req.expressions = {'expr': 'min(price,15)'}
-    search_req.expressions['expr2'] = 'max(price,15)'
-    
-    api_response = api_instance.search(search_req)
-    pprint(api_response)
-```
-
-### Aggregation
-
-[[Aggregation - input parameters]](Aggregation.md)
-
-[[Docs on aggregations in Manticore Search Manual](https://manual.manticoresearch.com/Searching/Faceted_search#Aggregations)
-```python    
-    #Setting the `aggs` property with an auxiliary object:
-    search_req = manticoresearch.model.SearchRequest(index='test')
-    
-    aggTerms1 = AggregationTerms('year', 10)
-    agg1 = Aggregation(aggTerms1)
-    agg2 = Aggregation(AggregationTerms('rating'), ['rating'])
-    search_request.aggs = {'agg1': agg1}
-    search_request.aggs['agg2'] = agg2
-        
-    api_response = api_instance.search(search_req)
-    pprint(api_response)
-```
-
-### Highlight
-
-[[Highlight - input parameters]](Highlight.md)
-
-[[Docs on highlighting in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Highlighting#Highlighting)
-```python
-    #Settting the `highlight` property with an auxiliary object:
-    search_req = manticoresearch.model.SearchRequest(index='test')
-    
-    highlight = manticoresearch.model.Highlight()
-    highlight.fieldnames = ['body']
-    highlight.post_tags = '</post_tag>'
-    highlight.encoder = 'default'
-    highlight.snippet_boundary = 'sentence'
-    search_req.highlight = highlight
-    
-    api_response = api_instance.search(search_req)
-    pprint(api_response) 
-```
-
-#### HighlightField
-
-[[HighlightField - input parameters]](HighlightField.md)
-
-[[Docs on highlight fields in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Highlighting#Highlighting)
-```python
-    #Settting the `highlight.fields` property with an auxiliary HighlightField object
-    search_req = manticoresearch.model.SearchRequest(index='test')
-    
-    highlightField = manticoresearch.model.HighlightField('body')
-    highlightField2 = manticoresearch.model.HighlightField('price', 5, 10)
-    highlight.fields = [highlightField, highlightField2]
-    search_req.highlight = highlight
-    
-    api_response = api_instance.search(search_req)
-    pprint(api_response) 
-```
-
-### FulltextFilter
-
-[[Docs on fulltext filters in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON)
-```python
-    #Setting the `fulltext_filter` property using different fulltext filter objects:
-    
-    search_req = manticoresearch.model.SearchRequest(index='test')
-```
-
-#### QueryFilter
-
-[[QueryFilter - input parameters]](QueryFilter.md)
-```python    
-    #Using a QueryFilter object
-    search_req.fulltext_filter = manticoresearch.model.QueryFilter('test')
-    
-    api_response = api_instance.search(search_req)
-    pprint(api_response)
-```
-
-#### MatchFilter
-
-[[MatchFilter - input parameters]](MatchFilter.md)
-```python    
-    #Using a MatchFilter object
-    search_req = manticoresearch.model.SearchRequestindex='test'()
-    
-    search_req.fulltext_filter = manticoresearch.model.MatchFilter('test', 'title')
-    
-    api_response = api_instance.search(search_req)
-    pprint(api_response)
-```
-
-#### MatchPhraseFilter
-
-[[MatchPhraseFilter - input parameters]](MatchPhraseFilter.md)
-```python    
-    #Using a MatchPhraseFilter object
-    search_req = manticoresearch.model.SearchRequest(index='test')
-    
-    search_req.fulltext_filter = manticoresearch.model.MatchPhraseFilter('test phrase', 'title')
-    
-    api_response = api_instance.search(search_req)
-    pprint(api_response)
-```
-
-#### MatchOpFilter
-
-[[MatchOpFilter - input parameters]](MatchOpFilter.md)
-```python    
-    #Using a MatchOpFilter object
-    search_req.fulltext_filter = manticoresearch.model.MatchOpFilter('test1 test2', 'title', 'and')
-    
-    api_response = api_instance.search(search_req)
-    pprint(api_response)
-```
-
-### AttrFilter
-#### EqualsFilter
-
-[[EqualsFilter - input parameters]](EqualsFilter.md)
-
-[[Docs on equality filters in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Filters#Equality-filters)
-```python
-    #Setting the `attr_filter` property using different attribute filter objects:
-    
-    #Using an EqualsFilter object
-    search_req = manticoresearch.model.SearchRequest(index='test')
-    
-    search_req.attr_filter = manticoresearch.model.EqualsFilter('price', 20)
-    
-    api_response = api_instance.search(search_req)
-    pprint(api_response)
-```
-
-#### InFilter
-
-[[InFilter - input parameters]](InFilter.md)
-
-[[Docs on set filters in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Filters#Set-filters)
-```python
-    #Using an InFilter object
-    search_req = manticoresearch.model.SearchRequest(index='test')
-    
-    inFilter = manticoresearch.model.InFilter('price', [1,2])
-    inFilter.values += [10,11]
-    search_req.attr_filter = inFilter
-    
-    api_response = api_instance.search(search_req)
-    pprint(api_response)
-```
-
-#### RangeFilter
-
-[[RangeFilter - input parameters]](RangeFilter.md)
-
-[[Docs on range filters in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Filters#Range-filters)
-```python
-    #Using a RangeFilter object
-    search_req = manticoresearch.model.SearchRequest(index='test')
-    
-    rangeFilter = manticoresearch.model.RangeFilter('price', lte = 20)
-    rangeFilter.gte = 5
-    rangeFilter.gt = 100
-    rangeFilter.lt = 200
-    search_req.attr_filter = rangeFilter
-    
-    api_response = api_instance.search(search_req)
-    pprint(api_response)
-```
-
-#### GeoDistanceFilter
-
-[[GeoDistanceFilter - input parameters]](GeoDistanceFilter.md)
-
-[[Docs on geo distance filters in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Filters#Geo-distance-filters)
-```python
-    #Using a GeoFilter object
-    search_req = manticoresearch.model.SearchRequest(index='test')
-    
-    geoFilter = manticoresearch.model.GeoDistanceFilter(location_anchor={'lat':10,'lon':20}, location_source='field1,field2')
-    geoFilter.location_source='field3,field4'
-    geoFilter.distance_type='adaptive'
-    geoFilter.distance='100 km'
-    search_req.attr_filter = geoFilter
-    
-    api_response = api_instance.search(search_req)
-    pprint(api_response)
-```
-
-#### BoolFilter
-
-[[BoolFilter - input parameters]](BoolFilter.md)
-
-[[Docs on bool queries in Manticore Search Manual]](https://manual.manticoresearch.com/Searching/Filters#bool-query)
-```python
-    #Setting the `attr_filter` property using bool filter object:
-    search_req = manticoresearch.model.SearchRequest(index='test')
-    
-    boolFilter = manticoresearch.model.BoolFilter()
-    boolFilter.must = [ manticoresearch.model.EqualsFilter('body', 'test') ]
-    search_req.attr_filter = boolFilter
-    api_response = api_instance.search(search_req)
-    pprint(api_response)
-    
-    boolFilter = manticoresearch.model.BoolFilter()
-    boolFilter.must_not = [ manticoresearch.model.EqualsFilter('body', 'test') ]
-    search_req.attr_filter = boolFilter
-    api_response = api_instance.search(search_req)
-    pprint(api_response)
-    
-    #Using nested bool filters
-    search_req = manticoresearch.model.SearchRequest(index='test')
-    
-    fulltext_filter = manticoresearch.model.MatchFilter('test', 'title')
-    nestedBoolFilter = manticoresearch.model.BoolFilter()
-    nestedBoolFilter.should = [manticoresearch.model.EqualsFilter('code', 'a'), fulltext_filter]
-    
-    boolFilter.must = [nestedBoolFilter]
-    boolFilter.must += [ manticoresearch.model.EqualsFilter('price', 10) ]
-    search_req.attr_filter = boolFilter
-    
-    api_response = api_instance.search(search_req)
-    pprint(api_response)
-```
-
-## Creating a search request in an alternative way with a single dictionary object 
-```python
-    search_req = '{"index":"test","query":{"query_string":"find smth"}, "_source": ["field1","field2"], "limit":5}'
-
-    api_response = api_instance.search(search_req)
-    pprint(api_response)
-```
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/SearchResponse.md b/out/manticoresearch-python-actual/docs/SearchResponse.md
deleted file mode 100644
index 4271709..0000000
--- a/out/manticoresearch-python-actual/docs/SearchResponse.md
+++ /dev/null
@@ -1,17 +0,0 @@
-# SearchResponse
-
-Response object of a search request
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**took** | **int** |  | [optional] 
-**timed_out** | **bool** |  | [optional] 
-**aggregations** | **{str: (bool, date, datetime, dict, float, int, list, str, none_type)}** |  | [optional] 
-**hits** | [**SearchResponseHits**](SearchResponseHits.md) |  | [optional] 
-**profile** | **{str: (bool, date, datetime, dict, float, int, list, str, none_type)}** |  | [optional] 
-**warning** | **{str: (bool, date, datetime, dict, float, int, list, str, none_type)}** |  | [optional] 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/SearchResponseHits.md b/out/manticoresearch-python-actual/docs/SearchResponseHits.md
deleted file mode 100644
index 7352b5c..0000000
--- a/out/manticoresearch-python-actual/docs/SearchResponseHits.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# SearchResponseHits
-
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**max_score** | **int** |  | [optional] 
-**total** | **int** |  | [optional] 
-**total_relation** | **str** |  | [optional] 
-**hits** | **[{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]** |  | [optional] 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/SortMVA.md b/out/manticoresearch-python-actual/docs/SortMVA.md
deleted file mode 100644
index 47540e8..0000000
--- a/out/manticoresearch-python-actual/docs/SortMVA.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# SortMVA
-
-Query sort expression for MVA attributes
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**attr** | **str** |  | 
-**order** | **str** |  | 
-**mode** | **str** |  | 
-
-[[Using in search requests]](SearchRequest.md#SortMVA)
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/SortMultiple.md b/out/manticoresearch-python-actual/docs/SortMultiple.md
deleted file mode 100644
index 6f8d0e5..0000000
--- a/out/manticoresearch-python-actual/docs/SortMultiple.md
+++ /dev/null
@@ -1,13 +0,0 @@
-# SortMultiple
-
-Query sort expression for multiple attributes
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**attrs** | **{str: (bool, date, datetime, dict, float, int, list, str, none_type)}** |  | 
-**replace** | **bool** |  | 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/SortOrder.md b/out/manticoresearch-python-actual/docs/SortOrder.md
deleted file mode 100644
index 0c7d129..0000000
--- a/out/manticoresearch-python-actual/docs/SortOrder.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# SortOrder
-
-Query sort expression
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**attr** | **str** |  | 
-**order** | **str** |  | 
-
-[[Using in search requests]](SearchRequest.md#SortOrder)
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/SourceByRules.md b/out/manticoresearch-python-actual/docs/SourceByRules.md
deleted file mode 100644
index f573ae3..0000000
--- a/out/manticoresearch-python-actual/docs/SourceByRules.md
+++ /dev/null
@@ -1,14 +0,0 @@
-# SourceByRules
-
-Query fields to be included/excluded to/from response
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**includes** | **[str]** |  | [default to []]
-**excludes** | **[str]** |  | [default to [""]]
-
-[[Using in search requests]](SearchRequest.md#SourceByRules)
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/SourceMultiple.md b/out/manticoresearch-python-actual/docs/SourceMultiple.md
deleted file mode 100644
index ce4cb55..0000000
--- a/out/manticoresearch-python-actual/docs/SourceMultiple.md
+++ /dev/null
@@ -1,11 +0,0 @@
-# SourceMultiple
-
-Query fields to be returned
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/SqlResponse.md b/out/manticoresearch-python-actual/docs/SqlResponse.md
deleted file mode 100644
index bcf75d8..0000000
--- a/out/manticoresearch-python-actual/docs/SqlResponse.md
+++ /dev/null
@@ -1,11 +0,0 @@
-# SqlResponse
-
-List containing Response object from sql that depends on the query executed as its item.
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/SuccessResponse.md b/out/manticoresearch-python-actual/docs/SuccessResponse.md
deleted file mode 100644
index 4d4ea5a..0000000
--- a/out/manticoresearch-python-actual/docs/SuccessResponse.md
+++ /dev/null
@@ -1,16 +0,0 @@
-# SuccessResponse
-
-Success response
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**index** | **str** |  | [optional] 
-**id** | **int** |  | [optional] 
-**created** | **bool** |  | [optional] 
-**result** | **str** |  | [optional] 
-**found** | **bool** |  | [optional] 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/UpdateDocumentRequest.md b/out/manticoresearch-python-actual/docs/UpdateDocumentRequest.md
deleted file mode 100644
index f830d94..0000000
--- a/out/manticoresearch-python-actual/docs/UpdateDocumentRequest.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# UpdateDocumentRequest
-
-Payload for update document
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**index** | **str** |  | 
-**doc** | **{str: (bool, date, datetime, dict, float, int, list, str, none_type)}** | Index name | 
-**id** | **int** | Document ID | [optional] 
-**query** | **{str: (bool, date, datetime, dict, float, int, list, str, none_type)}, none_type** | Query tree object | [optional] 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/UpdateResponse.md b/out/manticoresearch-python-actual/docs/UpdateResponse.md
deleted file mode 100644
index 6e31164..0000000
--- a/out/manticoresearch-python-actual/docs/UpdateResponse.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# UpdateResponse
-
-Success response
-## Properties
-Name | Type | Description | Notes
------------- | ------------- | ------------- | -------------
-**index** | **str** |  | [optional] 
-**updated** | **int** |  | [optional] 
-**id** | **int** |  | [optional] 
-**result** | **str** |  | [optional] 
-
-
-[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
-
-
diff --git a/out/manticoresearch-python-actual/docs/UtilsApi.md b/out/manticoresearch-python-actual/docs/UtilsApi.md
deleted file mode 100644
index 43b0e77..0000000
--- a/out/manticoresearch-python-actual/docs/UtilsApi.md
+++ /dev/null
@@ -1,93 +0,0 @@
-# manticoresearch.UtilsApi
-
-All URIs are relative to *http://127.0.0.1:9308*
-
-Method | HTTP request | Description
-------------- | ------------- | -------------
-[**sql**](UtilsApi.md#sql) | **POST** /sql | Perform SQL requests
-
-
-## **sql**
-> SqlResponse sql(body,raw_response=True)
-
-Perform SQL requests
-
-Run a query in SQL format.
-Expects a query string passed through `body` parameter and optional `raw_response` parameter that defines a format of response.
-`raw_response` can be set to `False` for Select queries only, e.g., `SELECT * FROM myindex`
-The query string must stay as it is, no URL encoding is needed.
-The response object depends on the query executed. In select mode the response has same format as `/search` operation.
-
-
-### Example
-
-```python
-import manticoresearch
-from manticoresearch.api import utils_api
-from manticoresearch.model.error_response import ErrorResponse
-from manticoresearch.model.sql_response import SqlResponse
-from pprint import pprint
-
-# Defining the host is optional and defaults to http://127.0.0.1:9308
-# See configuration.py for a list of all supported configuration parameters.
-configuration = manticoresearch.Configuration(
-    host = "http://127.0.0.1:9308"
-)
-
-
-# Enter a context with an instance of the API client
-with manticoresearch.ApiClient(configuration) as api_client:
-    # Create an instance of the API class
-    api_instance = utils_api.UtilsApi(api_client)
-
-    body = "SHOW TABLES" # str  |( A query parameter string.   
-    raw_response = True # bool  | Optional parameter, defines a format of response. Can be set to `False` for Select only queries and set to `True` or omitted for any type of queries:  (optional) if omitted the server will use the default value of True 
-
-    # example passing only required values which don't have defaults set
-    try:
-        # Perform SQL requests
-        api_response = api_instance.sql(body)
-        pprint(api_response)
-    except manticoresearch.ApiException as e:
-        print("Exception when calling UtilsApi->sql: %s\n" % e)
-
-    # example passing only required values which don't have defaults set
-    # and optional values
-    try:
-        # Perform SQL requests
-        api_response = api_instance.sql(body, raw_response=raw_response)
-        pprint(api_response)
-    except manticoresearch.ApiException as e:
-        print("Exception when calling UtilsApi->sql: %s\n" % e)
-
-
-```
-
-### Parameters
-
-Name | Type | Description  | Notes
-------------- | ------------- | ------------- | -------------
- **body** | **str**| A query parameter string.  | 
- **raw_response** | **bool**| Optional parameter, defines a format of response. Can be set to &#x60;False&#x60; for Select only queries and set to &#x60;True&#x60; or omitted for any type of queries:  | [optional] [default to True]
-
-### Return type
-
-[**SqlResponse**](SqlResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
- - **Content-Type**: text/plain
- - **Accept**: application/json
-
-### HTTP response details
-| Status code | Description | Response headers |
-|-------------|-------------|------------------|
-**200** | In case of SELECT-only in mode none the response schema is the same as of &#x60;search&#x60;. In case of &#x60;mode&#x3D;raw&#x60; the response depends on the query executed.  |  -  |
-**0** | error |  -  |
-
-[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
-
diff --git a/out/manticoresearch-python-actual/git_push.sh b/out/manticoresearch-python-actual/git_push.sh
deleted file mode 100644
index da86011..0000000
--- a/out/manticoresearch-python-actual/git_push.sh
+++ /dev/null
@@ -1,58 +0,0 @@
-#!/bin/sh
-# ref: https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/
-#
-# Usage example: /bin/sh ./git_push.sh wing328 openapi-pestore-perl "minor update" "gitlab.com"
-
-git_user_id=$1
-git_repo_id=$2
-release_note=$3
-git_host=$4
-
-if [ "$git_host" = "" ]; then
-    git_host="github.com"
-    echo "[INFO] No command line input provided. Set \$git_host to $git_host"
-fi
-
-if [ "$git_user_id" = "" ]; then
-    git_user_id="manticoresoftware"
-    echo "[INFO] No command line input provided. Set \$git_user_id to $git_user_id"
-fi
-
-if [ "$git_repo_id" = "" ]; then
-    git_repo_id="manticoresearch-python"
-    echo "[INFO] No command line input provided. Set \$git_repo_id to $git_repo_id"
-fi
-
-if [ "$release_note" = "" ]; then
-    release_note="Minor update"
-    echo "[INFO] No command line input provided. Set \$release_note to $release_note"
-fi
-
-# Initialize the local directory as a Git repository
-git init
-
-# Adds the files in the local repository and stages them for commit.
-git add .
-
-# Commits the tracked changes and prepares them to be pushed to a remote repository.
-git commit -m "$release_note"
-
-# Sets the new remote
-git_remote=`git remote`
-if [ "$git_remote" = "" ]; then # git remote not defined
-
-    if [ "$GIT_TOKEN" = "" ]; then
-        echo "[INFO] \$GIT_TOKEN (environment variable) is not set. Using the git credential in your environment."
-        git remote add origin https://${git_host}/${git_user_id}/${git_repo_id}.git
-    else
-        git remote add origin https://${git_user_id}:${GIT_TOKEN}@${git_host}/${git_user_id}/${git_repo_id}.git
-    fi
-
-fi
-
-git pull origin master
-
-# Pushes (Forces) the changes in the local repository up to the remote repository
-echo "Git pushing to https://${git_host}/${git_user_id}/${git_repo_id}.git"
-git push origin master 2>&1 | grep -v 'To https'
-
diff --git a/out/manticoresearch-python-actual/manticoresearch/__init__.py b/out/manticoresearch-python-actual/manticoresearch/__init__.py
deleted file mode 100644
index f2ef898..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/__init__.py
+++ /dev/null
@@ -1,80 +0,0 @@
-# coding: utf-8
-
-# flake8: noqa
-
-"""
-    Manticore Search Client
-
-    Сlient for Manticore Search.   # noqa: E501
-
-    The version of the OpenAPI document: 3.3.1
-    Contact: info@manticoresearch.com
-    Generated by: https://openapi-generator.tech
-"""
-
-
-from __future__ import absolute_import
-
-__version__ = "4.0.0"
-
-# import apis into sdk package
-from manticoresearch.api.index_api import IndexApi
-from manticoresearch.api.search_api import SearchApi
-from manticoresearch.api.utils_api import UtilsApi
-
-# import ApiClient
-from manticoresearch.api_client import ApiClient
-from manticoresearch.configuration import Configuration
-from manticoresearch.exceptions import OpenApiException
-from manticoresearch.exceptions import ApiTypeError
-from manticoresearch.exceptions import ApiValueError
-from manticoresearch.exceptions import ApiKeyError
-from manticoresearch.exceptions import ApiAttributeError
-from manticoresearch.exceptions import ApiException
-# import models into sdk package
-from manticoresearch.model.aggregation import Aggregation
-from manticoresearch.model.aggregation_sort_inner_value import AggregationSortInnerValue
-from manticoresearch.model.aggregation_terms import AggregationTerms
-from manticoresearch.model.attr_filter import AttrFilter
-from manticoresearch.model.bool_filter import BoolFilter
-from manticoresearch.model.bulk_response import BulkResponse
-from manticoresearch.model.delete_document_request import DeleteDocumentRequest
-from manticoresearch.model.delete_response import DeleteResponse
-from manticoresearch.model.equals_filter import EqualsFilter
-from manticoresearch.model.error_response import ErrorResponse
-from manticoresearch.model.facet import Facet
-from manticoresearch.model.filter_boolean import FilterBoolean
-from manticoresearch.model.filter_number import FilterNumber
-from manticoresearch.model.filter_string import FilterString
-from manticoresearch.model.fulltext_filter import FulltextFilter
-from manticoresearch.model.geo_distance_filter import GeoDistanceFilter
-from manticoresearch.model.geo_distance_filter_location_anchor import GeoDistanceFilterLocationAnchor
-from manticoresearch.model.highlight import Highlight
-from manticoresearch.model.highlight_field import HighlightField
-from manticoresearch.model.in_filter import InFilter
-from manticoresearch.model.insert_document_request import InsertDocumentRequest
-from manticoresearch.model.match_filter import MatchFilter
-from manticoresearch.model.match_op import MatchOp
-from manticoresearch.model.match_op_filter import MatchOpFilter
-from manticoresearch.model.match_phrase_filter import MatchPhraseFilter
-from manticoresearch.model.not_filter_boolean import NotFilterBoolean
-from manticoresearch.model.not_filter_number import NotFilterNumber
-from manticoresearch.model.not_filter_string import NotFilterString
-from manticoresearch.model.option import Option
-from manticoresearch.model.percolate_request import PercolateRequest
-from manticoresearch.model.percolate_request_query import PercolateRequestQuery
-from manticoresearch.model.query_filter import QueryFilter
-from manticoresearch.model.range_filter import RangeFilter
-from manticoresearch.model.search_request import SearchRequest
-from manticoresearch.model.search_response import SearchResponse
-from manticoresearch.model.search_response_hits import SearchResponseHits
-from manticoresearch.model.sort_mva import SortMVA
-from manticoresearch.model.sort_multiple import SortMultiple
-from manticoresearch.model.sort_order import SortOrder
-from manticoresearch.model.source_by_rules import SourceByRules
-from manticoresearch.model.source_multiple import SourceMultiple
-from manticoresearch.model.sql_response import SqlResponse
-from manticoresearch.model.success_response import SuccessResponse
-from manticoresearch.model.update_document_request import UpdateDocumentRequest
-from manticoresearch.model.update_response import UpdateResponse
-
diff --git a/out/manticoresearch-python-actual/manticoresearch/api/__init__.py b/out/manticoresearch-python-actual/manticoresearch/api/__init__.py
deleted file mode 100644
index 2355847..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/api/__init__.py
+++ /dev/null
@@ -1,8 +0,0 @@
-from __future__ import absolute_import
-
-# flake8: noqa
-
-# import apis into api package
-from manticoresearch.api.index_api import IndexApi
-from manticoresearch.api.search_api import SearchApi
-from manticoresearch.api.utils_api import UtilsApi
diff --git a/out/manticoresearch-python-actual/manticoresearch/api/index_api.py b/out/manticoresearch-python-actual/manticoresearch/api/index_api.py
deleted file mode 100644
index a120848..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/api/index_api.py
+++ /dev/null
@@ -1,721 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-from __future__ import absolute_import
-
-import re  # noqa: F401
-
-# python 2 and python 3 compatibility library
-import six
-from six.moves.urllib.parse import quote
-
-from manticoresearch.api_client import ApiClient
-from manticoresearch.exceptions import (  # noqa: F401
-    ApiTypeError,
-    ApiValueError
-)
-
-
-class IndexApi(object):
-    """NOTE: This class is auto generated by OpenAPI Generator
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    def __init__(self, api_client=None):
-        if api_client is None:
-            api_client = ApiClient()
-        self.api_client = api_client
-
-    def bulk(self, body, **kwargs):  # noqa: E501
-        """Bulk index operations  # noqa: E501
-
-        Sends multiple operatons like inserts, updates, replaces or deletes.  For each operation it's object must have same format as in their dedicated method.  The method expects a raw string as the batch in NDJSON.  Each operation object needs to be serialized to   JSON and separated by endline (\\n).      An example of raw input:      ```   {\"insert\": {\"index\": \"movies\", \"doc\": {\"plot\": \"A secret team goes to North Pole\", \"rating\": 9.5, \"language\": [2, 3], \"title\": \"This is an older movie\", \"lon\": 51.99, \"meta\": {\"keywords\":[\"travel\",\"ice\"],\"genre\":[\"adventure\"]}, \"year\": 1950, \"lat\": 60.4, \"advise\": \"PG-13\"}}}   \\n   {\"delete\": {\"index\": \"movies\",\"id\":700}}   ```      Responds with an object telling whenever any errors occured and an array with status for each operation:      ```   {     'items':     [       {         'update':{'_index':'products','_id':1,'result':'updated'}       },       {         'update':{'_index':'products','_id':2,'result':'updated'}       }     ],     'errors':false   }   ```     # noqa: E501
-        This method makes a synchronous HTTP request by default. To make an
-        asynchronous HTTP request, please pass async_req=True
-
-        >>> thread = api.bulk(body, async_req=True)
-        >>> result = thread.get()
-
-        :param body: (required)
-        :type body: str
-        :param async_req: Whether to execute the request asynchronously.
-        :type async_req: bool, optional
-        :param _preload_content: if False, the urllib3.HTTPResponse object will
-                                 be returned without reading/decoding response
-                                 data. Default is True.
-        :type _preload_content: bool, optional
-        :param _request_timeout: timeout setting for this request. If one
-                                 number provided, it will be total request
-                                 timeout. It can also be a pair (tuple) of
-                                 (connection, read) timeouts.
-        :return: Returns the result object.
-                 If the method is called asynchronously,
-                 returns the request thread.
-        :rtype: BulkResponse
-        """
-        kwargs['_return_http_data_only'] = True
-        return self.bulk_with_http_info(body, **kwargs)  # noqa: E501
-
-    def bulk_with_http_info(self, body, **kwargs):  # noqa: E501
-        """Bulk index operations  # noqa: E501
-
-        Sends multiple operatons like inserts, updates, replaces or deletes.  For each operation it's object must have same format as in their dedicated method.  The method expects a raw string as the batch in NDJSON.  Each operation object needs to be serialized to   JSON and separated by endline (\\n).      An example of raw input:      ```   {\"insert\": {\"index\": \"movies\", \"doc\": {\"plot\": \"A secret team goes to North Pole\", \"rating\": 9.5, \"language\": [2, 3], \"title\": \"This is an older movie\", \"lon\": 51.99, \"meta\": {\"keywords\":[\"travel\",\"ice\"],\"genre\":[\"adventure\"]}, \"year\": 1950, \"lat\": 60.4, \"advise\": \"PG-13\"}}}   \\n   {\"delete\": {\"index\": \"movies\",\"id\":700}}   ```      Responds with an object telling whenever any errors occured and an array with status for each operation:      ```   {     'items':     [       {         'update':{'_index':'products','_id':1,'result':'updated'}       },       {         'update':{'_index':'products','_id':2,'result':'updated'}       }     ],     'errors':false   }   ```     # noqa: E501
-        This method makes a synchronous HTTP request by default. To make an
-        asynchronous HTTP request, please pass async_req=True
-
-        >>> thread = api.bulk_with_http_info(body, async_req=True)
-        >>> result = thread.get()
-
-        :param body: (required)
-        :type body: str
-        :param async_req: Whether to execute the request asynchronously.
-        :type async_req: bool, optional
-        :param _return_http_data_only: response data without head status code
-                                       and headers
-        :type _return_http_data_only: bool, optional
-        :param _preload_content: if False, the urllib3.HTTPResponse object will
-                                 be returned without reading/decoding response
-                                 data. Default is True.
-        :type _preload_content: bool, optional
-        :param _request_timeout: timeout setting for this request. If one
-                                 number provided, it will be total request
-                                 timeout. It can also be a pair (tuple) of
-                                 (connection, read) timeouts.
-        :param _request_auth: set to override the auth_settings for an a single
-                              request; this effectively ignores the authentication
-                              in the spec for a single request.
-        :type _request_auth: dict, optional
-        :return: Returns the result object.
-                 If the method is called asynchronously,
-                 returns the request thread.
-        :rtype: tuple(BulkResponse, status_code(int), headers(HTTPHeaderDict))
-        """
-
-        local_var_params = locals()
-
-        all_params = [
-            'body'
-        ]
-        all_params.extend(
-            [
-                'async_req',
-                '_return_http_data_only',
-                '_preload_content',
-                '_request_timeout',
-                '_request_auth'
-            ]
-        )
-        for key, val in six.iteritems(local_var_params['kwargs']):
-            if key not in all_params:
-                raise ApiTypeError(
-                    "Got an unexpected keyword argument '%s'"
-                    " to method bulk" % key
-                )
-            local_var_params[key] = val
-        del local_var_params['kwargs']
-        # verify the required parameter 'body' is set
-        if self.api_client.client_side_validation and ('body' not in local_var_params or  # noqa: E501
-                                                        local_var_params['body'] is None):  # noqa: E501
-            raise ApiValueError("Missing the required parameter `body` when calling `bulk`")  # noqa: E501
-
-        collection_formats = {}
-
-        path_params = {}
-
-        query_params = []
-
-        header_params = {}
-
-        form_params = []
-        local_var_files = {}
-
-        body_params = None
-        if 'body' in local_var_params:
-            body_params = local_var_params['body']
-
-        # HTTP header `Accept`
-        header_params['Accept'] = self.api_client.select_header_accept(
-            ['application/json'])  # noqa: E501
-
-        # HTTP header `Content-Type`
-        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
-            ['application/x-ndjson'])  # noqa: E501
-
-        # Authentication setting
-        auth_settings = []  # noqa: E501
-
-        res = self.api_client.call_api(
-            '/bulk', 'POST',
-            path_params,
-            query_params,
-            header_params,
-            body=body_params,
-            post_params=form_params,
-            files=local_var_files,
-            response_type='BulkResponse',  # noqa: E501
-            auth_settings=auth_settings,
-            async_req=local_var_params.get('async_req'),
-            _return_http_data_only=local_var_params.get('_return_http_data_only'),  # noqa: E501
-            _preload_content=local_var_params.get('_preload_content', True),
-            _request_timeout=local_var_params.get('_request_timeout'),
-            collection_formats=collection_formats,
-            _request_auth=local_var_params.get('_request_auth'))
-        return res
-         
-
-    def delete(self, delete_document_request, **kwargs):  # noqa: E501
-        """Delete a document in an index  # noqa: E501
-
-        Delete one or several documents. The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a  match query, in which case multiple documents can be delete . Example of input to delete by id:    ```   {'index':'movies','id':100}   ```  Example of input to delete using a query:    ```   {     'index':'movies',     'query':     {       'bool':       {         'must':         [           {'query_string':'new movie'}         ]       }     }   }   ```  The match query has same syntax as in for searching. Responds with an object telling how many documents got deleted:     ```   {'_index':'products','updated':1}   ```   # noqa: E501
-        This method makes a synchronous HTTP request by default. To make an
-        asynchronous HTTP request, please pass async_req=True
-
-        >>> thread = api.delete(delete_document_request, async_req=True)
-        >>> result = thread.get()
-
-        :param delete_document_request: (required)
-        :type delete_document_request: DeleteDocumentRequest
-        :param async_req: Whether to execute the request asynchronously.
-        :type async_req: bool, optional
-        :param _preload_content: if False, the urllib3.HTTPResponse object will
-                                 be returned without reading/decoding response
-                                 data. Default is True.
-        :type _preload_content: bool, optional
-        :param _request_timeout: timeout setting for this request. If one
-                                 number provided, it will be total request
-                                 timeout. It can also be a pair (tuple) of
-                                 (connection, read) timeouts.
-        :return: Returns the result object.
-                 If the method is called asynchronously,
-                 returns the request thread.
-        :rtype: DeleteResponse
-        """
-        kwargs['_return_http_data_only'] = True
-        return self.delete_with_http_info(delete_document_request, **kwargs)  # noqa: E501
-
-    def delete_with_http_info(self, delete_document_request, **kwargs):  # noqa: E501
-        """Delete a document in an index  # noqa: E501
-
-        Delete one or several documents. The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a  match query, in which case multiple documents can be delete . Example of input to delete by id:    ```   {'index':'movies','id':100}   ```  Example of input to delete using a query:    ```   {     'index':'movies',     'query':     {       'bool':       {         'must':         [           {'query_string':'new movie'}         ]       }     }   }   ```  The match query has same syntax as in for searching. Responds with an object telling how many documents got deleted:     ```   {'_index':'products','updated':1}   ```   # noqa: E501
-        This method makes a synchronous HTTP request by default. To make an
-        asynchronous HTTP request, please pass async_req=True
-
-        >>> thread = api.delete_with_http_info(delete_document_request, async_req=True)
-        >>> result = thread.get()
-
-        :param delete_document_request: (required)
-        :type delete_document_request: DeleteDocumentRequest
-        :param async_req: Whether to execute the request asynchronously.
-        :type async_req: bool, optional
-        :param _return_http_data_only: response data without head status code
-                                       and headers
-        :type _return_http_data_only: bool, optional
-        :param _preload_content: if False, the urllib3.HTTPResponse object will
-                                 be returned without reading/decoding response
-                                 data. Default is True.
-        :type _preload_content: bool, optional
-        :param _request_timeout: timeout setting for this request. If one
-                                 number provided, it will be total request
-                                 timeout. It can also be a pair (tuple) of
-                                 (connection, read) timeouts.
-        :param _request_auth: set to override the auth_settings for an a single
-                              request; this effectively ignores the authentication
-                              in the spec for a single request.
-        :type _request_auth: dict, optional
-        :return: Returns the result object.
-                 If the method is called asynchronously,
-                 returns the request thread.
-        :rtype: tuple(DeleteResponse, status_code(int), headers(HTTPHeaderDict))
-        """
-
-        local_var_params = locals()
-
-        all_params = [
-            'delete_document_request'
-        ]
-        all_params.extend(
-            [
-                'async_req',
-                '_return_http_data_only',
-                '_preload_content',
-                '_request_timeout',
-                '_request_auth'
-            ]
-        )
-        for key, val in six.iteritems(local_var_params['kwargs']):
-            if key not in all_params:
-                raise ApiTypeError(
-                    "Got an unexpected keyword argument '%s'"
-                    " to method delete" % key
-                )
-            local_var_params[key] = val
-        del local_var_params['kwargs']
-        # verify the required parameter 'delete_document_request' is set
-        if self.api_client.client_side_validation and ('delete_document_request' not in local_var_params or  # noqa: E501
-                                                        local_var_params['delete_document_request'] is None):  # noqa: E501
-            raise ApiValueError("Missing the required parameter `delete_document_request` when calling `delete`")  # noqa: E501
-
-        collection_formats = {}
-
-        path_params = {}
-
-        query_params = []
-
-        header_params = {}
-
-        form_params = []
-        local_var_files = {}
-
-        body_params = None
-        if 'delete_document_request' in local_var_params:
-            body_params = local_var_params['delete_document_request']
-
-        # HTTP header `Accept`
-        header_params['Accept'] = self.api_client.select_header_accept(
-            ['application/json'])  # noqa: E501
-
-        # HTTP header `Content-Type`
-        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
-            ['application/json'])  # noqa: E501
-
-        # Authentication setting
-        auth_settings = []  # noqa: E501
-
-        res = self.api_client.call_api(
-            '/delete', 'POST',
-            path_params,
-            query_params,
-            header_params,
-            body=body_params,
-            post_params=form_params,
-            files=local_var_files,
-            response_type='DeleteResponse',  # noqa: E501
-            auth_settings=auth_settings,
-            async_req=local_var_params.get('async_req'),
-            _return_http_data_only=local_var_params.get('_return_http_data_only'),  # noqa: E501
-            _preload_content=local_var_params.get('_preload_content', True),
-            _request_timeout=local_var_params.get('_request_timeout'),
-            collection_formats=collection_formats,
-            _request_auth=local_var_params.get('_request_auth'))
-        return res
-         
-
-    def insert(self, insert_document_request, **kwargs):  # noqa: E501
-        """Create a new document in an index  # noqa: E501
-
-        Insert a document.  Expects an object like:     ```   {     'index':'movies',     'id':701,     'doc':     {       'title':'This is an old movie',       'plot':'A secret team goes to North Pole',       'year':1950,       'rating':9.5,       'lat':60.4,       'lon':51.99,       'advise':'PG-13',       'meta':'{\"keywords\":{\"travel\",\"ice\"},\"genre\":{\"adventure\"}}',       'language':[2,3]     }   }   ```   The document id can also be missing, in which case an autogenerated one will be used:             ```   {     'index':'movies',     'doc':     {       'title':'This is a new movie',       'plot':'A secret team goes to North Pole',       'year':2020,       'rating':9.5,       'lat':60.4,       'lon':51.99,       'advise':'PG-13',       'meta':'{\"keywords\":{\"travel\",\"ice\"},\"genre\":{\"adventure\"}}',       'language':[2,3]     }   }   ```   It responds with an object in format:      ```   {'_index':'products','_id':701,'created':true,'result':'created','status':201}   ```   # noqa: E501
-        This method makes a synchronous HTTP request by default. To make an
-        asynchronous HTTP request, please pass async_req=True
-
-        >>> thread = api.insert(insert_document_request, async_req=True)
-        >>> result = thread.get()
-
-        :param insert_document_request: (required)
-        :type insert_document_request: InsertDocumentRequest
-        :param async_req: Whether to execute the request asynchronously.
-        :type async_req: bool, optional
-        :param _preload_content: if False, the urllib3.HTTPResponse object will
-                                 be returned without reading/decoding response
-                                 data. Default is True.
-        :type _preload_content: bool, optional
-        :param _request_timeout: timeout setting for this request. If one
-                                 number provided, it will be total request
-                                 timeout. It can also be a pair (tuple) of
-                                 (connection, read) timeouts.
-        :return: Returns the result object.
-                 If the method is called asynchronously,
-                 returns the request thread.
-        :rtype: SuccessResponse
-        """
-        kwargs['_return_http_data_only'] = True
-        return self.insert_with_http_info(insert_document_request, **kwargs)  # noqa: E501
-
-    def insert_with_http_info(self, insert_document_request, **kwargs):  # noqa: E501
-        """Create a new document in an index  # noqa: E501
-
-        Insert a document.  Expects an object like:     ```   {     'index':'movies',     'id':701,     'doc':     {       'title':'This is an old movie',       'plot':'A secret team goes to North Pole',       'year':1950,       'rating':9.5,       'lat':60.4,       'lon':51.99,       'advise':'PG-13',       'meta':'{\"keywords\":{\"travel\",\"ice\"},\"genre\":{\"adventure\"}}',       'language':[2,3]     }   }   ```   The document id can also be missing, in which case an autogenerated one will be used:             ```   {     'index':'movies',     'doc':     {       'title':'This is a new movie',       'plot':'A secret team goes to North Pole',       'year':2020,       'rating':9.5,       'lat':60.4,       'lon':51.99,       'advise':'PG-13',       'meta':'{\"keywords\":{\"travel\",\"ice\"},\"genre\":{\"adventure\"}}',       'language':[2,3]     }   }   ```   It responds with an object in format:      ```   {'_index':'products','_id':701,'created':true,'result':'created','status':201}   ```   # noqa: E501
-        This method makes a synchronous HTTP request by default. To make an
-        asynchronous HTTP request, please pass async_req=True
-
-        >>> thread = api.insert_with_http_info(insert_document_request, async_req=True)
-        >>> result = thread.get()
-
-        :param insert_document_request: (required)
-        :type insert_document_request: InsertDocumentRequest
-        :param async_req: Whether to execute the request asynchronously.
-        :type async_req: bool, optional
-        :param _return_http_data_only: response data without head status code
-                                       and headers
-        :type _return_http_data_only: bool, optional
-        :param _preload_content: if False, the urllib3.HTTPResponse object will
-                                 be returned without reading/decoding response
-                                 data. Default is True.
-        :type _preload_content: bool, optional
-        :param _request_timeout: timeout setting for this request. If one
-                                 number provided, it will be total request
-                                 timeout. It can also be a pair (tuple) of
-                                 (connection, read) timeouts.
-        :param _request_auth: set to override the auth_settings for an a single
-                              request; this effectively ignores the authentication
-                              in the spec for a single request.
-        :type _request_auth: dict, optional
-        :return: Returns the result object.
-                 If the method is called asynchronously,
-                 returns the request thread.
-        :rtype: tuple(SuccessResponse, status_code(int), headers(HTTPHeaderDict))
-        """
-
-        local_var_params = locals()
-
-        all_params = [
-            'insert_document_request'
-        ]
-        all_params.extend(
-            [
-                'async_req',
-                '_return_http_data_only',
-                '_preload_content',
-                '_request_timeout',
-                '_request_auth'
-            ]
-        )
-        for key, val in six.iteritems(local_var_params['kwargs']):
-            if key not in all_params:
-                raise ApiTypeError(
-                    "Got an unexpected keyword argument '%s'"
-                    " to method insert" % key
-                )
-            local_var_params[key] = val
-        del local_var_params['kwargs']
-        # verify the required parameter 'insert_document_request' is set
-        if self.api_client.client_side_validation and ('insert_document_request' not in local_var_params or  # noqa: E501
-                                                        local_var_params['insert_document_request'] is None):  # noqa: E501
-            raise ApiValueError("Missing the required parameter `insert_document_request` when calling `insert`")  # noqa: E501
-
-        collection_formats = {}
-
-        path_params = {}
-
-        query_params = []
-
-        header_params = {}
-
-        form_params = []
-        local_var_files = {}
-
-        body_params = None
-        if 'insert_document_request' in local_var_params:
-            body_params = local_var_params['insert_document_request']
-
-        # HTTP header `Accept`
-        header_params['Accept'] = self.api_client.select_header_accept(
-            ['application/json'])  # noqa: E501
-
-        # HTTP header `Content-Type`
-        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
-            ['application/json'])  # noqa: E501
-
-        # Authentication setting
-        auth_settings = []  # noqa: E501
-
-        res = self.api_client.call_api(
-            '/insert', 'POST',
-            path_params,
-            query_params,
-            header_params,
-            body=body_params,
-            post_params=form_params,
-            files=local_var_files,
-            response_type='SuccessResponse',  # noqa: E501
-            auth_settings=auth_settings,
-            async_req=local_var_params.get('async_req'),
-            _return_http_data_only=local_var_params.get('_return_http_data_only'),  # noqa: E501
-            _preload_content=local_var_params.get('_preload_content', True),
-            _request_timeout=local_var_params.get('_request_timeout'),
-            collection_formats=collection_formats,
-            _request_auth=local_var_params.get('_request_auth'))
-        return res
-         
-
-    def replace(self, insert_document_request, **kwargs):  # noqa: E501
-        """Replace new document in an index  # noqa: E501
-
-        Replace an existing document. Input has same format as `insert` operation. <br/> Responds with an object in format: <br/>    ```   {'_index':'products','_id':1,'created':false,'result':'updated','status':200}   ```   # noqa: E501
-        This method makes a synchronous HTTP request by default. To make an
-        asynchronous HTTP request, please pass async_req=True
-
-        >>> thread = api.replace(insert_document_request, async_req=True)
-        >>> result = thread.get()
-
-        :param insert_document_request: (required)
-        :type insert_document_request: InsertDocumentRequest
-        :param async_req: Whether to execute the request asynchronously.
-        :type async_req: bool, optional
-        :param _preload_content: if False, the urllib3.HTTPResponse object will
-                                 be returned without reading/decoding response
-                                 data. Default is True.
-        :type _preload_content: bool, optional
-        :param _request_timeout: timeout setting for this request. If one
-                                 number provided, it will be total request
-                                 timeout. It can also be a pair (tuple) of
-                                 (connection, read) timeouts.
-        :return: Returns the result object.
-                 If the method is called asynchronously,
-                 returns the request thread.
-        :rtype: SuccessResponse
-        """
-        kwargs['_return_http_data_only'] = True
-        return self.replace_with_http_info(insert_document_request, **kwargs)  # noqa: E501
-
-    def replace_with_http_info(self, insert_document_request, **kwargs):  # noqa: E501
-        """Replace new document in an index  # noqa: E501
-
-        Replace an existing document. Input has same format as `insert` operation. <br/> Responds with an object in format: <br/>    ```   {'_index':'products','_id':1,'created':false,'result':'updated','status':200}   ```   # noqa: E501
-        This method makes a synchronous HTTP request by default. To make an
-        asynchronous HTTP request, please pass async_req=True
-
-        >>> thread = api.replace_with_http_info(insert_document_request, async_req=True)
-        >>> result = thread.get()
-
-        :param insert_document_request: (required)
-        :type insert_document_request: InsertDocumentRequest
-        :param async_req: Whether to execute the request asynchronously.
-        :type async_req: bool, optional
-        :param _return_http_data_only: response data without head status code
-                                       and headers
-        :type _return_http_data_only: bool, optional
-        :param _preload_content: if False, the urllib3.HTTPResponse object will
-                                 be returned without reading/decoding response
-                                 data. Default is True.
-        :type _preload_content: bool, optional
-        :param _request_timeout: timeout setting for this request. If one
-                                 number provided, it will be total request
-                                 timeout. It can also be a pair (tuple) of
-                                 (connection, read) timeouts.
-        :param _request_auth: set to override the auth_settings for an a single
-                              request; this effectively ignores the authentication
-                              in the spec for a single request.
-        :type _request_auth: dict, optional
-        :return: Returns the result object.
-                 If the method is called asynchronously,
-                 returns the request thread.
-        :rtype: tuple(SuccessResponse, status_code(int), headers(HTTPHeaderDict))
-        """
-
-        local_var_params = locals()
-
-        all_params = [
-            'insert_document_request'
-        ]
-        all_params.extend(
-            [
-                'async_req',
-                '_return_http_data_only',
-                '_preload_content',
-                '_request_timeout',
-                '_request_auth'
-            ]
-        )
-        for key, val in six.iteritems(local_var_params['kwargs']):
-            if key not in all_params:
-                raise ApiTypeError(
-                    "Got an unexpected keyword argument '%s'"
-                    " to method replace" % key
-                )
-            local_var_params[key] = val
-        del local_var_params['kwargs']
-        # verify the required parameter 'insert_document_request' is set
-        if self.api_client.client_side_validation and ('insert_document_request' not in local_var_params or  # noqa: E501
-                                                        local_var_params['insert_document_request'] is None):  # noqa: E501
-            raise ApiValueError("Missing the required parameter `insert_document_request` when calling `replace`")  # noqa: E501
-
-        collection_formats = {}
-
-        path_params = {}
-
-        query_params = []
-
-        header_params = {}
-
-        form_params = []
-        local_var_files = {}
-
-        body_params = None
-        if 'insert_document_request' in local_var_params:
-            body_params = local_var_params['insert_document_request']
-
-        # HTTP header `Accept`
-        header_params['Accept'] = self.api_client.select_header_accept(
-            ['application/json'])  # noqa: E501
-
-        # HTTP header `Content-Type`
-        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
-            ['application/json'])  # noqa: E501
-
-        # Authentication setting
-        auth_settings = []  # noqa: E501
-
-        res = self.api_client.call_api(
-            '/replace', 'POST',
-            path_params,
-            query_params,
-            header_params,
-            body=body_params,
-            post_params=form_params,
-            files=local_var_files,
-            response_type='SuccessResponse',  # noqa: E501
-            auth_settings=auth_settings,
-            async_req=local_var_params.get('async_req'),
-            _return_http_data_only=local_var_params.get('_return_http_data_only'),  # noqa: E501
-            _preload_content=local_var_params.get('_preload_content', True),
-            _request_timeout=local_var_params.get('_request_timeout'),
-            collection_formats=collection_formats,
-            _request_auth=local_var_params.get('_request_auth'))
-        return res
-         
-
-    def update(self, update_document_request, **kwargs):  # noqa: E501
-        """Update a document in an index  # noqa: E501
-
-        Update one or several documents. The update can be made by passing the id or by using a match query in case multiple documents can be updated.  For example update a document using document id:    ```   {'index':'movies','doc':{'rating':9.49},'id':100}   ```  And update by using a match query:    ```   {     'index':'movies',     'doc':{'rating':9.49},     'query':     {       'bool':       {         'must':         [           {'query_string':'new movie'}         ]       }     }   }   ```   The match query has same syntax as for searching. Responds with an object that tells how many documents where updated in format:     ```   {'_index':'products','updated':1}   ```   # noqa: E501
-        This method makes a synchronous HTTP request by default. To make an
-        asynchronous HTTP request, please pass async_req=True
-
-        >>> thread = api.update(update_document_request, async_req=True)
-        >>> result = thread.get()
-
-        :param update_document_request: (required)
-        :type update_document_request: UpdateDocumentRequest
-        :param async_req: Whether to execute the request asynchronously.
-        :type async_req: bool, optional
-        :param _preload_content: if False, the urllib3.HTTPResponse object will
-                                 be returned without reading/decoding response
-                                 data. Default is True.
-        :type _preload_content: bool, optional
-        :param _request_timeout: timeout setting for this request. If one
-                                 number provided, it will be total request
-                                 timeout. It can also be a pair (tuple) of
-                                 (connection, read) timeouts.
-        :return: Returns the result object.
-                 If the method is called asynchronously,
-                 returns the request thread.
-        :rtype: UpdateResponse
-        """
-        kwargs['_return_http_data_only'] = True
-        return self.update_with_http_info(update_document_request, **kwargs)  # noqa: E501
-
-    def update_with_http_info(self, update_document_request, **kwargs):  # noqa: E501
-        """Update a document in an index  # noqa: E501
-
-        Update one or several documents. The update can be made by passing the id or by using a match query in case multiple documents can be updated.  For example update a document using document id:    ```   {'index':'movies','doc':{'rating':9.49},'id':100}   ```  And update by using a match query:    ```   {     'index':'movies',     'doc':{'rating':9.49},     'query':     {       'bool':       {         'must':         [           {'query_string':'new movie'}         ]       }     }   }   ```   The match query has same syntax as for searching. Responds with an object that tells how many documents where updated in format:     ```   {'_index':'products','updated':1}   ```   # noqa: E501
-        This method makes a synchronous HTTP request by default. To make an
-        asynchronous HTTP request, please pass async_req=True
-
-        >>> thread = api.update_with_http_info(update_document_request, async_req=True)
-        >>> result = thread.get()
-
-        :param update_document_request: (required)
-        :type update_document_request: UpdateDocumentRequest
-        :param async_req: Whether to execute the request asynchronously.
-        :type async_req: bool, optional
-        :param _return_http_data_only: response data without head status code
-                                       and headers
-        :type _return_http_data_only: bool, optional
-        :param _preload_content: if False, the urllib3.HTTPResponse object will
-                                 be returned without reading/decoding response
-                                 data. Default is True.
-        :type _preload_content: bool, optional
-        :param _request_timeout: timeout setting for this request. If one
-                                 number provided, it will be total request
-                                 timeout. It can also be a pair (tuple) of
-                                 (connection, read) timeouts.
-        :param _request_auth: set to override the auth_settings for an a single
-                              request; this effectively ignores the authentication
-                              in the spec for a single request.
-        :type _request_auth: dict, optional
-        :return: Returns the result object.
-                 If the method is called asynchronously,
-                 returns the request thread.
-        :rtype: tuple(UpdateResponse, status_code(int), headers(HTTPHeaderDict))
-        """
-
-        local_var_params = locals()
-
-        all_params = [
-            'update_document_request'
-        ]
-        all_params.extend(
-            [
-                'async_req',
-                '_return_http_data_only',
-                '_preload_content',
-                '_request_timeout',
-                '_request_auth'
-            ]
-        )
-        for key, val in six.iteritems(local_var_params['kwargs']):
-            if key not in all_params:
-                raise ApiTypeError(
-                    "Got an unexpected keyword argument '%s'"
-                    " to method update" % key
-                )
-            local_var_params[key] = val
-        del local_var_params['kwargs']
-        # verify the required parameter 'update_document_request' is set
-        if self.api_client.client_side_validation and ('update_document_request' not in local_var_params or  # noqa: E501
-                                                        local_var_params['update_document_request'] is None):  # noqa: E501
-            raise ApiValueError("Missing the required parameter `update_document_request` when calling `update`")  # noqa: E501
-
-        collection_formats = {}
-
-        path_params = {}
-
-        query_params = []
-
-        header_params = {}
-
-        form_params = []
-        local_var_files = {}
-
-        body_params = None
-        if 'update_document_request' in local_var_params:
-            body_params = local_var_params['update_document_request']
-
-        # HTTP header `Accept`
-        header_params['Accept'] = self.api_client.select_header_accept(
-            ['application/json'])  # noqa: E501
-
-        # HTTP header `Content-Type`
-        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
-            ['application/json'])  # noqa: E501
-
-        # Authentication setting
-        auth_settings = []  # noqa: E501
-
-        res = self.api_client.call_api(
-            '/update', 'POST',
-            path_params,
-            query_params,
-            header_params,
-            body=body_params,
-            post_params=form_params,
-            files=local_var_files,
-            response_type='UpdateResponse',  # noqa: E501
-            auth_settings=auth_settings,
-            async_req=local_var_params.get('async_req'),
-            _return_http_data_only=local_var_params.get('_return_http_data_only'),  # noqa: E501
-            _preload_content=local_var_params.get('_preload_content', True),
-            _request_timeout=local_var_params.get('_request_timeout'),
-            collection_formats=collection_formats,
-            _request_auth=local_var_params.get('_request_auth'))
-        return res
-         
diff --git a/out/manticoresearch-python-actual/manticoresearch/api/search_api.py b/out/manticoresearch-python-actual/manticoresearch/api/search_api.py
deleted file mode 100644
index c1e260b..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/api/search_api.py
+++ /dev/null
@@ -1,324 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-from __future__ import absolute_import
-
-import re  # noqa: F401
-
-# python 2 and python 3 compatibility library
-import six
-from six.moves.urllib.parse import quote
-
-from manticoresearch.api_client import ApiClient
-from manticoresearch.exceptions import (  # noqa: F401
-    ApiTypeError,
-    ApiValueError
-)
-
-
-class SearchApi(object):
-    """NOTE: This class is auto generated by OpenAPI Generator
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    def __init__(self, api_client=None):
-        if api_client is None:
-            api_client = ApiClient()
-        self.api_client = api_client
-
-    def percolate(self, index, percolate_request, **kwargs):  # noqa: E501
-        """Perform reverse search on a percolate index  # noqa: E501
-
-        Performs a percolate search.  This method must be used only on percolate indexes.  Expects two parameters: the index name and an object with array of documents to be tested. An example of the documents object:    ```   {     \"query\":     {       \"percolate\":       {         \"document\":         {           \"content\":\"sample content\"         }       }     }   }   ```  Responds with an object with matched stored queries:     ```   {     'timed_out':false,     'hits':     {       'total':2,       'max_score':1,       'hits':       [         {           '_index':'idx_pq_1',           '_type':'doc',           '_id':'2',           '_score':'1',           '_source':           {             'query':             {               'match':{'title':'some'}             }           }         },         {           '_index':'idx_pq_1',           '_type':'doc',           '_id':'5',           '_score':'1',           '_source':           {             'query':             {               'ql':'some | none'             }           }         }       ]     }   }   ```   # noqa: E501
-        This method makes a synchronous HTTP request by default. To make an
-        asynchronous HTTP request, please pass async_req=True
-
-        >>> thread = api.percolate(index, percolate_request, async_req=True)
-        >>> result = thread.get()
-
-        :param index: Name of the percolate index (required)
-        :type index: str
-        :param percolate_request: (required)
-        :type percolate_request: PercolateRequest
-        :param async_req: Whether to execute the request asynchronously.
-        :type async_req: bool, optional
-        :param _preload_content: if False, the urllib3.HTTPResponse object will
-                                 be returned without reading/decoding response
-                                 data. Default is True.
-        :type _preload_content: bool, optional
-        :param _request_timeout: timeout setting for this request. If one
-                                 number provided, it will be total request
-                                 timeout. It can also be a pair (tuple) of
-                                 (connection, read) timeouts.
-        :return: Returns the result object.
-                 If the method is called asynchronously,
-                 returns the request thread.
-        :rtype: SearchResponse
-        """
-        kwargs['_return_http_data_only'] = True
-        return self.percolate_with_http_info(index, percolate_request, **kwargs)  # noqa: E501
-
-    def percolate_with_http_info(self, index, percolate_request, **kwargs):  # noqa: E501
-        """Perform reverse search on a percolate index  # noqa: E501
-
-        Performs a percolate search.  This method must be used only on percolate indexes.  Expects two parameters: the index name and an object with array of documents to be tested. An example of the documents object:    ```   {     \"query\":     {       \"percolate\":       {         \"document\":         {           \"content\":\"sample content\"         }       }     }   }   ```  Responds with an object with matched stored queries:     ```   {     'timed_out':false,     'hits':     {       'total':2,       'max_score':1,       'hits':       [         {           '_index':'idx_pq_1',           '_type':'doc',           '_id':'2',           '_score':'1',           '_source':           {             'query':             {               'match':{'title':'some'}             }           }         },         {           '_index':'idx_pq_1',           '_type':'doc',           '_id':'5',           '_score':'1',           '_source':           {             'query':             {               'ql':'some | none'             }           }         }       ]     }   }   ```   # noqa: E501
-        This method makes a synchronous HTTP request by default. To make an
-        asynchronous HTTP request, please pass async_req=True
-
-        >>> thread = api.percolate_with_http_info(index, percolate_request, async_req=True)
-        >>> result = thread.get()
-
-        :param index: Name of the percolate index (required)
-        :type index: str
-        :param percolate_request: (required)
-        :type percolate_request: PercolateRequest
-        :param async_req: Whether to execute the request asynchronously.
-        :type async_req: bool, optional
-        :param _return_http_data_only: response data without head status code
-                                       and headers
-        :type _return_http_data_only: bool, optional
-        :param _preload_content: if False, the urllib3.HTTPResponse object will
-                                 be returned without reading/decoding response
-                                 data. Default is True.
-        :type _preload_content: bool, optional
-        :param _request_timeout: timeout setting for this request. If one
-                                 number provided, it will be total request
-                                 timeout. It can also be a pair (tuple) of
-                                 (connection, read) timeouts.
-        :param _request_auth: set to override the auth_settings for an a single
-                              request; this effectively ignores the authentication
-                              in the spec for a single request.
-        :type _request_auth: dict, optional
-        :return: Returns the result object.
-                 If the method is called asynchronously,
-                 returns the request thread.
-        :rtype: tuple(SearchResponse, status_code(int), headers(HTTPHeaderDict))
-        """
-
-        local_var_params = locals()
-
-        all_params = [
-            'index', 
-            'percolate_request'
-        ]
-        all_params.extend(
-            [
-                'async_req',
-                '_return_http_data_only',
-                '_preload_content',
-                '_request_timeout',
-                '_request_auth'
-            ]
-        )
-        for key, val in six.iteritems(local_var_params['kwargs']):
-            if key not in all_params:
-                raise ApiTypeError(
-                    "Got an unexpected keyword argument '%s'"
-                    " to method percolate" % key
-                )
-            local_var_params[key] = val
-        del local_var_params['kwargs']
-        # verify the required parameter 'index' is set
-        if self.api_client.client_side_validation and ('index' not in local_var_params or  # noqa: E501
-                                                        local_var_params['index'] is None):  # noqa: E501
-            raise ApiValueError("Missing the required parameter `index` when calling `percolate`")  # noqa: E501
-        # verify the required parameter 'percolate_request' is set
-        if self.api_client.client_side_validation and ('percolate_request' not in local_var_params or  # noqa: E501
-                                                        local_var_params['percolate_request'] is None):  # noqa: E501
-            raise ApiValueError("Missing the required parameter `percolate_request` when calling `percolate`")  # noqa: E501
-
-        collection_formats = {}
-
-        path_params = {}
-        if 'index' in local_var_params:
-            path_params['index'] = local_var_params['index']  # noqa: E501
-
-        query_params = []
-
-        header_params = {}
-
-        form_params = []
-        local_var_files = {}
-
-        body_params = None
-        if 'percolate_request' in local_var_params:
-            body_params = local_var_params['percolate_request']
-
-        # HTTP header `Accept`
-        header_params['Accept'] = self.api_client.select_header_accept(
-            ['application/json'])  # noqa: E501
-
-        # HTTP header `Content-Type`
-        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
-            ['application/json'])  # noqa: E501
-
-        # Authentication setting
-        auth_settings = []  # noqa: E501
-
-        res = self.api_client.call_api(
-            '/pq/{index}/search', 'POST',
-            path_params,
-            query_params,
-            header_params,
-            body=body_params,
-            post_params=form_params,
-            files=local_var_files,
-            response_type='SearchResponse',  # noqa: E501
-            auth_settings=auth_settings,
-            async_req=local_var_params.get('async_req'),
-            _return_http_data_only=local_var_params.get('_return_http_data_only'),  # noqa: E501
-            _preload_content=local_var_params.get('_preload_content', True),
-            _request_timeout=local_var_params.get('_request_timeout'),
-            collection_formats=collection_formats,
-            _request_auth=local_var_params.get('_request_auth'))
-        return res
-         
-
-    def search(self, search_request, **kwargs):  # noqa: E501
-        """Performs a search on an index  # noqa: E501
-
-         The method expects an object with the following mandatory properties: * the name of the index to search * the match query object For details, see the documentation on [**SearchRequest**](SearchRequest.md) The method returns an object with the following properties: - took: the time taken to execute the search query. - timed_out: a boolean indicating whether the query timed out. - hits: an object with the following properties:    - total: the total number of hits found.    - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:      - _id: the ID of the matched document.      - _score: the score of the matched document.      - _source: the source data of the matched document.  In addition, if profiling is enabled, the response will include an additional array with profiling information attached. Here is an example search response:    ```   {     'took':10,     'timed_out':false,     'hits':     {       'total':2,       'hits':       [         {'_id':'1','_score':1,'_source':{'gid':11}},         {'_id':'2','_score':1,'_source':{'gid':12}}       ]     }   }   ```  For more information about the match query syntax and additional parameters that can be added to request and response, please see the documentation [here](https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON).   # noqa: E501
-        This method makes a synchronous HTTP request by default. To make an
-        asynchronous HTTP request, please pass async_req=True
-
-        >>> thread = api.search(search_request, async_req=True)
-        >>> result = thread.get()
-
-        :param search_request: (required)
-        :type search_request: SearchRequest
-        :param async_req: Whether to execute the request asynchronously.
-        :type async_req: bool, optional
-        :param _preload_content: if False, the urllib3.HTTPResponse object will
-                                 be returned without reading/decoding response
-                                 data. Default is True.
-        :type _preload_content: bool, optional
-        :param _request_timeout: timeout setting for this request. If one
-                                 number provided, it will be total request
-                                 timeout. It can also be a pair (tuple) of
-                                 (connection, read) timeouts.
-        :return: Returns the result object.
-                 If the method is called asynchronously,
-                 returns the request thread.
-        :rtype: SearchResponse
-        """
-        kwargs['_return_http_data_only'] = True
-        return self.search_with_http_info(search_request, **kwargs)  # noqa: E501
-
-    def search_with_http_info(self, search_request, **kwargs):  # noqa: E501
-        """Performs a search on an index  # noqa: E501
-
-         The method expects an object with the following mandatory properties: * the name of the index to search * the match query object For details, see the documentation on [**SearchRequest**](SearchRequest.md) The method returns an object with the following properties: - took: the time taken to execute the search query. - timed_out: a boolean indicating whether the query timed out. - hits: an object with the following properties:    - total: the total number of hits found.    - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:      - _id: the ID of the matched document.      - _score: the score of the matched document.      - _source: the source data of the matched document.  In addition, if profiling is enabled, the response will include an additional array with profiling information attached. Here is an example search response:    ```   {     'took':10,     'timed_out':false,     'hits':     {       'total':2,       'hits':       [         {'_id':'1','_score':1,'_source':{'gid':11}},         {'_id':'2','_score':1,'_source':{'gid':12}}       ]     }   }   ```  For more information about the match query syntax and additional parameters that can be added to request and response, please see the documentation [here](https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON).   # noqa: E501
-        This method makes a synchronous HTTP request by default. To make an
-        asynchronous HTTP request, please pass async_req=True
-
-        >>> thread = api.search_with_http_info(search_request, async_req=True)
-        >>> result = thread.get()
-
-        :param search_request: (required)
-        :type search_request: SearchRequest
-        :param async_req: Whether to execute the request asynchronously.
-        :type async_req: bool, optional
-        :param _return_http_data_only: response data without head status code
-                                       and headers
-        :type _return_http_data_only: bool, optional
-        :param _preload_content: if False, the urllib3.HTTPResponse object will
-                                 be returned without reading/decoding response
-                                 data. Default is True.
-        :type _preload_content: bool, optional
-        :param _request_timeout: timeout setting for this request. If one
-                                 number provided, it will be total request
-                                 timeout. It can also be a pair (tuple) of
-                                 (connection, read) timeouts.
-        :param _request_auth: set to override the auth_settings for an a single
-                              request; this effectively ignores the authentication
-                              in the spec for a single request.
-        :type _request_auth: dict, optional
-        :return: Returns the result object.
-                 If the method is called asynchronously,
-                 returns the request thread.
-        :rtype: tuple(SearchResponse, status_code(int), headers(HTTPHeaderDict))
-        """
-
-        local_var_params = locals()
-
-        all_params = [
-            'search_request'
-        ]
-        all_params.extend(
-            [
-                'async_req',
-                '_return_http_data_only',
-                '_preload_content',
-                '_request_timeout',
-                '_request_auth'
-            ]
-        )
-        for key, val in six.iteritems(local_var_params['kwargs']):
-            if key not in all_params:
-                raise ApiTypeError(
-                    "Got an unexpected keyword argument '%s'"
-                    " to method search" % key
-                )
-            local_var_params[key] = val
-        del local_var_params['kwargs']
-        # verify the required parameter 'search_request' is set
-        if self.api_client.client_side_validation and ('search_request' not in local_var_params or  # noqa: E501
-                                                        local_var_params['search_request'] is None):  # noqa: E501
-            raise ApiValueError("Missing the required parameter `search_request` when calling `search`")  # noqa: E501
-
-        collection_formats = {}
-
-        path_params = {}
-
-        query_params = []
-
-        header_params = {}
-
-        form_params = []
-        local_var_files = {}
-
-        body_params = None
-        if 'search_request' in local_var_params:
-            body_params = local_var_params['search_request']
-            if type(body_params) != dict:
-                body_params = body_params.to_dict()
-            body_params = dict(filter(lambda item: item[1] is not None, body_params.items() )) 
-
-        # HTTP header `Accept`
-        header_params['Accept'] = self.api_client.select_header_accept(
-            ['application/json'])  # noqa: E501
-
-        # HTTP header `Content-Type`
-        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
-            ['application/json'])  # noqa: E501
-
-        # Authentication setting
-        auth_settings = []  # noqa: E501
-
-        res = self.api_client.call_api(
-            '/search', 'POST',
-            path_params,
-            query_params,
-            header_params,
-            body=body_params,
-            post_params=form_params,
-            files=local_var_files,
-            response_type='SearchResponse',  # noqa: E501
-            auth_settings=auth_settings,
-            async_req=local_var_params.get('async_req'),
-            _return_http_data_only=local_var_params.get('_return_http_data_only'),  # noqa: E501
-            _preload_content=local_var_params.get('_preload_content', True),
-            _request_timeout=local_var_params.get('_request_timeout'),
-            collection_formats=collection_formats,
-            _request_auth=local_var_params.get('_request_auth'))
-        return res
-         
diff --git a/out/manticoresearch-python-actual/manticoresearch/api/utils_api.py b/out/manticoresearch-python-actual/manticoresearch/api/utils_api.py
deleted file mode 100644
index bd4b0ad..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/api/utils_api.py
+++ /dev/null
@@ -1,184 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-from __future__ import absolute_import
-
-import re  # noqa: F401
-
-# python 2 and python 3 compatibility library
-import six
-from six.moves.urllib.parse import quote
-
-from manticoresearch.api_client import ApiClient
-from manticoresearch.exceptions import (  # noqa: F401
-    ApiTypeError,
-    ApiValueError
-)
-
-
-class UtilsApi(object):
-    """NOTE: This class is auto generated by OpenAPI Generator
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    def __init__(self, api_client=None):
-        if api_client is None:
-            api_client = ApiClient()
-        self.api_client = api_client
-
-    def sql(self, body, **kwargs):  # noqa: E501
-        """Perform SQL requests  # noqa: E501
-
-        Run a query in SQL format. Expects a query string passed through `body` parameter and optional `raw_response` parameter that defines a format of response. `raw_response` can be set to `False` for Select queries only, e.g., `SELECT * FROM myindex` The query string must stay as it is, no URL encoding is needed. The response object depends on the query executed. In select mode the response has same format as `/search` operation.   # noqa: E501
-        This method makes a synchronous HTTP request by default. To make an
-        asynchronous HTTP request, please pass async_req=True
-
-        >>> thread = api.sql(body, async_req=True)
-        >>> result = thread.get()
-
-        :param body: A query parameter string.  (required)
-        :type body: str
-        :param raw_response: Optional parameter, defines a format of response. Can be set to `False` for Select only queries and set to `True` or omitted for any type of queries: 
-        :type raw_response: bool
-        :param async_req: Whether to execute the request asynchronously.
-        :type async_req: bool, optional
-        :param _preload_content: if False, the urllib3.HTTPResponse object will
-                                 be returned without reading/decoding response
-                                 data. Default is True.
-        :type _preload_content: bool, optional
-        :param _request_timeout: timeout setting for this request. If one
-                                 number provided, it will be total request
-                                 timeout. It can also be a pair (tuple) of
-                                 (connection, read) timeouts.
-        :return: Returns the result object.
-                 If the method is called asynchronously,
-                 returns the request thread.
-        :rtype: SqlResponse
-        """
-        kwargs['_return_http_data_only'] = True
-        return self.sql_with_http_info(body, **kwargs)  # noqa: E501
-
-    def sql_with_http_info(self, body, **kwargs):  # noqa: E501
-        """Perform SQL requests  # noqa: E501
-
-        Run a query in SQL format. Expects a query string passed through `body` parameter and optional `raw_response` parameter that defines a format of response. `raw_response` can be set to `False` for Select queries only, e.g., `SELECT * FROM myindex` The query string must stay as it is, no URL encoding is needed. The response object depends on the query executed. In select mode the response has same format as `/search` operation.   # noqa: E501
-        This method makes a synchronous HTTP request by default. To make an
-        asynchronous HTTP request, please pass async_req=True
-
-        >>> thread = api.sql_with_http_info(body, async_req=True)
-        >>> result = thread.get()
-
-        :param body: A query parameter string.  (required)
-        :type body: str
-        :param raw_response: Optional parameter, defines a format of response. Can be set to `False` for Select only queries and set to `True` or omitted for any type of queries: 
-        :type raw_response: bool
-        :param async_req: Whether to execute the request asynchronously.
-        :type async_req: bool, optional
-        :param _return_http_data_only: response data without head status code
-                                       and headers
-        :type _return_http_data_only: bool, optional
-        :param _preload_content: if False, the urllib3.HTTPResponse object will
-                                 be returned without reading/decoding response
-                                 data. Default is True.
-        :type _preload_content: bool, optional
-        :param _request_timeout: timeout setting for this request. If one
-                                 number provided, it will be total request
-                                 timeout. It can also be a pair (tuple) of
-                                 (connection, read) timeouts.
-        :param _request_auth: set to override the auth_settings for an a single
-                              request; this effectively ignores the authentication
-                              in the spec for a single request.
-        :type _request_auth: dict, optional
-        :return: Returns the result object.
-                 If the method is called asynchronously,
-                 returns the request thread.
-        :rtype: tuple(SqlResponse, status_code(int), headers(HTTPHeaderDict))
-        """
-
-        local_var_params = locals()
-
-        all_params = [
-            'body', 
-            'raw_response'
-        ]
-        all_params.extend(
-            [
-                'async_req',
-                '_return_http_data_only',
-                '_preload_content',
-                '_request_timeout',
-                '_request_auth'
-            ]
-        )
-        for key, val in six.iteritems(local_var_params['kwargs']):
-            if key not in all_params:
-                raise ApiTypeError(
-                    "Got an unexpected keyword argument '%s'"
-                    " to method sql" % key
-                )
-            local_var_params[key] = val
-        del local_var_params['kwargs']
-        # verify the required parameter 'body' is set
-        if self.api_client.client_side_validation and ('body' not in local_var_params or  # noqa: E501
-                                                        local_var_params['body'] is None):  # noqa: E501
-            raise ApiValueError("Missing the required parameter `body` when calling `sql`")  # noqa: E501
-
-        collection_formats = {}
-
-        path_params = {}
-
-        query_params = []
-        if 'raw_response' in local_var_params and local_var_params['raw_response'] is not None:  # noqa: E501
-            query_params.append(('raw_response', local_var_params['raw_response']))  # noqa: E501
-
-        header_params = {}
-
-        form_params = []
-        local_var_files = {}
-
-        body_params = None
-        if 'body' in local_var_params:
-          if  'raw_response' in local_var_params and not local_var_params['raw_response']:
-              body_params = 'query=' 
-          elif not 'raw_response' in local_var_params or local_var_params['raw_response']:
-              body_params = 'mode=raw&query='
-          body_params += quote( str( local_var_params['body'] ) )
-
-        # HTTP header `Accept`
-        header_params['Accept'] = self.api_client.select_header_accept(
-            ['application/json'])  # noqa: E501
-
-        # HTTP header `Content-Type`
-        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
-            ['text/plain'])  # noqa: E501
-
-        # Authentication setting
-        auth_settings = []  # noqa: E501
-
-        res = self.api_client.call_api(
-            '/sql', 'POST',
-            path_params,
-            query_params,
-            header_params,
-            body=body_params,
-            post_params=form_params,
-            files=local_var_files,
-            response_type='SqlResponse',  # noqa: E501
-            auth_settings=auth_settings,
-            async_req=local_var_params.get('async_req'),
-            _return_http_data_only=local_var_params.get('_return_http_data_only'),  # noqa: E501
-            _preload_content=local_var_params.get('_preload_content', True),
-            _request_timeout=local_var_params.get('_request_timeout'),
-            collection_formats=collection_formats,
-            _request_auth=local_var_params.get('_request_auth'))
-        return [ res ] if 'raw_response' in local_var_params and not local_var_params['raw_response'] else res
-         
diff --git a/out/manticoresearch-python-actual/manticoresearch/api_client.py b/out/manticoresearch-python-actual/manticoresearch/api_client.py
deleted file mode 100644
index fd3a43a..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/api_client.py
+++ /dev/null
@@ -1,693 +0,0 @@
-# coding: utf-8
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-from __future__ import absolute_import
-
-import atexit
-import datetime
-from dateutil.parser import parse
-import json
-import mimetypes
-from multiprocessing.pool import ThreadPool
-import os
-import re
-import tempfile
-
-# python 2 and python 3 compatibility library
-import six
-from six.moves.urllib.parse import quote
-
-from manticoresearch.configuration import Configuration
-import manticoresearch.model
-from manticoresearch import rest
-from manticoresearch.exceptions import ApiValueError, ApiException
-
-
-class ApiClient(object):
-    """Generic API client for OpenAPI client library builds.
-
-    OpenAPI generic API client. This client handles the client-
-    server communication, and is invariant across implementations. Specifics of
-    the methods and models for each application are generated from the OpenAPI
-    templates.
-
-    NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-    Do not edit the class manually.
-
-    :param configuration: .Configuration object for this client
-    :param header_name: a header to pass when making calls to the API.
-    :param header_value: a header value to pass when making calls to
-        the API.
-    :param cookie: a cookie to include in the header when making calls
-        to the API
-    :param pool_threads: The number of threads to use for async requests
-        to the API. More threads means more concurrent API requests.
-    """
-
-    PRIMITIVE_TYPES = (float, bool, bytes, six.text_type) + six.integer_types
-    NATIVE_TYPES_MAPPING = {
-        'int': int,
-        'long': int if six.PY3 else long,  # noqa: F821
-        'float': float,
-        'str': str,
-        'bool': bool,
-        'date': datetime.date,
-        'datetime': datetime.datetime,
-        'object': object,
-    }
-    _pool = None
-
-    def __init__(self, configuration=None, header_name=None, header_value=None,
-                 cookie=None, pool_threads=1):
-        if configuration is None:
-            configuration = Configuration.get_default_copy()
-        self.configuration = configuration
-        self.pool_threads = pool_threads
-
-        self.rest_client = rest.RESTClientObject(configuration)
-        self.default_headers = {}
-        if header_name is not None:
-            self.default_headers[header_name] = header_value
-        self.cookie = cookie
-        # Set default User-Agent.
-        self.user_agent = 'manticoresearch/4.0.0/python'
-        self.client_side_validation = configuration.client_side_validation
-
-    def __enter__(self):
-        return self
-
-    def __exit__(self, exc_type, exc_value, traceback):
-        self.close()
-
-    def close(self):
-        if self._pool:
-            self._pool.close()
-            self._pool.join()
-            self._pool = None
-            if hasattr(atexit, 'unregister'):
-                atexit.unregister(self.close)
-
-    @property
-    def pool(self):
-        """Create thread pool on first request
-         avoids instantiating unused threadpool for blocking clients.
-        """
-        if self._pool is None:
-            atexit.register(self.close)
-            self._pool = ThreadPool(self.pool_threads)
-        return self._pool
-
-    @property
-    def user_agent(self):
-        """User agent for this API client"""
-        return self.default_headers['User-Agent']
-
-    @user_agent.setter
-    def user_agent(self, value):
-        self.default_headers['User-Agent'] = value
-
-    def set_default_header(self, header_name, header_value):
-        self.default_headers[header_name] = header_value
-
-    def __call_api(
-            self, resource_path, method, path_params=None,
-            query_params=None, header_params=None, body=None, post_params=None,
-            files=None, response_type=None, auth_settings=None,
-            _return_http_data_only=None, collection_formats=None,
-            _preload_content=True, _request_timeout=None, _host=None,
-            _request_auth=None):
-
-        config = self.configuration
-
-        # header parameters
-        header_params = header_params or {}
-        header_params.update(self.default_headers)
-        if self.cookie:
-            header_params['Cookie'] = self.cookie
-        if header_params:
-            header_params = self.sanitize_for_serialization(header_params)
-            header_params = dict(self.parameters_to_tuples(header_params,
-                                                           collection_formats))
-
-        # path parameters
-        if path_params:
-            path_params = self.sanitize_for_serialization(path_params)
-            path_params = self.parameters_to_tuples(path_params,
-                                                    collection_formats)
-            for k, v in path_params:
-                # specified safe chars, encode everything
-                resource_path = resource_path.replace(
-                    '{%s}' % k,
-                    quote(str(v), safe=config.safe_chars_for_path_param)
-                )
-
-        # query parameters
-        if query_params:
-            query_params = self.sanitize_for_serialization(query_params)
-            query_params = self.parameters_to_tuples(query_params,
-                                                     collection_formats)
-
-        # post parameters
-        if post_params or files:
-            post_params = post_params if post_params else []
-            post_params = self.sanitize_for_serialization(post_params)
-            post_params = self.parameters_to_tuples(post_params,
-                                                    collection_formats)
-            post_params.extend(self.files_parameters(files))
-
-        # auth setting
-        self.update_params_for_auth(
-            header_params, query_params, auth_settings,
-            request_auth=_request_auth)
-
-        # body
-        if body:
-            body = self.sanitize_for_serialization(body)
-
-        # request url
-        if _host is None:
-            url = self.configuration.host + resource_path
-        else:
-            # use server/host defined in path or operation instead
-            url = _host + resource_path
-
-        try:
-            # perform request and return response
-            response_data = self.request(
-                method, url, query_params=query_params, headers=header_params,
-                post_params=post_params, body=body,
-                _preload_content=_preload_content,
-                _request_timeout=_request_timeout)
-        except ApiException as e:
-            e.body = e.body.decode('utf-8') if six.PY3 else e.body
-            raise e
-
-        content_type = response_data.getheader('content-type')
-
-        self.last_response = response_data
-
-        return_data = response_data
-
-        if not _preload_content:
-            return return_data
-
-        if six.PY3 and response_type not in ["file", "bytes"]:
-            match = None
-            if content_type is not None:
-                match = re.search(r"charset=([a-zA-Z\-\d]+)[\s\;]?", content_type)
-            encoding = match.group(1) if match else "utf-8"
-            response_data.data = response_data.data.decode(encoding)
-
-        # deserialize response data
-        if response_type:
-            return_data = self.deserialize(response_data, response_type)
-        else:
-            return_data = None
-
-        if _return_http_data_only:
-            return (return_data)
-        else:
-            return (return_data, response_data.status,
-                    response_data.getheaders())
-
-    def sanitize_for_serialization(self, obj):
-        """Builds a JSON POST object.
-
-        If obj is None, return None.
-        If obj is str, int, long, float, bool, return directly.
-        If obj is datetime.datetime, datetime.date
-            convert to string in iso8601 format.
-        If obj is list, sanitize each element in the list.
-        If obj is dict, return the dict.
-        If obj is OpenAPI model, return the properties dict.
-
-        :param obj: The data to serialize.
-        :return: The serialized form of data.
-        """
-        if obj is None:
-            return None
-        elif isinstance(obj, self.PRIMITIVE_TYPES):
-            return obj
-        elif isinstance(obj, list):
-            return [self.sanitize_for_serialization(sub_obj)
-                    for sub_obj in obj]
-        elif isinstance(obj, tuple):
-            return tuple(self.sanitize_for_serialization(sub_obj)
-                         for sub_obj in obj)
-        elif isinstance(obj, (datetime.datetime, datetime.date)):
-            return obj.isoformat()
-
-        if isinstance(obj, dict):
-            obj_dict = obj
-        else:
-            # Convert model obj to dict except
-            # attributes `openapi_types`, `attribute_map`
-            # and attributes which value is not None.
-            # Convert attribute name to json key in
-            # model definition for request.
-            obj_dict = {obj.attribute_map[attr]: getattr(obj, attr)
-                        for attr, _ in six.iteritems(obj.openapi_types)
-                        if getattr(obj, attr) is not None}
-
-        return {key: self.sanitize_for_serialization(val)
-                for key, val in six.iteritems(obj_dict)}
-
-    def deserialize(self, response, response_type):
-        """Deserializes response into an object.
-
-        :param response: RESTResponse object to be deserialized.
-        :param response_type: class literal for
-            deserialized object, or string of class name.
-
-        :return: deserialized object.
-        """
-        # handle file downloading
-        # save response body into a tmp file and return the instance
-        if response_type == "file":
-            return self.__deserialize_file(response)
-
-        # fetch data from response object
-        try:
-            data = json.loads(response.data)
-        except ValueError:
-            data = response.data
-
-        return self.__deserialize(data, response_type)
-
-    def __deserialize(self, data, klass):
-        """Deserializes dict, list, str into an object.
-
-        :param data: dict, list or str.
-        :param klass: class literal, or string of class name.
-
-        :return: object.
-        """
-        if data is None:
-            return None
-
-        if type(klass) == str:
-            if klass.startswith('{str:'):
-                klass = 'object'
-
-            if klass.startswith('list[') or klass.startswith('['):
-                sub_kls = re.match(r'(|list)\[(.*)\]', klass).group(2)
-                return [self.__deserialize(sub_data, sub_kls)
-                        for sub_data in data]
-
-            if klass.startswith('dict('):
-                sub_kls = re.match(r'dict\(([^,]*), (.*)\)', klass).group(2)
-                return {k: self.__deserialize(v, sub_kls)
-                        for k, v in six.iteritems(data)}
-
-            # convert str to class
-            if klass in self.NATIVE_TYPES_MAPPING:
-                klass = self.NATIVE_TYPES_MAPPING[klass]
-            else:
-                klass = getattr(manticoresearch.model, klass)
-
-        if klass in self.PRIMITIVE_TYPES:
-            return self.__deserialize_primitive(data, klass)
-        elif klass == object:
-            return self.__deserialize_object(data)
-        elif klass == datetime.date:
-            return self.__deserialize_date(data)
-        elif klass == datetime.datetime:
-            return self.__deserialize_datetime(data)
-        else:
-            return self.__deserialize_model(data, klass)
-
-    def call_api(self, resource_path, method,
-                 path_params=None, query_params=None, header_params=None,
-                 body=None, post_params=None, files=None,
-                 response_type=None, auth_settings=None, async_req=None,
-                 _return_http_data_only=None, collection_formats=None,
-                 _preload_content=True, _request_timeout=None, _host=None,
-                 _request_auth=None):
-        """Makes the HTTP request (synchronous) and returns deserialized data.
-
-        To make an async_req request, set the async_req parameter.
-
-        :param resource_path: Path to method endpoint.
-        :param method: Method to call.
-        :param path_params: Path parameters in the url.
-        :param query_params: Query parameters in the url.
-        :param header_params: Header parameters to be
-            placed in the request header.
-        :param body: Request body.
-        :param post_params dict: Request post form parameters,
-            for `application/x-www-form-urlencoded`, `multipart/form-data`.
-        :param auth_settings list: Auth Settings names for the request.
-        :param response: Response data type.
-        :param files dict: key -> filename, value -> filepath,
-            for `multipart/form-data`.
-        :param async_req bool: execute request asynchronously
-        :param _return_http_data_only: response data without head status code
-                                       and headers
-        :param collection_formats: dict of collection formats for path, query,
-            header, and post parameters.
-        :param _preload_content: if False, the urllib3.HTTPResponse object will
-                                 be returned without reading/decoding response
-                                 data. Default is True.
-        :param _request_timeout: timeout setting for this request. If one
-                                 number provided, it will be total request
-                                 timeout. It can also be a pair (tuple) of
-                                 (connection, read) timeouts.
-        :param _request_auth: set to override the auth_settings for an a single
-                              request; this effectively ignores the authentication
-                              in the spec for a single request.
-        :type _request_token: dict, optional
-        :return:
-            If async_req parameter is True,
-            the request will be called asynchronously.
-            The method will return the request thread.
-            If parameter async_req is False or missing,
-            then the method will return the response directly.
-        """
-        if not async_req:
-            return self.__call_api(resource_path, method,
-                                   path_params, query_params, header_params,
-                                   body, post_params, files,
-                                   response_type, auth_settings,
-                                   _return_http_data_only, collection_formats,
-                                   _preload_content, _request_timeout, _host,
-                                   _request_auth)
-
-        return self.pool.apply_async(self.__call_api, (resource_path,
-                                                       method, path_params,
-                                                       query_params,
-                                                       header_params, body,
-                                                       post_params, files,
-                                                       response_type,
-                                                       auth_settings,
-                                                       _return_http_data_only,
-                                                       collection_formats,
-                                                       _preload_content,
-                                                       _request_timeout,
-                                                       _host, _request_auth))
-
-    def request(self, method, url, query_params=None, headers=None,
-                post_params=None, body=None, _preload_content=True,
-                _request_timeout=None):
-        """Makes the HTTP request using RESTClient."""
-        if method == "GET":
-            return self.rest_client.GET(url,
-                                        query_params=query_params,
-                                        _preload_content=_preload_content,
-                                        _request_timeout=_request_timeout,
-                                        headers=headers)
-        elif method == "HEAD":
-            return self.rest_client.HEAD(url,
-                                         query_params=query_params,
-                                         _preload_content=_preload_content,
-                                         _request_timeout=_request_timeout,
-                                         headers=headers)
-        elif method == "OPTIONS":
-            return self.rest_client.OPTIONS(url,
-                                            query_params=query_params,
-                                            headers=headers,
-                                            _preload_content=_preload_content,
-                                            _request_timeout=_request_timeout)
-        elif method == "POST":
-            return self.rest_client.POST(url,
-                                         query_params=query_params,
-                                         headers=headers,
-                                         post_params=post_params,
-                                         _preload_content=_preload_content,
-                                         _request_timeout=_request_timeout,
-                                         body=body)
-        elif method == "PUT":
-            return self.rest_client.PUT(url,
-                                        query_params=query_params,
-                                        headers=headers,
-                                        post_params=post_params,
-                                        _preload_content=_preload_content,
-                                        _request_timeout=_request_timeout,
-                                        body=body)
-        elif method == "PATCH":
-            return self.rest_client.PATCH(url,
-                                          query_params=query_params,
-                                          headers=headers,
-                                          post_params=post_params,
-                                          _preload_content=_preload_content,
-                                          _request_timeout=_request_timeout,
-                                          body=body)
-        elif method == "DELETE":
-            return self.rest_client.DELETE(url,
-                                           query_params=query_params,
-                                           headers=headers,
-                                           _preload_content=_preload_content,
-                                           _request_timeout=_request_timeout,
-                                           body=body)
-        else:
-            raise ApiValueError(
-                "http method must be `GET`, `HEAD`, `OPTIONS`,"
-                " `POST`, `PATCH`, `PUT` or `DELETE`."
-            )
-
-    def parameters_to_tuples(self, params, collection_formats):
-        """Get parameters as list of tuples, formatting collections.
-
-        :param params: Parameters as dict or list of two-tuples
-        :param dict collection_formats: Parameter collection formats
-        :return: Parameters as list of tuples, collections formatted
-        """
-        new_params = []
-        if collection_formats is None:
-            collection_formats = {}
-        for k, v in six.iteritems(params) if isinstance(params, dict) else params:  # noqa: E501
-            if k in collection_formats:
-                collection_format = collection_formats[k]
-                if collection_format == 'multi':
-                    new_params.extend((k, value) for value in v)
-                else:
-                    if collection_format == 'ssv':
-                        delimiter = ' '
-                    elif collection_format == 'tsv':
-                        delimiter = '\t'
-                    elif collection_format == 'pipes':
-                        delimiter = '|'
-                    else:  # csv is the default
-                        delimiter = ','
-                    new_params.append(
-                        (k, delimiter.join(str(value) for value in v)))
-            else:
-                new_params.append((k, v))
-        return new_params
-
-    def files_parameters(self, files=None):
-        """Builds form parameters.
-
-        :param files: File parameters.
-        :return: Form parameters with files.
-        """
-        params = []
-
-        if files:
-            for k, v in six.iteritems(files):
-                if not v:
-                    continue
-                file_names = v if type(v) is list else [v]
-                for n in file_names:
-                    with open(n, 'rb') as f:
-                        filename = os.path.basename(f.name)
-                        filedata = f.read()
-                        mimetype = (mimetypes.guess_type(filename)[0] or
-                                    'application/octet-stream')
-                        params.append(
-                            tuple([k, tuple([filename, filedata, mimetype])]))
-
-        return params
-
-    def select_header_accept(self, accepts):
-        """Returns `Accept` based on an array of accepts provided.
-
-        :param accepts: List of headers.
-        :return: Accept (e.g. application/json).
-        """
-        if not accepts:
-            return
-
-        accepts = [x.lower() for x in accepts]
-
-        if 'application/json' in accepts:
-            return 'application/json'
-        else:
-            return ', '.join(accepts)
-
-    def select_header_content_type(self, content_types):
-        """Returns `Content-Type` based on an array of content_types provided.
-
-        :param content_types: List of content-types.
-        :return: Content-Type (e.g. application/json).
-        """
-        if not content_types:
-            return 'application/json'
-
-        content_types = [x.lower() for x in content_types]
-
-        if 'application/json' in content_types or '*/*' in content_types:
-            return 'application/json'
-        else:
-            return content_types[0]
-
-    def update_params_for_auth(self, headers, querys, auth_settings,
-                               request_auth=None):
-        """Updates header and query params based on authentication setting.
-
-        :param headers: Header parameters dict to be updated.
-        :param querys: Query parameters tuple list to be updated.
-        :param auth_settings: Authentication setting identifiers list.
-        :param request_auth: if set, the provided settings will
-                             override the token in the configuration.
-        """
-        if not auth_settings:
-            return
-
-        if request_auth:
-            self._apply_auth_params(headers, querys, request_auth)
-            return
-
-        for auth in auth_settings:
-            auth_setting = self.configuration.auth_settings().get(auth)
-            if auth_setting:
-                self._apply_auth_params(headers, querys, auth_setting)
-
-    def _apply_auth_params(self, headers, querys, auth_setting):
-        """Updates the request parameters based on a single auth_setting
-
-        :param headers: Header parameters dict to be updated.
-        :param querys: Query parameters tuple list to be updated.
-        :param auth_setting: auth settings for the endpoint
-        """
-        if auth_setting['in'] == 'cookie':
-            headers['Cookie'] = auth_setting['value']
-        elif auth_setting['in'] == 'header':
-            headers[auth_setting['key']] = auth_setting['value']
-        elif auth_setting['in'] == 'query':
-            querys.append((auth_setting['key'], auth_setting['value']))
-        else:
-            raise ApiValueError(
-                'Authentication token must be in `query` or `header`'
-            )
-
-    def __deserialize_file(self, response):
-        """Deserializes body to file
-
-        Saves response body into a file in a temporary folder,
-        using the filename from the `Content-Disposition` header if provided.
-
-        :param response:  RESTResponse.
-        :return: file path.
-        """
-        fd, path = tempfile.mkstemp(dir=self.configuration.temp_folder_path)
-        os.close(fd)
-        os.remove(path)
-
-        content_disposition = response.getheader("Content-Disposition")
-        if content_disposition:
-            filename = re.search(r'filename=[\'"]?([^\'"\s]+)[\'"]?',
-                                 content_disposition).group(1)
-            path = os.path.join(os.path.dirname(path), filename)
-
-        with open(path, "wb") as f:
-            f.write(response.data)
-
-        return path
-
-    def __deserialize_primitive(self, data, klass):
-        """Deserializes string to primitive type.
-
-        :param data: str.
-        :param klass: class literal.
-
-        :return: int, long, float, str, bool.
-        """
-        try:
-            return klass(data)
-        except UnicodeEncodeError:
-            return six.text_type(data)
-        except TypeError:
-            return data
-
-    def __deserialize_object(self, value):
-        """Return an original value.
-
-        :return: object.
-        """
-        return value
-
-    def __deserialize_date(self, string):
-        """Deserializes string to date.
-
-        :param string: str.
-        :return: date.
-        """
-        try:
-            return parse(string).date()
-        except ImportError:
-            return string
-        except ValueError:
-            raise rest.ApiException(
-                status=0,
-                reason="Failed to parse `{0}` as date object".format(string)
-            )
-
-    def __deserialize_datetime(self, string):
-        """Deserializes string to datetime.
-
-        The string should be in iso8601 datetime format.
-
-        :param string: str.
-        :return: datetime.
-        """
-        try:
-            return parse(string)
-        except ImportError:
-            return string
-        except ValueError:
-            raise rest.ApiException(
-                status=0,
-                reason=(
-                    "Failed to parse `{0}` as datetime object"
-                    .format(string)
-                )
-            )
-
-    def __deserialize_model(self, data, klass):
-        """Deserializes list or dict to model.
-
-        :param data: dict, list.
-        :param klass: class literal.
-        :return: model object.
-        """
-        has_discriminator = False
-        if (hasattr(klass, 'get_real_child_model')
-                and klass.discriminator_value_class_map):
-            has_discriminator = True
-
-        if not klass.openapi_types and has_discriminator is False:
-            return data
-
-        kwargs = {}
-        if (data is not None and
-                klass.openapi_types is not None and
-                isinstance(data, (list, dict))):
-            for attr, attr_type in six.iteritems(klass.openapi_types):
-                if klass.attribute_map[attr] in data:
-                    value = data[klass.attribute_map[attr]]
-                    kwargs[attr] = self.__deserialize(value, attr_type)
-
-        instance = klass(**kwargs)
-
-        if has_discriminator:
-            klass_name = instance.get_real_child_model(data)
-            if klass_name:
-                instance = self.__deserialize(data, klass_name)
-        return instance
-
diff --git a/out/manticoresearch-python-actual/manticoresearch/apis/__init__.py b/out/manticoresearch-python-actual/manticoresearch/apis/__init__.py
deleted file mode 100644
index 35b8ba9..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/apis/__init__.py
+++ /dev/null
@@ -1,19 +0,0 @@
-
-# flake8: noqa
-
-# Import all APIs into this package.
-# If you have many APIs here with many many models used in each API this may
-# raise a `RecursionError`.
-# In order to avoid this, import only the API that you directly need like:
-#
-#   from manticoresearch.api.index_api import IndexApi
-#
-# or import this package, but before doing it, use:
-#
-#   import sys
-#   sys.setrecursionlimit(n)
-
-# Import APIs into API package:
-from manticoresearch.api.index_api import IndexApi
-from manticoresearch.api.search_api import SearchApi
-from manticoresearch.api.utils_api import UtilsApi
diff --git a/out/manticoresearch-python-actual/manticoresearch/configuration.py b/out/manticoresearch-python-actual/manticoresearch/configuration.py
deleted file mode 100644
index 2c25008..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/configuration.py
+++ /dev/null
@@ -1,438 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-from __future__ import absolute_import
-
-import copy
-import logging
-import multiprocessing
-import sys
-import urllib3
-
-import six
-from six.moves import http_client as httplib
-from manticoresearch.exceptions import ApiValueError
-
-
-JSON_SCHEMA_VALIDATION_KEYWORDS = {
-    'multipleOf', 'maximum', 'exclusiveMaximum',
-    'minimum', 'exclusiveMinimum', 'maxLength',
-    'minLength', 'pattern', 'maxItems', 'minItems'
-}
-
-class Configuration(object):
-    """NOTE: This class is auto generated by OpenAPI Generator
-
-    Ref: https://openapi-generator.tech
-    Do not edit the class manually.
-
-    :param host: Base url
-    :param api_key: Dict to store API key(s).
-      Each entry in the dict specifies an API key.
-      The dict key is the name of the security scheme in the OAS specification.
-      The dict value is the API key secret.
-    :param api_key_prefix: Dict to store API prefix (e.g. Bearer)
-      The dict key is the name of the security scheme in the OAS specification.
-      The dict value is an API key prefix when generating the auth data.
-    :param username: Username for HTTP basic authentication
-    :param password: Password for HTTP basic authentication
-    :param discard_unknown_keys: Boolean value indicating whether to discard
-      unknown properties. A server may send a response that includes additional
-      properties that are not known by the client in the following scenarios:
-      1. The OpenAPI document is incomplete, i.e. it does not match the server
-         implementation.
-      2. The client was generated using an older version of the OpenAPI document
-         and the server has been upgraded since then.
-      If a schema in the OpenAPI document defines the additionalProperties attribute,
-      then all undeclared properties received by the server are injected into the
-      additional properties map. In that case, there are undeclared properties, and
-      nothing to discard.
-    :param disabled_client_side_validations (string): Comma-separated list of
-      JSON schema validation keywords to disable JSON schema structural validation
-      rules. The following keywords may be specified: multipleOf, maximum,
-      exclusiveMaximum, minimum, exclusiveMinimum, maxLength, minLength, pattern,
-      maxItems, minItems.
-      By default, the validation is performed for data generated locally by the client
-      and data received from the server, independent of any validation performed by
-      the server side. If the input data does not satisfy the JSON schema validation
-      rules specified in the OpenAPI document, an exception is raised.
-      If disabled_client_side_validations is set, structural validation is
-      disabled. This can be useful to troubleshoot data validation problem, such as
-      when the OpenAPI document validation rules do not match the actual API data
-      received by the server.
-    :param server_index: Index to servers configuration.
-    :param server_variables: Mapping with string values to replace variables in
-      templated server configuration. The validation of enums is performed for
-      variables with defined enum values before.
-    :param server_operation_index: Mapping from operation ID to an index to server
-      configuration.
-    :param server_operation_variables: Mapping from operation ID to a mapping with
-      string values to replace variables in templated server configuration.
-      The validation of enums is performed for variables with defined enum values before.
-
-    """
-
-    _default = None
-
-    def __init__(self, host=None,
-                 api_key=None, api_key_prefix=None,
-                 username=None, password=None,
-                 discard_unknown_keys=False,
-                 disabled_client_side_validations="",
-                 server_index=None, server_variables=None,
-                 server_operation_index=None, server_operation_variables=None,
-                 ):
-        """Constructor
-        """
-        self._base_path = "http://127.0.0.1:9308" if host is None else host
-        """Default Base url
-        """
-        self.server_index = 0 if server_index is None and host is None else server_index
-        self.server_operation_index = server_operation_index or {}
-        """Default server index
-        """
-        self.server_variables = server_variables or {}
-        self.server_operation_variables = server_operation_variables or {}
-        """Default server variables
-        """
-        self.temp_folder_path = None
-        """Temp file folder for downloading files
-        """
-        # Authentication Settings
-        self.api_key = {}
-        if api_key:
-            self.api_key = api_key
-        """dict to store API key(s)
-        """
-        self.api_key_prefix = {}
-        if api_key_prefix:
-            self.api_key_prefix = api_key_prefix
-        """dict to store API prefix (e.g. Bearer)
-        """
-        self.refresh_api_key_hook = None
-        """function hook to refresh API key if expired
-        """
-        self.username = username
-        """Username for HTTP basic authentication
-        """
-        self.password = password
-        """Password for HTTP basic authentication
-        """
-        self.discard_unknown_keys = discard_unknown_keys
-        self.disabled_client_side_validations = disabled_client_side_validations
-        self.logger = {}
-        """Logging Settings
-        """
-        self.logger["package_logger"] = logging.getLogger("manticoresearch")
-        self.logger["urllib3_logger"] = logging.getLogger("urllib3")
-        self.logger_format = '%(asctime)s %(levelname)s %(message)s'
-        """Log format
-        """
-        self.logger_stream_handler = None
-        """Log stream handler
-        """
-        self.logger_file_handler = None
-        """Log file handler
-        """
-        self.logger_file = None
-        """Debug file location
-        """
-        self.debug = False
-        """Debug switch
-        """
-
-        self.verify_ssl = True
-        """SSL/TLS verification
-           Set this to false to skip verifying SSL certificate when calling API
-           from https server.
-        """
-        self.ssl_ca_cert = None
-        """Set this to customize the certificate file to verify the peer.
-        """
-        self.cert_file = None
-        """client certificate file
-        """
-        self.key_file = None
-        """client key file
-        """
-        self.assert_hostname = None
-        """Set this to True/False to enable/disable SSL hostname verification.
-        """
-
-        self.connection_pool_maxsize = multiprocessing.cpu_count() * 5
-        """urllib3 connection pool's maximum number of connections saved
-           per pool. urllib3 uses 1 connection as default value, but this is
-           not the best value when you are making a lot of possibly parallel
-           requests to the same host, which is often the case here.
-           cpu_count * 5 is used as default value to increase performance.
-        """
-
-        self.proxy = None
-        """Proxy URL
-        """
-        self.proxy_headers = None
-        """Proxy headers
-        """
-        self.safe_chars_for_path_param = ''
-        """Safe chars for path_param
-        """
-        self.retries = None
-        """Adding retries to override urllib3 default value 3
-        """
-        # Enable client side validation
-        self.client_side_validation = True
-
-    def __deepcopy__(self, memo):
-        cls = self.__class__
-        result = cls.__new__(cls)
-        memo[id(self)] = result
-        for k, v in self.__dict__.items():
-            if k not in ('logger', 'logger_file_handler'):
-                setattr(result, k, copy.deepcopy(v, memo))
-        # shallow copy of loggers
-        result.logger = copy.copy(self.logger)
-        # use setters to configure loggers
-        result.logger_file = self.logger_file
-        result.debug = self.debug
-        return result
-
-    def __setattr__(self, name, value):
-        object.__setattr__(self, name, value)
-        if name == 'disabled_client_side_validations':
-            s = set(filter(None, value.split(',')))
-            for v in s:
-                if v not in JSON_SCHEMA_VALIDATION_KEYWORDS:
-                    raise ApiValueError(
-                        "Invalid keyword: '{0}''".format(v))
-            self._disabled_client_side_validations = s
-
-    @classmethod
-    def set_default(cls, default):
-        """Set default instance of configuration.
-
-        It stores default configuration, which can be
-        returned by get_default_copy method.
-
-        :param default: object of Configuration
-        """
-        cls._default = copy.deepcopy(default)
-
-    @classmethod
-    def get_default_copy(cls):
-        """Return new instance of configuration.
-
-        This method returns newly created, based on default constructor,
-        object of Configuration class or returns a copy of default
-        configuration passed by the set_default method.
-
-        :return: The configuration object.
-        """
-        if cls._default is not None:
-            return copy.deepcopy(cls._default)
-        return Configuration()
-
-    @property
-    def logger_file(self):
-        """The logger file.
-
-        If the logger_file is None, then add stream handler and remove file
-        handler. Otherwise, add file handler and remove stream handler.
-
-        :param value: The logger_file path.
-        :type: str
-        """
-        return self.__logger_file
-
-    @logger_file.setter
-    def logger_file(self, value):
-        """The logger file.
-
-        If the logger_file is None, then add stream handler and remove file
-        handler. Otherwise, add file handler and remove stream handler.
-
-        :param value: The logger_file path.
-        :type: str
-        """
-        self.__logger_file = value
-        if self.__logger_file:
-            # If set logging file,
-            # then add file handler and remove stream handler.
-            self.logger_file_handler = logging.FileHandler(self.__logger_file)
-            self.logger_file_handler.setFormatter(self.logger_formatter)
-            for _, logger in six.iteritems(self.logger):
-                logger.addHandler(self.logger_file_handler)
-
-    @property
-    def debug(self):
-        """Debug status
-
-        :param value: The debug status, True or False.
-        :type: bool
-        """
-        return self.__debug
-
-    @debug.setter
-    def debug(self, value):
-        """Debug status
-
-        :param value: The debug status, True or False.
-        :type: bool
-        """
-        self.__debug = value
-        if self.__debug:
-            # if debug status is True, turn on debug logging
-            for _, logger in six.iteritems(self.logger):
-                logger.setLevel(logging.DEBUG)
-            # turn on httplib debug
-            httplib.HTTPConnection.debuglevel = 1
-        else:
-            # if debug status is False, turn off debug logging,
-            # setting log level to default `logging.WARNING`
-            for _, logger in six.iteritems(self.logger):
-                logger.setLevel(logging.WARNING)
-            # turn off httplib debug
-            httplib.HTTPConnection.debuglevel = 0
-
-    @property
-    def logger_format(self):
-        """The logger format.
-
-        The logger_formatter will be updated when sets logger_format.
-
-        :param value: The format string.
-        :type: str
-        """
-        return self.__logger_format
-
-    @logger_format.setter
-    def logger_format(self, value):
-        """The logger format.
-
-        The logger_formatter will be updated when sets logger_format.
-
-        :param value: The format string.
-        :type: str
-        """
-        self.__logger_format = value
-        self.logger_formatter = logging.Formatter(self.__logger_format)
-
-    def get_api_key_with_prefix(self, identifier, alias=None):
-        """Gets API key (with prefix if set).
-
-        :param identifier: The identifier of apiKey.
-        :param alias: The alternative identifier of apiKey.
-        :return: The token for api key authentication.
-        """
-        if self.refresh_api_key_hook is not None:
-            self.refresh_api_key_hook(self)
-        key = self.api_key.get(identifier, self.api_key.get(alias) if alias is not None else None)
-        if key:
-            prefix = self.api_key_prefix.get(identifier)
-            if prefix:
-                return "%s %s" % (prefix, key)
-            else:
-                return key
-
-    def get_basic_auth_token(self):
-        """Gets HTTP basic authentication header (string).
-
-        :return: The token for basic HTTP authentication.
-        """
-        username = ""
-        if self.username is not None:
-            username = self.username
-        password = ""
-        if self.password is not None:
-            password = self.password
-        return urllib3.util.make_headers(
-            basic_auth=username + ':' + password
-        ).get('authorization')
-
-    def auth_settings(self):
-        """Gets Auth Settings dict for api client.
-
-        :return: The Auth Settings information dict.
-        """
-        auth = {}
-        return auth
-
-    def to_debug_report(self):
-        """Gets the essential information for debugging.
-
-        :return: The report for debugging.
-        """
-        return "Python SDK Debug Report:\n"\
-               "OS: {env}\n"\
-               "Python Version: {pyversion}\n"\
-               "Version of the API: 3.3.1\n"\
-               "SDK Package Version: 4.0.0".\
-               format(env=sys.platform, pyversion=sys.version)
-
-    def get_host_settings(self):
-        """Gets an array of host settings
-
-        :return: An array of host settings
-        """
-        return [
-            {
-                'url': "http://127.0.0.1:9308",
-                'description': "Default Manticore Search HTTP",
-            }
-        ]
-
-    def get_host_from_settings(self, index, variables=None, servers=None):
-        """Gets host URL based on the index and variables
-        :param index: array index of the host settings
-        :param variables: hash of variable and the corresponding value
-        :param servers: an array of host settings or None
-        :return: URL based on host settings
-        """
-        if index is None:
-            return self._base_path
-
-        variables = {} if variables is None else variables
-        servers = self.get_host_settings() if servers is None else servers
-
-        try:
-            server = servers[index]
-        except IndexError:
-            raise ValueError(
-                "Invalid index {0} when selecting the host settings. "
-                "Must be less than {1}".format(index, len(servers)))
-
-        url = server['url']
-
-        # go through variables and replace placeholders
-        for variable_name, variable in server.get('variables', {}).items():
-            used_value = variables.get(
-                variable_name, variable['default_value'])
-
-            if 'enum_values' in variable \
-                    and used_value not in variable['enum_values']:
-                raise ValueError(
-                    "The variable `{0}` in the host URL has invalid value "
-                    "{1}. Must be {2}.".format(
-                        variable_name, variables[variable_name],
-                        variable['enum_values']))
-
-            url = url.replace("{" + variable_name + "}", used_value)
-
-        return url
-
-    @property
-    def host(self):
-        """Return generated host."""
-        return self.get_host_from_settings(self.server_index, variables=self.server_variables)
-
-    @host.setter
-    def host(self, value):
-        """Fix base path."""
-        self._base_path = value
-        self.server_index = None
diff --git a/out/manticoresearch-python-actual/manticoresearch/exceptions.py b/out/manticoresearch-python-actual/manticoresearch/exceptions.py
deleted file mode 100644
index 3e5c8e3..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/exceptions.py
+++ /dev/null
@@ -1,137 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import six
-
-
-class OpenApiException(Exception):
-    """The base exception class for all OpenAPIExceptions"""
-
-
-class ApiTypeError(OpenApiException, TypeError):
-    def __init__(self, msg, path_to_item=None, valid_classes=None,
-                 key_type=None):
-        """ Raises an exception for TypeErrors
-
-        Args:
-            msg (str): the exception message
-
-        Keyword Args:
-            path_to_item (list): a list of keys an indices to get to the
-                                 current_item
-                                 None if unset
-            valid_classes (tuple): the primitive classes that current item
-                                   should be an instance of
-                                   None if unset
-            key_type (bool): False if our value is a value in a dict
-                             True if it is a key in a dict
-                             False if our item is an item in a list
-                             None if unset
-        """
-        self.path_to_item = path_to_item
-        self.valid_classes = valid_classes
-        self.key_type = key_type
-        full_msg = msg
-        if path_to_item:
-            full_msg = "{0} at {1}".format(msg, render_path(path_to_item))
-        super(ApiTypeError, self).__init__(full_msg)
-
-
-class ApiValueError(OpenApiException, ValueError):
-    def __init__(self, msg, path_to_item=None):
-        """
-        Args:
-            msg (str): the exception message
-
-        Keyword Args:
-            path_to_item (list) the path to the exception in the
-                received_data dict. None if unset
-        """
-
-        self.path_to_item = path_to_item
-        full_msg = msg
-        if path_to_item:
-            full_msg = "{0} at {1}".format(msg, render_path(path_to_item))
-        super(ApiValueError, self).__init__(full_msg)
-
-
-class ApiAttributeError(OpenApiException, AttributeError):
-    def __init__(self, msg, path_to_item=None):
-        """
-        Raised when an attribute reference or assignment fails.
-
-        Args:
-            msg (str): the exception message
-
-        Keyword Args:
-            path_to_item (None/list) the path to the exception in the
-                received_data dict
-        """
-        self.path_to_item = path_to_item
-        full_msg = msg
-        if path_to_item:
-            full_msg = "{0} at {1}".format(msg, render_path(path_to_item))
-        super(ApiAttributeError, self).__init__(full_msg)
-
-
-class ApiKeyError(OpenApiException, KeyError):
-    def __init__(self, msg, path_to_item=None):
-        """
-        Args:
-            msg (str): the exception message
-
-        Keyword Args:
-            path_to_item (None/list) the path to the exception in the
-                received_data dict
-        """
-        self.path_to_item = path_to_item
-        full_msg = msg
-        if path_to_item:
-            full_msg = "{0} at {1}".format(msg, render_path(path_to_item))
-        super(ApiKeyError, self).__init__(full_msg)
-
-
-class ApiException(OpenApiException):
-
-    def __init__(self, status=None, reason=None, http_resp=None):
-        if http_resp:
-            self.status = http_resp.status
-            self.reason = http_resp.reason
-            self.body = http_resp.data
-            self.headers = http_resp.getheaders()
-        else:
-            self.status = status
-            self.reason = reason
-            self.body = None
-            self.headers = None
-
-    def __str__(self):
-        """Custom error messages for exception"""
-        error_message = "({0})\n"\
-                        "Reason: {1}\n".format(self.status, self.reason)
-        if self.headers:
-            error_message += "HTTP response headers: {0}\n".format(
-                self.headers)
-
-        if self.body:
-            error_message += "HTTP response body: {0}\n".format(self.body)
-
-        return error_message
-
-
-def render_path(path_to_item):
-    """Returns a string representation of a path"""
-    result = ""
-    for pth in path_to_item:
-        if isinstance(pth, six.integer_types):
-            result += "[{0}]".format(pth)
-        else:
-            result += "['{0}']".format(pth)
-    return result
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/__init__.py b/out/manticoresearch-python-actual/manticoresearch/model/__init__.py
deleted file mode 100644
index 4b9643e..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/__init__.py
+++ /dev/null
@@ -1,62 +0,0 @@
-# coding: utf-8
-
-# flake8: noqa
-"""
-    Manticore Search Client
-
-    Сlient for Manticore Search.   # noqa: E501
-
-    The version of the OpenAPI document: 3.3.1
-    Contact: info@manticoresearch.com
-    Generated by: https://openapi-generator.tech
-"""
-
-
-from __future__ import absolute_import
-
-# import models into model package
-from manticoresearch.model.aggregation import Aggregation
-from manticoresearch.model.aggregation_sort_inner_value import AggregationSortInnerValue
-from manticoresearch.model.aggregation_terms import AggregationTerms
-from manticoresearch.model.attr_filter import AttrFilter
-from manticoresearch.model.bool_filter import BoolFilter
-from manticoresearch.model.bulk_response import BulkResponse
-from manticoresearch.model.delete_document_request import DeleteDocumentRequest
-from manticoresearch.model.delete_response import DeleteResponse
-from manticoresearch.model.equals_filter import EqualsFilter
-from manticoresearch.model.error_response import ErrorResponse
-from manticoresearch.model.facet import Facet
-from manticoresearch.model.filter_boolean import FilterBoolean
-from manticoresearch.model.filter_number import FilterNumber
-from manticoresearch.model.filter_string import FilterString
-from manticoresearch.model.fulltext_filter import FulltextFilter
-from manticoresearch.model.geo_distance_filter import GeoDistanceFilter
-from manticoresearch.model.geo_distance_filter_location_anchor import GeoDistanceFilterLocationAnchor
-from manticoresearch.model.highlight import Highlight
-from manticoresearch.model.highlight_field import HighlightField
-from manticoresearch.model.in_filter import InFilter
-from manticoresearch.model.insert_document_request import InsertDocumentRequest
-from manticoresearch.model.match_filter import MatchFilter
-from manticoresearch.model.match_op import MatchOp
-from manticoresearch.model.match_op_filter import MatchOpFilter
-from manticoresearch.model.match_phrase_filter import MatchPhraseFilter
-from manticoresearch.model.not_filter_boolean import NotFilterBoolean
-from manticoresearch.model.not_filter_number import NotFilterNumber
-from manticoresearch.model.not_filter_string import NotFilterString
-from manticoresearch.model.option import Option
-from manticoresearch.model.percolate_request import PercolateRequest
-from manticoresearch.model.percolate_request_query import PercolateRequestQuery
-from manticoresearch.model.query_filter import QueryFilter
-from manticoresearch.model.range_filter import RangeFilter
-from manticoresearch.model.search_request import SearchRequest
-from manticoresearch.model.search_response import SearchResponse
-from manticoresearch.model.search_response_hits import SearchResponseHits
-from manticoresearch.model.sort_mva import SortMVA
-from manticoresearch.model.sort_multiple import SortMultiple
-from manticoresearch.model.sort_order import SortOrder
-from manticoresearch.model.source_by_rules import SourceByRules
-from manticoresearch.model.source_multiple import SourceMultiple
-from manticoresearch.model.sql_response import SqlResponse
-from manticoresearch.model.success_response import SuccessResponse
-from manticoresearch.model.update_document_request import UpdateDocumentRequest
-from manticoresearch.model.update_response import UpdateResponse
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/aggregation.py b/out/manticoresearch-python-actual/manticoresearch/model/aggregation.py
deleted file mode 100644
index 115fcb5..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/aggregation.py
+++ /dev/null
@@ -1,146 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class Aggregation(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'terms': 'AggregationTerms',
-        'sort': '[{str: (AggregationSortInnerValue,)}]'
-    }
-
-    attribute_map = {
-        'terms': 'terms',
-        'sort': 'sort'
-    }
-
-    def __init__(self, terms=None, sort=None, local_vars_configuration=None):  # noqa: E501
-        """Aggregation - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._terms = None
-        self._sort = None
-        self.discriminator = None
-
-        if terms is not None:
-            self.terms = terms
-        if sort is not None:
-            self.sort = sort
-
-    @property
-    def terms(self):
-        """Gets the terms of this Aggregation.  # noqa: E501
-
-
-        :return: The terms of this Aggregation.  # noqa: E501
-        :rtype: AggregationTerms
-        """
-        return self._terms
-    @terms.setter
-    def terms(self, terms):
-        """Sets the terms of this Aggregation.
-
-
-        :param terms: The terms of this Aggregation.  # noqa: E501
-        :type terms: AggregationTerms
-        """
-
-        self._terms = terms
-        
-
-    @property
-    def sort(self):
-        """Gets the sort of this Aggregation.  # noqa: E501
-
-
-        :return: The sort of this Aggregation.  # noqa: E501
-        :rtype: [{str: (AggregationSortInnerValue,)}]
-        """
-        return self._sort
-    @sort.setter
-    def sort(self, sort):
-        """Sets the sort of this Aggregation.
-
-
-        :param sort: The sort of this Aggregation.  # noqa: E501
-        :type sort: [{str: (AggregationSortInnerValue,)}]
-        """
-
-        self._sort = sort
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, Aggregation):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, Aggregation):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/aggregation_sort_inner_value.py b/out/manticoresearch-python-actual/manticoresearch/model/aggregation_sort_inner_value.py
deleted file mode 100644
index 9577d6f..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/aggregation_sort_inner_value.py
+++ /dev/null
@@ -1,120 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class AggregationSortInnerValue(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'order': 'str'
-    }
-
-    attribute_map = {
-        'order': 'order'
-    }
-
-    def __init__(self, order=None, local_vars_configuration=None):  # noqa: E501
-        """AggregationSortInnerValue - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._order = None
-        self.discriminator = None
-
-        if order is not None:
-            self.order = order
-
-    @property
-    def order(self):
-        """Gets the order of this AggregationSortInnerValue.  # noqa: E501
-
-
-        :return: The order of this AggregationSortInnerValue.  # noqa: E501
-        :rtype: str
-        """
-        return self._order
-    @order.setter
-    def order(self, order):
-        """Sets the order of this AggregationSortInnerValue.
-
-
-        :param order: The order of this AggregationSortInnerValue.  # noqa: E501
-        :type order: str
-        """
-
-        self._order = order
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, AggregationSortInnerValue):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, AggregationSortInnerValue):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/aggregation_terms.py b/out/manticoresearch-python-actual/manticoresearch/model/aggregation_terms.py
deleted file mode 100644
index f5361a8..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/aggregation_terms.py
+++ /dev/null
@@ -1,150 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class AggregationTerms(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'field': 'str',
-        'size': 'int'
-    }
-
-    attribute_map = {
-        'field': 'field',
-        'size': 'size'
-    }
-
-    def __init__(self, field=None, size=None, local_vars_configuration=None):  # noqa: E501
-        """AggregationTerms - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._field = None
-        self._size = None
-        self.discriminator = None
-
-        if field is not None:
-            self.field = field
-        if size is not None:
-            self.size = size
-
-    @property
-    def field(self):
-        """Gets the field of this AggregationTerms.  # noqa: E501
-
-        Attribute Name to Aggregate  # noqa: E501
-
-        :return: The field of this AggregationTerms.  # noqa: E501
-        :rtype: str
-        """
-        return self._field
-    @field.setter
-    def field(self, field):
-        """Sets the field of this AggregationTerms.
-
-        Attribute Name to Aggregate  # noqa: E501
-
-        :param field: The field of this AggregationTerms.  # noqa: E501
-        :type field: str
-        """
-
-        self._field = field
-        
-
-    @property
-    def size(self):
-        """Gets the size of this AggregationTerms.  # noqa: E501
-
-        Maximum Number of Buckets in the Result  # noqa: E501
-
-        :return: The size of this AggregationTerms.  # noqa: E501
-        :rtype: int
-        """
-        return self._size
-    @size.setter
-    def size(self, size):
-        """Sets the size of this AggregationTerms.
-
-        Maximum Number of Buckets in the Result  # noqa: E501
-
-        :param size: The size of this AggregationTerms.  # noqa: E501
-        :type size: int
-        """
-
-        self._size = size
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, AggregationTerms):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, AggregationTerms):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/attr_filter.py b/out/manticoresearch-python-actual/manticoresearch/model/attr_filter.py
deleted file mode 100644
index 91423f9..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/attr_filter.py
+++ /dev/null
@@ -1,92 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class AttrFilter(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-    }
-
-    attribute_map = {
-    }
-
-    def __init__(self, local_vars_configuration=None):  # noqa: E501
-        """AttrFilter - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-        self.discriminator = None
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, AttrFilter):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, AttrFilter):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/bool_filter.py b/out/manticoresearch-python-actual/manticoresearch/model/bool_filter.py
deleted file mode 100644
index 64b7c4f..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/bool_filter.py
+++ /dev/null
@@ -1,173 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class BoolFilter(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'should': '[{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]',
-        'must': '[{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]',
-        'must_not': '[{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]'
-    }
-
-    attribute_map = {
-        'should': 'should',
-        'must': 'must',
-        'must_not': 'must_not'
-    }
-
-    def __init__(self, should=None, must=None, must_not=None, local_vars_configuration=None):  # noqa: E501
-        """BoolFilter - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._should = None
-        self._must = None
-        self._must_not = None
-        self.discriminator = None
-
-        if should is not None:
-            self.should = should
-        if must is not None:
-            self.must = must
-        if must_not is not None:
-            self.must_not = must_not
-
-    @property
-    def should(self):
-        """Gets the should of this BoolFilter.  # noqa: E501
-
-
-        :return: The should of this BoolFilter.  # noqa: E501
-        :rtype: [{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]
-        """
-        return self._should
-    @should.setter
-    def should(self, should):
-        """Sets the should of this BoolFilter.
-
-
-        :param should: The should of this BoolFilter.  # noqa: E501
-        :type should: [{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]
-        """
-
-        self._should = should
-        
-
-    @property
-    def must(self):
-        """Gets the must of this BoolFilter.  # noqa: E501
-
-
-        :return: The must of this BoolFilter.  # noqa: E501
-        :rtype: [{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]
-        """
-        return self._must
-    @must.setter
-    def must(self, must):
-        """Sets the must of this BoolFilter.
-
-
-        :param must: The must of this BoolFilter.  # noqa: E501
-        :type must: [{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]
-        """
-
-        self._must = must
-        
-
-    @property
-    def must_not(self):
-        """Gets the must_not of this BoolFilter.  # noqa: E501
-
-
-        :return: The must_not of this BoolFilter.  # noqa: E501
-        :rtype: [{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]
-        """
-        return self._must_not
-    @must_not.setter
-    def must_not(self, must_not):
-        """Sets the must_not of this BoolFilter.
-
-
-        :param must_not: The must_not of this BoolFilter.  # noqa: E501
-        :type must_not: [{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]
-        """
-
-        self._must_not = must_not
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-        result = { "bool": {k:v for k,v in result.items() if v is not None } }
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, BoolFilter):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, BoolFilter):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/bulk_response.py b/out/manticoresearch-python-actual/manticoresearch/model/bulk_response.py
deleted file mode 100644
index 2c6ab72..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/bulk_response.py
+++ /dev/null
@@ -1,172 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class BulkResponse(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'items': '{str: (bool, date, datetime, dict, float, int, list, str, none_type)}',
-        'errors': 'bool',
-        'error': 'str'
-    }
-
-    attribute_map = {
-        'items': 'items',
-        'errors': 'errors',
-        'error': 'error'
-    }
-
-    def __init__(self, items=None, errors=None, error=None, local_vars_configuration=None):  # noqa: E501
-        """BulkResponse - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._items = None
-        self._errors = None
-        self._error = None
-        self.discriminator = None
-
-        if items is not None:
-            self.items = items
-        if errors is not None:
-            self.errors = errors
-        if error is not None:
-            self.error = error
-
-    @property
-    def items(self):
-        """Gets the items of this BulkResponse.  # noqa: E501
-
-
-        :return: The items of this BulkResponse.  # noqa: E501
-        :rtype: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        return self._items
-    @items.setter
-    def items(self, items):
-        """Sets the items of this BulkResponse.
-
-
-        :param items: The items of this BulkResponse.  # noqa: E501
-        :type items: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-
-        self._items = items
-        
-
-    @property
-    def errors(self):
-        """Gets the errors of this BulkResponse.  # noqa: E501
-
-
-        :return: The errors of this BulkResponse.  # noqa: E501
-        :rtype: bool
-        """
-        return self._errors
-    @errors.setter
-    def errors(self, errors):
-        """Sets the errors of this BulkResponse.
-
-
-        :param errors: The errors of this BulkResponse.  # noqa: E501
-        :type errors: bool
-        """
-
-        self._errors = errors
-        
-
-    @property
-    def error(self):
-        """Gets the error of this BulkResponse.  # noqa: E501
-
-
-        :return: The error of this BulkResponse.  # noqa: E501
-        :rtype: str
-        """
-        return self._error
-    @error.setter
-    def error(self, error):
-        """Sets the error of this BulkResponse.
-
-
-        :param error: The error of this BulkResponse.  # noqa: E501
-        :type error: str
-        """
-
-        self._error = error
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, BulkResponse):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, BulkResponse):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/delete_document_request.py b/out/manticoresearch-python-actual/manticoresearch/model/delete_document_request.py
deleted file mode 100644
index 6db8997..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/delete_document_request.py
+++ /dev/null
@@ -1,207 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class DeleteDocumentRequest(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'index': 'str',
-        'cluster': 'str',
-        'id': 'int',
-        'query': '{str: (bool, date, datetime, dict, float, int, list, str, none_type)}'
-    }
-
-    attribute_map = {
-        'index': 'index',
-        'cluster': 'cluster',
-        'id': 'id',
-        'query': 'query'
-    }
-
-    def __init__(self, index=None, cluster=None, id=None, query=None, local_vars_configuration=None):  # noqa: E501
-        """DeleteDocumentRequest - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._index = None
-        self._cluster = None
-        self._id = None
-        self._query = None
-        self.discriminator = None
-
-        self.index = index
-        if cluster is not None:
-            self.cluster = cluster
-        if id is not None:
-            self.id = id
-        if query is not None:
-            self.query = query
-
-    @property
-    def index(self):
-        """Gets the index of this DeleteDocumentRequest.  # noqa: E501
-
-        Index name  # noqa: E501
-
-        :return: The index of this DeleteDocumentRequest.  # noqa: E501
-        :rtype: str
-        """
-        return self._index
-    @index.setter
-    def index(self, index):
-        """Sets the index of this DeleteDocumentRequest.
-
-        Index name  # noqa: E501
-
-        :param index: The index of this DeleteDocumentRequest.  # noqa: E501
-        :type index: str
-        """
-        if self.local_vars_configuration.client_side_validation and index is None:  # noqa: E501
-            raise ValueError("Invalid value for `index`, must not be `None`")  # noqa: E501
-
-        self._index = index
-        
-
-    @property
-    def cluster(self):
-        """Gets the cluster of this DeleteDocumentRequest.  # noqa: E501
-
-        cluster name  # noqa: E501
-
-        :return: The cluster of this DeleteDocumentRequest.  # noqa: E501
-        :rtype: str
-        """
-        return self._cluster
-    @cluster.setter
-    def cluster(self, cluster):
-        """Sets the cluster of this DeleteDocumentRequest.
-
-        cluster name  # noqa: E501
-
-        :param cluster: The cluster of this DeleteDocumentRequest.  # noqa: E501
-        :type cluster: str
-        """
-
-        self._cluster = cluster
-        
-
-    @property
-    def id(self):
-        """Gets the id of this DeleteDocumentRequest.  # noqa: E501
-
-        Document ID  # noqa: E501
-
-        :return: The id of this DeleteDocumentRequest.  # noqa: E501
-        :rtype: int
-        """
-        return self._id
-    @id.setter
-    def id(self, id):
-        """Sets the id of this DeleteDocumentRequest.
-
-        Document ID  # noqa: E501
-
-        :param id: The id of this DeleteDocumentRequest.  # noqa: E501
-        :type id: int
-        """
-
-        self._id = id
-        
-
-    @property
-    def query(self):
-        """Gets the query of this DeleteDocumentRequest.  # noqa: E501
-
-        Query tree object  # noqa: E501
-
-        :return: The query of this DeleteDocumentRequest.  # noqa: E501
-        :rtype: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        return self._query
-    @query.setter
-    def query(self, query):
-        """Sets the query of this DeleteDocumentRequest.
-
-        Query tree object  # noqa: E501
-
-        :param query: The query of this DeleteDocumentRequest.  # noqa: E501
-        :type query: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-
-        self._query = query
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, DeleteDocumentRequest):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, DeleteDocumentRequest):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/delete_response.py b/out/manticoresearch-python-actual/manticoresearch/model/delete_response.py
deleted file mode 100644
index 86323ed..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/delete_response.py
+++ /dev/null
@@ -1,198 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class DeleteResponse(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'index': 'str',
-        'deleted': 'int',
-        'id': 'int',
-        'result': 'str'
-    }
-
-    attribute_map = {
-        'index': '_index',
-        'deleted': 'deleted',
-        'id': '_id',
-        'result': 'result'
-    }
-
-    def __init__(self, index=None, deleted=None, id=None, result=None, local_vars_configuration=None):  # noqa: E501
-        """DeleteResponse - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._index = None
-        self._deleted = None
-        self._id = None
-        self._result = None
-        self.discriminator = None
-
-        if index is not None:
-            self.index = index
-        if deleted is not None:
-            self.deleted = deleted
-        if id is not None:
-            self.id = id
-        if result is not None:
-            self.result = result
-
-    @property
-    def index(self):
-        """Gets the index of this DeleteResponse.  # noqa: E501
-
-
-        :return: The index of this DeleteResponse.  # noqa: E501
-        :rtype: str
-        """
-        return self._index
-    @index.setter
-    def index(self, index):
-        """Sets the index of this DeleteResponse.
-
-
-        :param index: The index of this DeleteResponse.  # noqa: E501
-        :type index: str
-        """
-
-        self._index = index
-        
-
-    @property
-    def deleted(self):
-        """Gets the deleted of this DeleteResponse.  # noqa: E501
-
-
-        :return: The deleted of this DeleteResponse.  # noqa: E501
-        :rtype: int
-        """
-        return self._deleted
-    @deleted.setter
-    def deleted(self, deleted):
-        """Sets the deleted of this DeleteResponse.
-
-
-        :param deleted: The deleted of this DeleteResponse.  # noqa: E501
-        :type deleted: int
-        """
-
-        self._deleted = deleted
-        
-
-    @property
-    def id(self):
-        """Gets the id of this DeleteResponse.  # noqa: E501
-
-
-        :return: The id of this DeleteResponse.  # noqa: E501
-        :rtype: int
-        """
-        return self._id
-    @id.setter
-    def id(self, id):
-        """Sets the id of this DeleteResponse.
-
-
-        :param id: The id of this DeleteResponse.  # noqa: E501
-        :type id: int
-        """
-
-        self._id = id
-        
-
-    @property
-    def result(self):
-        """Gets the result of this DeleteResponse.  # noqa: E501
-
-
-        :return: The result of this DeleteResponse.  # noqa: E501
-        :rtype: str
-        """
-        return self._result
-    @result.setter
-    def result(self, result):
-        """Sets the result of this DeleteResponse.
-
-
-        :param result: The result of this DeleteResponse.  # noqa: E501
-        :type result: str
-        """
-
-        self._result = result
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, DeleteResponse):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, DeleteResponse):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/equals_filter.py b/out/manticoresearch-python-actual/manticoresearch/model/equals_filter.py
deleted file mode 100644
index 8a0b7a6..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/equals_filter.py
+++ /dev/null
@@ -1,131 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class EqualsFilter(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'field': 'str',
-        'value': '{str: (bool, date, datetime, dict, float, int, list, str, none_type)}'
-    }
-
-    attribute_map = {
-        'field': 'field',
-        'value': 'value'
-    }
-
-    def __init__(self, field=None, value=None, local_vars_configuration=None):  # noqa: E501
-        """EqualsFilter - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._field = None
-        self._value = None
-        self.discriminator = None
-
-        self.field = field
-        self.value = value
-
-    @property
-    def field(self):
-        """Gets the field of this EqualsFilter.  # noqa: E501
-
-
-        :return: The field of this EqualsFilter.  # noqa: E501
-        :rtype: str
-        """
-        return self._field
-    @field.setter
-    def field(self, field):
-        """Sets the field of this EqualsFilter.
-
-
-        :param field: The field of this EqualsFilter.  # noqa: E501
-        :type field: str
-        """
-        if self.local_vars_configuration.client_side_validation and field is None:  # noqa: E501
-            raise ValueError("Invalid value for `field`, must not be `None`")  # noqa: E501
-
-        self._field = field
-        
-
-    @property
-    def value(self):
-        """Gets the value of this EqualsFilter.  # noqa: E501
-
-
-        :return: The value of this EqualsFilter.  # noqa: E501
-        :rtype: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        return self._value
-    @value.setter
-    def value(self, value):
-        """Sets the value of this EqualsFilter.
-
-
-        :param value: The value of this EqualsFilter.  # noqa: E501
-        :type value: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        if self.local_vars_configuration.client_side_validation and value is None:  # noqa: E501
-            raise ValueError("Invalid value for `value`, must not be `None`")  # noqa: E501
-
-        self._value = value
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-        result = { 'equals': {self._field: self._value } }
-
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, EqualsFilter):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, EqualsFilter):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/error_response.py b/out/manticoresearch-python-actual/manticoresearch/model/error_response.py
deleted file mode 100644
index bb6afb4..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/error_response.py
+++ /dev/null
@@ -1,148 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class ErrorResponse(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'error': '{str: (bool, date, datetime, dict, float, int, list, str, none_type)}',
-        'status': 'int'
-    }
-
-    attribute_map = {
-        'error': 'error',
-        'status': 'status'
-    }
-
-    def __init__(self, error=None, status=None, local_vars_configuration=None):  # noqa: E501
-        """ErrorResponse - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._error = None
-        self._status = None
-        self.discriminator = None
-
-        self.error = error
-        self.status = status
-
-    @property
-    def error(self):
-        """Gets the error of this ErrorResponse.  # noqa: E501
-
-
-        :return: The error of this ErrorResponse.  # noqa: E501
-        :rtype: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        return self._error
-    @error.setter
-    def error(self, error):
-        """Sets the error of this ErrorResponse.
-
-
-        :param error: The error of this ErrorResponse.  # noqa: E501
-        :type error: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        if self.local_vars_configuration.client_side_validation and error is None:  # noqa: E501
-            raise ValueError("Invalid value for `error`, must not be `None`")  # noqa: E501
-
-        self._error = error
-        
-
-    @property
-    def status(self):
-        """Gets the status of this ErrorResponse.  # noqa: E501
-
-
-        :return: The status of this ErrorResponse.  # noqa: E501
-        :rtype: int
-        """
-        return self._status
-    @status.setter
-    def status(self, status):
-        """Sets the status of this ErrorResponse.
-
-
-        :param status: The status of this ErrorResponse.  # noqa: E501
-        :type status: int
-        """
-        if self.local_vars_configuration.client_side_validation and status is None:  # noqa: E501
-            raise ValueError("Invalid value for `status`, must not be `None`")  # noqa: E501
-
-        self._status = status
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, ErrorResponse):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, ErrorResponse):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/facet.py b/out/manticoresearch-python-actual/manticoresearch/model/facet.py
deleted file mode 100644
index dec5a26..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/facet.py
+++ /dev/null
@@ -1,179 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class Facet(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'attr': 'str',
-        'alias': 'str',
-        'limit': 'int'
-    }
-
-    attribute_map = {
-        'attr': 'attr',
-        'alias': 'alias',
-        'limit': 'limit'
-    }
-
-    def __init__(self, attr=None, alias=None, limit=None, local_vars_configuration=None):  # noqa: E501
-        """Facet - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._attr = None
-        self._alias = None
-        self._limit = None
-        self.discriminator = None
-
-        self.attr = attr
-        if alias is not None:
-            self.alias = alias
-        if limit is not None:
-            self.limit = limit
-
-    @property
-    def attr(self):
-        """Gets the attr of this Facet.  # noqa: E501
-
-        The name of an attribute to facet  # noqa: E501
-
-        :return: The attr of this Facet.  # noqa: E501
-        :rtype: str
-        """
-        return self._attr
-    @attr.setter
-    def attr(self, attr):
-        """Sets the attr of this Facet.
-
-        The name of an attribute to facet  # noqa: E501
-
-        :param attr: The attr of this Facet.  # noqa: E501
-        :type attr: str
-        """
-        if self.local_vars_configuration.client_side_validation and attr is None:  # noqa: E501
-            raise ValueError("Invalid value for `attr`, must not be `None`")  # noqa: E501
-
-        self._attr = attr
-        
-
-    @property
-    def alias(self):
-        """Gets the alias of this Facet.  # noqa: E501
-
-        Facet alias  # noqa: E501
-
-        :return: The alias of this Facet.  # noqa: E501
-        :rtype: str
-        """
-        return self._alias
-    @alias.setter
-    def alias(self, alias):
-        """Sets the alias of this Facet.
-
-        Facet alias  # noqa: E501
-
-        :param alias: The alias of this Facet.  # noqa: E501
-        :type alias: str
-        """
-
-        self._alias = alias
-        
-
-    @property
-    def limit(self):
-        """Gets the limit of this Facet.  # noqa: E501
-
-        The number of facet values to return  # noqa: E501
-
-        :return: The limit of this Facet.  # noqa: E501
-        :rtype: int
-        """
-        return self._limit
-    @limit.setter
-    def limit(self, limit):
-        """Sets the limit of this Facet.
-
-        The number of facet values to return  # noqa: E501
-
-        :param limit: The limit of this Facet.  # noqa: E501
-        :type limit: int
-        """
-
-        self._limit = limit
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, Facet):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, Facet):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/filter_boolean.py b/out/manticoresearch-python-actual/manticoresearch/model/filter_boolean.py
deleted file mode 100644
index dfedc67..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/filter_boolean.py
+++ /dev/null
@@ -1,175 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class FilterBoolean(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'filter_field': 'str',
-        'operation': 'str',
-        'filter_value': 'bool'
-    }
-
-    attribute_map = {
-        'filter_field': 'filter_field',
-        'operation': 'operation',
-        'filter_value': 'filter_value'
-    }
-
-    def __init__(self, filter_field=None, operation=None, filter_value=None, local_vars_configuration=None):  # noqa: E501
-        """FilterBoolean - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._filter_field = None
-        self._operation = None
-        self._filter_value = None
-        self.discriminator = None
-
-        self.filter_field = filter_field
-        self.operation = operation
-        self.filter_value = filter_value
-
-    @property
-    def filter_field(self):
-        """Gets the filter_field of this FilterBoolean.  # noqa: E501
-
-
-        :return: The filter_field of this FilterBoolean.  # noqa: E501
-        :rtype: str
-        """
-        return self._filter_field
-    @filter_field.setter
-    def filter_field(self, filter_field):
-        """Sets the filter_field of this FilterBoolean.
-
-
-        :param filter_field: The filter_field of this FilterBoolean.  # noqa: E501
-        :type filter_field: str
-        """
-        if self.local_vars_configuration.client_side_validation and filter_field is None:  # noqa: E501
-            raise ValueError("Invalid value for `filter_field`, must not be `None`")  # noqa: E501
-
-        self._filter_field = filter_field
-        
-
-    @property
-    def operation(self):
-        """Gets the operation of this FilterBoolean.  # noqa: E501
-
-
-        :return: The operation of this FilterBoolean.  # noqa: E501
-        :rtype: str
-        """
-        return self._operation
-    @operation.setter
-    def operation(self, operation):
-        """Sets the operation of this FilterBoolean.
-
-
-        :param operation: The operation of this FilterBoolean.  # noqa: E501
-        :type operation: str
-        """
-        if self.local_vars_configuration.client_side_validation and operation is None:  # noqa: E501
-            raise ValueError("Invalid value for `operation`, must not be `None`")  # noqa: E501
-
-        self._operation = operation
-        
-
-    @property
-    def filter_value(self):
-        """Gets the filter_value of this FilterBoolean.  # noqa: E501
-
-
-        :return: The filter_value of this FilterBoolean.  # noqa: E501
-        :rtype: bool
-        """
-        return self._filter_value
-    @filter_value.setter
-    def filter_value(self, filter_value):
-        """Sets the filter_value of this FilterBoolean.
-
-
-        :param filter_value: The filter_value of this FilterBoolean.  # noqa: E501
-        :type filter_value: bool
-        """
-        if self.local_vars_configuration.client_side_validation and filter_value is None:  # noqa: E501
-            raise ValueError("Invalid value for `filter_value`, must not be `None`")  # noqa: E501
-
-        self._filter_value = filter_value
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, FilterBoolean):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, FilterBoolean):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/filter_number.py b/out/manticoresearch-python-actual/manticoresearch/model/filter_number.py
deleted file mode 100644
index 2010b2c..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/filter_number.py
+++ /dev/null
@@ -1,175 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class FilterNumber(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'filter_field': 'str',
-        'operation': 'str',
-        'filter_value': 'float'
-    }
-
-    attribute_map = {
-        'filter_field': 'filter_field',
-        'operation': 'operation',
-        'filter_value': 'filter_value'
-    }
-
-    def __init__(self, filter_field=None, operation=None, filter_value=None, local_vars_configuration=None):  # noqa: E501
-        """FilterNumber - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._filter_field = None
-        self._operation = None
-        self._filter_value = None
-        self.discriminator = None
-
-        self.filter_field = filter_field
-        self.operation = operation
-        self.filter_value = filter_value
-
-    @property
-    def filter_field(self):
-        """Gets the filter_field of this FilterNumber.  # noqa: E501
-
-
-        :return: The filter_field of this FilterNumber.  # noqa: E501
-        :rtype: str
-        """
-        return self._filter_field
-    @filter_field.setter
-    def filter_field(self, filter_field):
-        """Sets the filter_field of this FilterNumber.
-
-
-        :param filter_field: The filter_field of this FilterNumber.  # noqa: E501
-        :type filter_field: str
-        """
-        if self.local_vars_configuration.client_side_validation and filter_field is None:  # noqa: E501
-            raise ValueError("Invalid value for `filter_field`, must not be `None`")  # noqa: E501
-
-        self._filter_field = filter_field
-        
-
-    @property
-    def operation(self):
-        """Gets the operation of this FilterNumber.  # noqa: E501
-
-
-        :return: The operation of this FilterNumber.  # noqa: E501
-        :rtype: str
-        """
-        return self._operation
-    @operation.setter
-    def operation(self, operation):
-        """Sets the operation of this FilterNumber.
-
-
-        :param operation: The operation of this FilterNumber.  # noqa: E501
-        :type operation: str
-        """
-        if self.local_vars_configuration.client_side_validation and operation is None:  # noqa: E501
-            raise ValueError("Invalid value for `operation`, must not be `None`")  # noqa: E501
-
-        self._operation = operation
-        
-
-    @property
-    def filter_value(self):
-        """Gets the filter_value of this FilterNumber.  # noqa: E501
-
-
-        :return: The filter_value of this FilterNumber.  # noqa: E501
-        :rtype: float
-        """
-        return self._filter_value
-    @filter_value.setter
-    def filter_value(self, filter_value):
-        """Sets the filter_value of this FilterNumber.
-
-
-        :param filter_value: The filter_value of this FilterNumber.  # noqa: E501
-        :type filter_value: float
-        """
-        if self.local_vars_configuration.client_side_validation and filter_value is None:  # noqa: E501
-            raise ValueError("Invalid value for `filter_value`, must not be `None`")  # noqa: E501
-
-        self._filter_value = filter_value
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, FilterNumber):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, FilterNumber):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/filter_string.py b/out/manticoresearch-python-actual/manticoresearch/model/filter_string.py
deleted file mode 100644
index a7b530c..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/filter_string.py
+++ /dev/null
@@ -1,175 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class FilterString(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'filter_field': 'str',
-        'operation': 'str',
-        'filter_value': 'str'
-    }
-
-    attribute_map = {
-        'filter_field': 'filter_field',
-        'operation': 'operation',
-        'filter_value': 'filter_value'
-    }
-
-    def __init__(self, filter_field=None, operation=None, filter_value=None, local_vars_configuration=None):  # noqa: E501
-        """FilterString - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._filter_field = None
-        self._operation = None
-        self._filter_value = None
-        self.discriminator = None
-
-        self.filter_field = filter_field
-        self.operation = operation
-        self.filter_value = filter_value
-
-    @property
-    def filter_field(self):
-        """Gets the filter_field of this FilterString.  # noqa: E501
-
-
-        :return: The filter_field of this FilterString.  # noqa: E501
-        :rtype: str
-        """
-        return self._filter_field
-    @filter_field.setter
-    def filter_field(self, filter_field):
-        """Sets the filter_field of this FilterString.
-
-
-        :param filter_field: The filter_field of this FilterString.  # noqa: E501
-        :type filter_field: str
-        """
-        if self.local_vars_configuration.client_side_validation and filter_field is None:  # noqa: E501
-            raise ValueError("Invalid value for `filter_field`, must not be `None`")  # noqa: E501
-
-        self._filter_field = filter_field
-        
-
-    @property
-    def operation(self):
-        """Gets the operation of this FilterString.  # noqa: E501
-
-
-        :return: The operation of this FilterString.  # noqa: E501
-        :rtype: str
-        """
-        return self._operation
-    @operation.setter
-    def operation(self, operation):
-        """Sets the operation of this FilterString.
-
-
-        :param operation: The operation of this FilterString.  # noqa: E501
-        :type operation: str
-        """
-        if self.local_vars_configuration.client_side_validation and operation is None:  # noqa: E501
-            raise ValueError("Invalid value for `operation`, must not be `None`")  # noqa: E501
-
-        self._operation = operation
-        
-
-    @property
-    def filter_value(self):
-        """Gets the filter_value of this FilterString.  # noqa: E501
-
-
-        :return: The filter_value of this FilterString.  # noqa: E501
-        :rtype: str
-        """
-        return self._filter_value
-    @filter_value.setter
-    def filter_value(self, filter_value):
-        """Sets the filter_value of this FilterString.
-
-
-        :param filter_value: The filter_value of this FilterString.  # noqa: E501
-        :type filter_value: str
-        """
-        if self.local_vars_configuration.client_side_validation and filter_value is None:  # noqa: E501
-            raise ValueError("Invalid value for `filter_value`, must not be `None`")  # noqa: E501
-
-        self._filter_value = filter_value
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, FilterString):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, FilterString):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/fulltext_filter.py b/out/manticoresearch-python-actual/manticoresearch/model/fulltext_filter.py
deleted file mode 100644
index 39cd3a2..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/fulltext_filter.py
+++ /dev/null
@@ -1,92 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class FulltextFilter(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-    }
-
-    attribute_map = {
-    }
-
-    def __init__(self, local_vars_configuration=None):  # noqa: E501
-        """FulltextFilter - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-        self.discriminator = None
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, FulltextFilter):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, FulltextFilter):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/geo_distance_filter.py b/out/manticoresearch-python-actual/manticoresearch/model/geo_distance_filter.py
deleted file mode 100644
index 22b5d11..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/geo_distance_filter.py
+++ /dev/null
@@ -1,207 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class GeoDistanceFilter(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'location_anchor': 'GeoDistanceFilterLocationAnchor',
-        'location_source': 'str',
-        'distance_type': 'str',
-        'distance': 'str'
-    }
-
-    attribute_map = {
-        'location_anchor': 'location_anchor',
-        'location_source': 'location_source',
-        'distance_type': 'distance_type',
-        'distance': 'distance'
-    }
-
-    def __init__(self, location_anchor=None, location_source=None, distance_type=None, distance=None, local_vars_configuration=None):  # noqa: E501
-        """GeoDistanceFilter - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._location_anchor = None
-        self._location_source = None
-        self._distance_type = None
-        self._distance = None
-        self.discriminator = None
-
-        if location_anchor is not None:
-            self.location_anchor = location_anchor
-        if location_source is not None:
-            self.location_source = location_source
-        if distance_type is not None:
-            self.distance_type = distance_type
-        if distance is not None:
-            self.distance = distance
-
-    @property
-    def location_anchor(self):
-        """Gets the location_anchor of this GeoDistanceFilter.  # noqa: E501
-
-
-        :return: The location_anchor of this GeoDistanceFilter.  # noqa: E501
-        :rtype: GeoDistanceFilterLocationAnchor
-        """
-        return self._location_anchor
-    @location_anchor.setter
-    def location_anchor(self, location_anchor):
-        """Sets the location_anchor of this GeoDistanceFilter.
-
-
-        :param location_anchor: The location_anchor of this GeoDistanceFilter.  # noqa: E501
-        :type location_anchor: GeoDistanceFilterLocationAnchor
-        """
-
-        self._location_anchor = location_anchor
-        
-
-    @property
-    def location_source(self):
-        """Gets the location_source of this GeoDistanceFilter.  # noqa: E501
-
-        Attribute containing latitude and longitude data  # noqa: E501
-
-        :return: The location_source of this GeoDistanceFilter.  # noqa: E501
-        :rtype: str
-        """
-        return self._location_source
-    @location_source.setter
-    def location_source(self, location_source):
-        """Sets the location_source of this GeoDistanceFilter.
-
-        Attribute containing latitude and longitude data  # noqa: E501
-
-        :param location_source: The location_source of this GeoDistanceFilter.  # noqa: E501
-        :type location_source: str
-        """
-
-        self._location_source = location_source
-        
-
-    @property
-    def distance_type(self):
-        """Gets the distance_type of this GeoDistanceFilter.  # noqa: E501
-
-
-        :return: The distance_type of this GeoDistanceFilter.  # noqa: E501
-        :rtype: str
-        """
-        return self._distance_type
-    @distance_type.setter
-    def distance_type(self, distance_type):
-        """Sets the distance_type of this GeoDistanceFilter.
-
-
-        :param distance_type: The distance_type of this GeoDistanceFilter.  # noqa: E501
-        :type distance_type: str
-        """
-        allowed_values = ["adaptive", "haversine"]  # noqa: E501
-        if self.local_vars_configuration.client_side_validation and distance_type not in allowed_values:  # noqa: E501
-            raise ValueError(
-                "Invalid value for `distance_type` ({0}), must be one of {1}"  # noqa: E501
-                .format(distance_type, allowed_values)
-            )
-
-        self._distance_type = distance_type
-        
-
-    @property
-    def distance(self):
-        """Gets the distance of this GeoDistanceFilter.  # noqa: E501
-
-
-        :return: The distance of this GeoDistanceFilter.  # noqa: E501
-        :rtype: str
-        """
-        return self._distance
-    @distance.setter
-    def distance(self, distance):
-        """Sets the distance of this GeoDistanceFilter.
-
-
-        :param distance: The distance of this GeoDistanceFilter.  # noqa: E501
-        :type distance: str
-        """
-
-        self._distance = distance
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-        result = { 'geo_distance': result }
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, GeoDistanceFilter):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, GeoDistanceFilter):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/geo_distance_filter_location_anchor.py b/out/manticoresearch-python-actual/manticoresearch/model/geo_distance_filter_location_anchor.py
deleted file mode 100644
index a9962b9..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/geo_distance_filter_location_anchor.py
+++ /dev/null
@@ -1,150 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class GeoDistanceFilterLocationAnchor(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'lat': 'float',
-        'lon': 'float'
-    }
-
-    attribute_map = {
-        'lat': 'lat',
-        'lon': 'lon'
-    }
-
-    def __init__(self, lat=None, lon=None, local_vars_configuration=None):  # noqa: E501
-        """GeoDistanceFilterLocationAnchor - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._lat = None
-        self._lon = None
-        self.discriminator = None
-
-        if lat is not None:
-            self.lat = lat
-        if lon is not None:
-            self.lon = lon
-
-    @property
-    def lat(self):
-        """Gets the lat of this GeoDistanceFilterLocationAnchor.  # noqa: E501
-
-        Geo latitude of pin point in degrees  # noqa: E501
-
-        :return: The lat of this GeoDistanceFilterLocationAnchor.  # noqa: E501
-        :rtype: float
-        """
-        return self._lat
-    @lat.setter
-    def lat(self, lat):
-        """Sets the lat of this GeoDistanceFilterLocationAnchor.
-
-        Geo latitude of pin point in degrees  # noqa: E501
-
-        :param lat: The lat of this GeoDistanceFilterLocationAnchor.  # noqa: E501
-        :type lat: float
-        """
-
-        self._lat = lat
-        
-
-    @property
-    def lon(self):
-        """Gets the lon of this GeoDistanceFilterLocationAnchor.  # noqa: E501
-
-        Geo longitude pf pin point in degrees  # noqa: E501
-
-        :return: The lon of this GeoDistanceFilterLocationAnchor.  # noqa: E501
-        :rtype: float
-        """
-        return self._lon
-    @lon.setter
-    def lon(self, lon):
-        """Sets the lon of this GeoDistanceFilterLocationAnchor.
-
-        Geo longitude pf pin point in degrees  # noqa: E501
-
-        :param lon: The lon of this GeoDistanceFilterLocationAnchor.  # noqa: E501
-        :type lon: float
-        """
-
-        self._lon = lon
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, GeoDistanceFilterLocationAnchor):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, GeoDistanceFilterLocationAnchor):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/highlight.py b/out/manticoresearch-python-actual/manticoresearch/model/highlight.py
deleted file mode 100644
index fff2c5b..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/highlight.py
+++ /dev/null
@@ -1,691 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class Highlight(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'fieldnames': '[str]',
-        'fields': '[HighlightField]',
-        'encoder': 'str',
-        'highlight_query': '{str: (bool, date, datetime, dict, float, int, list, str, none_type)}, none_type',
-        'pre_tags': 'str',
-        'post_tags': 'str',
-        'no_match_size': 'int',
-        'fragment_size': 'int',
-        'number_of_fragments': 'int',
-        'limit': 'int',
-        'limit_words': 'int',
-        'limit_snippets': 'int',
-        'limits_per_field': 'bool',
-        'use_boundaries': 'bool',
-        'force_all_words': 'bool',
-        'allow_empty': 'bool',
-        'emit_zones': 'bool',
-        'force_snippets': 'bool',
-        'around': 'int',
-        'start_snippet_id': 'int',
-        'html_strip_mode': 'str',
-        'snippet_boundary': 'str'
-    }
-
-    attribute_map = {
-        'fieldnames': 'fieldnames',
-        'fields': 'fields',
-        'encoder': 'encoder',
-        'highlight_query': 'highlight_query',
-        'pre_tags': 'pre_tags',
-        'post_tags': 'post_tags',
-        'no_match_size': 'no_match_size',
-        'fragment_size': 'fragment_size',
-        'number_of_fragments': 'number_of_fragments',
-        'limit': 'limit',
-        'limit_words': 'limit_words',
-        'limit_snippets': 'limit_snippets',
-        'limits_per_field': 'limits_per_field',
-        'use_boundaries': 'use_boundaries',
-        'force_all_words': 'force_all_words',
-        'allow_empty': 'allow_empty',
-        'emit_zones': 'emit_zones',
-        'force_snippets': 'force_snippets',
-        'around': 'around',
-        'start_snippet_id': 'start_snippet_id',
-        'html_strip_mode': 'html_strip_mode',
-        'snippet_boundary': 'snippet_boundary'
-    }
-
-    def __init__(self, fieldnames=None, fields=None, encoder=None, highlight_query=None, pre_tags="<strong>", post_tags="</strong>", no_match_size=None, fragment_size=256, number_of_fragments=0, limit=256, limit_words=0, limit_snippets=0, limits_per_field=False, use_boundaries=False, force_all_words=False, allow_empty=False, emit_zones=False, force_snippets=False, around=5, start_snippet_id=1, html_strip_mode=None, snippet_boundary=None, local_vars_configuration=None):  # noqa: E501
-        """Highlight - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._fieldnames = None
-        self._fields = None
-        self._encoder = None
-        self._highlight_query = None
-        self._pre_tags = None
-        self._post_tags = None
-        self._no_match_size = None
-        self._fragment_size = None
-        self._number_of_fragments = None
-        self._limit = None
-        self._limit_words = None
-        self._limit_snippets = None
-        self._limits_per_field = None
-        self._use_boundaries = None
-        self._force_all_words = None
-        self._allow_empty = None
-        self._emit_zones = None
-        self._force_snippets = None
-        self._around = None
-        self._start_snippet_id = None
-        self._html_strip_mode = None
-        self._snippet_boundary = None
-        self.discriminator = None
-
-        if fieldnames is not None:
-            self.fieldnames = fieldnames
-        if fields is not None:
-            self.fields = fields
-        if encoder is not None:
-            self.encoder = encoder
-        self.highlight_query = highlight_query
-        if pre_tags is not None:
-            self.pre_tags = pre_tags
-        if post_tags is not None:
-            self.post_tags = post_tags
-        if no_match_size is not None:
-            self.no_match_size = no_match_size
-        if fragment_size is not None:
-            self.fragment_size = fragment_size
-        if number_of_fragments is not None:
-            self.number_of_fragments = number_of_fragments
-        if limit is not None:
-            self.limit = limit
-        if limit_words is not None:
-            self.limit_words = limit_words
-        if limit_snippets is not None:
-            self.limit_snippets = limit_snippets
-        if limits_per_field is not None:
-            self.limits_per_field = limits_per_field
-        if use_boundaries is not None:
-            self.use_boundaries = use_boundaries
-        if force_all_words is not None:
-            self.force_all_words = force_all_words
-        if allow_empty is not None:
-            self.allow_empty = allow_empty
-        if emit_zones is not None:
-            self.emit_zones = emit_zones
-        if force_snippets is not None:
-            self.force_snippets = force_snippets
-        if around is not None:
-            self.around = around
-        if start_snippet_id is not None:
-            self.start_snippet_id = start_snippet_id
-        if html_strip_mode is not None:
-            self.html_strip_mode = html_strip_mode
-        if snippet_boundary is not None:
-            self.snippet_boundary = snippet_boundary
-
-    @property
-    def fieldnames(self):
-        """Gets the fieldnames of this Highlight.  # noqa: E501
-
-
-        :return: The fieldnames of this Highlight.  # noqa: E501
-        :rtype: [str]
-        """
-        return self._fieldnames
-    @fieldnames.setter
-    def fieldnames(self, fieldnames):
-        """Sets the fieldnames of this Highlight.
-
-
-        :param fieldnames: The fieldnames of this Highlight.  # noqa: E501
-        :type fieldnames: [str]
-        """
-
-        self._fieldnames = fieldnames
-        
-
-    @property
-    def fields(self):
-        """Gets the fields of this Highlight.  # noqa: E501
-
-
-        :return: The fields of this Highlight.  # noqa: E501
-        :rtype: [HighlightField]
-        """
-        return self._fields
-    @fields.setter
-    def fields(self, fields):
-        """Sets the fields of this Highlight.
-
-
-        :param fields: The fields of this Highlight.  # noqa: E501
-        :type fields: [HighlightField]
-        """
-
-        self._fields = fields
-        
-
-    @property
-    def encoder(self):
-        """Gets the encoder of this Highlight.  # noqa: E501
-
-
-        :return: The encoder of this Highlight.  # noqa: E501
-        :rtype: str
-        """
-        return self._encoder
-    @encoder.setter
-    def encoder(self, encoder):
-        """Sets the encoder of this Highlight.
-
-
-        :param encoder: The encoder of this Highlight.  # noqa: E501
-        :type encoder: str
-        """
-        allowed_values = ["default", "html"]  # noqa: E501
-        if self.local_vars_configuration.client_side_validation and encoder not in allowed_values:  # noqa: E501
-            raise ValueError(
-                "Invalid value for `encoder` ({0}), must be one of {1}"  # noqa: E501
-                .format(encoder, allowed_values)
-            )
-
-        self._encoder = encoder
-        
-
-    @property
-    def highlight_query(self):
-        """Gets the highlight_query of this Highlight.  # noqa: E501
-
-
-        :return: The highlight_query of this Highlight.  # noqa: E501
-        :rtype: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}, none_type
-        """
-        return self._highlight_query
-    @highlight_query.setter
-    def highlight_query(self, highlight_query):
-        """Sets the highlight_query of this Highlight.
-
-
-        :param highlight_query: The highlight_query of this Highlight.  # noqa: E501
-        :type highlight_query: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}, none_type
-        """
-
-        self._highlight_query = highlight_query
-        
-
-    @property
-    def pre_tags(self):
-        """Gets the pre_tags of this Highlight.  # noqa: E501
-
-
-        :return: The pre_tags of this Highlight.  # noqa: E501
-        :rtype: str
-        """
-        return self._pre_tags
-    @pre_tags.setter
-    def pre_tags(self, pre_tags):
-        """Sets the pre_tags of this Highlight.
-
-
-        :param pre_tags: The pre_tags of this Highlight.  # noqa: E501
-        :type pre_tags: str
-        """
-
-        self._pre_tags = pre_tags
-        
-
-    @property
-    def post_tags(self):
-        """Gets the post_tags of this Highlight.  # noqa: E501
-
-
-        :return: The post_tags of this Highlight.  # noqa: E501
-        :rtype: str
-        """
-        return self._post_tags
-    @post_tags.setter
-    def post_tags(self, post_tags):
-        """Sets the post_tags of this Highlight.
-
-
-        :param post_tags: The post_tags of this Highlight.  # noqa: E501
-        :type post_tags: str
-        """
-
-        self._post_tags = post_tags
-        
-
-    @property
-    def no_match_size(self):
-        """Gets the no_match_size of this Highlight.  # noqa: E501
-
-
-        :return: The no_match_size of this Highlight.  # noqa: E501
-        :rtype: int
-        """
-        return self._no_match_size
-    @no_match_size.setter
-    def no_match_size(self, no_match_size):
-        """Sets the no_match_size of this Highlight.
-
-
-        :param no_match_size: The no_match_size of this Highlight.  # noqa: E501
-        :type no_match_size: int
-        """
-        allowed_values = [0, 1]  # noqa: E501
-        if self.local_vars_configuration.client_side_validation and no_match_size not in allowed_values:  # noqa: E501
-            raise ValueError(
-                "Invalid value for `no_match_size` ({0}), must be one of {1}"  # noqa: E501
-                .format(no_match_size, allowed_values)
-            )
-
-        self._no_match_size = no_match_size
-        
-
-    @property
-    def fragment_size(self):
-        """Gets the fragment_size of this Highlight.  # noqa: E501
-
-
-        :return: The fragment_size of this Highlight.  # noqa: E501
-        :rtype: int
-        """
-        return self._fragment_size
-    @fragment_size.setter
-    def fragment_size(self, fragment_size):
-        """Sets the fragment_size of this Highlight.
-
-
-        :param fragment_size: The fragment_size of this Highlight.  # noqa: E501
-        :type fragment_size: int
-        """
-
-        self._fragment_size = fragment_size
-        
-
-    @property
-    def number_of_fragments(self):
-        """Gets the number_of_fragments of this Highlight.  # noqa: E501
-
-
-        :return: The number_of_fragments of this Highlight.  # noqa: E501
-        :rtype: int
-        """
-        return self._number_of_fragments
-    @number_of_fragments.setter
-    def number_of_fragments(self, number_of_fragments):
-        """Sets the number_of_fragments of this Highlight.
-
-
-        :param number_of_fragments: The number_of_fragments of this Highlight.  # noqa: E501
-        :type number_of_fragments: int
-        """
-
-        self._number_of_fragments = number_of_fragments
-        
-
-    @property
-    def limit(self):
-        """Gets the limit of this Highlight.  # noqa: E501
-
-
-        :return: The limit of this Highlight.  # noqa: E501
-        :rtype: int
-        """
-        return self._limit
-    @limit.setter
-    def limit(self, limit):
-        """Sets the limit of this Highlight.
-
-
-        :param limit: The limit of this Highlight.  # noqa: E501
-        :type limit: int
-        """
-
-        self._limit = limit
-        
-
-    @property
-    def limit_words(self):
-        """Gets the limit_words of this Highlight.  # noqa: E501
-
-
-        :return: The limit_words of this Highlight.  # noqa: E501
-        :rtype: int
-        """
-        return self._limit_words
-    @limit_words.setter
-    def limit_words(self, limit_words):
-        """Sets the limit_words of this Highlight.
-
-
-        :param limit_words: The limit_words of this Highlight.  # noqa: E501
-        :type limit_words: int
-        """
-
-        self._limit_words = limit_words
-        
-
-    @property
-    def limit_snippets(self):
-        """Gets the limit_snippets of this Highlight.  # noqa: E501
-
-
-        :return: The limit_snippets of this Highlight.  # noqa: E501
-        :rtype: int
-        """
-        return self._limit_snippets
-    @limit_snippets.setter
-    def limit_snippets(self, limit_snippets):
-        """Sets the limit_snippets of this Highlight.
-
-
-        :param limit_snippets: The limit_snippets of this Highlight.  # noqa: E501
-        :type limit_snippets: int
-        """
-
-        self._limit_snippets = limit_snippets
-        
-
-    @property
-    def limits_per_field(self):
-        """Gets the limits_per_field of this Highlight.  # noqa: E501
-
-
-        :return: The limits_per_field of this Highlight.  # noqa: E501
-        :rtype: bool
-        """
-        return self._limits_per_field
-    @limits_per_field.setter
-    def limits_per_field(self, limits_per_field):
-        """Sets the limits_per_field of this Highlight.
-
-
-        :param limits_per_field: The limits_per_field of this Highlight.  # noqa: E501
-        :type limits_per_field: bool
-        """
-
-        self._limits_per_field = limits_per_field
-        
-
-    @property
-    def use_boundaries(self):
-        """Gets the use_boundaries of this Highlight.  # noqa: E501
-
-
-        :return: The use_boundaries of this Highlight.  # noqa: E501
-        :rtype: bool
-        """
-        return self._use_boundaries
-    @use_boundaries.setter
-    def use_boundaries(self, use_boundaries):
-        """Sets the use_boundaries of this Highlight.
-
-
-        :param use_boundaries: The use_boundaries of this Highlight.  # noqa: E501
-        :type use_boundaries: bool
-        """
-
-        self._use_boundaries = use_boundaries
-        
-
-    @property
-    def force_all_words(self):
-        """Gets the force_all_words of this Highlight.  # noqa: E501
-
-
-        :return: The force_all_words of this Highlight.  # noqa: E501
-        :rtype: bool
-        """
-        return self._force_all_words
-    @force_all_words.setter
-    def force_all_words(self, force_all_words):
-        """Sets the force_all_words of this Highlight.
-
-
-        :param force_all_words: The force_all_words of this Highlight.  # noqa: E501
-        :type force_all_words: bool
-        """
-
-        self._force_all_words = force_all_words
-        
-
-    @property
-    def allow_empty(self):
-        """Gets the allow_empty of this Highlight.  # noqa: E501
-
-
-        :return: The allow_empty of this Highlight.  # noqa: E501
-        :rtype: bool
-        """
-        return self._allow_empty
-    @allow_empty.setter
-    def allow_empty(self, allow_empty):
-        """Sets the allow_empty of this Highlight.
-
-
-        :param allow_empty: The allow_empty of this Highlight.  # noqa: E501
-        :type allow_empty: bool
-        """
-
-        self._allow_empty = allow_empty
-        
-
-    @property
-    def emit_zones(self):
-        """Gets the emit_zones of this Highlight.  # noqa: E501
-
-
-        :return: The emit_zones of this Highlight.  # noqa: E501
-        :rtype: bool
-        """
-        return self._emit_zones
-    @emit_zones.setter
-    def emit_zones(self, emit_zones):
-        """Sets the emit_zones of this Highlight.
-
-
-        :param emit_zones: The emit_zones of this Highlight.  # noqa: E501
-        :type emit_zones: bool
-        """
-
-        self._emit_zones = emit_zones
-        
-
-    @property
-    def force_snippets(self):
-        """Gets the force_snippets of this Highlight.  # noqa: E501
-
-
-        :return: The force_snippets of this Highlight.  # noqa: E501
-        :rtype: bool
-        """
-        return self._force_snippets
-    @force_snippets.setter
-    def force_snippets(self, force_snippets):
-        """Sets the force_snippets of this Highlight.
-
-
-        :param force_snippets: The force_snippets of this Highlight.  # noqa: E501
-        :type force_snippets: bool
-        """
-
-        self._force_snippets = force_snippets
-        
-
-    @property
-    def around(self):
-        """Gets the around of this Highlight.  # noqa: E501
-
-
-        :return: The around of this Highlight.  # noqa: E501
-        :rtype: int
-        """
-        return self._around
-    @around.setter
-    def around(self, around):
-        """Sets the around of this Highlight.
-
-
-        :param around: The around of this Highlight.  # noqa: E501
-        :type around: int
-        """
-
-        self._around = around
-        
-
-    @property
-    def start_snippet_id(self):
-        """Gets the start_snippet_id of this Highlight.  # noqa: E501
-
-
-        :return: The start_snippet_id of this Highlight.  # noqa: E501
-        :rtype: int
-        """
-        return self._start_snippet_id
-    @start_snippet_id.setter
-    def start_snippet_id(self, start_snippet_id):
-        """Sets the start_snippet_id of this Highlight.
-
-
-        :param start_snippet_id: The start_snippet_id of this Highlight.  # noqa: E501
-        :type start_snippet_id: int
-        """
-
-        self._start_snippet_id = start_snippet_id
-        
-
-    @property
-    def html_strip_mode(self):
-        """Gets the html_strip_mode of this Highlight.  # noqa: E501
-
-
-        :return: The html_strip_mode of this Highlight.  # noqa: E501
-        :rtype: str
-        """
-        return self._html_strip_mode
-    @html_strip_mode.setter
-    def html_strip_mode(self, html_strip_mode):
-        """Sets the html_strip_mode of this Highlight.
-
-
-        :param html_strip_mode: The html_strip_mode of this Highlight.  # noqa: E501
-        :type html_strip_mode: str
-        """
-        allowed_values = ["none", "strip", "index", "retain"]  # noqa: E501
-        if self.local_vars_configuration.client_side_validation and html_strip_mode not in allowed_values:  # noqa: E501
-            raise ValueError(
-                "Invalid value for `html_strip_mode` ({0}), must be one of {1}"  # noqa: E501
-                .format(html_strip_mode, allowed_values)
-            )
-
-        self._html_strip_mode = html_strip_mode
-        
-
-    @property
-    def snippet_boundary(self):
-        """Gets the snippet_boundary of this Highlight.  # noqa: E501
-
-
-        :return: The snippet_boundary of this Highlight.  # noqa: E501
-        :rtype: str
-        """
-        return self._snippet_boundary
-    @snippet_boundary.setter
-    def snippet_boundary(self, snippet_boundary):
-        """Sets the snippet_boundary of this Highlight.
-
-
-        :param snippet_boundary: The snippet_boundary of this Highlight.  # noqa: E501
-        :type snippet_boundary: str
-        """
-        allowed_values = ["sentence", "paragraph", "zone"]  # noqa: E501
-        if self.local_vars_configuration.client_side_validation and snippet_boundary not in allowed_values:  # noqa: E501
-            raise ValueError(
-                "Invalid value for `snippet_boundary` ({0}), must be one of {1}"  # noqa: E501
-                .format(snippet_boundary, allowed_values)
-            )
-
-        self._snippet_boundary = snippet_boundary
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-        if result['fields'] is not None:
-            result['fields'] = {k:v for i in result['fields'] for k,v in i.items() if v is not None}
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, Highlight):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, Highlight):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/highlight_field.py b/out/manticoresearch-python-actual/manticoresearch/model/highlight_field.py
deleted file mode 100644
index 33a2a5f..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/highlight_field.py
+++ /dev/null
@@ -1,200 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class HighlightField(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'name': 'str',
-        'limit': 'int',
-        'limit_words': 'int',
-        'limit_snippets': 'int'
-    }
-
-    attribute_map = {
-        'name': 'name',
-        'limit': 'limit',
-        'limit_words': 'limit_words',
-        'limit_snippets': 'limit_snippets'
-    }
-
-    def __init__(self, name=None, limit=256, limit_words=0, limit_snippets=0, local_vars_configuration=None):  # noqa: E501
-        """HighlightField - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._name = None
-        self._limit = None
-        self._limit_words = None
-        self._limit_snippets = None
-        self.discriminator = None
-
-        self.name = name
-        if limit is not None:
-            self.limit = limit
-        if limit_words is not None:
-            self.limit_words = limit_words
-        if limit_snippets is not None:
-            self.limit_snippets = limit_snippets
-
-    @property
-    def name(self):
-        """Gets the name of this HighlightField.  # noqa: E501
-
-
-        :return: The name of this HighlightField.  # noqa: E501
-        :rtype: str
-        """
-        return self._name
-    @name.setter
-    def name(self, name):
-        """Sets the name of this HighlightField.
-
-
-        :param name: The name of this HighlightField.  # noqa: E501
-        :type name: str
-        """
-        if self.local_vars_configuration.client_side_validation and name is None:  # noqa: E501
-            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501
-
-        self._name = name
-        
-
-    @property
-    def limit(self):
-        """Gets the limit of this HighlightField.  # noqa: E501
-
-
-        :return: The limit of this HighlightField.  # noqa: E501
-        :rtype: int
-        """
-        return self._limit
-    @limit.setter
-    def limit(self, limit):
-        """Sets the limit of this HighlightField.
-
-
-        :param limit: The limit of this HighlightField.  # noqa: E501
-        :type limit: int
-        """
-
-        self._limit = limit
-        
-
-    @property
-    def limit_words(self):
-        """Gets the limit_words of this HighlightField.  # noqa: E501
-
-
-        :return: The limit_words of this HighlightField.  # noqa: E501
-        :rtype: int
-        """
-        return self._limit_words
-    @limit_words.setter
-    def limit_words(self, limit_words):
-        """Sets the limit_words of this HighlightField.
-
-
-        :param limit_words: The limit_words of this HighlightField.  # noqa: E501
-        :type limit_words: int
-        """
-
-        self._limit_words = limit_words
-        
-
-    @property
-    def limit_snippets(self):
-        """Gets the limit_snippets of this HighlightField.  # noqa: E501
-
-
-        :return: The limit_snippets of this HighlightField.  # noqa: E501
-        :rtype: int
-        """
-        return self._limit_snippets
-    @limit_snippets.setter
-    def limit_snippets(self, limit_snippets):
-        """Sets the limit_snippets of this HighlightField.
-
-
-        :param limit_snippets: The limit_snippets of this HighlightField.  # noqa: E501
-        :type limit_snippets: int
-        """
-
-        self._limit_snippets = limit_snippets
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-        result = { result['name']: {k:v for k,v in result.items() if k != 'name' and v is not None} }
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, HighlightField):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, HighlightField):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/in_filter.py b/out/manticoresearch-python-actual/manticoresearch/model/in_filter.py
deleted file mode 100644
index ae491f9..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/in_filter.py
+++ /dev/null
@@ -1,131 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class InFilter(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'field': 'str',
-        'values': '[{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]'
-    }
-
-    attribute_map = {
-        'field': 'field',
-        'values': 'values'
-    }
-
-    def __init__(self, field=None, values=None, local_vars_configuration=None):  # noqa: E501
-        """InFilter - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._field = None
-        self._values = None
-        self.discriminator = None
-
-        self.field = field
-        self.values = values
-
-    @property
-    def field(self):
-        """Gets the field of this InFilter.  # noqa: E501
-
-
-        :return: The field of this InFilter.  # noqa: E501
-        :rtype: str
-        """
-        return self._field
-    @field.setter
-    def field(self, field):
-        """Sets the field of this InFilter.
-
-
-        :param field: The field of this InFilter.  # noqa: E501
-        :type field: str
-        """
-        if self.local_vars_configuration.client_side_validation and field is None:  # noqa: E501
-            raise ValueError("Invalid value for `field`, must not be `None`")  # noqa: E501
-
-        self._field = field
-        
-
-    @property
-    def values(self):
-        """Gets the values of this InFilter.  # noqa: E501
-
-
-        :return: The values of this InFilter.  # noqa: E501
-        :rtype: [{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]
-        """
-        return self._values
-    @values.setter
-    def values(self, values):
-        """Sets the values of this InFilter.
-
-
-        :param values: The values of this InFilter.  # noqa: E501
-        :type values: [{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]
-        """
-        if self.local_vars_configuration.client_side_validation and values is None:  # noqa: E501
-            raise ValueError("Invalid value for `values`, must not be `None`")  # noqa: E501
-
-        self._values = values
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-        result = { 'in': {self._field: self._values } }
-
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, InFilter):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, InFilter):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/insert_document_request.py b/out/manticoresearch-python-actual/manticoresearch/model/insert_document_request.py
deleted file mode 100644
index 1b5884d..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/insert_document_request.py
+++ /dev/null
@@ -1,208 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class InsertDocumentRequest(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'index': 'str',
-        'cluster': 'str',
-        'id': 'int',
-        'doc': '{str: (bool, date, datetime, dict, float, int, list, str, none_type)}'
-    }
-
-    attribute_map = {
-        'index': 'index',
-        'cluster': 'cluster',
-        'id': 'id',
-        'doc': 'doc'
-    }
-
-    def __init__(self, index=None, cluster=None, id=None, doc=None, local_vars_configuration=None):  # noqa: E501
-        """InsertDocumentRequest - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._index = None
-        self._cluster = None
-        self._id = None
-        self._doc = None
-        self.discriminator = None
-
-        self.index = index
-        if cluster is not None:
-            self.cluster = cluster
-        if id is not None:
-            self.id = id
-        self.doc = doc
-
-    @property
-    def index(self):
-        """Gets the index of this InsertDocumentRequest.  # noqa: E501
-
-        Name of the index  # noqa: E501
-
-        :return: The index of this InsertDocumentRequest.  # noqa: E501
-        :rtype: str
-        """
-        return self._index
-    @index.setter
-    def index(self, index):
-        """Sets the index of this InsertDocumentRequest.
-
-        Name of the index  # noqa: E501
-
-        :param index: The index of this InsertDocumentRequest.  # noqa: E501
-        :type index: str
-        """
-        if self.local_vars_configuration.client_side_validation and index is None:  # noqa: E501
-            raise ValueError("Invalid value for `index`, must not be `None`")  # noqa: E501
-
-        self._index = index
-        
-
-    @property
-    def cluster(self):
-        """Gets the cluster of this InsertDocumentRequest.  # noqa: E501
-
-        cluster name  # noqa: E501
-
-        :return: The cluster of this InsertDocumentRequest.  # noqa: E501
-        :rtype: str
-        """
-        return self._cluster
-    @cluster.setter
-    def cluster(self, cluster):
-        """Sets the cluster of this InsertDocumentRequest.
-
-        cluster name  # noqa: E501
-
-        :param cluster: The cluster of this InsertDocumentRequest.  # noqa: E501
-        :type cluster: str
-        """
-
-        self._cluster = cluster
-        
-
-    @property
-    def id(self):
-        """Gets the id of this InsertDocumentRequest.  # noqa: E501
-
-        Document ID.   # noqa: E501
-
-        :return: The id of this InsertDocumentRequest.  # noqa: E501
-        :rtype: int
-        """
-        return self._id
-    @id.setter
-    def id(self, id):
-        """Sets the id of this InsertDocumentRequest.
-
-        Document ID.   # noqa: E501
-
-        :param id: The id of this InsertDocumentRequest.  # noqa: E501
-        :type id: int
-        """
-
-        self._id = id
-        
-
-    @property
-    def doc(self):
-        """Gets the doc of this InsertDocumentRequest.  # noqa: E501
-
-        Object with document data   # noqa: E501
-
-        :return: The doc of this InsertDocumentRequest.  # noqa: E501
-        :rtype: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        return self._doc
-    @doc.setter
-    def doc(self, doc):
-        """Sets the doc of this InsertDocumentRequest.
-
-        Object with document data   # noqa: E501
-
-        :param doc: The doc of this InsertDocumentRequest.  # noqa: E501
-        :type doc: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        if self.local_vars_configuration.client_side_validation and doc is None:  # noqa: E501
-            raise ValueError("Invalid value for `doc`, must not be `None`")  # noqa: E501
-
-        self._doc = doc
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, InsertDocumentRequest):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, InsertDocumentRequest):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/match_filter.py b/out/manticoresearch-python-actual/manticoresearch/model/match_filter.py
deleted file mode 100644
index 92774fa..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/match_filter.py
+++ /dev/null
@@ -1,131 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class MatchFilter(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'query_string': 'str',
-        'query_fields': 'str'
-    }
-
-    attribute_map = {
-        'query_string': 'query_string',
-        'query_fields': 'query_fields'
-    }
-
-    def __init__(self, query_string="", query_fields="*", local_vars_configuration=None):  # noqa: E501
-        """MatchFilter - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._query_string = None
-        self._query_fields = None
-        self.discriminator = None
-
-        self.query_string = query_string
-        self.query_fields = query_fields
-
-    @property
-    def query_string(self):
-        """Gets the query_string of this MatchFilter.  # noqa: E501
-
-
-        :return: The query_string of this MatchFilter.  # noqa: E501
-        :rtype: str
-        """
-        return self._query_string
-    @query_string.setter
-    def query_string(self, query_string):
-        """Sets the query_string of this MatchFilter.
-
-
-        :param query_string: The query_string of this MatchFilter.  # noqa: E501
-        :type query_string: str
-        """
-        if self.local_vars_configuration.client_side_validation and query_string is None:  # noqa: E501
-            raise ValueError("Invalid value for `query_string`, must not be `None`")  # noqa: E501
-
-        self._query_string = query_string
-        
-
-    @property
-    def query_fields(self):
-        """Gets the query_fields of this MatchFilter.  # noqa: E501
-
-
-        :return: The query_fields of this MatchFilter.  # noqa: E501
-        :rtype: str
-        """
-        return self._query_fields
-    @query_fields.setter
-    def query_fields(self, query_fields):
-        """Sets the query_fields of this MatchFilter.
-
-
-        :param query_fields: The query_fields of this MatchFilter.  # noqa: E501
-        :type query_fields: str
-        """
-        if self.local_vars_configuration.client_side_validation and query_fields is None:  # noqa: E501
-            raise ValueError("Invalid value for `query_fields`, must not be `None`")  # noqa: E501
-
-        self._query_fields = query_fields
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-        result = { 'match': {self._query_fields: self._query_string} }
-
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, MatchFilter):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, MatchFilter):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/match_op.py b/out/manticoresearch-python-actual/manticoresearch/model/match_op.py
deleted file mode 100644
index 592ba4f..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/match_op.py
+++ /dev/null
@@ -1,121 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class MatchOp(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'query_info': '{str: (bool, date, datetime, dict, float, int, list, str, none_type)}'
-    }
-
-    attribute_map = {
-        'query_info': 'query_info'
-    }
-
-    def __init__(self, query_info=None, local_vars_configuration=None):  # noqa: E501
-        """MatchOp - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._query_info = None
-        self.discriminator = None
-
-        self.query_info = query_info
-
-    @property
-    def query_info(self):
-        """Gets the query_info of this MatchOp.  # noqa: E501
-
-
-        :return: The query_info of this MatchOp.  # noqa: E501
-        :rtype: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        return self._query_info
-    @query_info.setter
-    def query_info(self, query_info):
-        """Sets the query_info of this MatchOp.
-
-
-        :param query_info: The query_info of this MatchOp.  # noqa: E501
-        :type query_info: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        if self.local_vars_configuration.client_side_validation and query_info is None:  # noqa: E501
-            raise ValueError("Invalid value for `query_info`, must not be `None`")  # noqa: E501
-
-        self._query_info = query_info
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, MatchOp):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, MatchOp):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/match_op_filter.py b/out/manticoresearch-python-actual/manticoresearch/model/match_op_filter.py
deleted file mode 100644
index 0ec7b26..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/match_op_filter.py
+++ /dev/null
@@ -1,164 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class MatchOpFilter(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'query_string': 'str',
-        'query_fields': 'str',
-        'operator': 'str'
-    }
-
-    attribute_map = {
-        'query_string': 'query_string',
-        'query_fields': 'query_fields',
-        'operator': 'operator'
-    }
-
-    def __init__(self, query_string=None, query_fields=None, operator=None, local_vars_configuration=None):  # noqa: E501
-        """MatchOpFilter - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._query_string = None
-        self._query_fields = None
-        self._operator = None
-        self.discriminator = None
-
-        self.query_string = query_string
-        self.query_fields = query_fields
-        self.operator = operator
-
-    @property
-    def query_string(self):
-        """Gets the query_string of this MatchOpFilter.  # noqa: E501
-
-
-        :return: The query_string of this MatchOpFilter.  # noqa: E501
-        :rtype: str
-        """
-        return self._query_string
-    @query_string.setter
-    def query_string(self, query_string):
-        """Sets the query_string of this MatchOpFilter.
-
-
-        :param query_string: The query_string of this MatchOpFilter.  # noqa: E501
-        :type query_string: str
-        """
-        if self.local_vars_configuration.client_side_validation and query_string is None:  # noqa: E501
-            raise ValueError("Invalid value for `query_string`, must not be `None`")  # noqa: E501
-
-        self._query_string = query_string
-        
-
-    @property
-    def query_fields(self):
-        """Gets the query_fields of this MatchOpFilter.  # noqa: E501
-
-
-        :return: The query_fields of this MatchOpFilter.  # noqa: E501
-        :rtype: str
-        """
-        return self._query_fields
-    @query_fields.setter
-    def query_fields(self, query_fields):
-        """Sets the query_fields of this MatchOpFilter.
-
-
-        :param query_fields: The query_fields of this MatchOpFilter.  # noqa: E501
-        :type query_fields: str
-        """
-        if self.local_vars_configuration.client_side_validation and query_fields is None:  # noqa: E501
-            raise ValueError("Invalid value for `query_fields`, must not be `None`")  # noqa: E501
-
-        self._query_fields = query_fields
-        
-
-    @property
-    def operator(self):
-        """Gets the operator of this MatchOpFilter.  # noqa: E501
-
-
-        :return: The operator of this MatchOpFilter.  # noqa: E501
-        :rtype: str
-        """
-        return self._operator
-    @operator.setter
-    def operator(self, operator):
-        """Sets the operator of this MatchOpFilter.
-
-
-        :param operator: The operator of this MatchOpFilter.  # noqa: E501
-        :type operator: str
-        """
-        if self.local_vars_configuration.client_side_validation and operator is None:  # noqa: E501
-            raise ValueError("Invalid value for `operator`, must not be `None`")  # noqa: E501
-        allowed_values = ["or", "and"]  # noqa: E501
-        if self.local_vars_configuration.client_side_validation and operator not in allowed_values:  # noqa: E501
-            raise ValueError(
-                "Invalid value for `operator` ({0}), must be one of {1}"  # noqa: E501
-                .format(operator, allowed_values)
-            )
-
-        self._operator = operator
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-        result = { 'match': {self._query_fields: {'query': self._query_string, 'operator': self._operator } } }
-
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, MatchOpFilter):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, MatchOpFilter):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/match_phrase_filter.py b/out/manticoresearch-python-actual/manticoresearch/model/match_phrase_filter.py
deleted file mode 100644
index 810b2f5..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/match_phrase_filter.py
+++ /dev/null
@@ -1,131 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class MatchPhraseFilter(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'query_phrase': 'str',
-        'query_fields': 'str'
-    }
-
-    attribute_map = {
-        'query_phrase': 'query_phrase',
-        'query_fields': 'query_fields'
-    }
-
-    def __init__(self, query_phrase=None, query_fields=None, local_vars_configuration=None):  # noqa: E501
-        """MatchPhraseFilter - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._query_phrase = None
-        self._query_fields = None
-        self.discriminator = None
-
-        self.query_phrase = query_phrase
-        self.query_fields = query_fields
-
-    @property
-    def query_phrase(self):
-        """Gets the query_phrase of this MatchPhraseFilter.  # noqa: E501
-
-
-        :return: The query_phrase of this MatchPhraseFilter.  # noqa: E501
-        :rtype: str
-        """
-        return self._query_phrase
-    @query_phrase.setter
-    def query_phrase(self, query_phrase):
-        """Sets the query_phrase of this MatchPhraseFilter.
-
-
-        :param query_phrase: The query_phrase of this MatchPhraseFilter.  # noqa: E501
-        :type query_phrase: str
-        """
-        if self.local_vars_configuration.client_side_validation and query_phrase is None:  # noqa: E501
-            raise ValueError("Invalid value for `query_phrase`, must not be `None`")  # noqa: E501
-
-        self._query_phrase = query_phrase
-        
-
-    @property
-    def query_fields(self):
-        """Gets the query_fields of this MatchPhraseFilter.  # noqa: E501
-
-
-        :return: The query_fields of this MatchPhraseFilter.  # noqa: E501
-        :rtype: str
-        """
-        return self._query_fields
-    @query_fields.setter
-    def query_fields(self, query_fields):
-        """Sets the query_fields of this MatchPhraseFilter.
-
-
-        :param query_fields: The query_fields of this MatchPhraseFilter.  # noqa: E501
-        :type query_fields: str
-        """
-        if self.local_vars_configuration.client_side_validation and query_fields is None:  # noqa: E501
-            raise ValueError("Invalid value for `query_fields`, must not be `None`")  # noqa: E501
-
-        self._query_fields = query_fields
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-        result = { 'match_phrase': {self._query_fields: self._query_phrase} }
-
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, MatchPhraseFilter):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, MatchPhraseFilter):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/not_filter_boolean.py b/out/manticoresearch-python-actual/manticoresearch/model/not_filter_boolean.py
deleted file mode 100644
index 04199cb..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/not_filter_boolean.py
+++ /dev/null
@@ -1,175 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class NotFilterBoolean(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'filter_field': 'str',
-        'operation': 'str',
-        'filter_value': 'bool'
-    }
-
-    attribute_map = {
-        'filter_field': 'filter_field',
-        'operation': 'operation',
-        'filter_value': 'filter_value'
-    }
-
-    def __init__(self, filter_field=None, operation=None, filter_value=None, local_vars_configuration=None):  # noqa: E501
-        """NotFilterBoolean - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._filter_field = None
-        self._operation = None
-        self._filter_value = None
-        self.discriminator = None
-
-        self.filter_field = filter_field
-        self.operation = operation
-        self.filter_value = filter_value
-
-    @property
-    def filter_field(self):
-        """Gets the filter_field of this NotFilterBoolean.  # noqa: E501
-
-
-        :return: The filter_field of this NotFilterBoolean.  # noqa: E501
-        :rtype: str
-        """
-        return self._filter_field
-    @filter_field.setter
-    def filter_field(self, filter_field):
-        """Sets the filter_field of this NotFilterBoolean.
-
-
-        :param filter_field: The filter_field of this NotFilterBoolean.  # noqa: E501
-        :type filter_field: str
-        """
-        if self.local_vars_configuration.client_side_validation and filter_field is None:  # noqa: E501
-            raise ValueError("Invalid value for `filter_field`, must not be `None`")  # noqa: E501
-
-        self._filter_field = filter_field
-        
-
-    @property
-    def operation(self):
-        """Gets the operation of this NotFilterBoolean.  # noqa: E501
-
-
-        :return: The operation of this NotFilterBoolean.  # noqa: E501
-        :rtype: str
-        """
-        return self._operation
-    @operation.setter
-    def operation(self, operation):
-        """Sets the operation of this NotFilterBoolean.
-
-
-        :param operation: The operation of this NotFilterBoolean.  # noqa: E501
-        :type operation: str
-        """
-        if self.local_vars_configuration.client_side_validation and operation is None:  # noqa: E501
-            raise ValueError("Invalid value for `operation`, must not be `None`")  # noqa: E501
-
-        self._operation = operation
-        
-
-    @property
-    def filter_value(self):
-        """Gets the filter_value of this NotFilterBoolean.  # noqa: E501
-
-
-        :return: The filter_value of this NotFilterBoolean.  # noqa: E501
-        :rtype: bool
-        """
-        return self._filter_value
-    @filter_value.setter
-    def filter_value(self, filter_value):
-        """Sets the filter_value of this NotFilterBoolean.
-
-
-        :param filter_value: The filter_value of this NotFilterBoolean.  # noqa: E501
-        :type filter_value: bool
-        """
-        if self.local_vars_configuration.client_side_validation and filter_value is None:  # noqa: E501
-            raise ValueError("Invalid value for `filter_value`, must not be `None`")  # noqa: E501
-
-        self._filter_value = filter_value
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, NotFilterBoolean):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, NotFilterBoolean):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/not_filter_number.py b/out/manticoresearch-python-actual/manticoresearch/model/not_filter_number.py
deleted file mode 100644
index e52bda2..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/not_filter_number.py
+++ /dev/null
@@ -1,175 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class NotFilterNumber(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'filter_field': 'str',
-        'operation': 'str',
-        'filter_value': 'float'
-    }
-
-    attribute_map = {
-        'filter_field': 'filter_field',
-        'operation': 'operation',
-        'filter_value': 'filter_value'
-    }
-
-    def __init__(self, filter_field=None, operation=None, filter_value=None, local_vars_configuration=None):  # noqa: E501
-        """NotFilterNumber - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._filter_field = None
-        self._operation = None
-        self._filter_value = None
-        self.discriminator = None
-
-        self.filter_field = filter_field
-        self.operation = operation
-        self.filter_value = filter_value
-
-    @property
-    def filter_field(self):
-        """Gets the filter_field of this NotFilterNumber.  # noqa: E501
-
-
-        :return: The filter_field of this NotFilterNumber.  # noqa: E501
-        :rtype: str
-        """
-        return self._filter_field
-    @filter_field.setter
-    def filter_field(self, filter_field):
-        """Sets the filter_field of this NotFilterNumber.
-
-
-        :param filter_field: The filter_field of this NotFilterNumber.  # noqa: E501
-        :type filter_field: str
-        """
-        if self.local_vars_configuration.client_side_validation and filter_field is None:  # noqa: E501
-            raise ValueError("Invalid value for `filter_field`, must not be `None`")  # noqa: E501
-
-        self._filter_field = filter_field
-        
-
-    @property
-    def operation(self):
-        """Gets the operation of this NotFilterNumber.  # noqa: E501
-
-
-        :return: The operation of this NotFilterNumber.  # noqa: E501
-        :rtype: str
-        """
-        return self._operation
-    @operation.setter
-    def operation(self, operation):
-        """Sets the operation of this NotFilterNumber.
-
-
-        :param operation: The operation of this NotFilterNumber.  # noqa: E501
-        :type operation: str
-        """
-        if self.local_vars_configuration.client_side_validation and operation is None:  # noqa: E501
-            raise ValueError("Invalid value for `operation`, must not be `None`")  # noqa: E501
-
-        self._operation = operation
-        
-
-    @property
-    def filter_value(self):
-        """Gets the filter_value of this NotFilterNumber.  # noqa: E501
-
-
-        :return: The filter_value of this NotFilterNumber.  # noqa: E501
-        :rtype: float
-        """
-        return self._filter_value
-    @filter_value.setter
-    def filter_value(self, filter_value):
-        """Sets the filter_value of this NotFilterNumber.
-
-
-        :param filter_value: The filter_value of this NotFilterNumber.  # noqa: E501
-        :type filter_value: float
-        """
-        if self.local_vars_configuration.client_side_validation and filter_value is None:  # noqa: E501
-            raise ValueError("Invalid value for `filter_value`, must not be `None`")  # noqa: E501
-
-        self._filter_value = filter_value
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, NotFilterNumber):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, NotFilterNumber):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/not_filter_string.py b/out/manticoresearch-python-actual/manticoresearch/model/not_filter_string.py
deleted file mode 100644
index e1a4323..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/not_filter_string.py
+++ /dev/null
@@ -1,175 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class NotFilterString(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'filter_field': 'str',
-        'operation': 'str',
-        'filter_value': 'str'
-    }
-
-    attribute_map = {
-        'filter_field': 'filter_field',
-        'operation': 'operation',
-        'filter_value': 'filter_value'
-    }
-
-    def __init__(self, filter_field=None, operation=None, filter_value=None, local_vars_configuration=None):  # noqa: E501
-        """NotFilterString - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._filter_field = None
-        self._operation = None
-        self._filter_value = None
-        self.discriminator = None
-
-        self.filter_field = filter_field
-        self.operation = operation
-        self.filter_value = filter_value
-
-    @property
-    def filter_field(self):
-        """Gets the filter_field of this NotFilterString.  # noqa: E501
-
-
-        :return: The filter_field of this NotFilterString.  # noqa: E501
-        :rtype: str
-        """
-        return self._filter_field
-    @filter_field.setter
-    def filter_field(self, filter_field):
-        """Sets the filter_field of this NotFilterString.
-
-
-        :param filter_field: The filter_field of this NotFilterString.  # noqa: E501
-        :type filter_field: str
-        """
-        if self.local_vars_configuration.client_side_validation and filter_field is None:  # noqa: E501
-            raise ValueError("Invalid value for `filter_field`, must not be `None`")  # noqa: E501
-
-        self._filter_field = filter_field
-        
-
-    @property
-    def operation(self):
-        """Gets the operation of this NotFilterString.  # noqa: E501
-
-
-        :return: The operation of this NotFilterString.  # noqa: E501
-        :rtype: str
-        """
-        return self._operation
-    @operation.setter
-    def operation(self, operation):
-        """Sets the operation of this NotFilterString.
-
-
-        :param operation: The operation of this NotFilterString.  # noqa: E501
-        :type operation: str
-        """
-        if self.local_vars_configuration.client_side_validation and operation is None:  # noqa: E501
-            raise ValueError("Invalid value for `operation`, must not be `None`")  # noqa: E501
-
-        self._operation = operation
-        
-
-    @property
-    def filter_value(self):
-        """Gets the filter_value of this NotFilterString.  # noqa: E501
-
-
-        :return: The filter_value of this NotFilterString.  # noqa: E501
-        :rtype: str
-        """
-        return self._filter_value
-    @filter_value.setter
-    def filter_value(self, filter_value):
-        """Sets the filter_value of this NotFilterString.
-
-
-        :param filter_value: The filter_value of this NotFilterString.  # noqa: E501
-        :type filter_value: str
-        """
-        if self.local_vars_configuration.client_side_validation and filter_value is None:  # noqa: E501
-            raise ValueError("Invalid value for `filter_value`, must not be `None`")  # noqa: E501
-
-        self._filter_value = filter_value
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, NotFilterString):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, NotFilterString):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/option.py b/out/manticoresearch-python-actual/manticoresearch/model/option.py
deleted file mode 100644
index 6ce24c3..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/option.py
+++ /dev/null
@@ -1,92 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class Option(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-    }
-
-    attribute_map = {
-    }
-
-    def __init__(self, local_vars_configuration=None):  # noqa: E501
-        """Option - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-        self.discriminator = None
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, Option):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, Option):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/percolate_request.py b/out/manticoresearch-python-actual/manticoresearch/model/percolate_request.py
deleted file mode 100644
index 276ccf6..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/percolate_request.py
+++ /dev/null
@@ -1,121 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class PercolateRequest(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'query': 'PercolateRequestQuery'
-    }
-
-    attribute_map = {
-        'query': 'query'
-    }
-
-    def __init__(self, query=None, local_vars_configuration=None):  # noqa: E501
-        """PercolateRequest - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._query = None
-        self.discriminator = None
-
-        self.query = query
-
-    @property
-    def query(self):
-        """Gets the query of this PercolateRequest.  # noqa: E501
-
-
-        :return: The query of this PercolateRequest.  # noqa: E501
-        :rtype: PercolateRequestQuery
-        """
-        return self._query
-    @query.setter
-    def query(self, query):
-        """Sets the query of this PercolateRequest.
-
-
-        :param query: The query of this PercolateRequest.  # noqa: E501
-        :type query: PercolateRequestQuery
-        """
-        if self.local_vars_configuration.client_side_validation and query is None:  # noqa: E501
-            raise ValueError("Invalid value for `query`, must not be `None`")  # noqa: E501
-
-        self._query = query
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, PercolateRequest):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, PercolateRequest):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/percolate_request_query.py b/out/manticoresearch-python-actual/manticoresearch/model/percolate_request_query.py
deleted file mode 100644
index 61606c6..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/percolate_request_query.py
+++ /dev/null
@@ -1,121 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class PercolateRequestQuery(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'percolate': '{str: (bool, date, datetime, dict, float, int, list, str, none_type)}'
-    }
-
-    attribute_map = {
-        'percolate': 'percolate'
-    }
-
-    def __init__(self, percolate=None, local_vars_configuration=None):  # noqa: E501
-        """PercolateRequestQuery - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._percolate = None
-        self.discriminator = None
-
-        self.percolate = percolate
-
-    @property
-    def percolate(self):
-        """Gets the percolate of this PercolateRequestQuery.  # noqa: E501
-
-
-        :return: The percolate of this PercolateRequestQuery.  # noqa: E501
-        :rtype: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        return self._percolate
-    @percolate.setter
-    def percolate(self, percolate):
-        """Sets the percolate of this PercolateRequestQuery.
-
-
-        :param percolate: The percolate of this PercolateRequestQuery.  # noqa: E501
-        :type percolate: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        if self.local_vars_configuration.client_side_validation and percolate is None:  # noqa: E501
-            raise ValueError("Invalid value for `percolate`, must not be `None`")  # noqa: E501
-
-        self._percolate = percolate
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, PercolateRequestQuery):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, PercolateRequestQuery):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/query_filter.py b/out/manticoresearch-python-actual/manticoresearch/model/query_filter.py
deleted file mode 100644
index e1a0a5e..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/query_filter.py
+++ /dev/null
@@ -1,121 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class QueryFilter(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'query_string': 'str'
-    }
-
-    attribute_map = {
-        'query_string': 'query_string'
-    }
-
-    def __init__(self, query_string=None, local_vars_configuration=None):  # noqa: E501
-        """QueryFilter - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._query_string = None
-        self.discriminator = None
-
-        self.query_string = query_string
-
-    @property
-    def query_string(self):
-        """Gets the query_string of this QueryFilter.  # noqa: E501
-
-
-        :return: The query_string of this QueryFilter.  # noqa: E501
-        :rtype: str
-        """
-        return self._query_string
-    @query_string.setter
-    def query_string(self, query_string):
-        """Sets the query_string of this QueryFilter.
-
-
-        :param query_string: The query_string of this QueryFilter.  # noqa: E501
-        :type query_string: str
-        """
-        if self.local_vars_configuration.client_side_validation and query_string is None:  # noqa: E501
-            raise ValueError("Invalid value for `query_string`, must not be `None`")  # noqa: E501
-
-        self._query_string = query_string
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, QueryFilter):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, QueryFilter):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/range_filter.py b/out/manticoresearch-python-actual/manticoresearch/model/range_filter.py
deleted file mode 100644
index 8406d6f..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/range_filter.py
+++ /dev/null
@@ -1,205 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class RangeFilter(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'field': 'str',
-        'lte': 'float, none_type',
-        'gte': 'float, none_type',
-        'lt': 'float, none_type',
-        'gt': 'float, none_type'
-    }
-
-    attribute_map = {
-        'field': 'field',
-        'lte': 'lte',
-        'gte': 'gte',
-        'lt': 'lt',
-        'gt': 'gt'
-    }
-
-    def __init__(self, field=None, lte=None, gte=None, lt=None, gt=None, local_vars_configuration=None):  # noqa: E501
-        """RangeFilter - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._field = None
-        self._lte = None
-        self._gte = None
-        self._lt = None
-        self._gt = None
-        self.discriminator = None
-
-        self.field = field
-        self.lte = lte
-        self.gte = gte
-        self.lt = lt
-        self.gt = gt
-
-    @property
-    def field(self):
-        """Gets the field of this RangeFilter.  # noqa: E501
-
-
-        :return: The field of this RangeFilter.  # noqa: E501
-        :rtype: str
-        """
-        return self._field
-    @field.setter
-    def field(self, field):
-        """Sets the field of this RangeFilter.
-
-
-        :param field: The field of this RangeFilter.  # noqa: E501
-        :type field: str
-        """
-        if self.local_vars_configuration.client_side_validation and field is None:  # noqa: E501
-            raise ValueError("Invalid value for `field`, must not be `None`")  # noqa: E501
-
-        self._field = field
-        
-
-    @property
-    def lte(self):
-        """Gets the lte of this RangeFilter.  # noqa: E501
-
-
-        :return: The lte of this RangeFilter.  # noqa: E501
-        :rtype: float, none_type
-        """
-        return self._lte
-    @lte.setter
-    def lte(self, lte):
-        """Sets the lte of this RangeFilter.
-
-
-        :param lte: The lte of this RangeFilter.  # noqa: E501
-        :type lte: float, none_type
-        """
-
-        self._lte = lte
-        
-
-    @property
-    def gte(self):
-        """Gets the gte of this RangeFilter.  # noqa: E501
-
-
-        :return: The gte of this RangeFilter.  # noqa: E501
-        :rtype: float, none_type
-        """
-        return self._gte
-    @gte.setter
-    def gte(self, gte):
-        """Sets the gte of this RangeFilter.
-
-
-        :param gte: The gte of this RangeFilter.  # noqa: E501
-        :type gte: float, none_type
-        """
-
-        self._gte = gte
-        
-
-    @property
-    def lt(self):
-        """Gets the lt of this RangeFilter.  # noqa: E501
-
-
-        :return: The lt of this RangeFilter.  # noqa: E501
-        :rtype: float, none_type
-        """
-        return self._lt
-    @lt.setter
-    def lt(self, lt):
-        """Sets the lt of this RangeFilter.
-
-
-        :param lt: The lt of this RangeFilter.  # noqa: E501
-        :type lt: float, none_type
-        """
-
-        self._lt = lt
-        
-
-    @property
-    def gt(self):
-        """Gets the gt of this RangeFilter.  # noqa: E501
-
-
-        :return: The gt of this RangeFilter.  # noqa: E501
-        :rtype: float, none_type
-        """
-        return self._gt
-    @gt.setter
-    def gt(self, gt):
-        """Sets the gt of this RangeFilter.
-
-
-        :param gt: The gt of this RangeFilter.  # noqa: E501
-        :type gt: float, none_type
-        """
-
-        self._gt = gt
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-        result = { 'range': {self._field: { 'gte': self._gte, 'lte': self._lte, 'gt': self._gt, 'lt': self._lt } } }
-        result['range'][self._field] = {k:v for k,v in result['range'][self._field].items() if v is not None}
-
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, RangeFilter):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, RangeFilter):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/search_request.py b/out/manticoresearch-python-actual/manticoresearch/model/search_request.py
deleted file mode 100644
index 7fdcf70..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/search_request.py
+++ /dev/null
@@ -1,511 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class SearchRequest(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'index': 'str',
-        'query': '{str: (bool, date, datetime, dict, float, int, list, str, none_type)}',
-        'fulltext_filter': '{str: (bool, date, datetime, dict, float, int, list, str, none_type)}',
-        'attr_filter': '{str: (bool, date, datetime, dict, float, int, list, str, none_type)}',
-        'limit': 'int',
-        'offset': 'int',
-        'max_matches': 'int',
-        'sort': '[{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]',
-        'aggs': '{str: (Aggregation,)}',
-        'expressions': '{str: (str,)}',
-        'highlight': 'Highlight',
-        'source': '{str: (bool, date, datetime, dict, float, int, list, str, none_type)}',
-        'options': '{str: (bool, date, datetime, dict, float, int, list, str, none_type)}',
-        'profile': 'bool',
-        'track_scores': 'bool'
-    }
-
-    attribute_map = {
-        'index': 'index',
-        'query': 'query',
-        'fulltext_filter': 'fulltext_filter',
-        'attr_filter': 'attr_filter',
-        'limit': 'limit',
-        'offset': 'offset',
-        'max_matches': 'max_matches',
-        'sort': 'sort',
-        'aggs': 'aggs',
-        'expressions': 'expressions',
-        'highlight': 'highlight',
-        'source': 'source',
-        'options': 'options',
-        'profile': 'profile',
-        'track_scores': 'track_scores'
-    }
-
-    def __init__(self, index="", query=None, fulltext_filter=None, attr_filter=None, limit=None, offset=None, max_matches=None, sort=None, aggs=None, expressions=None, highlight=None, source=None, options=None, profile=None, track_scores=None, local_vars_configuration=None):  # noqa: E501
-        """SearchRequest - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._index = None
-        self._query = None
-        self._fulltext_filter = None
-        self._attr_filter = None
-        self._limit = None
-        self._offset = None
-        self._max_matches = None
-        self._sort = None
-        self._aggs = None
-        self._expressions = None
-        self._highlight = None
-        self._source = None
-        self._options = None
-        self._profile = None
-        self._track_scores = None
-        self.discriminator = None
-
-        self.index = index
-        if query is not None:
-            self.query = query
-        if fulltext_filter is not None:
-            self.fulltext_filter = fulltext_filter
-        if attr_filter is not None:
-            self.attr_filter = attr_filter
-        if limit is not None:
-            self.limit = limit
-        if offset is not None:
-            self.offset = offset
-        if max_matches is not None:
-            self.max_matches = max_matches
-        if sort is not None:
-            self.sort = sort
-        if aggs is not None:
-            self.aggs = aggs
-        if expressions is not None:
-            self.expressions = expressions
-        if highlight is not None:
-            self.highlight = highlight
-        if source is not None:
-            self.source = source
-        if options is not None:
-            self.options = options
-        if profile is not None:
-            self.profile = profile
-        if track_scores is not None:
-            self.track_scores = track_scores
-
-    @property
-    def index(self):
-        """Gets the index of this SearchRequest.  # noqa: E501
-
-
-        :return: The index of this SearchRequest.  # noqa: E501
-        :rtype: str
-        """
-        return self._index
-    @index.setter
-    def index(self, index):
-        """Sets the index of this SearchRequest.
-
-
-        :param index: The index of this SearchRequest.  # noqa: E501
-        :type index: str
-        """
-        if self.local_vars_configuration.client_side_validation and index is None:  # noqa: E501
-            raise ValueError("Invalid value for `index`, must not be `None`")  # noqa: E501
-
-        self._index = index
-        
-
-    @property
-    def query(self):
-        """Gets the query of this SearchRequest.  # noqa: E501
-
-
-        :return: The query of this SearchRequest.  # noqa: E501
-        :rtype: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        return self._query
-    @query.setter
-    def query(self, query):
-        """Sets the query of this SearchRequest.
-
-
-        :param query: The query of this SearchRequest.  # noqa: E501
-        :type query: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-
-        self._query = query
-        
-        if self.fulltext_filter is not None:
-        	self.fulltext_filter = None;
-       	if self.attr_filter is not None:
-        	self.attr_filter = None;
-
-    @property
-    def fulltext_filter(self):
-        """Gets the fulltext_filter of this SearchRequest.  # noqa: E501
-
-
-        :return: The fulltext_filter of this SearchRequest.  # noqa: E501
-        :rtype: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        return self._fulltext_filter
-    @fulltext_filter.setter
-    def fulltext_filter(self, fulltext_filter):
-        """Sets the fulltext_filter of this SearchRequest.
-
-
-        :param fulltext_filter: The fulltext_filter of this SearchRequest.  # noqa: E501
-        :type fulltext_filter: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-
-        self._fulltext_filter = fulltext_filter
-        
-
-    @property
-    def attr_filter(self):
-        """Gets the attr_filter of this SearchRequest.  # noqa: E501
-
-
-        :return: The attr_filter of this SearchRequest.  # noqa: E501
-        :rtype: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        return self._attr_filter
-    @attr_filter.setter
-    def attr_filter(self, attr_filter):
-        """Sets the attr_filter of this SearchRequest.
-
-
-        :param attr_filter: The attr_filter of this SearchRequest.  # noqa: E501
-        :type attr_filter: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-
-        self._attr_filter = attr_filter
-        
-
-    @property
-    def limit(self):
-        """Gets the limit of this SearchRequest.  # noqa: E501
-
-
-        :return: The limit of this SearchRequest.  # noqa: E501
-        :rtype: int
-        """
-        return self._limit
-    @limit.setter
-    def limit(self, limit):
-        """Sets the limit of this SearchRequest.
-
-
-        :param limit: The limit of this SearchRequest.  # noqa: E501
-        :type limit: int
-        """
-
-        self._limit = limit
-        
-
-    @property
-    def offset(self):
-        """Gets the offset of this SearchRequest.  # noqa: E501
-
-
-        :return: The offset of this SearchRequest.  # noqa: E501
-        :rtype: int
-        """
-        return self._offset
-    @offset.setter
-    def offset(self, offset):
-        """Sets the offset of this SearchRequest.
-
-
-        :param offset: The offset of this SearchRequest.  # noqa: E501
-        :type offset: int
-        """
-
-        self._offset = offset
-        
-
-    @property
-    def max_matches(self):
-        """Gets the max_matches of this SearchRequest.  # noqa: E501
-
-
-        :return: The max_matches of this SearchRequest.  # noqa: E501
-        :rtype: int
-        """
-        return self._max_matches
-    @max_matches.setter
-    def max_matches(self, max_matches):
-        """Sets the max_matches of this SearchRequest.
-
-
-        :param max_matches: The max_matches of this SearchRequest.  # noqa: E501
-        :type max_matches: int
-        """
-
-        self._max_matches = max_matches
-        
-
-    @property
-    def sort(self):
-        """Gets the sort of this SearchRequest.  # noqa: E501
-
-
-        :return: The sort of this SearchRequest.  # noqa: E501
-        :rtype: [{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]
-        """
-        return self._sort
-    @sort.setter
-    def sort(self, sort):
-        """Sets the sort of this SearchRequest.
-
-
-        :param sort: The sort of this SearchRequest.  # noqa: E501
-        :type sort: [{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]
-        """
-
-        self._sort = sort
-        
-
-    @property
-    def aggs(self):
-        """Gets the aggs of this SearchRequest.  # noqa: E501
-
-
-        :return: The aggs of this SearchRequest.  # noqa: E501
-        :rtype: {str: (Aggregation,)}
-        """
-        return self._aggs
-    @aggs.setter
-    def aggs(self, aggs):
-        """Sets the aggs of this SearchRequest.
-
-
-        :param aggs: The aggs of this SearchRequest.  # noqa: E501
-        :type aggs: {str: (Aggregation,)}
-        """
-
-        self._aggs = aggs
-        
-
-    @property
-    def expressions(self):
-        """Gets the expressions of this SearchRequest.  # noqa: E501
-
-
-        :return: The expressions of this SearchRequest.  # noqa: E501
-        :rtype: {str: (str,)}
-        """
-        return self._expressions
-    @expressions.setter
-    def expressions(self, expressions):
-        """Sets the expressions of this SearchRequest.
-
-
-        :param expressions: The expressions of this SearchRequest.  # noqa: E501
-        :type expressions: {str: (str,)}
-        """
-
-        self._expressions = expressions
-        
-
-    @property
-    def highlight(self):
-        """Gets the highlight of this SearchRequest.  # noqa: E501
-
-
-        :return: The highlight of this SearchRequest.  # noqa: E501
-        :rtype: Highlight
-        """
-        return self._highlight
-    @highlight.setter
-    def highlight(self, highlight):
-        """Sets the highlight of this SearchRequest.
-
-
-        :param highlight: The highlight of this SearchRequest.  # noqa: E501
-        :type highlight: Highlight
-        """
-
-        self._highlight = highlight
-        
-
-    @property
-    def source(self):
-        """Gets the source of this SearchRequest.  # noqa: E501
-
-
-        :return: The source of this SearchRequest.  # noqa: E501
-        :rtype: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        return self._source
-    @source.setter
-    def source(self, source):
-        """Sets the source of this SearchRequest.
-
-
-        :param source: The source of this SearchRequest.  # noqa: E501
-        :type source: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-
-        self._source = source
-        
-
-    @property
-    def options(self):
-        """Gets the options of this SearchRequest.  # noqa: E501
-
-
-        :return: The options of this SearchRequest.  # noqa: E501
-        :rtype: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        return self._options
-    @options.setter
-    def options(self, options):
-        """Sets the options of this SearchRequest.
-
-
-        :param options: The options of this SearchRequest.  # noqa: E501
-        :type options: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-
-        self._options = options
-        
-
-    @property
-    def profile(self):
-        """Gets the profile of this SearchRequest.  # noqa: E501
-
-
-        :return: The profile of this SearchRequest.  # noqa: E501
-        :rtype: bool
-        """
-        return self._profile
-    @profile.setter
-    def profile(self, profile):
-        """Sets the profile of this SearchRequest.
-
-
-        :param profile: The profile of this SearchRequest.  # noqa: E501
-        :type profile: bool
-        """
-
-        self._profile = profile
-        
-
-    @property
-    def track_scores(self):
-        """Gets the track_scores of this SearchRequest.  # noqa: E501
-
-
-        :return: The track_scores of this SearchRequest.  # noqa: E501
-        :rtype: bool
-        """
-        return self._track_scores
-    @track_scores.setter
-    def track_scores(self, track_scores):
-        """Sets the track_scores of this SearchRequest.
-
-
-        :param track_scores: The track_scores of this SearchRequest.  # noqa: E501
-        :type track_scores: bool
-        """
-
-        self._track_scores = track_scores
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-        result['_source'] = result['source']
-        del result['source']
-        if result['aggs'] is not None:
-        	for k,v in result['aggs'].items():
-        		if v['sort'] is None:
-        			result['aggs'][k]['sort'] = []
-        if result['highlight'] is not None:
-	        if result['highlight']['fields'] is None: 	
-	            result['highlight']['fields'] = result['highlight']['fieldnames']
-	        result['highlight']['fieldnames'] = None
-	        result['highlight'] = {k:v for k,v in result['highlight'].items() if v is not None}
-        
-        if result['fulltext_filter'] is not None or result['attr_filter'] is not None:
-            result['query'] = {}
-        if result['fulltext_filter'] is not None:
-            for k,v in result['fulltext_filter'].items():
-                result['query'][k] = v
-            del result['fulltext_filter']
-        if result['attr_filter'] is not None:
-            for k,v in result['attr_filter'].items():
-                result['query'][k] = v
-            del result['attr_filter']
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, SearchRequest):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, SearchRequest):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/search_response.py b/out/manticoresearch-python-actual/manticoresearch/model/search_response.py
deleted file mode 100644
index 80f8d7d..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/search_response.py
+++ /dev/null
@@ -1,250 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class SearchResponse(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'took': 'int',
-        'timed_out': 'bool',
-        'aggregations': '{str: (bool, date, datetime, dict, float, int, list, str, none_type)}',
-        'hits': 'SearchResponseHits',
-        'profile': '{str: (bool, date, datetime, dict, float, int, list, str, none_type)}',
-        'warning': '{str: (bool, date, datetime, dict, float, int, list, str, none_type)}'
-    }
-
-    attribute_map = {
-        'took': 'took',
-        'timed_out': 'timed_out',
-        'aggregations': 'aggregations',
-        'hits': 'hits',
-        'profile': 'profile',
-        'warning': 'warning'
-    }
-
-    def __init__(self, took=None, timed_out=None, aggregations=None, hits=None, profile=None, warning=None, local_vars_configuration=None):  # noqa: E501
-        """SearchResponse - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._took = None
-        self._timed_out = None
-        self._aggregations = None
-        self._hits = None
-        self._profile = None
-        self._warning = None
-        self.discriminator = None
-
-        if took is not None:
-            self.took = took
-        if timed_out is not None:
-            self.timed_out = timed_out
-        if aggregations is not None:
-            self.aggregations = aggregations
-        if hits is not None:
-            self.hits = hits
-        if profile is not None:
-            self.profile = profile
-        if warning is not None:
-            self.warning = warning
-
-    @property
-    def took(self):
-        """Gets the took of this SearchResponse.  # noqa: E501
-
-
-        :return: The took of this SearchResponse.  # noqa: E501
-        :rtype: int
-        """
-        return self._took
-    @took.setter
-    def took(self, took):
-        """Sets the took of this SearchResponse.
-
-
-        :param took: The took of this SearchResponse.  # noqa: E501
-        :type took: int
-        """
-
-        self._took = took
-        
-
-    @property
-    def timed_out(self):
-        """Gets the timed_out of this SearchResponse.  # noqa: E501
-
-
-        :return: The timed_out of this SearchResponse.  # noqa: E501
-        :rtype: bool
-        """
-        return self._timed_out
-    @timed_out.setter
-    def timed_out(self, timed_out):
-        """Sets the timed_out of this SearchResponse.
-
-
-        :param timed_out: The timed_out of this SearchResponse.  # noqa: E501
-        :type timed_out: bool
-        """
-
-        self._timed_out = timed_out
-        
-
-    @property
-    def aggregations(self):
-        """Gets the aggregations of this SearchResponse.  # noqa: E501
-
-
-        :return: The aggregations of this SearchResponse.  # noqa: E501
-        :rtype: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        return self._aggregations
-    @aggregations.setter
-    def aggregations(self, aggregations):
-        """Sets the aggregations of this SearchResponse.
-
-
-        :param aggregations: The aggregations of this SearchResponse.  # noqa: E501
-        :type aggregations: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-
-        self._aggregations = aggregations
-        
-
-    @property
-    def hits(self):
-        """Gets the hits of this SearchResponse.  # noqa: E501
-
-
-        :return: The hits of this SearchResponse.  # noqa: E501
-        :rtype: SearchResponseHits
-        """
-        return self._hits
-    @hits.setter
-    def hits(self, hits):
-        """Sets the hits of this SearchResponse.
-
-
-        :param hits: The hits of this SearchResponse.  # noqa: E501
-        :type hits: SearchResponseHits
-        """
-
-        self._hits = hits
-        
-
-    @property
-    def profile(self):
-        """Gets the profile of this SearchResponse.  # noqa: E501
-
-
-        :return: The profile of this SearchResponse.  # noqa: E501
-        :rtype: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        return self._profile
-    @profile.setter
-    def profile(self, profile):
-        """Sets the profile of this SearchResponse.
-
-
-        :param profile: The profile of this SearchResponse.  # noqa: E501
-        :type profile: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-
-        self._profile = profile
-        
-
-    @property
-    def warning(self):
-        """Gets the warning of this SearchResponse.  # noqa: E501
-
-
-        :return: The warning of this SearchResponse.  # noqa: E501
-        :rtype: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        return self._warning
-    @warning.setter
-    def warning(self, warning):
-        """Sets the warning of this SearchResponse.
-
-
-        :param warning: The warning of this SearchResponse.  # noqa: E501
-        :type warning: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-
-        self._warning = warning
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, SearchResponse):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, SearchResponse):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/search_response_hits.py b/out/manticoresearch-python-actual/manticoresearch/model/search_response_hits.py
deleted file mode 100644
index a991159..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/search_response_hits.py
+++ /dev/null
@@ -1,198 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class SearchResponseHits(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'max_score': 'int',
-        'total': 'int',
-        'total_relation': 'str',
-        'hits': '[{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]'
-    }
-
-    attribute_map = {
-        'max_score': 'max_score',
-        'total': 'total',
-        'total_relation': 'total_relation',
-        'hits': 'hits'
-    }
-
-    def __init__(self, max_score=None, total=None, total_relation=None, hits=None, local_vars_configuration=None):  # noqa: E501
-        """SearchResponseHits - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._max_score = None
-        self._total = None
-        self._total_relation = None
-        self._hits = None
-        self.discriminator = None
-
-        if max_score is not None:
-            self.max_score = max_score
-        if total is not None:
-            self.total = total
-        if total_relation is not None:
-            self.total_relation = total_relation
-        if hits is not None:
-            self.hits = hits
-
-    @property
-    def max_score(self):
-        """Gets the max_score of this SearchResponseHits.  # noqa: E501
-
-
-        :return: The max_score of this SearchResponseHits.  # noqa: E501
-        :rtype: int
-        """
-        return self._max_score
-    @max_score.setter
-    def max_score(self, max_score):
-        """Sets the max_score of this SearchResponseHits.
-
-
-        :param max_score: The max_score of this SearchResponseHits.  # noqa: E501
-        :type max_score: int
-        """
-
-        self._max_score = max_score
-        
-
-    @property
-    def total(self):
-        """Gets the total of this SearchResponseHits.  # noqa: E501
-
-
-        :return: The total of this SearchResponseHits.  # noqa: E501
-        :rtype: int
-        """
-        return self._total
-    @total.setter
-    def total(self, total):
-        """Sets the total of this SearchResponseHits.
-
-
-        :param total: The total of this SearchResponseHits.  # noqa: E501
-        :type total: int
-        """
-
-        self._total = total
-        
-
-    @property
-    def total_relation(self):
-        """Gets the total_relation of this SearchResponseHits.  # noqa: E501
-
-
-        :return: The total_relation of this SearchResponseHits.  # noqa: E501
-        :rtype: str
-        """
-        return self._total_relation
-    @total_relation.setter
-    def total_relation(self, total_relation):
-        """Sets the total_relation of this SearchResponseHits.
-
-
-        :param total_relation: The total_relation of this SearchResponseHits.  # noqa: E501
-        :type total_relation: str
-        """
-
-        self._total_relation = total_relation
-        
-
-    @property
-    def hits(self):
-        """Gets the hits of this SearchResponseHits.  # noqa: E501
-
-
-        :return: The hits of this SearchResponseHits.  # noqa: E501
-        :rtype: [{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]
-        """
-        return self._hits
-    @hits.setter
-    def hits(self, hits):
-        """Sets the hits of this SearchResponseHits.
-
-
-        :param hits: The hits of this SearchResponseHits.  # noqa: E501
-        :type hits: [{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]
-        """
-
-        self._hits = hits
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, SearchResponseHits):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, SearchResponseHits):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/sort_multiple.py b/out/manticoresearch-python-actual/manticoresearch/model/sort_multiple.py
deleted file mode 100644
index 5e2f284..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/sort_multiple.py
+++ /dev/null
@@ -1,148 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class SortMultiple(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'attrs': '{str: (bool, date, datetime, dict, float, int, list, str, none_type)}',
-        'replace': 'bool'
-    }
-
-    attribute_map = {
-        'attrs': 'attrs',
-        'replace': 'replace'
-    }
-
-    def __init__(self, attrs=None, replace=None, local_vars_configuration=None):  # noqa: E501
-        """SortMultiple - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._attrs = None
-        self._replace = None
-        self.discriminator = None
-
-        self.attrs = attrs
-        self.replace = replace
-
-    @property
-    def attrs(self):
-        """Gets the attrs of this SortMultiple.  # noqa: E501
-
-
-        :return: The attrs of this SortMultiple.  # noqa: E501
-        :rtype: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        return self._attrs
-    @attrs.setter
-    def attrs(self, attrs):
-        """Sets the attrs of this SortMultiple.
-
-
-        :param attrs: The attrs of this SortMultiple.  # noqa: E501
-        :type attrs: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        if self.local_vars_configuration.client_side_validation and attrs is None:  # noqa: E501
-            raise ValueError("Invalid value for `attrs`, must not be `None`")  # noqa: E501
-
-        self._attrs = attrs
-        
-
-    @property
-    def replace(self):
-        """Gets the replace of this SortMultiple.  # noqa: E501
-
-
-        :return: The replace of this SortMultiple.  # noqa: E501
-        :rtype: bool
-        """
-        return self._replace
-    @replace.setter
-    def replace(self, replace):
-        """Sets the replace of this SortMultiple.
-
-
-        :param replace: The replace of this SortMultiple.  # noqa: E501
-        :type replace: bool
-        """
-        if self.local_vars_configuration.client_side_validation and replace is None:  # noqa: E501
-            raise ValueError("Invalid value for `replace`, must not be `None`")  # noqa: E501
-
-        self._replace = replace
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, SortMultiple):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, SortMultiple):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/sort_mva.py b/out/manticoresearch-python-actual/manticoresearch/model/sort_mva.py
deleted file mode 100644
index ca51627..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/sort_mva.py
+++ /dev/null
@@ -1,170 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class SortMVA(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'attr': 'str',
-        'order': 'str',
-        'mode': 'str'
-    }
-
-    attribute_map = {
-        'attr': 'attr',
-        'order': 'order',
-        'mode': 'mode'
-    }
-
-    def __init__(self, attr=None, order=None, mode=None, local_vars_configuration=None):  # noqa: E501
-        """SortMVA - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._attr = None
-        self._order = None
-        self._mode = None
-        self.discriminator = None
-
-        self.attr = attr
-        self.order = order
-        self.mode = mode
-
-    @property
-    def attr(self):
-        """Gets the attr of this SortMVA.  # noqa: E501
-
-
-        :return: The attr of this SortMVA.  # noqa: E501
-        :rtype: str
-        """
-        return self._attr
-    @attr.setter
-    def attr(self, attr):
-        """Sets the attr of this SortMVA.
-
-
-        :param attr: The attr of this SortMVA.  # noqa: E501
-        :type attr: str
-        """
-        if self.local_vars_configuration.client_side_validation and attr is None:  # noqa: E501
-            raise ValueError("Invalid value for `attr`, must not be `None`")  # noqa: E501
-
-        self._attr = attr
-        
-
-    @property
-    def order(self):
-        """Gets the order of this SortMVA.  # noqa: E501
-
-
-        :return: The order of this SortMVA.  # noqa: E501
-        :rtype: str
-        """
-        return self._order
-    @order.setter
-    def order(self, order):
-        """Sets the order of this SortMVA.
-
-
-        :param order: The order of this SortMVA.  # noqa: E501
-        :type order: str
-        """
-        if self.local_vars_configuration.client_side_validation and order is None:  # noqa: E501
-            raise ValueError("Invalid value for `order`, must not be `None`")  # noqa: E501
-        allowed_values = ["asc", "desc"]  # noqa: E501
-        if self.local_vars_configuration.client_side_validation and order not in allowed_values:  # noqa: E501
-            raise ValueError(
-                "Invalid value for `order` ({0}), must be one of {1}"  # noqa: E501
-                .format(order, allowed_values)
-            )
-
-        self._order = order
-        
-
-    @property
-    def mode(self):
-        """Gets the mode of this SortMVA.  # noqa: E501
-
-
-        :return: The mode of this SortMVA.  # noqa: E501
-        :rtype: str
-        """
-        return self._mode
-    @mode.setter
-    def mode(self, mode):
-        """Sets the mode of this SortMVA.
-
-
-        :param mode: The mode of this SortMVA.  # noqa: E501
-        :type mode: str
-        """
-        if self.local_vars_configuration.client_side_validation and mode is None:  # noqa: E501
-            raise ValueError("Invalid value for `mode`, must not be `None`")  # noqa: E501
-        allowed_values = ["min", "max"]  # noqa: E501
-        if self.local_vars_configuration.client_side_validation and mode not in allowed_values:  # noqa: E501
-            raise ValueError(
-                "Invalid value for `mode` ({0}), must be one of {1}"  # noqa: E501
-                .format(mode, allowed_values)
-            )
-
-        self._mode = mode
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-        result = { self._attr: {'order': self._order, 'mode': self._mode} }
-
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, SortMVA):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, SortMVA):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/sort_order.py b/out/manticoresearch-python-actual/manticoresearch/model/sort_order.py
deleted file mode 100644
index f4f7390..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/sort_order.py
+++ /dev/null
@@ -1,137 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class SortOrder(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'attr': 'str',
-        'order': 'str'
-    }
-
-    attribute_map = {
-        'attr': 'attr',
-        'order': 'order'
-    }
-
-    def __init__(self, attr=None, order=None, local_vars_configuration=None):  # noqa: E501
-        """SortOrder - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._attr = None
-        self._order = None
-        self.discriminator = None
-
-        self.attr = attr
-        self.order = order
-
-    @property
-    def attr(self):
-        """Gets the attr of this SortOrder.  # noqa: E501
-
-
-        :return: The attr of this SortOrder.  # noqa: E501
-        :rtype: str
-        """
-        return self._attr
-    @attr.setter
-    def attr(self, attr):
-        """Sets the attr of this SortOrder.
-
-
-        :param attr: The attr of this SortOrder.  # noqa: E501
-        :type attr: str
-        """
-        if self.local_vars_configuration.client_side_validation and attr is None:  # noqa: E501
-            raise ValueError("Invalid value for `attr`, must not be `None`")  # noqa: E501
-
-        self._attr = attr
-        
-
-    @property
-    def order(self):
-        """Gets the order of this SortOrder.  # noqa: E501
-
-
-        :return: The order of this SortOrder.  # noqa: E501
-        :rtype: str
-        """
-        return self._order
-    @order.setter
-    def order(self, order):
-        """Sets the order of this SortOrder.
-
-
-        :param order: The order of this SortOrder.  # noqa: E501
-        :type order: str
-        """
-        if self.local_vars_configuration.client_side_validation and order is None:  # noqa: E501
-            raise ValueError("Invalid value for `order`, must not be `None`")  # noqa: E501
-        allowed_values = ["asc", "desc"]  # noqa: E501
-        if self.local_vars_configuration.client_side_validation and order not in allowed_values:  # noqa: E501
-            raise ValueError(
-                "Invalid value for `order` ({0}), must be one of {1}"  # noqa: E501
-                .format(order, allowed_values)
-            )
-
-        self._order = order
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-        result = { self._attr: {'order': self._order} }
-
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, SortOrder):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, SortOrder):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/source_by_rules.py b/out/manticoresearch-python-actual/manticoresearch/model/source_by_rules.py
deleted file mode 100644
index 2bf181d..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/source_by_rules.py
+++ /dev/null
@@ -1,148 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class SourceByRules(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'includes': '[str]',
-        'excludes': '[str]'
-    }
-
-    attribute_map = {
-        'includes': 'includes',
-        'excludes': 'excludes'
-    }
-
-    def __init__(self, includes=[], excludes=[""], local_vars_configuration=None):  # noqa: E501
-        """SourceByRules - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._includes = None
-        self._excludes = None
-        self.discriminator = None
-
-        self.includes = includes
-        self.excludes = excludes
-
-    @property
-    def includes(self):
-        """Gets the includes of this SourceByRules.  # noqa: E501
-
-
-        :return: The includes of this SourceByRules.  # noqa: E501
-        :rtype: [str]
-        """
-        return self._includes
-    @includes.setter
-    def includes(self, includes):
-        """Sets the includes of this SourceByRules.
-
-
-        :param includes: The includes of this SourceByRules.  # noqa: E501
-        :type includes: [str]
-        """
-        if self.local_vars_configuration.client_side_validation and includes is None:  # noqa: E501
-            raise ValueError("Invalid value for `includes`, must not be `None`")  # noqa: E501
-
-        self._includes = includes
-        
-
-    @property
-    def excludes(self):
-        """Gets the excludes of this SourceByRules.  # noqa: E501
-
-
-        :return: The excludes of this SourceByRules.  # noqa: E501
-        :rtype: [str]
-        """
-        return self._excludes
-    @excludes.setter
-    def excludes(self, excludes):
-        """Sets the excludes of this SourceByRules.
-
-
-        :param excludes: The excludes of this SourceByRules.  # noqa: E501
-        :type excludes: [str]
-        """
-        if self.local_vars_configuration.client_side_validation and excludes is None:  # noqa: E501
-            raise ValueError("Invalid value for `excludes`, must not be `None`")  # noqa: E501
-
-        self._excludes = excludes
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, SourceByRules):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, SourceByRules):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/source_multiple.py b/out/manticoresearch-python-actual/manticoresearch/model/source_multiple.py
deleted file mode 100644
index 2051c3a..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/source_multiple.py
+++ /dev/null
@@ -1,92 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class SourceMultiple(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-    }
-
-    attribute_map = {
-    }
-
-    def __init__(self, local_vars_configuration=None):  # noqa: E501
-        """SourceMultiple - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-        self.discriminator = None
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, SourceMultiple):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, SourceMultiple):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/sql_response.py b/out/manticoresearch-python-actual/manticoresearch/model/sql_response.py
deleted file mode 100644
index a22333a..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/sql_response.py
+++ /dev/null
@@ -1,92 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class SqlResponse(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-    }
-
-    attribute_map = {
-    }
-
-    def __init__(self, local_vars_configuration=None):  # noqa: E501
-        """SqlResponse - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-        self.discriminator = None
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, SqlResponse):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, SqlResponse):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/success_response.py b/out/manticoresearch-python-actual/manticoresearch/model/success_response.py
deleted file mode 100644
index af3b814..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/success_response.py
+++ /dev/null
@@ -1,224 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class SuccessResponse(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'index': 'str',
-        'id': 'int',
-        'created': 'bool',
-        'result': 'str',
-        'found': 'bool'
-    }
-
-    attribute_map = {
-        'index': '_index',
-        'id': '_id',
-        'created': 'created',
-        'result': 'result',
-        'found': 'found'
-    }
-
-    def __init__(self, index=None, id=None, created=None, result=None, found=None, local_vars_configuration=None):  # noqa: E501
-        """SuccessResponse - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._index = None
-        self._id = None
-        self._created = None
-        self._result = None
-        self._found = None
-        self.discriminator = None
-
-        if index is not None:
-            self.index = index
-        if id is not None:
-            self.id = id
-        if created is not None:
-            self.created = created
-        if result is not None:
-            self.result = result
-        if found is not None:
-            self.found = found
-
-    @property
-    def index(self):
-        """Gets the index of this SuccessResponse.  # noqa: E501
-
-
-        :return: The index of this SuccessResponse.  # noqa: E501
-        :rtype: str
-        """
-        return self._index
-    @index.setter
-    def index(self, index):
-        """Sets the index of this SuccessResponse.
-
-
-        :param index: The index of this SuccessResponse.  # noqa: E501
-        :type index: str
-        """
-
-        self._index = index
-        
-
-    @property
-    def id(self):
-        """Gets the id of this SuccessResponse.  # noqa: E501
-
-
-        :return: The id of this SuccessResponse.  # noqa: E501
-        :rtype: int
-        """
-        return self._id
-    @id.setter
-    def id(self, id):
-        """Sets the id of this SuccessResponse.
-
-
-        :param id: The id of this SuccessResponse.  # noqa: E501
-        :type id: int
-        """
-
-        self._id = id
-        
-
-    @property
-    def created(self):
-        """Gets the created of this SuccessResponse.  # noqa: E501
-
-
-        :return: The created of this SuccessResponse.  # noqa: E501
-        :rtype: bool
-        """
-        return self._created
-    @created.setter
-    def created(self, created):
-        """Sets the created of this SuccessResponse.
-
-
-        :param created: The created of this SuccessResponse.  # noqa: E501
-        :type created: bool
-        """
-
-        self._created = created
-        
-
-    @property
-    def result(self):
-        """Gets the result of this SuccessResponse.  # noqa: E501
-
-
-        :return: The result of this SuccessResponse.  # noqa: E501
-        :rtype: str
-        """
-        return self._result
-    @result.setter
-    def result(self, result):
-        """Sets the result of this SuccessResponse.
-
-
-        :param result: The result of this SuccessResponse.  # noqa: E501
-        :type result: str
-        """
-
-        self._result = result
-        
-
-    @property
-    def found(self):
-        """Gets the found of this SuccessResponse.  # noqa: E501
-
-
-        :return: The found of this SuccessResponse.  # noqa: E501
-        :rtype: bool
-        """
-        return self._found
-    @found.setter
-    def found(self, found):
-        """Sets the found of this SuccessResponse.
-
-
-        :param found: The found of this SuccessResponse.  # noqa: E501
-        :type found: bool
-        """
-
-        self._found = found
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, SuccessResponse):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, SuccessResponse):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/update_document_request.py b/out/manticoresearch-python-actual/manticoresearch/model/update_document_request.py
deleted file mode 100644
index 5607a25..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/update_document_request.py
+++ /dev/null
@@ -1,205 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class UpdateDocumentRequest(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'index': 'str',
-        'doc': '{str: (bool, date, datetime, dict, float, int, list, str, none_type)}',
-        'id': 'int',
-        'query': '{str: (bool, date, datetime, dict, float, int, list, str, none_type)}, none_type'
-    }
-
-    attribute_map = {
-        'index': 'index',
-        'doc': 'doc',
-        'id': 'id',
-        'query': 'query'
-    }
-
-    def __init__(self, index=None, doc=None, id=None, query=None, local_vars_configuration=None):  # noqa: E501
-        """UpdateDocumentRequest - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._index = None
-        self._doc = None
-        self._id = None
-        self._query = None
-        self.discriminator = None
-
-        self.index = index
-        self.doc = doc
-        if id is not None:
-            self.id = id
-        self.query = query
-
-    @property
-    def index(self):
-        """Gets the index of this UpdateDocumentRequest.  # noqa: E501
-
-
-        :return: The index of this UpdateDocumentRequest.  # noqa: E501
-        :rtype: str
-        """
-        return self._index
-    @index.setter
-    def index(self, index):
-        """Sets the index of this UpdateDocumentRequest.
-
-
-        :param index: The index of this UpdateDocumentRequest.  # noqa: E501
-        :type index: str
-        """
-        if self.local_vars_configuration.client_side_validation and index is None:  # noqa: E501
-            raise ValueError("Invalid value for `index`, must not be `None`")  # noqa: E501
-
-        self._index = index
-        
-
-    @property
-    def doc(self):
-        """Gets the doc of this UpdateDocumentRequest.  # noqa: E501
-
-        Index name  # noqa: E501
-
-        :return: The doc of this UpdateDocumentRequest.  # noqa: E501
-        :rtype: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        return self._doc
-    @doc.setter
-    def doc(self, doc):
-        """Sets the doc of this UpdateDocumentRequest.
-
-        Index name  # noqa: E501
-
-        :param doc: The doc of this UpdateDocumentRequest.  # noqa: E501
-        :type doc: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}
-        """
-        if self.local_vars_configuration.client_side_validation and doc is None:  # noqa: E501
-            raise ValueError("Invalid value for `doc`, must not be `None`")  # noqa: E501
-
-        self._doc = doc
-        
-
-    @property
-    def id(self):
-        """Gets the id of this UpdateDocumentRequest.  # noqa: E501
-
-        Document ID  # noqa: E501
-
-        :return: The id of this UpdateDocumentRequest.  # noqa: E501
-        :rtype: int
-        """
-        return self._id
-    @id.setter
-    def id(self, id):
-        """Sets the id of this UpdateDocumentRequest.
-
-        Document ID  # noqa: E501
-
-        :param id: The id of this UpdateDocumentRequest.  # noqa: E501
-        :type id: int
-        """
-
-        self._id = id
-        
-
-    @property
-    def query(self):
-        """Gets the query of this UpdateDocumentRequest.  # noqa: E501
-
-        Query tree object  # noqa: E501
-
-        :return: The query of this UpdateDocumentRequest.  # noqa: E501
-        :rtype: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}, none_type
-        """
-        return self._query
-    @query.setter
-    def query(self, query):
-        """Sets the query of this UpdateDocumentRequest.
-
-        Query tree object  # noqa: E501
-
-        :param query: The query of this UpdateDocumentRequest.  # noqa: E501
-        :type query: {str: (bool, date, datetime, dict, float, int, list, str, none_type)}, none_type
-        """
-
-        self._query = query
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, UpdateDocumentRequest):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, UpdateDocumentRequest):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model/update_response.py b/out/manticoresearch-python-actual/manticoresearch/model/update_response.py
deleted file mode 100644
index 15d7261..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model/update_response.py
+++ /dev/null
@@ -1,198 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-import pprint
-import re  # noqa: F401
-
-import six
-
-from manticoresearch.configuration import Configuration
-
-class UpdateResponse(object):
-    """NOTE: This class is auto generated by OpenAPI Generator.
-    Ref: https://openapi-generator.tech
-
-    Do not edit the class manually.
-    """
-
-    """
-    Attributes:
-      openapi_types (dict): The key is attribute name
-                            and the value is attribute type.
-      attribute_map (dict): The key is attribute name
-                            and the value is json key in definition.
-    """
-    openapi_types = {
-        'index': 'str',
-        'updated': 'int',
-        'id': 'int',
-        'result': 'str'
-    }
-
-    attribute_map = {
-        'index': '_index',
-        'updated': 'updated',
-        'id': '_id',
-        'result': 'result'
-    }
-
-    def __init__(self, index=None, updated=None, id=None, result=None, local_vars_configuration=None):  # noqa: E501
-        """UpdateResponse - a model defined in OpenAPI"""  # noqa: E501
-        if local_vars_configuration is None:
-            local_vars_configuration = Configuration()
-        self.local_vars_configuration = local_vars_configuration
-
-        self._index = None
-        self._updated = None
-        self._id = None
-        self._result = None
-        self.discriminator = None
-
-        if index is not None:
-            self.index = index
-        if updated is not None:
-            self.updated = updated
-        if id is not None:
-            self.id = id
-        if result is not None:
-            self.result = result
-
-    @property
-    def index(self):
-        """Gets the index of this UpdateResponse.  # noqa: E501
-
-
-        :return: The index of this UpdateResponse.  # noqa: E501
-        :rtype: str
-        """
-        return self._index
-    @index.setter
-    def index(self, index):
-        """Sets the index of this UpdateResponse.
-
-
-        :param index: The index of this UpdateResponse.  # noqa: E501
-        :type index: str
-        """
-
-        self._index = index
-        
-
-    @property
-    def updated(self):
-        """Gets the updated of this UpdateResponse.  # noqa: E501
-
-
-        :return: The updated of this UpdateResponse.  # noqa: E501
-        :rtype: int
-        """
-        return self._updated
-    @updated.setter
-    def updated(self, updated):
-        """Sets the updated of this UpdateResponse.
-
-
-        :param updated: The updated of this UpdateResponse.  # noqa: E501
-        :type updated: int
-        """
-
-        self._updated = updated
-        
-
-    @property
-    def id(self):
-        """Gets the id of this UpdateResponse.  # noqa: E501
-
-
-        :return: The id of this UpdateResponse.  # noqa: E501
-        :rtype: int
-        """
-        return self._id
-    @id.setter
-    def id(self, id):
-        """Sets the id of this UpdateResponse.
-
-
-        :param id: The id of this UpdateResponse.  # noqa: E501
-        :type id: int
-        """
-
-        self._id = id
-        
-
-    @property
-    def result(self):
-        """Gets the result of this UpdateResponse.  # noqa: E501
-
-
-        :return: The result of this UpdateResponse.  # noqa: E501
-        :rtype: str
-        """
-        return self._result
-    @result.setter
-    def result(self, result):
-        """Sets the result of this UpdateResponse.
-
-
-        :param result: The result of this UpdateResponse.  # noqa: E501
-        :type result: str
-        """
-
-        self._result = result
-        
-
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-
-        result = {}		
-        for attr, _ in six.iteritems(self.openapi_types):
-            value = getattr(self, attr)
-            if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
-            elif hasattr(value, "to_dict"):
-                result[attr] = value.to_dict()
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
-            else:
-                result[attr] = value
-
-
-
-        return result
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, UpdateResponse):
-            return False
-
-        return self.to_dict() == other.to_dict()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        if not isinstance(other, UpdateResponse):
-            return True
-
-        return self.to_dict() != other.to_dict()
diff --git a/out/manticoresearch-python-actual/manticoresearch/model_utils.py b/out/manticoresearch-python-actual/manticoresearch/model_utils.py
deleted file mode 100644
index 145c9b9..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/model_utils.py
+++ /dev/null
@@ -1,2059 +0,0 @@
-"""
-    Manticore Search Client
-
-    Сlient for Manticore Search.   # noqa: E501
-
-    The version of the OpenAPI document: 3.3.1
-    Contact: info@manticoresearch.com
-    Generated by: https://openapi-generator.tech
-"""
-
-
-from datetime import date, datetime  # noqa: F401
-from copy import deepcopy
-import inspect
-import io
-import os
-import pprint
-import re
-import tempfile
-import uuid
-
-from dateutil.parser import parse
-
-from manticoresearch.exceptions import (
-    ApiKeyError,
-    ApiAttributeError,
-    ApiTypeError,
-    ApiValueError,
-)
-
-none_type = type(None)
-file_type = io.IOBase
-
-
-def convert_js_args_to_python_args(fn):
-    from functools import wraps
-    @wraps(fn)
-    def wrapped_init(_self, *args, **kwargs):
-        """
-        An attribute named `self` received from the api will conflicts with the reserved `self`
-        parameter of a class method. During generation, `self` attributes are mapped
-        to `_self` in models. Here, we name `_self` instead of `self` to avoid conflicts.
-        """
-        spec_property_naming = kwargs.get('_spec_property_naming', False)
-        if spec_property_naming:
-            kwargs = change_keys_js_to_python(
-                kwargs, _self if isinstance(
-                    _self, type) else _self.__class__)
-        return fn(_self, *args, **kwargs)
-    return wrapped_init
-
-
-class cached_property(object):
-    # this caches the result of the function call for fn with no inputs
-    # use this as a decorator on function methods that you want converted
-    # into cached properties
-    result_key = '_results'
-
-    def __init__(self, fn):
-        self._fn = fn
-
-    def __get__(self, instance, cls=None):
-        if self.result_key in vars(self):
-            return vars(self)[self.result_key]
-        else:
-            result = self._fn()
-            setattr(self, self.result_key, result)
-            return result
-
-
-PRIMITIVE_TYPES = (list, float, int, bool, datetime, date, str, file_type)
-
-
-def allows_single_value_input(cls):
-    """
-    This function returns True if the input composed schema model or any
-    descendant model allows a value only input
-    This is true for cases where oneOf contains items like:
-    oneOf:
-      - float
-      - NumberWithValidation
-      - StringEnum
-      - ArrayModel
-      - null
-    TODO: lru_cache this
-    """
-    if (
-        issubclass(cls, ModelSimple) or
-        cls in PRIMITIVE_TYPES
-    ):
-        return True
-    elif issubclass(cls, ModelComposed):
-        if not cls._composed_schemas['oneOf']:
-            return False
-        return any(allows_single_value_input(c) for c in cls._composed_schemas['oneOf'])
-    return False
-
-
-def composed_model_input_classes(cls):
-    """
-    This function returns a list of the possible models that can be accepted as
-    inputs.
-    TODO: lru_cache this
-    """
-    if issubclass(cls, ModelSimple) or cls in PRIMITIVE_TYPES:
-        return [cls]
-    elif issubclass(cls, ModelNormal):
-        if cls.discriminator is None:
-            return [cls]
-        else:
-            return get_discriminated_classes(cls)
-    elif issubclass(cls, ModelComposed):
-        if not cls._composed_schemas['oneOf']:
-            return []
-        if cls.discriminator is None:
-            input_classes = []
-            for c in cls._composed_schemas['oneOf']:
-                input_classes.extend(composed_model_input_classes(c))
-            return input_classes
-        else:
-            return get_discriminated_classes(cls)
-    return []
-
-
-class OpenApiModel(object):
-    """The base class for all OpenAPIModels"""
-
-    def set_attribute(self, name, value):
-        # this is only used to set properties on self
-
-        path_to_item = []
-        if self._path_to_item:
-            path_to_item.extend(self._path_to_item)
-        path_to_item.append(name)
-
-        if name in self.openapi_types:
-            required_types_mixed = self.openapi_types[name]
-        elif self.additional_properties_type is None:
-            raise ApiAttributeError(
-                "{0} has no attribute '{1}'".format(
-                    type(self).__name__, name),
-                path_to_item
-            )
-        elif self.additional_properties_type is not None:
-            required_types_mixed = self.additional_properties_type
-
-        if get_simple_class(name) != str:
-            error_msg = type_error_message(
-                var_name=name,
-                var_value=name,
-                valid_classes=(str,),
-                key_type=True
-            )
-            raise ApiTypeError(
-                error_msg,
-                path_to_item=path_to_item,
-                valid_classes=(str,),
-                key_type=True
-            )
-
-        if self._check_type:
-            value = validate_and_convert_types(
-                value, required_types_mixed, path_to_item, self._spec_property_naming,
-                self._check_type, configuration=self._configuration)
-        if (name,) in self.allowed_values:
-            check_allowed_values(
-                self.allowed_values,
-                (name,),
-                value
-            )
-        if (name,) in self.validations:
-            check_validations(
-                self.validations,
-                (name,),
-                value,
-                self._configuration
-            )
-        self.__dict__['_data_store'][name] = value
-
-    def __repr__(self):
-        """For `print` and `pprint`"""
-        return self.to_str()
-
-    def __ne__(self, other):
-        """Returns true if both objects are not equal"""
-        return not self == other
-
-    def __setattr__(self, attr, value):
-        """set the value of an attribute using dot notation: `instance.attr = val`"""
-        self[attr] = value
-
-    def __getattr__(self, attr):
-        """get the value of an attribute using dot notation: `instance.attr`"""
-        return self.__getitem__(attr)
-
-    def __copy__(self):
-        cls = self.__class__
-        if self.get("_spec_property_naming", False):
-            return cls._new_from_openapi_data(**self.__dict__)
-        else:
-            return cls.__new__(cls, **self.__dict__)
-
-    def __deepcopy__(self, memo):
-        cls = self.__class__
-
-        if self.get("_spec_property_naming", False):
-            new_inst = cls._new_from_openapi_data()
-        else:
-            new_inst = cls.__new__(cls, **self.__dict__)
-
-        for k, v in self.__dict__.items():
-            setattr(new_inst, k, deepcopy(v, memo))
-        return new_inst
-
-
-    def __new__(cls, *args, **kwargs):
-        # this function uses the discriminator to
-        # pick a new schema/class to instantiate because a discriminator
-        # propertyName value was passed in
-
-        if len(args) == 1:
-            arg = args[0]
-            if arg is None and is_type_nullable(cls):
-                # The input data is the 'null' value and the type is nullable.
-                return None
-
-            if issubclass(cls, ModelComposed) and allows_single_value_input(cls):
-                model_kwargs = {}
-                oneof_instance = get_oneof_instance(cls, model_kwargs, kwargs, model_arg=arg)
-                return oneof_instance
-
-        visited_composed_classes = kwargs.get('_visited_composed_classes', ())
-        if (
-            cls.discriminator is None or
-            cls in visited_composed_classes
-        ):
-            # Use case 1: this openapi schema (cls) does not have a discriminator
-            # Use case 2: we have already visited this class before and are sure that we
-            # want to instantiate it this time. We have visited this class deserializing
-            # a payload with a discriminator. During that process we traveled through
-            # this class but did not make an instance of it. Now we are making an
-            # instance of a composed class which contains cls in it, so this time make an instance of cls.
-            #
-            # Here's an example of use case 2: If Animal has a discriminator
-            # petType and we pass in "Dog", and the class Dog
-            # allOf includes Animal, we move through Animal
-            # once using the discriminator, and pick Dog.
-            # Then in the composed schema dog Dog, we will make an instance of the
-            # Animal class (because Dal has allOf: Animal) but this time we won't travel
-            # through Animal's discriminator because we passed in
-            # _visited_composed_classes = (Animal,)
-
-            return super(OpenApiModel, cls).__new__(cls)
-
-        # Get the name and value of the discriminator property.
-        # The discriminator name is obtained from the discriminator meta-data
-        # and the discriminator value is obtained from the input data.
-        discr_propertyname_py = list(cls.discriminator.keys())[0]
-        discr_propertyname_js = cls.attribute_map[discr_propertyname_py]
-        if discr_propertyname_js in kwargs:
-            discr_value = kwargs[discr_propertyname_js]
-        elif discr_propertyname_py in kwargs:
-            discr_value = kwargs[discr_propertyname_py]
-        else:
-            # The input data does not contain the discriminator property.
-            path_to_item = kwargs.get('_path_to_item', ())
-            raise ApiValueError(
-                "Cannot deserialize input data due to missing discriminator. "
-                "The discriminator property '%s' is missing at path: %s" %
-                (discr_propertyname_js, path_to_item)
-            )
-
-        # Implementation note: the last argument to get_discriminator_class
-        # is a list of visited classes. get_discriminator_class may recursively
-        # call itself and update the list of visited classes, and the initial
-        # value must be an empty list. Hence not using 'visited_composed_classes'
-        new_cls = get_discriminator_class(
-            cls, discr_propertyname_py, discr_value, [])
-        if new_cls is None:
-            path_to_item = kwargs.get('_path_to_item', ())
-            disc_prop_value = kwargs.get(
-                discr_propertyname_js, kwargs.get(discr_propertyname_py))
-            raise ApiValueError(
-                "Cannot deserialize input data due to invalid discriminator "
-                "value. The OpenAPI document has no mapping for discriminator "
-                "property '%s'='%s' at path: %s" %
-                (discr_propertyname_js, disc_prop_value, path_to_item)
-            )
-
-        if new_cls in visited_composed_classes:
-            # if we are making an instance of a composed schema Descendent
-            # which allOf includes Ancestor, then Ancestor contains
-            # a discriminator that includes Descendent.
-            # So if we make an instance of Descendent, we have to make an
-            # instance of Ancestor to hold the allOf properties.
-            # This code detects that use case and makes the instance of Ancestor
-            # For example:
-            # When making an instance of Dog, _visited_composed_classes = (Dog,)
-            # then we make an instance of Animal to include in dog._composed_instances
-            # so when we are here, cls is Animal
-            # cls.discriminator != None
-            # cls not in _visited_composed_classes
-            # new_cls = Dog
-            # but we know we know that we already have Dog
-            # because it is in visited_composed_classes
-            # so make Animal here
-            return super(OpenApiModel, cls).__new__(cls)
-
-        # Build a list containing all oneOf and anyOf descendants.
-        oneof_anyof_classes = None
-        if cls._composed_schemas is not None:
-            oneof_anyof_classes = (
-                cls._composed_schemas.get('oneOf', ()) +
-                cls._composed_schemas.get('anyOf', ()))
-        oneof_anyof_child = new_cls in oneof_anyof_classes
-        kwargs['_visited_composed_classes'] = visited_composed_classes + (cls,)
-
-        if cls._composed_schemas.get('allOf') and oneof_anyof_child:
-            # Validate that we can make self because when we make the
-            # new_cls it will not include the allOf validations in self
-            self_inst = super(OpenApiModel, cls).__new__(cls)
-            self_inst.__init__(*args, **kwargs)
-
-        if kwargs.get("_spec_property_naming", False):
-            # when true, implies new is from deserialization
-            new_inst = new_cls._new_from_openapi_data(*args, **kwargs)
-        else:
-            new_inst = new_cls.__new__(new_cls, *args, **kwargs)
-            new_inst.__init__(*args, **kwargs)
-
-        return new_inst
-
-    @classmethod
-    @convert_js_args_to_python_args
-    def _new_from_openapi_data(cls, *args, **kwargs):
-        # this function uses the discriminator to
-        # pick a new schema/class to instantiate because a discriminator
-        # propertyName value was passed in
-
-        if len(args) == 1:
-            arg = args[0]
-            if arg is None and is_type_nullable(cls):
-                # The input data is the 'null' value and the type is nullable.
-                return None
-
-            if issubclass(cls, ModelComposed) and allows_single_value_input(cls):
-                model_kwargs = {}
-                oneof_instance = get_oneof_instance(cls, model_kwargs, kwargs, model_arg=arg)
-                return oneof_instance
-
-        visited_composed_classes = kwargs.get('_visited_composed_classes', ())
-        if (
-            cls.discriminator is None or
-            cls in visited_composed_classes
-        ):
-            # Use case 1: this openapi schema (cls) does not have a discriminator
-            # Use case 2: we have already visited this class before and are sure that we
-            # want to instantiate it this time. We have visited this class deserializing
-            # a payload with a discriminator. During that process we traveled through
-            # this class but did not make an instance of it. Now we are making an
-            # instance of a composed class which contains cls in it, so this time make an instance of cls.
-            #
-            # Here's an example of use case 2: If Animal has a discriminator
-            # petType and we pass in "Dog", and the class Dog
-            # allOf includes Animal, we move through Animal
-            # once using the discriminator, and pick Dog.
-            # Then in the composed schema dog Dog, we will make an instance of the
-            # Animal class (because Dal has allOf: Animal) but this time we won't travel
-            # through Animal's discriminator because we passed in
-            # _visited_composed_classes = (Animal,)
-
-            return cls._from_openapi_data(*args, **kwargs)
-
-        # Get the name and value of the discriminator property.
-        # The discriminator name is obtained from the discriminator meta-data
-        # and the discriminator value is obtained from the input data.
-        discr_propertyname_py = list(cls.discriminator.keys())[0]
-        discr_propertyname_js = cls.attribute_map[discr_propertyname_py]
-        if discr_propertyname_js in kwargs:
-            discr_value = kwargs[discr_propertyname_js]
-        elif discr_propertyname_py in kwargs:
-            discr_value = kwargs[discr_propertyname_py]
-        else:
-            # The input data does not contain the discriminator property.
-            path_to_item = kwargs.get('_path_to_item', ())
-            raise ApiValueError(
-                "Cannot deserialize input data due to missing discriminator. "
-                "The discriminator property '%s' is missing at path: %s" %
-                (discr_propertyname_js, path_to_item)
-            )
-
-        # Implementation note: the last argument to get_discriminator_class
-        # is a list of visited classes. get_discriminator_class may recursively
-        # call itself and update the list of visited classes, and the initial
-        # value must be an empty list. Hence not using 'visited_composed_classes'
-        new_cls = get_discriminator_class(
-            cls, discr_propertyname_py, discr_value, [])
-        if new_cls is None:
-            path_to_item = kwargs.get('_path_to_item', ())
-            disc_prop_value = kwargs.get(
-                discr_propertyname_js, kwargs.get(discr_propertyname_py))
-            raise ApiValueError(
-                "Cannot deserialize input data due to invalid discriminator "
-                "value. The OpenAPI document has no mapping for discriminator "
-                "property '%s'='%s' at path: %s" %
-                (discr_propertyname_js, disc_prop_value, path_to_item)
-            )
-
-        if new_cls in visited_composed_classes:
-            # if we are making an instance of a composed schema Descendent
-            # which allOf includes Ancestor, then Ancestor contains
-            # a discriminator that includes Descendent.
-            # So if we make an instance of Descendent, we have to make an
-            # instance of Ancestor to hold the allOf properties.
-            # This code detects that use case and makes the instance of Ancestor
-            # For example:
-            # When making an instance of Dog, _visited_composed_classes = (Dog,)
-            # then we make an instance of Animal to include in dog._composed_instances
-            # so when we are here, cls is Animal
-            # cls.discriminator != None
-            # cls not in _visited_composed_classes
-            # new_cls = Dog
-            # but we know we know that we already have Dog
-            # because it is in visited_composed_classes
-            # so make Animal here
-            return cls._from_openapi_data(*args, **kwargs)
-
-        # Build a list containing all oneOf and anyOf descendants.
-        oneof_anyof_classes = None
-        if cls._composed_schemas is not None:
-            oneof_anyof_classes = (
-                cls._composed_schemas.get('oneOf', ()) +
-                cls._composed_schemas.get('anyOf', ()))
-        oneof_anyof_child = new_cls in oneof_anyof_classes
-        kwargs['_visited_composed_classes'] = visited_composed_classes + (cls,)
-
-        if cls._composed_schemas.get('allOf') and oneof_anyof_child:
-            # Validate that we can make self because when we make the
-            # new_cls it will not include the allOf validations in self
-            self_inst = cls._from_openapi_data(*args, **kwargs)
-
-        new_inst = new_cls._new_from_openapi_data(*args, **kwargs)
-        return new_inst
-
-
-class ModelSimple(OpenApiModel):
-    """the parent class of models whose type != object in their
-    swagger/openapi"""
-
-    def __setitem__(self, name, value):
-        """set the value of an attribute using square-bracket notation: `instance[attr] = val`"""
-        if name in self.required_properties:
-            self.__dict__[name] = value
-            return
-
-        self.set_attribute(name, value)
-
-    def get(self, name, default=None):
-        """returns the value of an attribute or some default value if the attribute was not set"""
-        if name in self.required_properties:
-            return self.__dict__[name]
-
-        return self.__dict__['_data_store'].get(name, default)
-
-    def __getitem__(self, name):
-        """get the value of an attribute using square-bracket notation: `instance[attr]`"""
-        if name in self:
-            return self.get(name)
-
-        raise ApiAttributeError(
-            "{0} has no attribute '{1}'".format(
-                type(self).__name__, name),
-            [e for e in [self._path_to_item, name] if e]
-        )
-
-    def __contains__(self, name):
-        """used by `in` operator to check if an attribute value was set in an instance: `'attr' in instance`"""
-        if name in self.required_properties:
-            return name in self.__dict__
-
-        return name in self.__dict__['_data_store']
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return str(self.value)
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, self.__class__):
-            return False
-
-        this_val = self._data_store['value']
-        that_val = other._data_store['value']
-        types = set()
-        types.add(this_val.__class__)
-        types.add(that_val.__class__)
-        vals_equal = this_val == that_val
-        return vals_equal
-
-
-class ModelNormal(OpenApiModel):
-    """the parent class of models whose type == object in their
-    swagger/openapi"""
-
-    def __setitem__(self, name, value):
-        """set the value of an attribute using square-bracket notation: `instance[attr] = val`"""
-        if name in self.required_properties:
-            self.__dict__[name] = value
-            return
-
-        self.set_attribute(name, value)
-
-    def get(self, name, default=None):
-        """returns the value of an attribute or some default value if the attribute was not set"""
-        if name in self.required_properties:
-            return self.__dict__[name]
-
-        return self.__dict__['_data_store'].get(name, default)
-
-    def __getitem__(self, name):
-        """get the value of an attribute using square-bracket notation: `instance[attr]`"""
-        if name in self:
-            return self.get(name)
-
-        raise ApiAttributeError(
-            "{0} has no attribute '{1}'".format(
-                type(self).__name__, name),
-            [e for e in [self._path_to_item, name] if e]
-        )
-
-    def __contains__(self, name):
-        """used by `in` operator to check if an attribute value was set in an instance: `'attr' in instance`"""
-        if name in self.required_properties:
-            return name in self.__dict__
-
-        return name in self.__dict__['_data_store']
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-        return model_to_dict(self, serialize=False)
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, self.__class__):
-            return False
-
-        if not set(self._data_store.keys()) == set(other._data_store.keys()):
-            return False
-        for _var_name, this_val in self._data_store.items():
-            that_val = other._data_store[_var_name]
-            types = set()
-            types.add(this_val.__class__)
-            types.add(that_val.__class__)
-            vals_equal = this_val == that_val
-            if not vals_equal:
-                return False
-        return True
-
-
-class ModelComposed(OpenApiModel):
-    """the parent class of models whose type == object in their
-    swagger/openapi and have oneOf/allOf/anyOf
-
-    When one sets a property we use var_name_to_model_instances to store the value in
-    the correct class instances + run any type checking + validation code.
-    When one gets a property we use var_name_to_model_instances to get the value
-    from the correct class instances.
-    This allows multiple composed schemas to contain the same property with additive
-    constraints on the value.
-
-    _composed_schemas (dict) stores the anyOf/allOf/oneOf classes
-    key (str): allOf/oneOf/anyOf
-    value (list): the classes in the XOf definition.
-        Note: none_type can be included when the openapi document version >= 3.1.0
-    _composed_instances (list): stores a list of instances of the composed schemas
-    defined in _composed_schemas. When properties are accessed in the self instance,
-    they are returned from the self._data_store or the data stores in the instances
-    in self._composed_schemas
-    _var_name_to_model_instances (dict): maps between a variable name on self and
-    the composed instances (self included) which contain that data
-    key (str): property name
-    value (list): list of class instances, self or instances in _composed_instances
-    which contain the value that the key is referring to.
-    """
-
-    def __setitem__(self, name, value):
-        """set the value of an attribute using square-bracket notation: `instance[attr] = val`"""
-        if name in self.required_properties:
-            self.__dict__[name] = value
-            return
-
-        """
-        Use cases:
-        1. additional_properties_type is None (additionalProperties == False in spec)
-            Check for property presence in self.openapi_types
-            if not present then throw an error
-            if present set in self, set attribute
-            always set on composed schemas
-        2.  additional_properties_type exists
-            set attribute on self
-            always set on composed schemas
-        """
-        if self.additional_properties_type is None:
-            """
-            For an attribute to exist on a composed schema it must:
-            - fulfill schema_requirements in the self composed schema not considering oneOf/anyOf/allOf schemas AND
-            - fulfill schema_requirements in each oneOf/anyOf/allOf schemas
-
-            schema_requirements:
-            For an attribute to exist on a schema it must:
-            - be present in properties at the schema OR
-            - have additionalProperties unset (defaults additionalProperties = any type) OR
-            - have additionalProperties set
-            """
-            if name not in self.openapi_types:
-                raise ApiAttributeError(
-                    "{0} has no attribute '{1}'".format(
-                        type(self).__name__, name),
-                    [e for e in [self._path_to_item, name] if e]
-                )
-        # attribute must be set on self and composed instances
-        self.set_attribute(name, value)
-        for model_instance in self._composed_instances:
-            setattr(model_instance, name, value)
-        if name not in self._var_name_to_model_instances:
-            # we assigned an additional property
-            self.__dict__['_var_name_to_model_instances'][name] = self._composed_instances + [self]
-        return None
-
-    __unset_attribute_value__ = object()
-
-    def get(self, name, default=None):
-        """returns the value of an attribute or some default value if the attribute was not set"""
-        if name in self.required_properties:
-            return self.__dict__[name]
-
-        # get the attribute from the correct instance
-        model_instances = self._var_name_to_model_instances.get(name)
-        values = []
-        # A composed model stores self and child (oneof/anyOf/allOf) models under
-        # self._var_name_to_model_instances.
-        # Any property must exist in self and all model instances
-        # The value stored in all model instances must be the same
-        if model_instances:
-            for model_instance in model_instances:
-                if name in model_instance._data_store:
-                    v = model_instance._data_store[name]
-                    if v not in values:
-                        values.append(v)
-        len_values = len(values)
-        if len_values == 0:
-            return default
-        elif len_values == 1:
-            return values[0]
-        elif len_values > 1:
-            raise ApiValueError(
-                "Values stored for property {0} in {1} differ when looking "
-                "at self and self's composed instances. All values must be "
-                "the same".format(name, type(self).__name__),
-                [e for e in [self._path_to_item, name] if e]
-            )
-
-    def __getitem__(self, name):
-        """get the value of an attribute using square-bracket notation: `instance[attr]`"""
-        value = self.get(name, self.__unset_attribute_value__)
-        if value is self.__unset_attribute_value__:
-            raise ApiAttributeError(
-                "{0} has no attribute '{1}'".format(
-                    type(self).__name__, name),
-                    [e for e in [self._path_to_item, name] if e]
-            )
-        return value
-
-    def __contains__(self, name):
-        """used by `in` operator to check if an attribute value was set in an instance: `'attr' in instance`"""
-
-        if name in self.required_properties:
-            return name in self.__dict__
-
-        model_instances = self._var_name_to_model_instances.get(
-            name, self._additional_properties_model_instances)
-
-        if model_instances:
-            for model_instance in model_instances:
-                if name in model_instance._data_store:
-                    return True
-
-        return False
-
-    def to_dict(self):
-        """Returns the model properties as a dict"""
-        return model_to_dict(self, serialize=False)
-
-    def to_str(self):
-        """Returns the string representation of the model"""
-        return pprint.pformat(self.to_dict())
-
-    def __eq__(self, other):
-        """Returns true if both objects are equal"""
-        if not isinstance(other, self.__class__):
-            return False
-
-        if not set(self._data_store.keys()) == set(other._data_store.keys()):
-            return False
-        for _var_name, this_val in self._data_store.items():
-            that_val = other._data_store[_var_name]
-            types = set()
-            types.add(this_val.__class__)
-            types.add(that_val.__class__)
-            vals_equal = this_val == that_val
-            if not vals_equal:
-                return False
-        return True
-
-
-COERCION_INDEX_BY_TYPE = {
-    ModelComposed: 0,
-    ModelNormal: 1,
-    ModelSimple: 2,
-    none_type: 3,    # The type of 'None'.
-    list: 4,
-    dict: 5,
-    float: 6,
-    int: 7,
-    bool: 8,
-    datetime: 9,
-    date: 10,
-    str: 11,
-    file_type: 12,   # 'file_type' is an alias for the built-in 'file' or 'io.IOBase' type.
-}
-
-# these are used to limit what type conversions we try to do
-# when we have a valid type already and we want to try converting
-# to another type
-UPCONVERSION_TYPE_PAIRS = (
-    (str, datetime),
-    (str, date),
-    # A float may be serialized as an integer, e.g. '3' is a valid serialized float.
-    (int, float),
-    (list, ModelComposed),
-    (dict, ModelComposed),
-    (str, ModelComposed),
-    (int, ModelComposed),
-    (float, ModelComposed),
-    (list, ModelComposed),
-    (list, ModelNormal),
-    (dict, ModelNormal),
-    (str, ModelSimple),
-    (int, ModelSimple),
-    (float, ModelSimple),
-    (list, ModelSimple),
-)
-
-COERCIBLE_TYPE_PAIRS = {
-    False: (  # client instantiation of a model with client data
-        # (dict, ModelComposed),
-        # (list, ModelComposed),
-        # (dict, ModelNormal),
-        # (list, ModelNormal),
-        # (str, ModelSimple),
-        # (int, ModelSimple),
-        # (float, ModelSimple),
-        # (list, ModelSimple),
-        # (str, int),
-        # (str, float),
-        # (str, datetime),
-        # (str, date),
-        # (int, str),
-        # (float, str),
-    ),
-    True: (  # server -> client data
-        (dict, ModelComposed),
-        (list, ModelComposed),
-        (dict, ModelNormal),
-        (list, ModelNormal),
-        (str, ModelSimple),
-        (int, ModelSimple),
-        (float, ModelSimple),
-        (list, ModelSimple),
-        # (str, int),
-        # (str, float),
-        (str, datetime),
-        (str, date),
-        # (int, str),
-        # (float, str),
-        (str, file_type)
-    ),
-}
-
-
-def get_simple_class(input_value):
-    """Returns an input_value's simple class that we will use for type checking
-    Python2:
-    float and int will return int, where int is the python3 int backport
-    str and unicode will return str, where str is the python3 str backport
-    Note: float and int ARE both instances of int backport
-    Note: str_py2 and unicode_py2 are NOT both instances of str backport
-
-    Args:
-        input_value (class/class_instance): the item for which we will return
-                                            the simple class
-    """
-    if isinstance(input_value, type):
-        # input_value is a class
-        return input_value
-    elif isinstance(input_value, tuple):
-        return tuple
-    elif isinstance(input_value, list):
-        return list
-    elif isinstance(input_value, dict):
-        return dict
-    elif isinstance(input_value, none_type):
-        return none_type
-    elif isinstance(input_value, file_type):
-        return file_type
-    elif isinstance(input_value, bool):
-        # this must be higher than the int check because
-        # isinstance(True, int) == True
-        return bool
-    elif isinstance(input_value, int):
-        return int
-    elif isinstance(input_value, datetime):
-        # this must be higher than the date check because
-        # isinstance(datetime_instance, date) == True
-        return datetime
-    elif isinstance(input_value, date):
-        return date
-    elif isinstance(input_value, str):
-        return str
-    return type(input_value)
-
-
-def check_allowed_values(allowed_values, input_variable_path, input_values):
-    """Raises an exception if the input_values are not allowed
-
-    Args:
-        allowed_values (dict): the allowed_values dict
-        input_variable_path (tuple): the path to the input variable
-        input_values (list/str/int/float/date/datetime): the values that we
-            are checking to see if they are in allowed_values
-    """
-    these_allowed_values = list(allowed_values[input_variable_path].values())
-    if (isinstance(input_values, list)
-            and not set(input_values).issubset(
-                set(these_allowed_values))):
-        invalid_values = ", ".join(
-            map(str, set(input_values) - set(these_allowed_values))),
-        raise ApiValueError(
-            "Invalid values for `%s` [%s], must be a subset of [%s]" %
-            (
-                input_variable_path[0],
-                invalid_values,
-                ", ".join(map(str, these_allowed_values))
-            )
-        )
-    elif (isinstance(input_values, dict)
-            and not set(
-                input_values.keys()).issubset(set(these_allowed_values))):
-        invalid_values = ", ".join(
-            map(str, set(input_values.keys()) - set(these_allowed_values)))
-        raise ApiValueError(
-            "Invalid keys in `%s` [%s], must be a subset of [%s]" %
-            (
-                input_variable_path[0],
-                invalid_values,
-                ", ".join(map(str, these_allowed_values))
-            )
-        )
-    elif (not isinstance(input_values, (list, dict))
-            and input_values not in these_allowed_values):
-        raise ApiValueError(
-            "Invalid value for `%s` (%s), must be one of %s" %
-            (
-                input_variable_path[0],
-                input_values,
-                these_allowed_values
-            )
-        )
-
-
-def is_json_validation_enabled(schema_keyword, configuration=None):
-    """Returns true if JSON schema validation is enabled for the specified
-    validation keyword. This can be used to skip JSON schema structural validation
-    as requested in the configuration.
-
-    Args:
-        schema_keyword (string): the name of a JSON schema validation keyword.
-        configuration (Configuration): the configuration class.
-    """
-
-    return (configuration is None or
-            not hasattr(configuration, '_disabled_client_side_validations') or
-            schema_keyword not in configuration._disabled_client_side_validations)
-
-
-def check_validations(
-        validations, input_variable_path, input_values,
-        configuration=None):
-    """Raises an exception if the input_values are invalid
-
-    Args:
-        validations (dict): the validation dictionary.
-        input_variable_path (tuple): the path to the input variable.
-        input_values (list/str/int/float/date/datetime): the values that we
-            are checking.
-        configuration (Configuration): the configuration class.
-    """
-
-    if input_values is None:
-        return
-
-    current_validations = validations[input_variable_path]
-    if (is_json_validation_enabled('multipleOf', configuration) and
-            'multiple_of' in current_validations and
-            isinstance(input_values, (int, float)) and
-            not (float(input_values) / current_validations['multiple_of']).is_integer()):
-        # Note 'multipleOf' will be as good as the floating point arithmetic.
-        raise ApiValueError(
-            "Invalid value for `%s`, value must be a multiple of "
-            "`%s`" % (
-                input_variable_path[0],
-                current_validations['multiple_of']
-            )
-        )
-
-    if (is_json_validation_enabled('maxLength', configuration) and
-            'max_length' in current_validations and
-            len(input_values) > current_validations['max_length']):
-        raise ApiValueError(
-            "Invalid value for `%s`, length must be less than or equal to "
-            "`%s`" % (
-                input_variable_path[0],
-                current_validations['max_length']
-            )
-        )
-
-    if (is_json_validation_enabled('minLength', configuration) and
-            'min_length' in current_validations and
-            len(input_values) < current_validations['min_length']):
-        raise ApiValueError(
-            "Invalid value for `%s`, length must be greater than or equal to "
-            "`%s`" % (
-                input_variable_path[0],
-                current_validations['min_length']
-            )
-        )
-
-    if (is_json_validation_enabled('maxItems', configuration) and
-            'max_items' in current_validations and
-            len(input_values) > current_validations['max_items']):
-        raise ApiValueError(
-            "Invalid value for `%s`, number of items must be less than or "
-            "equal to `%s`" % (
-                input_variable_path[0],
-                current_validations['max_items']
-            )
-        )
-
-    if (is_json_validation_enabled('minItems', configuration) and
-            'min_items' in current_validations and
-            len(input_values) < current_validations['min_items']):
-        raise ValueError(
-            "Invalid value for `%s`, number of items must be greater than or "
-            "equal to `%s`" % (
-                input_variable_path[0],
-                current_validations['min_items']
-            )
-        )
-
-    items = ('exclusive_maximum', 'inclusive_maximum', 'exclusive_minimum',
-             'inclusive_minimum')
-    if (any(item in current_validations for item in items)):
-        if isinstance(input_values, list):
-            max_val = max(input_values)
-            min_val = min(input_values)
-        elif isinstance(input_values, dict):
-            max_val = max(input_values.values())
-            min_val = min(input_values.values())
-        else:
-            max_val = input_values
-            min_val = input_values
-
-    if (is_json_validation_enabled('exclusiveMaximum', configuration) and
-            'exclusive_maximum' in current_validations and
-            max_val >= current_validations['exclusive_maximum']):
-        raise ApiValueError(
-            "Invalid value for `%s`, must be a value less than `%s`" % (
-                input_variable_path[0],
-                current_validations['exclusive_maximum']
-            )
-        )
-
-    if (is_json_validation_enabled('maximum', configuration) and
-            'inclusive_maximum' in current_validations and
-            max_val > current_validations['inclusive_maximum']):
-        raise ApiValueError(
-            "Invalid value for `%s`, must be a value less than or equal to "
-            "`%s`" % (
-                input_variable_path[0],
-                current_validations['inclusive_maximum']
-            )
-        )
-
-    if (is_json_validation_enabled('exclusiveMinimum', configuration) and
-            'exclusive_minimum' in current_validations and
-            min_val <= current_validations['exclusive_minimum']):
-        raise ApiValueError(
-            "Invalid value for `%s`, must be a value greater than `%s`" %
-            (
-                input_variable_path[0],
-                current_validations['exclusive_maximum']
-            )
-        )
-
-    if (is_json_validation_enabled('minimum', configuration) and
-            'inclusive_minimum' in current_validations and
-            min_val < current_validations['inclusive_minimum']):
-        raise ApiValueError(
-            "Invalid value for `%s`, must be a value greater than or equal "
-            "to `%s`" % (
-                input_variable_path[0],
-                current_validations['inclusive_minimum']
-            )
-        )
-    flags = current_validations.get('regex', {}).get('flags', 0)
-    if (is_json_validation_enabled('pattern', configuration) and
-            'regex' in current_validations and
-            not re.search(current_validations['regex']['pattern'],
-                          input_values, flags=flags)):
-        err_msg = r"Invalid value for `%s`, must match regular expression `%s`" % (
-            input_variable_path[0],
-            current_validations['regex']['pattern']
-        )
-        if flags != 0:
-            # Don't print the regex flags if the flags are not
-            # specified in the OAS document.
-            err_msg = r"%s with flags=`%s`" % (err_msg, flags)
-        raise ApiValueError(err_msg)
-
-
-def order_response_types(required_types):
-    """Returns the required types sorted in coercion order
-
-    Args:
-        required_types (list/tuple): collection of classes or instance of
-            list or dict with class information inside it.
-
-    Returns:
-        (list): coercion order sorted collection of classes or instance
-            of list or dict with class information inside it.
-    """
-
-    def index_getter(class_or_instance):
-        if isinstance(class_or_instance, list):
-            return COERCION_INDEX_BY_TYPE[list]
-        elif isinstance(class_or_instance, dict):
-            return COERCION_INDEX_BY_TYPE[dict]
-        elif (inspect.isclass(class_or_instance)
-                and issubclass(class_or_instance, ModelComposed)):
-            return COERCION_INDEX_BY_TYPE[ModelComposed]
-        elif (inspect.isclass(class_or_instance)
-                and issubclass(class_or_instance, ModelNormal)):
-            return COERCION_INDEX_BY_TYPE[ModelNormal]
-        elif (inspect.isclass(class_or_instance)
-                and issubclass(class_or_instance, ModelSimple)):
-            return COERCION_INDEX_BY_TYPE[ModelSimple]
-        elif class_or_instance in COERCION_INDEX_BY_TYPE:
-            return COERCION_INDEX_BY_TYPE[class_or_instance]
-        raise ApiValueError("Unsupported type: %s" % class_or_instance)
-
-    sorted_types = sorted(
-        required_types,
-        key=lambda class_or_instance: index_getter(class_or_instance)
-    )
-    return sorted_types
-
-
-def remove_uncoercible(required_types_classes, current_item, spec_property_naming,
-                       must_convert=True):
-    """Only keeps the type conversions that are possible
-
-    Args:
-        required_types_classes (tuple): tuple of classes that are required
-                          these should be ordered by COERCION_INDEX_BY_TYPE
-        spec_property_naming (bool): True if the variable names in the input
-            data are serialized names as specified in the OpenAPI document.
-            False if the variables names in the input data are python
-            variable names in PEP-8 snake case.
-        current_item (any): the current item (input data) to be converted
-
-    Keyword Args:
-        must_convert (bool): if True the item to convert is of the wrong
-                          type and we want a big list of coercibles
-                          if False, we want a limited list of coercibles
-
-    Returns:
-        (list): the remaining coercible required types, classes only
-    """
-    current_type_simple = get_simple_class(current_item)
-
-    results_classes = []
-    for required_type_class in required_types_classes:
-        # convert our models to OpenApiModel
-        required_type_class_simplified = required_type_class
-        if isinstance(required_type_class_simplified, type):
-            if issubclass(required_type_class_simplified, ModelComposed):
-                required_type_class_simplified = ModelComposed
-            elif issubclass(required_type_class_simplified, ModelNormal):
-                required_type_class_simplified = ModelNormal
-            elif issubclass(required_type_class_simplified, ModelSimple):
-                required_type_class_simplified = ModelSimple
-
-        if required_type_class_simplified == current_type_simple:
-            # don't consider converting to one's own class
-            continue
-
-        class_pair = (current_type_simple, required_type_class_simplified)
-        if must_convert and class_pair in COERCIBLE_TYPE_PAIRS[spec_property_naming]:
-            results_classes.append(required_type_class)
-        elif class_pair in UPCONVERSION_TYPE_PAIRS:
-            results_classes.append(required_type_class)
-    return results_classes
-
-
-def get_discriminated_classes(cls):
-    """
-    Returns all the classes that a discriminator converts to
-    TODO: lru_cache this
-    """
-    possible_classes = []
-    key = list(cls.discriminator.keys())[0]
-    if is_type_nullable(cls):
-        possible_classes.append(cls)
-    for discr_cls in cls.discriminator[key].values():
-        if hasattr(discr_cls, 'discriminator') and discr_cls.discriminator is not None:
-            possible_classes.extend(get_discriminated_classes(discr_cls))
-        else:
-            possible_classes.append(discr_cls)
-    return possible_classes
-
-
-def get_possible_classes(cls, from_server_context):
-    # TODO: lru_cache this
-    possible_classes = [cls]
-    if from_server_context:
-        return possible_classes
-    if hasattr(cls, 'discriminator') and cls.discriminator is not None:
-        possible_classes = []
-        possible_classes.extend(get_discriminated_classes(cls))
-    elif issubclass(cls, ModelComposed):
-        possible_classes.extend(composed_model_input_classes(cls))
-    return possible_classes
-
-
-def get_required_type_classes(required_types_mixed, spec_property_naming):
-    """Converts the tuple required_types into a tuple and a dict described
-    below
-
-    Args:
-        required_types_mixed (tuple/list): will contain either classes or
-            instance of list or dict
-        spec_property_naming (bool): if True these values came from the
-            server, and we use the data types in our endpoints.
-            If False, we are client side and we need to include
-            oneOf and discriminator classes inside the data types in our endpoints
-
-    Returns:
-        (valid_classes, dict_valid_class_to_child_types_mixed):
-            valid_classes (tuple): the valid classes that the current item
-                                   should be
-            dict_valid_class_to_child_types_mixed (dict):
-                valid_class (class): this is the key
-                child_types_mixed (list/dict/tuple): describes the valid child
-                    types
-    """
-    valid_classes = []
-    child_req_types_by_current_type = {}
-    for required_type in required_types_mixed:
-        if isinstance(required_type, list):
-            valid_classes.append(list)
-            child_req_types_by_current_type[list] = required_type
-        elif isinstance(required_type, tuple):
-            valid_classes.append(tuple)
-            child_req_types_by_current_type[tuple] = required_type
-        elif isinstance(required_type, dict):
-            valid_classes.append(dict)
-            child_req_types_by_current_type[dict] = required_type[str]
-        else:
-            valid_classes.extend(get_possible_classes(required_type, spec_property_naming))
-    return tuple(valid_classes), child_req_types_by_current_type
-
-
-def change_keys_js_to_python(input_dict, model_class):
-    """
-    Converts from javascript_key keys in the input_dict to python_keys in
-    the output dict using the mapping in model_class.
-    If the input_dict contains a key which does not declared in the model_class,
-    the key is added to the output dict as is. The assumption is the model_class
-    may have undeclared properties (additionalProperties attribute in the OAS
-    document).
-    """
-
-    if getattr(model_class, 'attribute_map', None) is None:
-        return input_dict
-    output_dict = {}
-    reversed_attr_map = {value: key for key, value in
-                         model_class.attribute_map.items()}
-    for javascript_key, value in input_dict.items():
-        python_key = reversed_attr_map.get(javascript_key)
-        if python_key is None:
-            # if the key is unknown, it is in error or it is an
-            # additionalProperties variable
-            python_key = javascript_key
-        output_dict[python_key] = value
-    return output_dict
-
-
-def get_type_error(var_value, path_to_item, valid_classes, key_type=False):
-    error_msg = type_error_message(
-        var_name=path_to_item[-1],
-        var_value=var_value,
-        valid_classes=valid_classes,
-        key_type=key_type
-    )
-    return ApiTypeError(
-        error_msg,
-        path_to_item=path_to_item,
-        valid_classes=valid_classes,
-        key_type=key_type
-    )
-
-
-def deserialize_primitive(data, klass, path_to_item):
-    """Deserializes string to primitive type.
-
-    :param data: str/int/float
-    :param klass: str/class the class to convert to
-
-    :return: int, float, str, bool, date, datetime
-    """
-    additional_message = ""
-    try:
-        if klass in {datetime, date}:
-            additional_message = (
-                "If you need your parameter to have a fallback "
-                "string value, please set its type as `type: {}` in your "
-                "spec. That allows the value to be any type. "
-            )
-            if klass == datetime:
-                if len(data) < 8:
-                    raise ValueError("This is not a datetime")
-                # The string should be in iso8601 datetime format.
-                parsed_datetime = parse(data)
-                date_only = (
-                    parsed_datetime.hour == 0 and
-                    parsed_datetime.minute == 0 and
-                    parsed_datetime.second == 0 and
-                    parsed_datetime.tzinfo is None and
-                    8 <= len(data) <= 10
-                )
-                if date_only:
-                    raise ValueError("This is a date, not a datetime")
-                return parsed_datetime
-            elif klass == date:
-                if len(data) < 8:
-                    raise ValueError("This is not a date")
-                return parse(data).date()
-        else:
-            converted_value = klass(data)
-            if isinstance(data, str) and klass == float:
-                if str(converted_value) != data:
-                    # '7' -> 7.0 -> '7.0' != '7'
-                    raise ValueError('This is not a float')
-            return converted_value
-    except (OverflowError, ValueError) as ex:
-        # parse can raise OverflowError
-        raise ApiValueError(
-            "{0}Failed to parse {1} as {2}".format(
-                additional_message, repr(data), klass.__name__
-            ),
-            path_to_item=path_to_item
-        ) from ex
-
-
-def get_discriminator_class(model_class,
-                            discr_name,
-                            discr_value, cls_visited):
-    """Returns the child class specified by the discriminator.
-
-    Args:
-        model_class (OpenApiModel): the model class.
-        discr_name (string): the name of the discriminator property.
-        discr_value (any): the discriminator value.
-        cls_visited (list): list of model classes that have been visited.
-            Used to determine the discriminator class without
-            visiting circular references indefinitely.
-
-    Returns:
-        used_model_class (class/None): the chosen child class that will be used
-            to deserialize the data, for example dog.Dog.
-            If a class is not found, None is returned.
-    """
-
-    if model_class in cls_visited:
-        # The class has already been visited and no suitable class was found.
-        return None
-    cls_visited.append(model_class)
-    used_model_class = None
-    if discr_name in model_class.discriminator:
-        class_name_to_discr_class = model_class.discriminator[discr_name]
-        used_model_class = class_name_to_discr_class.get(discr_value)
-    if used_model_class is None:
-        # We didn't find a discriminated class in class_name_to_discr_class.
-        # So look in the ancestor or descendant discriminators
-        # The discriminator mapping may exist in a descendant (anyOf, oneOf)
-        # or ancestor (allOf).
-        # Ancestor example: in the GrandparentAnimal -> ParentPet -> ChildCat
-        #   hierarchy, the discriminator mappings may be defined at any level
-        #   in the hierarchy.
-        # Descendant example:  mammal -> whale/zebra/Pig -> BasquePig/DanishPig
-        #   if we try to make BasquePig from mammal, we need to travel through
-        #   the oneOf descendant discriminators to find BasquePig
-        descendant_classes = model_class._composed_schemas.get('oneOf', ()) + \
-            model_class._composed_schemas.get('anyOf', ())
-        ancestor_classes = model_class._composed_schemas.get('allOf', ())
-        possible_classes = descendant_classes + ancestor_classes
-        for cls in possible_classes:
-            # Check if the schema has inherited discriminators.
-            if hasattr(cls, 'discriminator') and cls.discriminator is not None:
-                used_model_class = get_discriminator_class(
-                    cls, discr_name, discr_value, cls_visited)
-                if used_model_class is not None:
-                    return used_model_class
-    return used_model_class
-
-
-def deserialize_model(model_data, model_class, path_to_item, check_type,
-                      configuration, spec_property_naming):
-    """Deserializes model_data to model instance.
-
-    Args:
-        model_data (int/str/float/bool/none_type/list/dict): data to instantiate the model
-        model_class (OpenApiModel): the model class
-        path_to_item (list): path to the model in the received data
-        check_type (bool): whether to check the data tupe for the values in
-            the model
-        configuration (Configuration): the instance to use to convert files
-        spec_property_naming (bool): True if the variable names in the input
-            data are serialized names as specified in the OpenAPI document.
-            False if the variables names in the input data are python
-            variable names in PEP-8 snake case.
-
-    Returns:
-        model instance
-
-    Raise:
-        ApiTypeError
-        ApiValueError
-        ApiKeyError
-    """
-
-    kw_args = dict(_check_type=check_type,
-                   _path_to_item=path_to_item,
-                   _configuration=configuration,
-                   _spec_property_naming=spec_property_naming)
-
-    if issubclass(model_class, ModelSimple):
-        return model_class._new_from_openapi_data(model_data, **kw_args)
-    elif isinstance(model_data, list):
-        return model_class._new_from_openapi_data(*model_data, **kw_args)
-    if isinstance(model_data, dict):
-        kw_args.update(model_data)
-        return model_class._new_from_openapi_data(**kw_args)
-    elif isinstance(model_data, PRIMITIVE_TYPES):
-        return model_class._new_from_openapi_data(model_data, **kw_args)
-
-
-def deserialize_file(response_data, configuration, content_disposition=None):
-    """Deserializes body to file
-
-    Saves response body into a file in a temporary folder,
-    using the filename from the `Content-Disposition` header if provided.
-
-    Args:
-        param response_data (str):  the file data to write
-        configuration (Configuration): the instance to use to convert files
-
-    Keyword Args:
-        content_disposition (str):  the value of the Content-Disposition
-            header
-
-    Returns:
-        (file_type): the deserialized file which is open
-            The user is responsible for closing and reading the file
-    """
-    fd, path = tempfile.mkstemp(dir=configuration.temp_folder_path)
-    os.close(fd)
-    os.remove(path)
-
-    if content_disposition:
-        filename = re.search(r'filename=[\'"]?([^\'"\s]+)[\'"]?',
-                             content_disposition,
-                             flags=re.I)
-        if filename is not None:
-            filename = filename.group(1)
-        else:
-            filename = "default_" + str(uuid.uuid4())
-
-        path = os.path.join(os.path.dirname(path), filename)
-
-    with open(path, "wb") as f:
-        if isinstance(response_data, str):
-            # change str to bytes so we can write it
-            response_data = response_data.encode('utf-8')
-        f.write(response_data)
-
-    f = open(path, "rb")
-    return f
-
-
-def attempt_convert_item(input_value, valid_classes, path_to_item,
-                         configuration, spec_property_naming, key_type=False,
-                         must_convert=False, check_type=True):
-    """
-    Args:
-        input_value (any): the data to convert
-        valid_classes (any): the classes that are valid
-        path_to_item (list): the path to the item to convert
-        configuration (Configuration): the instance to use to convert files
-        spec_property_naming (bool): True if the variable names in the input
-            data are serialized names as specified in the OpenAPI document.
-            False if the variables names in the input data are python
-            variable names in PEP-8 snake case.
-        key_type (bool): if True we need to convert a key type (not supported)
-        must_convert (bool): if True we must convert
-        check_type (bool): if True we check the type or the returned data in
-            ModelComposed/ModelNormal/ModelSimple instances
-
-    Returns:
-        instance (any) the fixed item
-
-    Raises:
-        ApiTypeError
-        ApiValueError
-        ApiKeyError
-    """
-    valid_classes_ordered = order_response_types(valid_classes)
-    valid_classes_coercible = remove_uncoercible(
-        valid_classes_ordered, input_value, spec_property_naming)
-    if not valid_classes_coercible or key_type:
-        # we do not handle keytype errors, json will take care
-        # of this for us
-        if configuration is None or not configuration.discard_unknown_keys:
-            raise get_type_error(input_value, path_to_item, valid_classes,
-                                 key_type=key_type)
-    for valid_class in valid_classes_coercible:
-        try:
-            if issubclass(valid_class, OpenApiModel):
-                return deserialize_model(input_value, valid_class,
-                                         path_to_item, check_type,
-                                         configuration, spec_property_naming)
-            elif valid_class == file_type:
-                return deserialize_file(input_value, configuration)
-            return deserialize_primitive(input_value, valid_class,
-                                         path_to_item)
-        except (ApiTypeError, ApiValueError, ApiKeyError) as conversion_exc:
-            if must_convert:
-                raise conversion_exc
-            # if we have conversion errors when must_convert == False
-            # we ignore the exception and move on to the next class
-            continue
-    # we were unable to convert, must_convert == False
-    return input_value
-
-
-def is_type_nullable(input_type):
-    """
-    Returns true if None is an allowed value for the specified input_type.
-
-    A type is nullable if at least one of the following conditions is true:
-    1. The OAS 'nullable' attribute has been specified,
-    1. The type is the 'null' type,
-    1. The type is a anyOf/oneOf composed schema, and a child schema is
-       the 'null' type.
-    Args:
-        input_type (type): the class of the input_value that we are
-            checking
-    Returns:
-        bool
-    """
-    if input_type is none_type:
-        return True
-    if issubclass(input_type, OpenApiModel) and input_type._nullable:
-        return True
-    if issubclass(input_type, ModelComposed):
-        # If oneOf/anyOf, check if the 'null' type is one of the allowed types.
-        for t in input_type._composed_schemas.get('oneOf', ()):
-            if is_type_nullable(t):
-                return True
-        for t in input_type._composed_schemas.get('anyOf', ()):
-            if is_type_nullable(t):
-                return True
-    return False
-
-
-def is_valid_type(input_class_simple, valid_classes):
-    """
-    Args:
-        input_class_simple (class): the class of the input_value that we are
-            checking
-        valid_classes (tuple): the valid classes that the current item
-            should be
-    Returns:
-        bool
-    """
-    if issubclass(input_class_simple, OpenApiModel) and \
-            valid_classes == (bool, date, datetime, dict, float, int, list, str, none_type,):
-        return True
-    valid_type = input_class_simple in valid_classes
-    if not valid_type and (
-            issubclass(input_class_simple, OpenApiModel) or
-            input_class_simple is none_type):
-        for valid_class in valid_classes:
-            if input_class_simple is none_type and is_type_nullable(valid_class):
-                # Schema is oneOf/anyOf and the 'null' type is one of the allowed types.
-                return True
-            if not (issubclass(valid_class, OpenApiModel) and valid_class.discriminator):
-                continue
-            discr_propertyname_py = list(valid_class.discriminator.keys())[0]
-            discriminator_classes = (
-                valid_class.discriminator[discr_propertyname_py].values()
-            )
-            valid_type = is_valid_type(input_class_simple, discriminator_classes)
-            if valid_type:
-                return True
-    return valid_type
-
-
-def validate_and_convert_types(input_value, required_types_mixed, path_to_item,
-                               spec_property_naming, _check_type, configuration=None):
-    """Raises a TypeError is there is a problem, otherwise returns value
-
-    Args:
-        input_value (any): the data to validate/convert
-        required_types_mixed (list/dict/tuple): A list of
-            valid classes, or a list tuples of valid classes, or a dict where
-            the value is a tuple of value classes
-        path_to_item: (list) the path to the data being validated
-            this stores a list of keys or indices to get to the data being
-            validated
-        spec_property_naming (bool): True if the variable names in the input
-            data are serialized names as specified in the OpenAPI document.
-            False if the variables names in the input data are python
-            variable names in PEP-8 snake case.
-        _check_type: (boolean) if true, type will be checked and conversion
-            will be attempted.
-        configuration: (Configuration): the configuration class to use
-            when converting file_type items.
-            If passed, conversion will be attempted when possible
-            If not passed, no conversions will be attempted and
-            exceptions will be raised
-
-    Returns:
-        the correctly typed value
-
-    Raises:
-        ApiTypeError
-    """
-    results = get_required_type_classes(required_types_mixed, spec_property_naming)
-    valid_classes, child_req_types_by_current_type = results
-
-    input_class_simple = get_simple_class(input_value)
-    valid_type = is_valid_type(input_class_simple, valid_classes)
-    if not valid_type:
-        if (configuration
-                or (input_class_simple == dict
-                    and dict not in valid_classes)):
-            # if input_value is not valid_type try to convert it
-            converted_instance = attempt_convert_item(
-                input_value,
-                valid_classes,
-                path_to_item,
-                configuration,
-                spec_property_naming,
-                key_type=False,
-                must_convert=True,
-                check_type=_check_type
-            )
-            return converted_instance
-        else:
-            raise get_type_error(input_value, path_to_item, valid_classes,
-                                 key_type=False)
-
-    # input_value's type is in valid_classes
-    if len(valid_classes) > 1 and configuration:
-        # there are valid classes which are not the current class
-        valid_classes_coercible = remove_uncoercible(
-            valid_classes, input_value, spec_property_naming, must_convert=False)
-        if valid_classes_coercible:
-            converted_instance = attempt_convert_item(
-                input_value,
-                valid_classes_coercible,
-                path_to_item,
-                configuration,
-                spec_property_naming,
-                key_type=False,
-                must_convert=False,
-                check_type=_check_type
-            )
-            return converted_instance
-
-    if child_req_types_by_current_type == {}:
-        # all types are of the required types and there are no more inner
-        # variables left to look at
-        return input_value
-    inner_required_types = child_req_types_by_current_type.get(
-        type(input_value)
-    )
-    if inner_required_types is None:
-        # for this type, there are not more inner variables left to look at
-        return input_value
-    if isinstance(input_value, list):
-        if input_value == []:
-            # allow an empty list
-            return input_value
-        for index, inner_value in enumerate(input_value):
-            inner_path = list(path_to_item)
-            inner_path.append(index)
-            input_value[index] = validate_and_convert_types(
-                inner_value,
-                inner_required_types,
-                inner_path,
-                spec_property_naming,
-                _check_type,
-                configuration=configuration
-            )
-    elif isinstance(input_value, dict):
-        if input_value == {}:
-            # allow an empty dict
-            return input_value
-        for inner_key, inner_val in input_value.items():
-            inner_path = list(path_to_item)
-            inner_path.append(inner_key)
-            if get_simple_class(inner_key) != str:
-                raise get_type_error(inner_key, inner_path, valid_classes,
-                                     key_type=True)
-            input_value[inner_key] = validate_and_convert_types(
-                inner_val,
-                inner_required_types,
-                inner_path,
-                spec_property_naming,
-                _check_type,
-                configuration=configuration
-            )
-    return input_value
-
-
-def model_to_dict(model_instance, serialize=True):
-    """Returns the model properties as a dict
-
-    Args:
-        model_instance (one of your model instances): the model instance that
-            will be converted to a dict.
-
-    Keyword Args:
-        serialize (bool): if True, the keys in the dict will be values from
-            attribute_map
-    """
-    result = {}
-
-    def extract_item(item): return (
-        item[0], model_to_dict(
-            item[1], serialize=serialize)) if hasattr(
-        item[1], '_data_store') else item
-
-    model_instances = [model_instance]
-    if model_instance._composed_schemas:
-        model_instances.extend(model_instance._composed_instances)
-    seen_json_attribute_names = set()
-    used_fallback_python_attribute_names = set()
-    py_to_json_map = {}
-    for model_instance in model_instances:
-        for attr, value in model_instance._data_store.items():
-            if serialize:
-                # we use get here because additional property key names do not
-                # exist in attribute_map
-                try:
-                    attr = model_instance.attribute_map[attr]
-                    py_to_json_map.update(model_instance.attribute_map)
-                    seen_json_attribute_names.add(attr)
-                except KeyError:
-                    used_fallback_python_attribute_names.add(attr)
-            if isinstance(value, list):
-                if not value:
-                    # empty list or None
-                    result[attr] = value
-                else:
-                    res = []
-                    for v in value:
-                        if isinstance(v, PRIMITIVE_TYPES) or v is None:
-                            res.append(v)
-                        elif isinstance(v, ModelSimple):
-                            res.append(v.value)
-                        elif isinstance(v, dict):
-                            res.append(dict(map(
-                                extract_item,
-                                v.items()
-                            )))
-                        else:
-                            res.append(model_to_dict(v, serialize=serialize))
-                    result[attr] = res
-            elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    extract_item,
-                    value.items()
-                ))
-            elif isinstance(value, ModelSimple):
-                result[attr] = value.value
-            elif hasattr(value, '_data_store'):
-                result[attr] = model_to_dict(value, serialize=serialize)
-            else:
-                result[attr] = value
-    if serialize:
-        for python_key in used_fallback_python_attribute_names:
-            json_key = py_to_json_map.get(python_key)
-            if json_key is None:
-                continue
-            if python_key == json_key:
-                continue
-            json_key_assigned_no_need_for_python_key = json_key in seen_json_attribute_names
-            if json_key_assigned_no_need_for_python_key:
-                del result[python_key]
-
-    return result
-
-
-def type_error_message(var_value=None, var_name=None, valid_classes=None,
-                       key_type=None):
-    """
-    Keyword Args:
-        var_value (any): the variable which has the type_error
-        var_name (str): the name of the variable which has the typ error
-        valid_classes (tuple): the accepted classes for current_item's
-                                  value
-        key_type (bool): False if our value is a value in a dict
-                         True if it is a key in a dict
-                         False if our item is an item in a list
-    """
-    key_or_value = 'value'
-    if key_type:
-        key_or_value = 'key'
-    valid_classes_phrase = get_valid_classes_phrase(valid_classes)
-    msg = (
-        "Invalid type for variable '{0}'. Required {1} type {2} and "
-        "passed type was {3}".format(
-            var_name,
-            key_or_value,
-            valid_classes_phrase,
-            type(var_value).__name__,
-        )
-    )
-    return msg
-
-
-def get_valid_classes_phrase(input_classes):
-    """Returns a string phrase describing what types are allowed
-    """
-    all_classes = list(input_classes)
-    all_classes = sorted(all_classes, key=lambda cls: cls.__name__)
-    all_class_names = [cls.__name__ for cls in all_classes]
-    if len(all_class_names) == 1:
-        return 'is {0}'.format(all_class_names[0])
-    return "is one of [{0}]".format(", ".join(all_class_names))
-
-
-def get_allof_instances(self, model_args, constant_args):
-    """
-    Args:
-        self: the class we are handling
-        model_args (dict): var_name to var_value
-            used to make instances
-        constant_args (dict):
-            metadata arguments:
-            _check_type
-            _path_to_item
-            _spec_property_naming
-            _configuration
-            _visited_composed_classes
-
-    Returns
-        composed_instances (list)
-    """
-    composed_instances = []
-    for allof_class in self._composed_schemas['allOf']:
-
-        try:
-            if constant_args.get('_spec_property_naming'):
-                allof_instance = allof_class._from_openapi_data(**model_args, **constant_args)
-            else:
-                allof_instance = allof_class(**model_args, **constant_args)
-            composed_instances.append(allof_instance)
-        except Exception as ex:
-            raise ApiValueError(
-                "Invalid inputs given to generate an instance of '%s'. The "
-                "input data was invalid for the allOf schema '%s' in the composed "
-                "schema '%s'. Error=%s" % (
-                    allof_class.__name__,
-                    allof_class.__name__,
-                    self.__class__.__name__,
-                    str(ex)
-                )
-            ) from ex
-    return composed_instances
-
-
-def get_oneof_instance(cls, model_kwargs, constant_kwargs, model_arg=None):
-    """
-    Find the oneOf schema that matches the input data (e.g. payload).
-    If exactly one schema matches the input data, an instance of that schema
-    is returned.
-    If zero or more than one schema match the input data, an exception is raised.
-    In OAS 3.x, the payload MUST, by validation, match exactly one of the
-    schemas described by oneOf.
-
-    Args:
-        cls: the class we are handling
-        model_kwargs (dict): var_name to var_value
-            The input data, e.g. the payload that must match a oneOf schema
-            in the OpenAPI document.
-        constant_kwargs (dict): var_name to var_value
-            args that every model requires, including configuration, server
-            and path to item.
-
-    Kwargs:
-        model_arg: (int, float, bool, str, date, datetime, ModelSimple, None):
-            the value to assign to a primitive class or ModelSimple class
-            Notes:
-            - this is only passed in when oneOf includes types which are not object
-            - None is used to suppress handling of model_arg, nullable models are handled in __new__
-
-    Returns
-        oneof_instance (instance)
-    """
-    if len(cls._composed_schemas['oneOf']) == 0:
-        return None
-
-    oneof_instances = []
-    # Iterate over each oneOf schema and determine if the input data
-    # matches the oneOf schemas.
-    for oneof_class in cls._composed_schemas['oneOf']:
-        # The composed oneOf schema allows the 'null' type and the input data
-        # is the null value. This is a OAS >= 3.1 feature.
-        if oneof_class is none_type:
-            # skip none_types because we are deserializing dict data.
-            # none_type deserialization is handled in the __new__ method
-            continue
-
-        single_value_input = allows_single_value_input(oneof_class)
-
-        try:
-            if not single_value_input:
-                if constant_kwargs.get('_spec_property_naming'):
-                    oneof_instance = oneof_class._from_openapi_data(
-                        **model_kwargs, **constant_kwargs)
-                else:
-                    oneof_instance = oneof_class(**model_kwargs, **constant_kwargs)
-            else:
-                if issubclass(oneof_class, ModelSimple):
-                    if constant_kwargs.get('_spec_property_naming'):
-                        oneof_instance = oneof_class._from_openapi_data(
-                            model_arg, **constant_kwargs)
-                    else:
-                        oneof_instance = oneof_class(model_arg, **constant_kwargs)
-                elif oneof_class in PRIMITIVE_TYPES:
-                    oneof_instance = validate_and_convert_types(
-                        model_arg,
-                        (oneof_class,),
-                        constant_kwargs['_path_to_item'],
-                        constant_kwargs['_spec_property_naming'],
-                        constant_kwargs['_check_type'],
-                        configuration=constant_kwargs['_configuration']
-                    )
-            oneof_instances.append(oneof_instance)
-        except Exception:
-            pass
-    if len(oneof_instances) == 0:
-        raise ApiValueError(
-            "Invalid inputs given to generate an instance of %s. None "
-            "of the oneOf schemas matched the input data." %
-            cls.__name__
-        )
-    elif len(oneof_instances) > 1:
-        raise ApiValueError(
-            "Invalid inputs given to generate an instance of %s. Multiple "
-            "oneOf schemas matched the inputs, but a max of one is allowed." %
-            cls.__name__
-        )
-    return oneof_instances[0]
-
-
-def get_anyof_instances(self, model_args, constant_args):
-    """
-    Args:
-        self: the class we are handling
-        model_args (dict): var_name to var_value
-            The input data, e.g. the payload that must match at least one
-            anyOf child schema in the OpenAPI document.
-        constant_args (dict): var_name to var_value
-            args that every model requires, including configuration, server
-            and path to item.
-
-    Returns
-        anyof_instances (list)
-    """
-    anyof_instances = []
-    if len(self._composed_schemas['anyOf']) == 0:
-        return anyof_instances
-
-    for anyof_class in self._composed_schemas['anyOf']:
-        # The composed oneOf schema allows the 'null' type and the input data
-        # is the null value. This is a OAS >= 3.1 feature.
-        if anyof_class is none_type:
-            # skip none_types because we are deserializing dict data.
-            # none_type deserialization is handled in the __new__ method
-            continue
-
-        try:
-            if constant_args.get('_spec_property_naming'):
-                anyof_instance = anyof_class._from_openapi_data(**model_args, **constant_args)
-            else:
-                anyof_instance = anyof_class(**model_args, **constant_args)
-            anyof_instances.append(anyof_instance)
-        except Exception:
-            pass
-    if len(anyof_instances) == 0:
-        raise ApiValueError(
-            "Invalid inputs given to generate an instance of %s. None of the "
-            "anyOf schemas matched the inputs." %
-            self.__class__.__name__
-        )
-    return anyof_instances
-
-
-def get_discarded_args(self, composed_instances, model_args):
-    """
-    Gathers the args that were discarded by configuration.discard_unknown_keys
-    """
-    model_arg_keys = model_args.keys()
-    discarded_args = set()
-    # arguments passed to self were already converted to python names
-    # before __init__ was called
-    for instance in composed_instances:
-        if instance.__class__ in self._composed_schemas['allOf']:
-            try:
-                keys = instance.to_dict().keys()
-                discarded_keys = model_args - keys
-                discarded_args.update(discarded_keys)
-            except Exception:
-                # allOf integer schema will throw exception
-                pass
-        else:
-            try:
-                all_keys = set(model_to_dict(instance, serialize=False).keys())
-                js_keys = model_to_dict(instance, serialize=True).keys()
-                all_keys.update(js_keys)
-                discarded_keys = model_arg_keys - all_keys
-                discarded_args.update(discarded_keys)
-            except Exception:
-                # allOf integer schema will throw exception
-                pass
-    return discarded_args
-
-
-def validate_get_composed_info(constant_args, model_args, self):
-    """
-    For composed schemas, generate schema instances for
-    all schemas in the oneOf/anyOf/allOf definition. If additional
-    properties are allowed, also assign those properties on
-    all matched schemas that contain additionalProperties.
-    Openapi schemas are python classes.
-
-    Exceptions are raised if:
-    - 0 or > 1 oneOf schema matches the model_args input data
-    - no anyOf schema matches the model_args input data
-    - any of the allOf schemas do not match the model_args input data
-
-    Args:
-        constant_args (dict): these are the args that every model requires
-        model_args (dict): these are the required and optional spec args that
-            were passed in to make this model
-        self (class): the class that we are instantiating
-            This class contains self._composed_schemas
-
-    Returns:
-        composed_info (list): length three
-            composed_instances (list): the composed instances which are not
-                self
-            var_name_to_model_instances (dict): a dict going from var_name
-                to the model_instance which holds that var_name
-                the model_instance may be self or an instance of one of the
-                classes in self.composed_instances()
-            additional_properties_model_instances (list): a list of the
-                model instances which have the property
-                additional_properties_type. This list can include self
-    """
-    # create composed_instances
-    composed_instances = []
-    allof_instances = get_allof_instances(self, model_args, constant_args)
-    composed_instances.extend(allof_instances)
-    oneof_instance = get_oneof_instance(self.__class__, model_args, constant_args)
-    if oneof_instance is not None:
-        composed_instances.append(oneof_instance)
-    anyof_instances = get_anyof_instances(self, model_args, constant_args)
-    composed_instances.extend(anyof_instances)
-    """
-    set additional_properties_model_instances
-    additional properties must be evaluated at the schema level
-    so self's additional properties are most important
-    If self is a composed schema with:
-    - no properties defined in self
-    - additionalProperties: False
-    Then for object payloads every property is an additional property
-    and they are not allowed, so only empty dict is allowed
-
-    Properties must be set on all matching schemas
-    so when a property is assigned toa composed instance, it must be set on all
-    composed instances regardless of additionalProperties presence
-    keeping it to prevent breaking changes in v5.0.1
-    TODO remove cls._additional_properties_model_instances in 6.0.0
-    """
-    additional_properties_model_instances = []
-    if self.additional_properties_type is not None:
-        additional_properties_model_instances = [self]
-
-    """
-    no need to set properties on self in here, they will be set in __init__
-    By here all composed schema oneOf/anyOf/allOf instances have their properties set using
-    model_args
-    """
-    discarded_args = get_discarded_args(self, composed_instances, model_args)
-
-    # map variable names to composed_instances
-    var_name_to_model_instances = {}
-    for prop_name in model_args:
-        if prop_name not in discarded_args:
-            var_name_to_model_instances[prop_name] = [self] + list(
-                filter(
-                    lambda x: prop_name in x.openapi_types, composed_instances))
-
-    return [
-        composed_instances,
-        var_name_to_model_instances,
-        additional_properties_model_instances,
-        discarded_args
-    ]
diff --git a/out/manticoresearch-python-actual/manticoresearch/models/__init__.py b/out/manticoresearch-python-actual/manticoresearch/models/__init__.py
deleted file mode 100644
index 00de373..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/models/__init__.py
+++ /dev/null
@@ -1,56 +0,0 @@
-# flake8: noqa
-
-# import all models into this package
-# if you have many models here with many references from one model to another this may
-# raise a RecursionError
-# to avoid this, import only the models that you directly need like:
-# from from manticoresearch.model.pet import Pet
-# or import this package, but before doing it, use:
-# import sys
-# sys.setrecursionlimit(n)
-
-from manticoresearch.model.aggregation import Aggregation
-from manticoresearch.model.aggregation_sort_inner_value import AggregationSortInnerValue
-from manticoresearch.model.aggregation_terms import AggregationTerms
-from manticoresearch.model.attr_filter import AttrFilter
-from manticoresearch.model.bool_filter import BoolFilter
-from manticoresearch.model.bulk_response import BulkResponse
-from manticoresearch.model.delete_document_request import DeleteDocumentRequest
-from manticoresearch.model.delete_response import DeleteResponse
-from manticoresearch.model.equals_filter import EqualsFilter
-from manticoresearch.model.error_response import ErrorResponse
-from manticoresearch.model.facet import Facet
-from manticoresearch.model.filter_boolean import FilterBoolean
-from manticoresearch.model.filter_number import FilterNumber
-from manticoresearch.model.filter_string import FilterString
-from manticoresearch.model.fulltext_filter import FulltextFilter
-from manticoresearch.model.geo_distance_filter import GeoDistanceFilter
-from manticoresearch.model.geo_distance_filter_location_anchor import GeoDistanceFilterLocationAnchor
-from manticoresearch.model.highlight import Highlight
-from manticoresearch.model.highlight_field import HighlightField
-from manticoresearch.model.in_filter import InFilter
-from manticoresearch.model.insert_document_request import InsertDocumentRequest
-from manticoresearch.model.match_filter import MatchFilter
-from manticoresearch.model.match_op import MatchOp
-from manticoresearch.model.match_op_filter import MatchOpFilter
-from manticoresearch.model.match_phrase_filter import MatchPhraseFilter
-from manticoresearch.model.not_filter_boolean import NotFilterBoolean
-from manticoresearch.model.not_filter_number import NotFilterNumber
-from manticoresearch.model.not_filter_string import NotFilterString
-from manticoresearch.model.option import Option
-from manticoresearch.model.percolate_request import PercolateRequest
-from manticoresearch.model.percolate_request_query import PercolateRequestQuery
-from manticoresearch.model.query_filter import QueryFilter
-from manticoresearch.model.range_filter import RangeFilter
-from manticoresearch.model.search_request import SearchRequest
-from manticoresearch.model.search_response import SearchResponse
-from manticoresearch.model.search_response_hits import SearchResponseHits
-from manticoresearch.model.sort_mva import SortMVA
-from manticoresearch.model.sort_multiple import SortMultiple
-from manticoresearch.model.sort_order import SortOrder
-from manticoresearch.model.source_by_rules import SourceByRules
-from manticoresearch.model.source_multiple import SourceMultiple
-from manticoresearch.model.sql_response import SqlResponse
-from manticoresearch.model.success_response import SuccessResponse
-from manticoresearch.model.update_document_request import UpdateDocumentRequest
-from manticoresearch.model.update_response import UpdateResponse
diff --git a/out/manticoresearch-python-actual/manticoresearch/rest.py b/out/manticoresearch-python-actual/manticoresearch/rest.py
deleted file mode 100644
index adbe4c1..0000000
--- a/out/manticoresearch-python-actual/manticoresearch/rest.py
+++ /dev/null
@@ -1,289 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-from __future__ import absolute_import
-
-import io
-import json
-import logging
-import re
-import ssl
-
-import certifi
-# python 2 and python 3 compatibility library
-import six
-from six.moves.urllib.parse import urlencode
-import urllib3
-
-from manticoresearch.exceptions import ApiException, ApiValueError
-
-
-logger = logging.getLogger(__name__)
-
-
-class RESTResponse(io.IOBase):
-
-    def __init__(self, resp):
-        self.urllib3_response = resp
-        self.status = resp.status
-        self.reason = resp.reason
-        self.data = resp.data
-
-    def getheaders(self):
-        """Returns a dictionary of the response headers."""
-        return self.urllib3_response.getheaders()
-
-    def getheader(self, name, default=None):
-        """Returns a given response header."""
-        return self.urllib3_response.getheader(name, default)
-
-
-class RESTClientObject(object):
-
-    def __init__(self, configuration, pools_size=4, maxsize=None):
-        # urllib3.PoolManager will pass all kw parameters to connectionpool
-        # https://github.com/shazow/urllib3/blob/f9409436f83aeb79fbaf090181cd81b784f1b8ce/urllib3/poolmanager.py#L75  # noqa: E501
-        # https://github.com/shazow/urllib3/blob/f9409436f83aeb79fbaf090181cd81b784f1b8ce/urllib3/connectionpool.py#L680  # noqa: E501
-        # maxsize is the number of requests to host that are allowed in parallel  # noqa: E501
-        # Custom SSL certificates and client certificates: http://urllib3.readthedocs.io/en/latest/advanced-usage.html  # noqa: E501
-
-        # cert_reqs
-        if configuration.verify_ssl:
-            cert_reqs = ssl.CERT_REQUIRED
-        else:
-            cert_reqs = ssl.CERT_NONE
-
-        # ca_certs
-        if configuration.ssl_ca_cert:
-            ca_certs = configuration.ssl_ca_cert
-        else:
-            # if not set certificate file, use Mozilla's root certificates.
-            ca_certs = certifi.where()
-
-        addition_pool_args = {}
-        if configuration.assert_hostname is not None:
-            addition_pool_args['assert_hostname'] = configuration.assert_hostname  # noqa: E501
-
-        if configuration.retries is not None:
-            addition_pool_args['retries'] = configuration.retries
-
-        if maxsize is None:
-            if configuration.connection_pool_maxsize is not None:
-                maxsize = configuration.connection_pool_maxsize
-            else:
-                maxsize = 4
-
-        # https pool manager
-        if configuration.proxy:
-            self.pool_manager = urllib3.ProxyManager(
-                num_pools=pools_size,
-                maxsize=maxsize,
-                cert_reqs=cert_reqs,
-                ca_certs=ca_certs,
-                cert_file=configuration.cert_file,
-                key_file=configuration.key_file,
-                proxy_url=configuration.proxy,
-                proxy_headers=configuration.proxy_headers,
-                **addition_pool_args
-            )
-        else:
-            self.pool_manager = urllib3.PoolManager(
-                num_pools=pools_size,
-                maxsize=maxsize,
-                cert_reqs=cert_reqs,
-                ca_certs=ca_certs,
-                cert_file=configuration.cert_file,
-                key_file=configuration.key_file,
-                **addition_pool_args
-            )
-
-    def request(self, method, url, query_params=None, headers=None,
-                body=None, post_params=None, _preload_content=True,
-                _request_timeout=None):
-        """Perform requests.
-
-        :param method: http request method
-        :param url: http request url
-        :param query_params: query parameters in the url
-        :param headers: http request headers
-        :param body: request json body, for `application/json`
-        :param post_params: request post parameters,
-                            `application/x-www-form-urlencoded`
-                            and `multipart/form-data`
-        :param _preload_content: if False, the urllib3.HTTPResponse object will
-                                 be returned without reading/decoding response
-                                 data. Default is True.
-        :param _request_timeout: timeout setting for this request. If one
-                                 number provided, it will be total request
-                                 timeout. It can also be a pair (tuple) of
-                                 (connection, read) timeouts.
-        """
-        method = method.upper()
-        assert method in ['GET', 'HEAD', 'DELETE', 'POST', 'PUT',
-                          'PATCH', 'OPTIONS']
-
-        if post_params and body:
-            raise ApiValueError(
-                "body parameter cannot be used with post_params parameter."
-            )
-
-        post_params = post_params or {}
-        headers = headers or {}
-
-        timeout = None
-        if _request_timeout:
-            if isinstance(_request_timeout, (int, ) if six.PY3 else (int, long)):  # noqa: E501,F821
-                timeout = urllib3.Timeout(total=_request_timeout)
-            elif (isinstance(_request_timeout, tuple) and
-                  len(_request_timeout) == 2):
-                timeout = urllib3.Timeout(
-                    connect=_request_timeout[0], read=_request_timeout[1])
-
-        if 'Content-Type' not in headers:
-            headers['Content-Type'] = 'application/json'
-
-        try:
-            # For `POST`, `PUT`, `PATCH`, `OPTIONS`, `DELETE`
-            if method in ['POST', 'PUT', 'PATCH', 'OPTIONS', 'DELETE']:
-                if query_params:
-                    url += '?' + urlencode(query_params)
-                if headers['Content-Type'] == 'application/json':
-                    request_body = None
-                    if body is not None:
-                        request_body = json.dumps(body)
-                    r = self.pool_manager.request(
-                        method, url,
-                        body=request_body,
-                        preload_content=_preload_content,
-                        timeout=timeout,
-                        headers=headers)
-                elif headers['Content-Type'] == 'application/x-www-form-urlencoded':  # noqa: E501
-                    r = self.pool_manager.request(
-                        method, url,
-                        fields=post_params,
-                        encode_multipart=False,
-                        preload_content=_preload_content,
-                        timeout=timeout,
-                        headers=headers)
-                elif headers['Content-Type'] == 'multipart/form-data':
-                    # must del headers['Content-Type'], or the correct
-                    # Content-Type which generated by urllib3 will be
-                    # overwritten.
-                    del headers['Content-Type']
-                    r = self.pool_manager.request(
-                        method, url,
-                        fields=post_params,
-                        encode_multipart=True,
-                        preload_content=_preload_content,
-                        timeout=timeout,
-                        headers=headers)
-                # Pass a `string` parameter directly in the body to support
-                # other content types than Json when `body` argument is
-                # provided in serialized form
-                elif isinstance(body, str) or isinstance(body, bytes):
-                    request_body = body
-                    r = self.pool_manager.request(
-                        method, url,
-                        body=request_body,
-                        preload_content=_preload_content,
-                        timeout=timeout,
-                        headers=headers)
-                else:
-                    # Cannot generate the request from given parameters
-                    msg = """Cannot prepare a request message for provided
-                             arguments. Please check that your arguments match
-                             declared content type."""
-                    raise ApiException(status=0, reason=msg)
-            # For `GET`, `HEAD`
-            else:
-                r = self.pool_manager.request(method, url,
-                                              fields=query_params,
-                                              preload_content=_preload_content,
-                                              timeout=timeout,
-                                              headers=headers)
-        except urllib3.exceptions.SSLError as e:
-            msg = "{0}\n{1}".format(type(e).__name__, str(e))
-            raise ApiException(status=0, reason=msg)
-
-        if _preload_content:
-            r = RESTResponse(r)
-
-            # log response body
-            logger.debug("response body: %s", r.data)
-
-        if not 200 <= r.status <= 299:
-            raise ApiException(http_resp=r)
-
-        return r
-
-    def GET(self, url, headers=None, query_params=None, _preload_content=True,
-            _request_timeout=None):
-        return self.request("GET", url,
-                            headers=headers,
-                            _preload_content=_preload_content,
-                            _request_timeout=_request_timeout,
-                            query_params=query_params)
-
-    def HEAD(self, url, headers=None, query_params=None, _preload_content=True,
-             _request_timeout=None):
-        return self.request("HEAD", url,
-                            headers=headers,
-                            _preload_content=_preload_content,
-                            _request_timeout=_request_timeout,
-                            query_params=query_params)
-
-    def OPTIONS(self, url, headers=None, query_params=None, post_params=None,
-                body=None, _preload_content=True, _request_timeout=None):
-        return self.request("OPTIONS", url,
-                            headers=headers,
-                            query_params=query_params,
-                            post_params=post_params,
-                            _preload_content=_preload_content,
-                            _request_timeout=_request_timeout,
-                            body=body)
-
-    def DELETE(self, url, headers=None, query_params=None, body=None,
-               _preload_content=True, _request_timeout=None):
-        return self.request("DELETE", url,
-                            headers=headers,
-                            query_params=query_params,
-                            _preload_content=_preload_content,
-                            _request_timeout=_request_timeout,
-                            body=body)
-
-    def POST(self, url, headers=None, query_params=None, post_params=None,
-             body=None, _preload_content=True, _request_timeout=None):
-        return self.request("POST", url,
-                            headers=headers,
-                            query_params=query_params,
-                            post_params=post_params,
-                            _preload_content=_preload_content,
-                            _request_timeout=_request_timeout,
-                            body=body)
-
-    def PUT(self, url, headers=None, query_params=None, post_params=None,
-            body=None, _preload_content=True, _request_timeout=None):
-        return self.request("PUT", url,
-                            headers=headers,
-                            query_params=query_params,
-                            post_params=post_params,
-                            _preload_content=_preload_content,
-                            _request_timeout=_request_timeout,
-                            body=body)
-
-    def PATCH(self, url, headers=None, query_params=None, post_params=None,
-              body=None, _preload_content=True, _request_timeout=None):
-        return self.request("PATCH", url,
-                            headers=headers,
-                            query_params=query_params,
-                            post_params=post_params,
-                            _preload_content=_preload_content,
-                            _request_timeout=_request_timeout,
-                            body=body)
diff --git a/out/manticoresearch-python-actual/requirements.txt b/out/manticoresearch-python-actual/requirements.txt
deleted file mode 100644
index eb358ef..0000000
--- a/out/manticoresearch-python-actual/requirements.txt
+++ /dev/null
@@ -1,6 +0,0 @@
-certifi >= 14.05.14
-future; python_version<="2.7"
-six >= 1.10
-python_dateutil >= 2.5.3
-setuptools >= 21.0.0
-urllib3 >= 1.15.1
diff --git a/out/manticoresearch-python-actual/setup.cfg b/out/manticoresearch-python-actual/setup.cfg
deleted file mode 100644
index 11433ee..0000000
--- a/out/manticoresearch-python-actual/setup.cfg
+++ /dev/null
@@ -1,2 +0,0 @@
-[flake8]
-max-line-length=99
diff --git a/out/manticoresearch-python-actual/setup.py b/out/manticoresearch-python-actual/setup.py
deleted file mode 100644
index f86fb41..0000000
--- a/out/manticoresearch-python-actual/setup.py
+++ /dev/null
@@ -1,66 +0,0 @@
-# coding: utf-8
-
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-# 
-# All rights reserved
-#
-
-
-
-from setuptools import setup, find_packages
-from os import path
-
-NAME = "manticoresearch"
-VERSION = "4.0.0"
-# To install the library, run the following
-#
-# python setup.py install
-#
-# prerequisite: setuptools
-# http://pypi.python.org/pypi/setuptools
-
-REQUIRES = ["urllib3 >= 1.15", "six >= 1.10", "certifi", "python-dateutil"]
-long_description = ""
-with open(path.join(path.dirname(__file__), "README.md")) as f:
-    for line in f:
-      if '## Documentation for API Endpoints' in line:
-        break
-      long_description +=line
-setup(
-    name=NAME,
-    version=VERSION,
-    description="Python client for Manticore Search",
-    long_description=long_description,
-    long_description_content_type="text/markdown",
-    author="Manticore Software Ltd.",
-    author_email="info@manticoresearch.com",
-    url="",
-    keywords=[ "full-text search","manticoresearch","search"],
-    install_requires=REQUIRES,
-    packages=find_packages(exclude=["test", "tests"]),
-    include_package_data=True,
-	    project_urls={
-        "Documentation": "https://github.com/manticoresoftware/manticoresearch-python/tree/master/docs",
-        "Source Code": "https://github.com/manticoresoftware/manticoresearch-python",
-        "Issue Tracker": "https://github.com/manticoresoftware/manticoresearch-python/issues",
-    },
-	classifiers=[
-        "License :: OSI Approved :: Apache Software License",
-        "Intended Audience :: Developers",
-        "Operating System :: OS Independent",
-        "Programming Language :: Python",
-        "Programming Language :: Python :: 2",
-        "Programming Language :: Python :: 2.7",
-        "Programming Language :: Python :: 3",
-        "Programming Language :: Python :: 3.4",
-        "Programming Language :: Python :: 3.5",
-        "Programming Language :: Python :: 3.6",
-        "Programming Language :: Python :: 3.7",
-        "Programming Language :: Python :: 3.8",
-        "Topic :: Internet",
-        "Topic :: Internet :: WWW/HTTP",
-        "Topic :: Internet :: WWW/HTTP :: Indexing/Search"
-    ],
-    license="MIT",
-)
diff --git a/out/manticoresearch-python-actual/test-requirements.txt b/out/manticoresearch-python-actual/test-requirements.txt
deleted file mode 100644
index 4ed3991..0000000
--- a/out/manticoresearch-python-actual/test-requirements.txt
+++ /dev/null
@@ -1,3 +0,0 @@
-pytest~=4.6.7 # needed for python 2.7+3.4
-pytest-cov>=2.8.1
-pytest-randomly==1.2.3 # needed for python 2.7+3.4
diff --git a/out/manticoresearch-python-actual/test/parametrized_test_case.py b/out/manticoresearch-python-actual/test/parametrized_test_case.py
deleted file mode 100755
index f73e96c..0000000
--- a/out/manticoresearch-python-actual/test/parametrized_test_case.py
+++ /dev/null
@@ -1,21 +0,0 @@
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-#
-# All rights reserved
- 
-import unittest
-
-class ParametrizedTestCase(unittest.TestCase):
-    def __init__(self, methodName='runTest', settings=None):
-        super(ParametrizedTestCase, self).__init__(methodName)
-        self.settings = settings
-
-    @staticmethod
-    def parametrize(testcase_class, settings=None):
-        testloader = unittest.TestLoader()
-        testnames = testloader.getTestCaseNames(testcase_class)
-        suite = unittest.TestSuite()
-        for name in testnames:
-            suite.addTest(testcase_class(name, settings=settings))
-        return suite
-
diff --git a/out/manticoresearch-python-actual/test/test.py b/out/manticoresearch-python-actual/test/test.py
deleted file mode 100755
index 3fd7bd8..0000000
--- a/out/manticoresearch-python-actual/test/test.py
+++ /dev/null
@@ -1,27 +0,0 @@
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-#
-# All rights reserved
-
-import sys
-import manticoresearch
-import unittest
-import importlib
-import inspect
-from parametrized_test_case import ParametrizedTestCase
-
-configuration = manticoresearch.Configuration(
-    host = "http://localhost:9408"
-)
-
-print
-suite = unittest.TestSuite()
-for module_name in ['test_manual']:
-    test = importlib.import_module(module_name)
-    for name, obj in inspect.getmembers(test):
-        if inspect.isclass(obj) and obj.__name__ != 'ParametrizedTestCase':
-            for p_class in inspect.getmro(obj):
-                if p_class.__name__ == 'TestCase':
-                    suite.addTest(ParametrizedTestCase.parametrize(obj, {'configuration': configuration}))
-result = unittest.TextTestRunner(verbosity=2).run(suite)                    
-sys.exit(not result.wasSuccessful())
diff --git a/out/manticoresearch-python-actual/test/test_index_api.py b/out/manticoresearch-python-actual/test/test_index_api.py
deleted file mode 100755
index 62cba5e..0000000
--- a/out/manticoresearch-python-actual/test/test_index_api.py
+++ /dev/null
@@ -1,136 +0,0 @@
-# coding: utf-8
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-#
-# All rights reserved
-
-"""
-    Manticore Search API
-
-    This is the API for Manticore Search HTTP protocol   # noqa: E501
-
-    The version of the OpenAPI document: 1.0.0
-    Contact: info@manticoresearch.com
-    Generated by: https://openapi-generator.tech
-"""
-
-
-from __future__ import absolute_import
-from pprint import pprint
-import unittest
-import manticoresearch
-from manticoresearch.api.index_api import IndexApi  # noqa: E501
-from manticoresearch.rest import ApiException
-from parametrized_test_case import ParametrizedTestCase
-
-class TestIndexApi(ParametrizedTestCase):
-    """IndexApi unit test stubs"""
-
-    def setUp(self):
-        self.api = manticoresearch.IndexApi(manticoresearch.ApiClient(self.settings['configuration']))  # noqa: E501
-        
-    def tearDown(self):
-        pass
-
-    def test_bulk(self):
-        self.assertTrue(True)
-        
-    def test_delete(self):
-        """Test case for delete
- 
-        Delete a document in an index  # noqa: E501
-        """
-        
-        req_body = {"index":"test","id":1} 
-        api_resp = self.api.delete(req_body)
-        req_body = {"index":"test","id":2} 
-        api_resp = self.api.delete(req_body)
-        
-        req_body = {"index":"test","id":3} 
-        api_resp = self.api.delete(req_body)
-        res = {'deleted':  api_resp.deleted, 'id': api_resp.id, 'index': api_resp.index, 'result': api_resp.result}
-        expected_res = {'deleted': None, 'id': 3, 'index': 'test', 'result': 'not found'}
-        self.assertDictEqual(res, expected_res)
-        
-        req_body = {"index":"test","query":{"match":{"content":"no match"}}} 
-        api_resp = self.api.delete(req_body)
-        res = {'deleted':  api_resp.deleted, 'id': api_resp.id, 'index': api_resp.index, 'result': api_resp.result}
-        expected_res = {'deleted': 0, 'id': None, 'index': 'test', 'result': None}
-        self.assertDictEqual(res, expected_res)
-         
-        insert_req_body = {"index":"test","id":1,"doc":{"content":"sample content","name":"test doc","cat":"10"}} 
-        self.api.insert(insert_req_body)
-        req_body = {"index":"test","id":1} 
-        api_resp = self.api.delete(req_body)
-        res = {'deleted':  api_resp.deleted, 'id': api_resp.id, 'index': api_resp.index, 'result': api_resp.result}
-        expected_res = {'deleted': None, 'id': 1, 'index': 'test', 'result': 'deleted'}
-        self.assertDictEqual(res, expected_res) 
-        
-        self.api.insert(insert_req_body)
-        req_body = {"index":"test","query":{"match":{"content":"sample content"}}} 
-        api_resp = self.api.delete(req_body)
-        res = {'deleted':  api_resp.deleted, 'id': api_resp.id, 'index': api_resp.index, 'result': api_resp.result}
-        expected_res = {'deleted': 1, 'id': None, 'index': 'test', 'result': None}        
-        self.assertDictEqual(res, expected_res)
-    
-    def test_insert(self):
-        """Test case for insert
-   
-        Create a new document in an index  # noqa: E501
-        """
-        req_body = {"index":"test","id":1,"doc":{"content":"sample content","name":"test doc","cat":"10"}} 
-        api_resp = self.api.insert(req_body)
-        res = {'created':  api_resp.created, 'found': api_resp.found, 'id': api_resp.id, 'index': api_resp.index, 'result': api_resp.result}
-        expected_res = {'created': True, 'found': None, 'id': 1, 'index': 'test', 'result': 'created'}
-        self.assertDictEqual(res, expected_res) 
-
-    def test_replace(self):
-        """Test case for replace
- 
-        Replace new document in an index  # noqa: E501
-        """
-        req_body = {"index":"test","id":2,"doc":{"content":"content updated","cat":11}} 
-        api_resp = self.api.replace(req_body)
-        res = {'created':  api_resp.created, 'found': api_resp.found, 'id': api_resp.id, 'index': api_resp.index, 'result': api_resp.result}
-        expected_res = {'created': False, 'found': None, 'id': 2, 'index': 'test', 'result': 'updated'}
-        self.assertDictEqual(res, expected_res)
-        
-        req_body = {"index":"test","id":1,"doc":{"content":"content updated","name":"test doc","cat":11}} 
-        api_resp = self.api.replace(req_body)
-        res = {'created':  api_resp.created, 'found': api_resp.found, 'id': api_resp.id, 'index': api_resp.index, 'result': api_resp.result}
-        expected_res = {'created': False, 'found': None, 'id': 1, 'index': 'test', 'result': 'updated'}
-        self.assertDictEqual(res, expected_res)
-        pass
- 
-    def test_update(self):
-        """Test case for update
-
-        Update a document in an index  # noqa: E501
-        """
-        req_body = {"index":"test","doc":{"cat":12},"query":{"equals":{"name":"no match"}}}
-        api_resp = self.api.update(req_body)
-        res = {'index': api_resp.index, 'result': api_resp.result, 'updated': api_resp.updated}
-        expected_res = {'index': 'test', 'result': None, 'updated': 0}
-        self.assertDictEqual(res, expected_res)
- 
-        req_body = {"index":"test","id":3, "doc":{"cat":13}} 
-        api_resp = self.api.update(req_body)
-        res = {'id': api_resp.id, 'index': api_resp.index, 'result': api_resp.result, 'updated': api_resp.updated}
-        expected_res = {'id': 3, 'index': 'test', 'result': 'noop', 'updated': None}
-        self.assertDictEqual(res, expected_res)
-        
-         
-        req_body = {"index":"test","id":1, "doc":{"cat":11}} 
-        api_resp = self.api.update(req_body)
-        res = {'id': api_resp.id, 'index': api_resp.index, 'result': api_resp.result, 'updated': api_resp.updated}
-        expected_res = {'id': 1, 'index': 'test', 'result': 'updated', 'updated': None}
-        self.assertDictEqual(res, expected_res)
-         
-        req_body = {"index":"test","doc":{"cat":12},"query":{"equals":{"name":"test doc"}}}
-        api_resp = self.api.update(req_body)
-        res = {'index': api_resp.index, 'result': api_resp.result, 'updated': api_resp.updated}
-        expected_res = {'index': 'test', 'result': None, 'updated': 1}
-        self.assertDictEqual(res, expected_res) 
-
-if __name__ == '__main__':
-    unittest.main()
diff --git a/out/manticoresearch-python-actual/test/test_manual.py b/out/manticoresearch-python-actual/test/test_manual.py
deleted file mode 100755
index 642d2d7..0000000
--- a/out/manticoresearch-python-actual/test/test_manual.py
+++ /dev/null
@@ -1,368 +0,0 @@
-# coding: utf-8
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-#
-# All rights reserved
-
-from __future__ import absolute_import
-from pprint import pprint
-import unittest
-import json
-import manticoresearch
-from manticoresearch.api.index_api import IndexApi  # noqa: E501
-from manticoresearch.model import *
-from manticoresearch.rest import ApiException
-from parametrized_test_case import ParametrizedTestCase
-from urllib.parse import quote
-import sys
-
-class TestManualApi(ParametrizedTestCase):
-
-    def setUp(self):
-        self.client = manticoresearch.ApiClient(self.settings['configuration'])
-        
-    def tearDown(self):
-        pass
-        
-    def test_manual(self):
-        client = self.client
-        indexApi = manticoresearch.IndexApi(client)
-        utilsApi = manticoresearch.UtilsApi(client)
-        searchApi = manticoresearch.SearchApi(client)
-        
-        utilsApi.sql('DROP TABLE IF EXISTS movies')
-        res = utilsApi.sql('CREATE TABLE IF NOT EXISTS movies (title text, plot text, year integer, rating float, code multi)')
-        
-        docs = [ \
-            {"insert": {"index" : "movies", "id" : 1, "doc" : {"title" : "Star Trek 2: Nemesis", "plot": "The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.", "year": 2002, "rating": 6.4, "code": [1,2,3]}}}, \
-            {"insert": {"index" : "movies", "id" : 2, "doc" : {"title" : "Star Trek 1: Nemesis", "plot": "The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.", "year": 2001, "rating": 6.5, "code": [1,12,3]}}},
-            {"insert": {"index" : "movies", "id" : 3, "doc" : {"title" : "Star Trek 3: Nemesis", "plot": "The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.", "year": 2003, "rating": 6.6, "code": [11,2,3]}}}, \
-            {"insert": {"index" : "movies", "id" : 4, "doc" : {"title" : "Star Trek 4: Nemesis", "plot": "The Enterprise is diverted to the Romulan homeworld Romulus, supposedly because they want to negotiate a peace treaty. Captain Picard and his crew discover a serious threat to the Federation once Praetor Shinzon plans to attack Earth.", "year": 2003, "rating": 6.5, "code": [1,2,4]}}},
-        ]
-        indexApi.bulk('\n'.join(map(json.dumps,docs)))
-        
-        search_request = SearchRequest(
-            index="movies",
-            query={"match_all": {}}
-        ) 
-        
-        res = searchApi.search(search_request)
-
-        search_request.index = 'movies'
-        search_request.limit = 10
-        search_request.track_scores = True
-        search_request.options = {'cutoff': 5}
-        search_request.options['ranker'] = 'bm25'
-        search_request.source = 'title'
-
-        res = searchApi.search(search_request)
-        
-        search_request.source = SourceByRules()
-        search_request.source.includes = ['title', 'year']
-        search_request.source.excludes = ['code']
-
-        res = searchApi.search(search_request)
-
-        search_request.sort = ['year']
-        sort2 = manticoresearch.model.SortOrder('rating', 'asc')
-        sort3 = manticoresearch.model.SortMVA('code', 'desc', 'max')
-        search_request.sort += [sort2,sort3]
-        
-        res = searchApi.search(search_request)
-
-        search_request.expressions = {'expr': 'min(year,2900)'}
-        search_request.expressions['expr2'] = 'max(year,2100)'
-        search_request.source.includes += ['expr2', 'expr']
-        
-        res = searchApi.search(search_request)
-        		
-        aggTerms1 = AggregationTerms('year', 10)
-        agg1 = Aggregation(aggTerms1)
-        agg2 = Aggregation(AggregationTerms('rating'), ['rating'])
-        search_request.aggs = {'agg1': agg1}
-        search_request.aggs['agg2'] = agg2
-        
-
-        highlight = manticoresearch.model.Highlight()
-        highlight.fieldnames = ['title']
-        highlight.post_tags = '</post_tag>'
-        highlight.encoder = 'default'
-        highlight.snippet_boundary = 'sentence'
-        search_request.highlight = highlight 
-        
-        res = searchApi.search(search_request)
-
-        highlightField = HighlightField('title')
-        highlightField2 = HighlightField('plot', 5, 10)
-        highlight.fields = [highlightField, highlightField2]
-        search_request.highlight = highlight
-        
-        res = searchApi.search(search_request)
-
-        highlight.highlight_query = {"match" : {"*": "Star"} };
-        search_request.highlight = highlight
-
-        res = searchApi.search(search_request)
-
-        search_request.fulltext_filter = QueryFilter('Star Trek 2')
-
-        res = searchApi.search(search_request)        
-
-        search_request.fulltext_filter = MatchFilter('Nemesis', 'title')
-
-        res = searchApi.search(search_request)
-
-        search_request.fulltext_filter = MatchPhraseFilter('Star Trek 2', 'title')
-
-        res = searchApi.search(search_request)
-
-        search_request.fulltext_filter = MatchOpFilter('Enterprise test', 'title,plot', 'or') 
-        
-        res = searchApi.search(search_request)
-
-        search_request.attr_filter = EqualsFilter('year', 2001)
-        
-        res = searchApi.search(search_request)
-
-        inFilter = InFilter('year', [2001, 2002])
-        inFilter.values += [10,11]
-        search_request.attr_filter = inFilter
-        
-        res = searchApi.search(search_request)
-
-        rangeFilter = RangeFilter('year', lte = 2002)
-        rangeFilter.gte = 1000
-        search_request.attr_filter = rangeFilter
-
-        res = searchApi.search(search_request)
-        
-        rangeFilter = RangeFilter('rating')
-        rangeFilter.gt = 2000.5
-        rangeFilter.lt = 2002
-        search_request.attr_filter = rangeFilter
-
-        res = searchApi.search(search_request)
-
-        geoFilter = GeoDistanceFilter(location_anchor={'lat':10,'lon':20.5}, location_source='year,rating')
-        geoFilter.location_source='year,rating'
-        geoFilter.distance_type='adaptive'
-        geoFilter.distance='100 km'
-        search_request.attr_filter = geoFilter
-        
-        res = searchApi.search(search_request)
-
-        boolFilter = BoolFilter()
-        boolFilter.must = [ EqualsFilter('year', 2001) ]
-        boolFilter.must += [ RangeFilter('rating', lte = 20) ]
-        search_request.attr_filter = boolFilter
-        
-        res = searchApi.search(search_request)
-
-        boolFilter.must_not = [ EqualsFilter('year', 2001) ]
-        
-        res = searchApi.search(search_request)
-        
-        fulltext_filter = MatchFilter('Star', 'title')
-        nestedBoolFilter = BoolFilter()
-        nestedBoolFilter.should = [EqualsFilter('rating', 6.5), fulltext_filter]
-        boolFilter.must = [nestedBoolFilter]
-        
-        res = searchApi.search(search_request)
-
-        search_request.attr_filter = boolFilter
-    
-        res = searchApi.search(search_request)
-        pprint(res)
-
-        pprint("Search tests finished")
-        
-        utilsApi.sql('SHOW THREADS')
-        utilsApi.sql('DROP TABLE IF EXISTS products')
-        # example create_example request
-        res = utilsApi.sql('CREATE TABLE IF NOT EXISTS products (title text, price float, sizes multi, meta json, coeff float, tags1 multi, tags2 multi)')
-        pprint(res)
-        # example not raw_response request
-        res = utilsApi.sql('SELECT * FROM products', raw_response=False)
-        pprint(res)
-        res = utilsApi.sql('SELECT * FROM products', raw_response=True)
-        pprint(res)
-        res = utilsApi.sql('TRUNCATE TABLE products')
-        # example create_example response
-        #
-        #
-        #
-        print(res)
-        self.assertEqual(res[0]['error'],'')
-        indexApi = api = manticoresearch.IndexApi(client)
-        # example insert request
-        indexApi.insert({"index" : "products", "id" : 1, "doc" : {"title" : "Crossbody Bag with Tassel", "price" : 19.85}})
-        indexApi.insert({"index" : "products", "id" : 2, "doc" : {"title" : "Crossbody Bag with Tassel"}})
-        indexApi.insert({"index" : "products", "id" : 0, "doc" : {"title" : "Yellow bag"}})
-        # example autoid request
-        indexApi.insert({"index" : "products", "id" : 0, "doc" : {"title" : "Yellow bag"}})
-        # example bulk_insert request
-        indexApi = api = manticoresearch.IndexApi(client)
-        docs = [ \
-            {"insert": {"index" : "products", "id" : 3, "doc" : {"title" : "Crossbody Bag with Tassel", "price" : 19.85}}}, \
-            {"insert": {"index" : "products", "id" : 4, "doc" : {"title" : "microfiber sheet set", "price" : 19.99}}}, \
-            {"insert": {"index" : "products", "id" : 5, "doc" : {"title" : "CPet Hair Remover Glove", "price" : 7.99}}}
-        ]
-        print('\n'.join(map(json.dumps,docs)))
-        api_resp = indexApi.bulk('\n'.join(map(json.dumps,docs)))
-        # example MVA_insert request
-        indexApi = api = manticoresearch.IndexApi(client)
-        indexApi.insert({"index" : "products", "id" : 0, "doc" : {"title" : "Yellow bag","sizes":[40,41,42,43]}})
-        # example JSON_insert request
-        indexApi = api = manticoresearch.IndexApi(client)
-        indexApi.insert({"index" : "products", "id" : 0, "doc" : {"title" : "Yellow bag","meta":'{"size": 41, "color": "red"}'}})
-        # example replace request
-        api_resp = indexApi.replace({"index" : "products", "id" : 1, "doc" : {"title" : "document one","price":10}})
-
-        # example replace response
-        # {'created': False,
-        # 'found': None,
-        # 'id': 1,
-        # 'index': 'products',
-        # 'result': 'updated'}
-        
-        # example bulk_replace request
-        docs = [ \
-            {"replace": {"index" : "products", "id" : 1, "doc" : {"title" : "document one"}}}, \
-            {"replace": {"index" : "products", "id" : 2, "doc" : {"title" : "document two"}}} ]
-        api_resp = indexApi.bulk('\n'.join(map(json.dumps,docs)))
-        
-        # example bulk_replace response
-        #{'error': None,
-        #'items': [{u'replace': {u'_id': 1,
-        #                 u'_index': u'products',
-        #                 u'created': False,
-        #                 u'result': u'updated',
-        #                 u'status': 200}},
-        #   {u'replace': {u'_id': 2,
-        #                u'_index': u'products',
-        #                 u'created': False,
-        #                 u'result': u'updated',
-        #                 u'status': 200}}]}
-        
-        # example update request
-        api_resp = indexApi.update({"index" : "products", "id" : 1, "doc" : {"price":10}})
-        pprint(api_resp)
-        # example update respone
-        # {'id': 1, 'index': 'products', 'result': 'updated', 'updated': None}
-        
-        # example update multiple attributes request
-        api_resp = indexApi.update({"index" : "products", "id" : 1, "doc" : {
-            "price": 100000000000,
-            "coeff": 3465.23,
-            "tags1": [3,6,4],
-            "tags2": []}})
-        pprint(api_resp)
-        # example update multiple attributes respone
-        # {'id': 1, 'index': 'products', 'result': 'updated', 'updated': None}
-        
-        
-        
-        # example partial JSON update request
-        api_resp = indexApi.insert({"index" : "products", "id" : 100, "doc" : {"title" : "title", "meta" : {"tags":[1,2,3]}}})
-        pprint(api_resp)
-        api_resp = indexApi.update({"index" : "products", "id" : 100, "doc" : {
-            "meta.tags[0]": 100}})
-        pprint(api_resp)
-        # example partial JSON update respone
-        #{'created': True,
-        #'found': None,
-        #'id': 100,
-        #'index': 'products',
-        #'result': 'created'}
-        #{'id': 100, 'index': 'products', 'result': 'updated', 'updated': None}      
-
-        # example MVA empty update request
-        api_resp = indexApi.update({"index" : "products", "id" : 1, "doc" : {"tags1": []}})
-        pprint(api_resp)
-        
-        # example bulk by query request
-        docs = [ \
-            { "update" : { "index" : "products", "doc": { "coeff" : 1000 }, "query": { "range": { "price": { "gte": 1000 } } } } }, \
-            { "update" : { "index" : "products", "doc": { "coeff" : 0 }, "query": { "range": { "price": { "lt": 1000 } } } } } ]
-        api_resp = indexApi.bulk('\n'.join(map(json.dumps,docs)))
-        pprint(api_resp)
-        
-        # example delete 2 request
-        api_resp = indexApi.delete({"index" : "products", "query": { "match": { "*": "document" }}})
-        pprint(api_resp)        
-        
-        # example delete 3 request
-        api_resp = indexApi.delete({"index" : "products", "id" : 1})
-        pprint(api_resp)      
-
-        # example truncate request
-        res = utilsApi.sql('TRUNCATE TABLE products')
-        pprint(res)
-        
-        #
-        
-        res = utilsApi.sql('SHOW TABLES LIKE \'pro%\'')
-        pprint(res)
-        
-        #
-        res = utilsApi.sql('drop table if exists forum')
-        utilsApi.sql('create table forum(title text, content text, author_id int, forum_id int, post_date timestamp) min_infix_len=\'3\'')
-        # example filtered query request
-        res = searchApi.search({"index":"forum","query":{"match_all":{},"bool":{"must":[{"equals":{"author_id":123}},{"in":{"forum_id":[1,3,7]}}]}},"sort":[{"post_date":"desc"}]})
-        pprint(res)
-        
-        #
-        print('HERE')
-        indexApi.insert({"index" : "forum", "id" : 0, "doc" : {"title" : "i me"}})
-        indexApi.insert({"index" : "forum", "id" : 0, "doc" : {"title" : "wayne","content":"hey"}})
-        res = searchApi.search({"index":"forum","query":{"query_string":"i me"},"_source":{"excludes":["*"]},"limit":1,"profile":True})
-        pprint(res)
-        res = searchApi.search({"index":"forum","query":{"query_string":"@title way* @content hey"},"_source":{"excludes":["*"]},"limit":1,"profile":True})
-        pprint(res)
-        
-        #
-        utilsApi.sql('DROP TABLE products')
-        res = utilsApi.sql('CREATE TABLE IF NOT EXISTS products (title text,product_codes multi)')
-        
-        res = indexApi.insert({"index":"products","id":1,"doc":{"title":"first","product_codes":[4,2,1,3]}})
-        pprint(res)
-        res = indexApi.insert({"index":"products","id":2,"doc":{"title":"second","product_codes":[5,6,8,7]}})
-        res = searchApi.search({"index":"products","query":{"match_all":{}}})
-        pprint(res)
-        res = searchApi.search({"index":"products","query":{"match_all":{}}, "options":{"max_matches":1}})
-        pprint(res)
-        utilsApi.sql('DROP TABLE products')
-        
-        #
-        
-        res =  utilsApi.sql('SHOW AGENT STATUS')
-        pprint(res)
-        
-        # example create percolate request
-        
-        #utilsApi.sql('create table products(title text, color string) type=\'pq\'')
-        #res = indexApi.insert({"index" : "products", "doc" : {"query" : "@title bag" }})
-        #pprint(res)
-        #res = indexApi.insert({"index" : "products",  "doc" : {"query" : "@title shoes", "filters": "color='red'" }})
-        #pprint(res)
-        #res = indexApi.insert({"index" : "products",  "doc" : {"query" : "@title shoes","filters": "color in ('blue', 'green')" }})
-        #pprint(res)
-        
-        #
-        
-        #res = searchApi.percolate('products',{"query":{"percolate":{"document":{"title":"What a nice bag"}}}})
-        #pprint(res)
-        #res = searchApi.percolate('products',{"query":{"percolate":{"documents":[{"title":"nice pair of shoes","color":"blue"},{"title":"beautiful bag"}]}}})
-        #pprint(res)        
-        #res = searchApi.search({"index":"products","query":{"match_all":{}}})
-        #pprint(res)        
-        #utilsApi.sql('DROP TABLE products')
-        
-        
-        #res =  searchApi.search({"index":"books","query":{"match":{"*":"try"}},"highlight":{}})
-        #pprint(res)
-        
-        pprint("Tests finished")
-        
-if __name__ == '__main__':
-    unittest.main()
diff --git a/out/manticoresearch-python-actual/test/test_search_api.py b/out/manticoresearch-python-actual/test/test_search_api.py
deleted file mode 100755
index a8842c0..0000000
--- a/out/manticoresearch-python-actual/test/test_search_api.py
+++ /dev/null
@@ -1,79 +0,0 @@
-# coding: utf-8
-# Manticore Search Client
-# Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
-#
-# All rights reserved
-
-"""
-    Manticore Search API
-
-    This is the API for Manticore Search HTTP protocol   # noqa: E501
-
-    The version of the OpenAPI document: 1.0.0
-    Contact: info@manticoresearch.com
-    Generated by: https://openapi-generator.tech
-"""
-
-
-from __future__ import absolute_import
-from pprint import pprint
-import unittest
-import manticoresearch
-from manticoresearch.api.search_api import SearchApi  # noqa: E501
-from manticoresearch.rest import ApiException
-from parametrized_test_case import ParametrizedTestCase
-
-class TestSearchApi(ParametrizedTestCase):
-    """SearchApi unit test stubs"""
-
-    def setUp(self):
-        client = manticoresearch.ApiClient(self.settings['configuration'])
-        self.api = manticoresearch.SearchApi(client)  # noqa: E501
-        self.index_api = manticoresearch.IndexApi(client)  # noqa: E501
-
-    def tearDown(self):
-        pass
-
-    def test_percolate(self):
-        """Test case for percolate
-
-        Perform reverse search on a percolate index  # noqa: E501
-        """
-        self.index_api.insert({"index":"test_pq","id":1,"doc":{"query":"@content sample content"}})
-        req_body = {"query":{"percolate":{"document":{"content":"sample content"}}}} 
-        api_resp = self.api.percolate("test_pq", req_body)
-        res = {'hits': api_resp.hits.hits, 'total': api_resp.hits.total, 'profile': api_resp.profile, 'timed_out': api_resp.timed_out}
-        expected_res = {'hits': [{'_id': '1', '_index': 'test_pq', '_score': '1', '_source': {'query': {'ql': '@content sample content'}}, '_type': 'doc', 'fields': {'_percolator_document_slot': [1]}}], 'total': 1, 'profile': None, 'timed_out': False}
-        self.assertDictEqual(res, expected_res)
-         
-        req_body = {"query":{"percolate":{"document":{"content":"no match"}}}} 
-        api_resp = self.api.percolate("test_pq", req_body)
-        res = {'hits': api_resp.hits.hits, 'total': api_resp.hits.total, 'profile': api_resp.profile, 'timed_out': api_resp.timed_out}
-        expected_res = {'hits': [], 'total': 0, 'profile': None, 'timed_out': False}
-        self.assertDictEqual(res, expected_res)
-        pass
-
-    def test_search(self):
-        """Test case for search
-
-        Performs a search  # noqa: E501
-        """
-        req_body = {"index":"test","id":1} 
-        api_resp = self.index_api.delete(req_body)
-        insert_req_body = {"index":"test","id":1,"doc":{"content":"sample content","name":"test doc","cat":"10"}} 
-        self.index_api.insert(insert_req_body)
-        req_body = {"index":"test","query":{"match":{"content":"sample"}}} 
-        api_resp = self.api.search(req_body)
-        res = {'id': api_resp.hits.hits[0]['_id'], 'total': api_resp.hits.total, 'profile': api_resp.profile, 'timed_out': api_resp.timed_out}
-        expected_res = {'id': '1', 'total': 1, 'profile': None, 'timed_out': False}
-        self.assertDictEqual(res, expected_res)
-        
-        req_body = {"index":"test","query":{"match":{"content":"no match"}}} 
-        api_resp = self.api.search(req_body)
-        res = {'hits': api_resp.hits.hits, 'total': api_resp.hits.total, 'profile': api_resp.profile, 'timed_out': api_resp.timed_out}
-        expected_res = {'hits': [], 'total': 0, 'profile': None, 'timed_out': False}
-        self.assertDictEqual(res, expected_res)
-
-
-if __name__ == '__main__':
-    unittest.main()
diff --git a/out/manticoresearch-python-actual/tox.ini b/out/manticoresearch-python-actual/tox.ini
deleted file mode 100644
index 90382b0..0000000
--- a/out/manticoresearch-python-actual/tox.ini
+++ /dev/null
@@ -1,9 +0,0 @@
-[tox]
-envlist = py27, py3
-
-[testenv]
-deps=-r{toxinidir}/requirements.txt
-     -r{toxinidir}/test-requirements.txt
-
-commands=
-   pytest --cov=manticoresearch
diff --git a/out/manticoresearch-typescript-actual/.gitignore b/out/manticoresearch-typescript-actual/.gitignore
deleted file mode 100644
index 149b576..0000000
--- a/out/manticoresearch-typescript-actual/.gitignore
+++ /dev/null
@@ -1,4 +0,0 @@
-wwwroot/*.js
-node_modules
-typings
-dist
diff --git a/out/manticoresearch-typescript-actual/.npmignore b/out/manticoresearch-typescript-actual/.npmignore
deleted file mode 100644
index 42061c0..0000000
--- a/out/manticoresearch-typescript-actual/.npmignore
+++ /dev/null
@@ -1 +0,0 @@
-README.md
\ No newline at end of file
diff --git a/out/manticoresearch-typescript-actual/.openapi-generator-ignore b/out/manticoresearch-typescript-actual/.openapi-generator-ignore
deleted file mode 100644
index 7484ee5..0000000
--- a/out/manticoresearch-typescript-actual/.openapi-generator-ignore
+++ /dev/null
@@ -1,23 +0,0 @@
-# OpenAPI Generator Ignore
-# Generated by openapi-generator https://github.com/openapitools/openapi-generator
-
-# Use this file to prevent files from being overwritten by the generator.
-# The patterns follow closely to .gitignore or .dockerignore.
-
-# As an example, the C# client generator defines ApiClient.cs.
-# You can make changes and tell OpenAPI Generator to ignore just this file by uncommenting the following line:
-#ApiClient.cs
-
-# You can match any string of characters against a directory, file or extension with a single asterisk (*):
-#foo/*/qux
-# The above matches foo/bar/qux and foo/baz/qux, but not foo/bar/baz/qux
-
-# You can recursively match patterns against a directory, file or extension with a double asterisk (**):
-#foo/**/qux
-# This matches foo/bar/qux, foo/baz/qux, and foo/bar/baz/qux
-
-# You can also negate patterns with an exclamation (!).
-# For example, you can ignore all files in a docs folder with the file extension .md:
-#docs/*.md
-# Then explicitly reverse the ignore rule for a single file:
-#!docs/README.md
diff --git a/out/manticoresearch-typescript-actual/.openapi-generator/FILES b/out/manticoresearch-typescript-actual/.openapi-generator/FILES
deleted file mode 100644
index 208aeae..0000000
--- a/out/manticoresearch-typescript-actual/.openapi-generator/FILES
+++ /dev/null
@@ -1,13 +0,0 @@
-.gitignore
-.npmignore
-.openapi-generator-ignore
-README.md
-package.json
-src/apis/IndexApi.ts
-src/apis/SearchApi.ts
-src/apis/UtilsApi.ts
-src/apis/index.ts
-src/index.ts
-src/models/index.ts
-src/runtime.ts
-tsconfig.json
diff --git a/out/manticoresearch-typescript-actual/.openapi-generator/VERSION b/out/manticoresearch-typescript-actual/.openapi-generator/VERSION
deleted file mode 100644
index fff4bdd..0000000
--- a/out/manticoresearch-typescript-actual/.openapi-generator/VERSION
+++ /dev/null
@@ -1 +0,0 @@
-7.3.0-SNAPSHOT
\ No newline at end of file
diff --git a/out/manticoresearch-typescript-actual/LICENSE.txt b/out/manticoresearch-typescript-actual/LICENSE.txt
deleted file mode 100755
index b5084aa..0000000
--- a/out/manticoresearch-typescript-actual/LICENSE.txt
+++ /dev/null
@@ -1,21 +0,0 @@
-The MIT License (MIT)
-
-Copyright (c) 2020-2023, Manticore Software LTD 
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
\ No newline at end of file
diff --git a/out/manticoresearch-typescript-actual/README.md b/out/manticoresearch-typescript-actual/README.md
deleted file mode 100644
index ac476ac..0000000
--- a/out/manticoresearch-typescript-actual/README.md
+++ /dev/null
@@ -1,94 +0,0 @@
-# Manticore TypeScript client
-
-Сlient for Manticore Search.
-
-
-
-## Requirements
-
-Minimum Manticore Search version is 4.2.1 with HTTP protocol enabled.
-
-
-## Installation
-
-```shell
-npm install manticoresearch-ts 
-```
-
-## Getting Started
-
-Please follow the [installation](#installation) instruction and execute the following typescript code:
-
-```javascript
-import {
-  Configuration,
-  IndexApi,
-  SearchApi,
-  ResponseError,
-} from "manticoresearch-ts";
-(async () => {
-  try {
-    /*
-    const config = new Configuration({
-      basePath: 'http://localhost:9308',
-      // fetchApi: <your own fetch API> // use node-fetch with node version < 18
-    })
-    const indexApi = new IndexApi(config);
-    */
-    const indexApi = new IndexApi();
-    const docs = [
-      { insert: { index: "test", id: 1, doc: { title: "Title 1" } } },
-      { insert: { index: "test", id: 2, doc: { title: "Title 2" } } },
-    ];
-    const insertResponse = await indexApi.bulk(
-      docs.map((doc) => JSON.stringify(doc)).join("\n")
-    );
-    console.info("Insert response:", JSON.stringify(insertResponse, null, 2));
-
-    const searchApi = new SearchApi();
-    const searchResponse = await searchApi.search({
-      index: "test",
-      query: { query_string: "Title 1" },
-    });
-    console.info("Search response:", JSON.stringify(searchResponse, null, 2));
-  } catch (error) {
-    const errorResponse =
-      error instanceof ResponseError ? await error.response.json() : error;
-    console.error("Error response:", JSON.stringify(errorResponse, null, 2));
-  }
-})();
-```
-
-## Documentation
-
-Full documentation on the API Endpoints and Models used is available in [docs](https://github.com/manticoresoftware/manticoresearch-typescript/tree/4.1.0/docs) folder as listed below.
-
-Manticore Search server documentation: https://manual.manticoresearch.com.
-
-## Documentation for API Endpoints
-
-All URIs are relative to *http://127.0.0.1:9308*
-
-| Class | Method | HTTP request | Description |
-| ----- | ------ | ------------ | ------------|
-
-| _Manticoresearch.IndexApi_ | [**bulk**](docs/IndexApi.md#bulk) | **POST** /bulk | Bulk index operations |
-
-| _Manticoresearch.IndexApi_ | [**delete**](docs/IndexApi.md#delete) | **POST** /delete | Delete a document in an index |
-
-| _Manticoresearch.IndexApi_ | [**insert**](docs/IndexApi.md#insert) | **POST** /insert | Create a new document in an index |
-
-| _Manticoresearch.IndexApi_ | [**replace**](docs/IndexApi.md#replace) | **POST** /replace | Replace new document in an index |
-
-| _Manticoresearch.IndexApi_ | [**update**](docs/IndexApi.md#update) | **POST** /update | Update a document in an index |
-
-| _Manticoresearch.SearchApi_ | [**percolate**](docs/SearchApi.md#percolate) | **POST** /pq/{index}/search | Perform reverse search on a percolate index |
-
-| _Manticoresearch.SearchApi_ | [**search**](docs/SearchApi.md#search) | **POST** /search | Performs a search on an index |
-
-| _Manticoresearch.UtilsApi_ | [**sql**](docs/UtilsApi.md#sql) | **POST** /sql | Perform SQL requests |
-
-
-## Documentation for Authorization
-
-All endpoints do not require authorization.
diff --git a/out/manticoresearch-typescript-actual/docs/IndexApi.md b/out/manticoresearch-typescript-actual/docs/IndexApi.md
deleted file mode 100644
index 1deebaa..0000000
--- a/out/manticoresearch-typescript-actual/docs/IndexApi.md
+++ /dev/null
@@ -1,308 +0,0 @@
-# Manticoresearch.IndexApi
-
-All URIs are relative to *http://127.0.0.1:9308*
-
-| Method                             | HTTP request      | Description                       |
-| ---------------------------------- | ----------------- | --------------------------------- |
-| [**bulk**](IndexApi.md#bulk)       | **POST** /bulk    | Bulk index operations             |
-| [**delete**](IndexApi.md#delete)   | **POST** /delete  | Delete a document in an index     |
-| [**insert**](IndexApi.md#insert)   | **POST** /insert  | Create a new document in an index |
-| [**replace**](IndexApi.md#replace) | **POST** /replace | Replace new document in an index  |
-| [**update**](IndexApi.md#update)   | **POST** /update  | Update a document in an index     |
-
-## bulk
-
-> BulkResponse bulk(body)
-
-Bulk index operations
-
-Sends multiple operatons like inserts, updates, replaces or deletes.
-For each operation it's object must have same format as in their dedicated method.
-The method expects a raw string as the batch in NDJSON.
-Each operation object needs to be serialized to JSON and separated by endline (\n).
-
-An example of raw input:
-
-```
-  {"insert": {"index" : "products", "id" : 3, "doc" : {"title" : "Crossbody Bag with Tassel", "price" : 19.85}}}\n
-  {"insert": {"index" : "products", "id" : 4, "doc" : {"title" : "microfiber sheet set", "price" : 19.99}}}\n
-  {"insert": {"index" : "products", "id" : 5, "doc" : {"title" : "CPet Hair Remover Glove", "price" : 7.99}}}
-```
-
-Responds with an object telling whenever any errors occured and an array with status for each operation:
-
-```
-{'items':[{'update':{'_index':'products','_id':1,'result':'updated'}},{'update':{'_index':'products','_id':2,'result':'updated'}}],'errors':false}
-```
-
-### Example
-
-```javascript
-import { IndexApi } from "manticoresearch-ts";
-
-const indexApi = new IndexApi();
-const docs = [
-  {
-    insert: {
-      index: "products",
-      id: 3,
-      doc: { title: "Crossbody Bag with Tassel", price: 19.85 },
-    },
-  },
-  {
-    insert: {
-      index: "products",
-      id: 4,
-      doc: { title: "microfiber sheet set", price: 19.99 },
-    },
-  },
-  {
-    insert: {
-      index: "products",
-      id: 5,
-      doc: { title: "CPet Hair Remover Glove", price: 7.99 },
-    },
-  },
-];
-indexApi
-  .bulk(docs.map((doc) => JSON.stringify(doc)).join("\n"))
-  .then((res) => console.log(JSON.stringify(res, null, 2)));
-```
-
-### Parameters
-
-| Name     | Type       | Description | Notes |
-| -------- | ---------- | ----------- | ----- |
-| **body** | **String** |             |
-
-### Return type
-
-[**BulkResponse**](BulkResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: application/x-ndjson
-- **Accept**: application/json
-
-## delete
-
-> DeleteResponse delete(deleteDocumentRequest)
-
-Delete a document in an index
-
-Delete one or several documents.
-The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a match query, in which case multiple documents can be delete .
-Example of input to delete by id:
-
-```
-{"index" : "products", "id" : 1}
-```
-
-Example of input to delete using a query:
-
-```
-{"index" : "products", "query": { "match": { "*": "superseeded" }}}
-```
-
-The match query has same syntax as in for searching.
-Responds with an object telling how many documents got deleted:
-
-```
-{'_index':'products','updated':1}
-```
-
-### Example
-
-```javascript
-import { IndexApi } from "manticoresearch-ts";
-
-const indexApi = new IndexApi();
-indexApi
-  .delete({ index: "products", id: 1 })
-  .then((res) => console.log(JSON.stringify(res, null, 2)));
-```
-
-### Parameters
-
-| Name                      | Type                                                  | Description | Notes |
-| ------------------------- | ----------------------------------------------------- | ----------- | ----- |
-| **deleteDocumentRequest** | [**DeleteDocumentRequest**](DeleteDocumentRequest.md) |             |       |
-
-### Return type
-
-[**DeleteResponse**](DeleteResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: application/json
-- **Accept**: application/json
-
-## insert
-
-> SuccessResponse insert(insertDocumentRequest)
-
-Create a new document in an index
-
-Insert a document.
-Expects an object like:
-
-```
-{"index" : "products", "id" : 1, "doc" : {"title" : "Crossbody Bag with Tassel", "price" : 19.85}}
-```
-
-The document id can also be missing, in which case an autogenerated one will be used:
-
-```
-{"index" : "products", "id" : 0, "doc" : {"title" : "Yellow bag"}}
-```
-
-It responds with an object in format:
-
-```
-{'_index':'products','_id':1,'created':true,'result':'created','status':201}
-```
-
-### Example
-
-```javascript
-import { IndexApi } from "manticoresearch-ts";
-
-const indexApi = new IndexApi();
-indexApi
-  .insert({
-    index: "products",
-    id: 1,
-    doc: { title: "Crossbody Bag with Tassel", price: 19.85 },
-  })
-  .then((res) => console.log(JSON.stringify(res, null, 2)));
-```
-
-### Parameters
-
-| Name                      | Type                                                  | Description | Notes |
-| ------------------------- | ----------------------------------------------------- | ----------- | ----- |
-| **insertDocumentRequest** | [**InsertDocumentRequest**](InsertDocumentRequest.md) |             |       |
-
-### Return type
-
-[**SuccessResponse**](SuccessResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: application/json
-- **Accept**: application/json
-
-## replace
-
-> SuccessResponse replace(insertDocumentRequest)
-
-Replace new document in an index
-
-Replace an existing document. Input has same format as `insert` operation. <br/>
-Responds with an object in format: <br/>
-
-```
-{'_index':'products','_id':1,'created':false,'result':'updated','status':200}
-```
-
-### Example
-
-```javascript
-import { IndexApi } from "manticoresearch-ts";
-
-const indexApi = new IndexApi();
-indexApi
-  .replace({
-    index: "products",
-    id: 1,
-    doc: { title: "document one", price: 10 },
-  })
-  .then((res) => console.log(JSON.stringify(res, null, 2)));
-```
-
-### Parameters
-
-| Name                      | Type                                                  | Description | Notes |
-| ------------------------- | ----------------------------------------------------- | ----------- | ----- |
-| **insertDocumentRequest** | [**InsertDocumentRequest**](InsertDocumentRequest.md) |             |       |
-
-### Return type
-
-[**SuccessResponse**](SuccessResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: application/json
-- **Accept**: application/json
-
-## update
-
-> UpdateResponse update(updateDocumentRequest)
-
-Update a document in an index
-
-Update one or several documents.
-The update can be made by passing the id or by using a match query in case multiple documents can be updated. For example update a document using document id:
-
-```
-{"index" : "products", "id" : 1, "doc" : {"price":10}}
-```
-
-And update by using a match query:
-
-```
-{{'index':'products','doc':"price":10},'query':{'bool':{'must':[{'query_string':'yellow bag'}]}}}
-```
-
-The match query has same syntax as for searching.
-Responds with an object that tells how many documents where updated in format:
-
-```
-{'_index':'products','updated':1}
-```
-
-### Example
-
-```javascript
-import { IndexApi } from "manticoresearch-ts";
-
-const indexApi = new IndexApi();
-indexApi
-  .update({ index: "products", id: 1, doc: { price: 10 } })
-  .then((res) => console.log(JSON.stringify(res, null, 2)));
-```
-
-### Parameters
-
-| Name                      | Type                                                  | Description | Notes |
-| ------------------------- | ----------------------------------------------------- | ----------- | ----- |
-| **updateDocumentRequest** | [**UpdateDocumentRequest**](UpdateDocumentRequest.md) |             |       |
-
-### Return type
-
-[**UpdateResponse**](UpdateResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: application/json
-- **Accept**: application/json
diff --git a/out/manticoresearch-typescript-actual/docs/SearchApi.md b/out/manticoresearch-typescript-actual/docs/SearchApi.md
deleted file mode 100644
index 0031d46..0000000
--- a/out/manticoresearch-typescript-actual/docs/SearchApi.md
+++ /dev/null
@@ -1,202 +0,0 @@
-# Manticoresearch.SearchApi
-
-All URIs are relative to *http://127.0.0.1:9308*
-
-| Method                                  | HTTP request                | Description                                   |
-| --------------------------------------- | --------------------------- | --------------------------------------------- |
-| [**search**](SearchApi.md#search)       | **POST** /search            | Performs a search on an index.                |
-| [**percolate**](SearchApi.md#percolate) | **POST** /pq/{index}/search | Perform a reverse search on a percolate index |
-
-## search
-
-> SearchResponse search(searchRequest)
-
-Performs a search on an index.
-
-The method expects a SearchRequest object with the following mandatory properties:
-
-- the name of the index to search | string
-
-For details, see the documentation on [**SearchRequest**](SearchRequest.md)
-
-The method returns an object with the following properties:
-
-- hits: an object with the following properties:
-  - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:
-    - \_id: the ID of the matched document.
-    - \_score: the score of the matched document.
-    - \_source: the source data of the matched document.
-  - total: the total number of hits found.
-- timed_out: a boolean indicating whether the query timed out.
-- took: the time taken to execute the search query.
-
-In addition, if profiling is enabled, the response will include an additional array with profiling information attached.
-
-Here is an example search response:
-
-```
-{
-  "hits":
-  {
-    "hits":
-    [
-      {
-        "_id":"1",
-        "_score":1,
-        "_source":{"title":"first find me fast","gid":11}
-      },
-      {
-        "_id":"2",
-        "_score":1,
-        "_source":{"title":"second find me fast","gid":12}
-      }
-    ],
-    "total":2
-  },
-  "profile":None,
-  "timed_out":False,
-  "took":0
-}
-```
-
-For more information about the match query syntax and additional parameters that can be added to request and response, please check: https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON.
-
-### Example
-
-```javascript
-import { searchApi } from "manticoresearch-ts";
-
-const searchApi = new SearchApi();
-searchApi
-  .search({ index: "test", query: { query_string: "find smth" } })
-  .then((res) => console.log(JSON.stringify(res, null, 2)));
-```
-
-### Parameters
-
-| Name              | Type                                  | Description | Notes |
-| ----------------- | ------------------------------------- | ----------- | ----- |
-| **searchRequest** | [**SearchRequest**](SearchRequest.md) |             |
-
-### Return type
-
-[**SearchResponse**](SearchResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: application/json
-- **Accept**: application/json
-
-## percolate
-
-> SearchResponse percolate(index, percolateRequest)
-
-Performs a reverse search on a percolate index. [[More info on percolate indexes in Manticore Search Manual]](https://manual.manticoresearch.com/Creating_a_table/Local_tables/Percolate_table#Percolate-table)
-
-This method must be used only on percolate indexes.
-
-Expects two parameters: the index name and an object with a document or an array of documents to search by.
-Here is an example of the object with a single document:
-
-```
-{
-  "query":
-  {
-    "percolate":
-    {
-      "document":
-      {
-        "content":"sample content"
-      }
-    }
-  }
-}
-```
-
-Responds with an object with matched stored queries:
-
-```
-{
-  "took":0,
-  "timed_out":false,
-  "hits":
-  {
-    "total":1,
-    "hits":
-    [
-      {
-        "_index":"products",
-        "_type":"doc",
-        "_id":"2811045522851233808",
-        "_score":"1",
-        "_source":
-        {
-          "query":
-          {
-            "ql":"@title bag"
-          }
-        },
-        "fields":{"_percolator_document_slot":[1]}
-      }
-    ]
-  }
-}
-```
-
-And here is an example of the object with multiple documents:
-
-```
-{
-  "query":
-  {
-    "percolate":
-    {
-      "documents": [
-        {
-          "content":"sample content"
-        },
-        {
-          "content":"another sample content"
-        }
-      ]
-    }
-  }
-}
-```
-
-### Example
-
-```javascript
-import { searchApi } from "manticoresearch-ts";
-
-const searchApi = new SearchApi();
-searchApi
-  .percolate("products", {
-    query: { percolate: { document: { title: "What a nice bag" } } },
-  })
-  .then((res) => console.log(JSON.stringify(res, null, 2)));
-```
-
-### Parameters
-
-| Name                 | Type                                        | Description                 | Notes |
-| -------------------- | ------------------------------------------- | --------------------------- | ----- |
-| **index**            | **String**                                  | Name of the percolate index |
-| **percolateRequest** | [**PercolateRequest**](PercolateRequest.md) |                             |
-
-### Return type
-
-[**SearchResponse**](SearchResponse.md)
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: application/json
-- **Accept**: application/json
diff --git a/out/manticoresearch-typescript-actual/docs/UtilsApi.md b/out/manticoresearch-typescript-actual/docs/UtilsApi.md
deleted file mode 100644
index 5046915..0000000
--- a/out/manticoresearch-typescript-actual/docs/UtilsApi.md
+++ /dev/null
@@ -1,52 +0,0 @@
-# Manticoresearch.UtilsApi
-
-All URIs are relative to *http://127.0.0.1:9308*
-
-| Method                     | HTTP request  | Description          |
-| -------------------------- | ------------- | -------------------- |
-| [**sql**](UtilsApi.md#sql) | **POST** /sql | Perform SQL requests |
-
-## sql
-
-> {String: Array} sql(body, opts)
-
-Perform SQL requests
-
-Run a query in SQL format.
-Expects a query string passed through `body` parameter and `opts` Object parameter that defines a format of response:
-
-- `opts` Object parameter can contain `{raw_response: false}` for Select only queries, e.g., `SELECT * FROM myindex`.
-- `opts` Object parameter can contain `{raw_response: true}` for any type of query (including Select qieries as well) , e.g., `SHOW TABLES`.
-  The query string must stay as it is, no URL encoding is needed.
-  The response object depends on the query executed. In select mode the response has same format as `/search` operation.
-
-### Example
-
-```javascript
-import { UtilsApi } from "manticoresearch-ts";
-
-const utilsApi = new UtilsApi();
-utilsApi
-  .sql("SHOW TABLES", true)
-  .then((res) => console.log(JSON.stringify(res, null, 2)));
-```
-
-### Parameters
-
-| Name     | Type       | Description                                                                                                                                                                                                                                                                                                               | Notes |
-| -------- | ---------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----- |
-| **body** | **String** | A query string.                                                                                                                                                                                                                                                                                                           |
-| **opts** | **Object** | Optional, expects to contain a boolean `raw_response` value that defines a format of response. `raw_response` can be set to false for Select only queries or can be set to true for any queries (including Select queries). if `opts` parameter is omitted it has the same effect as setting it to `{raw_response: true}` |
-
-### Return type
-
-**{String: Array}**
-
-### Authorization
-
-No authorization required
-
-### HTTP request headers
-
-- **Content-Type**: text/plain
-- **Accept**: application/json
diff --git a/out/manticoresearch-typescript-actual/package.json b/out/manticoresearch-typescript-actual/package.json
deleted file mode 100644
index e5e0862..0000000
--- a/out/manticoresearch-typescript-actual/package.json
+++ /dev/null
@@ -1,57 +0,0 @@
-{
-  "name": "manticoresearch-ts",
-  "version": "4.1.0",
-  "description": "Typescript client for Manticore Search",
-  "license": "MIT",
-  "main": "dist/index.js",
-  "module": "dist/index.mjs",
-  "types": "dist/index.d.ts",
-  "scripts": {
-    "build": "tsup",
-    "test": "cross-env TS_NODE_COMPILER_OPTIONS='{\"module\": \"commonjs\" }' mocha -r ts-node/register 'test/**/*.test.ts'",
-    "typecheck": "tsc --noEmit",
-    "prepare": "npm run build"
-  },
-  "exports": {
-    ".": {
-      "types": "./dist/index.d.ts",
-      "import": "./dist/index.mjs",
-      "require": "./dist/index.js"
-    },
-    "./package.json": "./package.json"
-  },
-  "files": [
-    "dist",
-    "package.json"
-  ],
-  "browser": {
-    "fs": false
-  },
-  "keywords": [
-    "manticoresearch",
-    "typescript",
-    "REST",
-    "search",
-    "client",
-    "index"
-  ],  
-  "peerDependencies": {
-    "typescript": ">=4.0"
-  },
-  "peerDependenciesMeta": {
-    "typescript": {
-      "optional": true
-    }
-  },  
-  "devDependencies": {
-    "@types/chai": "^4.3.9",
-    "@types/jest": "^29.5.6",
-    "@types/mocha": "^10.0.3",
-    "chai": "^4.3.10",
-    "cross-env": "^7.0.3",
-    "mocha": "^10.2.0",
-    "ts-node": "^10.9.1",
-    "tsup": "^7.2.0",
-    "typescript": "^4.0"
-  }
-}
diff --git a/out/manticoresearch-typescript-actual/src/apis/IndexApi.ts b/out/manticoresearch-typescript-actual/src/apis/IndexApi.ts
deleted file mode 100644
index 835ae0c..0000000
--- a/out/manticoresearch-typescript-actual/src/apis/IndexApi.ts
+++ /dev/null
@@ -1,223 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-
-import * as runtime from '../runtime';
-import type {
-  BulkResponse,
-  DeleteDocumentRequest,
-  DeleteResponse,
-  ErrorResponse,
-  InsertDocumentRequest,
-  SuccessResponse,
-  UpdateDocumentRequest,
-  UpdateResponse,
-} from '../models/index';
-
-export interface BulkRequest {
-  body: string;
-}
-
-export interface DeleteRequest {
-  deleteDocumentRequest: DeleteDocumentRequest;
-}
-
-export interface InsertRequest {
-  insertDocumentRequest: InsertDocumentRequest;
-}
-
-export interface ReplaceRequest {
-  insertDocumentRequest: InsertDocumentRequest;
-}
-
-export interface UpdateRequest {
-  updateDocumentRequest: UpdateDocumentRequest;
-}
-
-/**
- * 
- */
-export class IndexApi extends runtime.BaseAPI {
-
-  /**
-   * Sends multiple operatons like inserts, updates, replaces or deletes.  For each operation it\'s object must have same format as in their dedicated method.  The method expects a raw string as the batch in NDJSON.  Each operation object needs to be serialized to   JSON and separated by endline (\\n).      An example of raw input:      ```   {\"insert\": {\"index\": \"movies\", \"doc\": {\"plot\": \"A secret team goes to North Pole\", \"rating\": 9.5, \"language\": [2, 3], \"title\": \"This is an older movie\", \"lon\": 51.99, \"meta\": {\"keywords\":[\"travel\",\"ice\"],\"genre\":[\"adventure\"]}, \"year\": 1950, \"lat\": 60.4, \"advise\": \"PG-13\"}}}   \\n   {\"delete\": {\"index\": \"movies\",\"id\":700}}   ```      Responds with an object telling whenever any errors occured and an array with status for each operation:      ```   {     \'items\':     [       {         \'update\':{\'_index\':\'products\',\'_id\':1,\'result\':\'updated\'}       },       {         \'update\':{\'_index\':\'products\',\'_id\':2,\'result\':\'updated\'}       }     ],     \'errors\':false   }   ```   
-   * Bulk index operations
-   */
-  async bulkRaw(requestParameters: BulkRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BulkResponse>> {
-    if (requestParameters.body === null || requestParameters.body === undefined) {
-      throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling bulk.');
-    }
-
-    const queryParameters: any = {};
-
-    const headerParameters: runtime.HTTPHeaders = {};
-
-    headerParameters['Content-Type'] = 'application/x-ndjson';
-
-    const response = await this.request({
-      path: `/bulk`,
-      method: 'POST',
-      headers: headerParameters,
-      query: queryParameters,
-      body: requestParameters.body as any,
-    }, initOverrides);
-
-    return new runtime.JSONApiResponse(response);
-  }
-
-  /**
-   * Sends multiple operatons like inserts, updates, replaces or deletes.  For each operation it\'s object must have same format as in their dedicated method.  The method expects a raw string as the batch in NDJSON.  Each operation object needs to be serialized to   JSON and separated by endline (\\n).      An example of raw input:      ```   {\"insert\": {\"index\": \"movies\", \"doc\": {\"plot\": \"A secret team goes to North Pole\", \"rating\": 9.5, \"language\": [2, 3], \"title\": \"This is an older movie\", \"lon\": 51.99, \"meta\": {\"keywords\":[\"travel\",\"ice\"],\"genre\":[\"adventure\"]}, \"year\": 1950, \"lat\": 60.4, \"advise\": \"PG-13\"}}}   \\n   {\"delete\": {\"index\": \"movies\",\"id\":700}}   ```      Responds with an object telling whenever any errors occured and an array with status for each operation:      ```   {     \'items\':     [       {         \'update\':{\'_index\':\'products\',\'_id\':1,\'result\':\'updated\'}       },       {         \'update\':{\'_index\':\'products\',\'_id\':2,\'result\':\'updated\'}       }     ],     \'errors\':false   }   ```   
-   * Bulk index operations
-   */
-  async bulk(body: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BulkResponse> {
-    const response = await this.bulkRaw({ body: body }, initOverrides);
-    return await response.value();
-  }
-
-  /**
-   * Delete one or several documents. The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a  match query, in which case multiple documents can be delete . Example of input to delete by id:    ```   {\'index\':\'movies\',\'id\':100}   ```  Example of input to delete using a query:    ```   {     \'index\':\'movies\',     \'query\':     {       \'bool\':       {         \'must\':         [           {\'query_string\':\'new movie\'}         ]       }     }   }   ```  The match query has same syntax as in for searching. Responds with an object telling how many documents got deleted:     ```   {\'_index\':\'products\',\'updated\':1}   ``` 
-   * Delete a document in an index
-   */
-  async deleteRaw(requestParameters: DeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DeleteResponse>> {
-    if (requestParameters.deleteDocumentRequest === null || requestParameters.deleteDocumentRequest === undefined) {
-      throw new runtime.RequiredError('deleteDocumentRequest','Required parameter requestParameters.deleteDocumentRequest was null or undefined when calling delete.');
-    }
-
-    const queryParameters: any = {};
-
-    const headerParameters: runtime.HTTPHeaders = {};
-
-    headerParameters['Content-Type'] = 'application/json';
-
-    const response = await this.request({
-      path: `/delete`,
-      method: 'POST',
-      headers: headerParameters,
-      query: queryParameters,
-      body: requestParameters.deleteDocumentRequest,
-    }, initOverrides);
-
-    return new runtime.JSONApiResponse(response);
-  }
-
-  /**
-   * Delete one or several documents. The method has 2 ways of deleting: either by id, in case only one document is deleted or by using a  match query, in which case multiple documents can be delete . Example of input to delete by id:    ```   {\'index\':\'movies\',\'id\':100}   ```  Example of input to delete using a query:    ```   {     \'index\':\'movies\',     \'query\':     {       \'bool\':       {         \'must\':         [           {\'query_string\':\'new movie\'}         ]       }     }   }   ```  The match query has same syntax as in for searching. Responds with an object telling how many documents got deleted:     ```   {\'_index\':\'products\',\'updated\':1}   ``` 
-   * Delete a document in an index
-   */
-  async delete(deleteDocumentRequest: DeleteDocumentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DeleteResponse> {
-    const response = await this.deleteRaw({ deleteDocumentRequest: deleteDocumentRequest }, initOverrides);
-    return await response.value();
-  }
-
-  /**
-   * Insert a document.  Expects an object like:     ```   {     \'index\':\'movies\',     \'id\':701,     \'doc\':     {       \'title\':\'This is an old movie\',       \'plot\':\'A secret team goes to North Pole\',       \'year\':1950,       \'rating\':9.5,       \'lat\':60.4,       \'lon\':51.99,       \'advise\':\'PG-13\',       \'meta\':\'{\"keywords\":{\"travel\",\"ice\"},\"genre\":{\"adventure\"}}\',       \'language\':[2,3]     }   }   ```   The document id can also be missing, in which case an autogenerated one will be used:             ```   {     \'index\':\'movies\',     \'doc\':     {       \'title\':\'This is a new movie\',       \'plot\':\'A secret team goes to North Pole\',       \'year\':2020,       \'rating\':9.5,       \'lat\':60.4,       \'lon\':51.99,       \'advise\':\'PG-13\',       \'meta\':\'{\"keywords\":{\"travel\",\"ice\"},\"genre\":{\"adventure\"}}\',       \'language\':[2,3]     }   }   ```   It responds with an object in format:      ```   {\'_index\':\'products\',\'_id\':701,\'created\':true,\'result\':\'created\',\'status\':201}   ``` 
-   * Create a new document in an index
-   */
-  async insertRaw(requestParameters: InsertRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>> {
-    if (requestParameters.insertDocumentRequest === null || requestParameters.insertDocumentRequest === undefined) {
-      throw new runtime.RequiredError('insertDocumentRequest','Required parameter requestParameters.insertDocumentRequest was null or undefined when calling insert.');
-    }
-
-    const queryParameters: any = {};
-
-    const headerParameters: runtime.HTTPHeaders = {};
-
-    headerParameters['Content-Type'] = 'application/json';
-
-    const response = await this.request({
-      path: `/insert`,
-      method: 'POST',
-      headers: headerParameters,
-      query: queryParameters,
-      body: requestParameters.insertDocumentRequest,
-    }, initOverrides);
-
-    return new runtime.JSONApiResponse(response);
-  }
-
-  /**
-   * Insert a document.  Expects an object like:     ```   {     \'index\':\'movies\',     \'id\':701,     \'doc\':     {       \'title\':\'This is an old movie\',       \'plot\':\'A secret team goes to North Pole\',       \'year\':1950,       \'rating\':9.5,       \'lat\':60.4,       \'lon\':51.99,       \'advise\':\'PG-13\',       \'meta\':\'{\"keywords\":{\"travel\",\"ice\"},\"genre\":{\"adventure\"}}\',       \'language\':[2,3]     }   }   ```   The document id can also be missing, in which case an autogenerated one will be used:             ```   {     \'index\':\'movies\',     \'doc\':     {       \'title\':\'This is a new movie\',       \'plot\':\'A secret team goes to North Pole\',       \'year\':2020,       \'rating\':9.5,       \'lat\':60.4,       \'lon\':51.99,       \'advise\':\'PG-13\',       \'meta\':\'{\"keywords\":{\"travel\",\"ice\"},\"genre\":{\"adventure\"}}\',       \'language\':[2,3]     }   }   ```   It responds with an object in format:      ```   {\'_index\':\'products\',\'_id\':701,\'created\':true,\'result\':\'created\',\'status\':201}   ``` 
-   * Create a new document in an index
-   */
-  async insert(insertDocumentRequest: InsertDocumentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse> {
-    const response = await this.insertRaw({ insertDocumentRequest: insertDocumentRequest }, initOverrides);
-    return await response.value();
-  }
-
-  /**
-   * Replace an existing document. Input has same format as `insert` operation. <br/> Responds with an object in format: <br/>    ```   {\'_index\':\'products\',\'_id\':1,\'created\':false,\'result\':\'updated\',\'status\':200}   ``` 
-   * Replace new document in an index
-   */
-  async replaceRaw(requestParameters: ReplaceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>> {
-    if (requestParameters.insertDocumentRequest === null || requestParameters.insertDocumentRequest === undefined) {
-      throw new runtime.RequiredError('insertDocumentRequest','Required parameter requestParameters.insertDocumentRequest was null or undefined when calling replace.');
-    }
-
-    const queryParameters: any = {};
-
-    const headerParameters: runtime.HTTPHeaders = {};
-
-    headerParameters['Content-Type'] = 'application/json';
-
-    const response = await this.request({
-      path: `/replace`,
-      method: 'POST',
-      headers: headerParameters,
-      query: queryParameters,
-      body: requestParameters.insertDocumentRequest,
-    }, initOverrides);
-
-    return new runtime.JSONApiResponse(response);
-  }
-
-  /**
-   * Replace an existing document. Input has same format as `insert` operation. <br/> Responds with an object in format: <br/>    ```   {\'_index\':\'products\',\'_id\':1,\'created\':false,\'result\':\'updated\',\'status\':200}   ``` 
-   * Replace new document in an index
-   */
-  async replace(insertDocumentRequest: InsertDocumentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse> {
-    const response = await this.replaceRaw({ insertDocumentRequest: insertDocumentRequest }, initOverrides);
-    return await response.value();
-  }
-
-  /**
-   * Update one or several documents. The update can be made by passing the id or by using a match query in case multiple documents can be updated.  For example update a document using document id:    ```   {\'index\':\'movies\',\'doc\':{\'rating\':9.49},\'id\':100}   ```  And update by using a match query:    ```   {     \'index\':\'movies\',     \'doc\':{\'rating\':9.49},     \'query\':     {       \'bool\':       {         \'must\':         [           {\'query_string\':\'new movie\'}         ]       }     }   }   ```   The match query has same syntax as for searching. Responds with an object that tells how many documents where updated in format:     ```   {\'_index\':\'products\',\'updated\':1}   ``` 
-   * Update a document in an index
-   */
-  async updateRaw(requestParameters: UpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpdateResponse>> {
-    if (requestParameters.updateDocumentRequest === null || requestParameters.updateDocumentRequest === undefined) {
-      throw new runtime.RequiredError('updateDocumentRequest','Required parameter requestParameters.updateDocumentRequest was null or undefined when calling update.');
-    }
-
-    const queryParameters: any = {};
-
-    const headerParameters: runtime.HTTPHeaders = {};
-
-    headerParameters['Content-Type'] = 'application/json';
-
-    const response = await this.request({
-      path: `/update`,
-      method: 'POST',
-      headers: headerParameters,
-      query: queryParameters,
-      body: requestParameters.updateDocumentRequest,
-    }, initOverrides);
-
-    return new runtime.JSONApiResponse(response);
-  }
-
-  /**
-   * Update one or several documents. The update can be made by passing the id or by using a match query in case multiple documents can be updated.  For example update a document using document id:    ```   {\'index\':\'movies\',\'doc\':{\'rating\':9.49},\'id\':100}   ```  And update by using a match query:    ```   {     \'index\':\'movies\',     \'doc\':{\'rating\':9.49},     \'query\':     {       \'bool\':       {         \'must\':         [           {\'query_string\':\'new movie\'}         ]       }     }   }   ```   The match query has same syntax as for searching. Responds with an object that tells how many documents where updated in format:     ```   {\'_index\':\'products\',\'updated\':1}   ``` 
-   * Update a document in an index
-   */
-  async update(updateDocumentRequest: UpdateDocumentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdateResponse> {
-    const response = await this.updateRaw({ updateDocumentRequest: updateDocumentRequest }, initOverrides);
-    return await response.value();
-  }
-
-}
diff --git a/out/manticoresearch-typescript-actual/src/apis/SearchApi.ts b/out/manticoresearch-typescript-actual/src/apis/SearchApi.ts
deleted file mode 100644
index b3a7de0..0000000
--- a/out/manticoresearch-typescript-actual/src/apis/SearchApi.ts
+++ /dev/null
@@ -1,107 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-
-import * as runtime from '../runtime';
-import type {
-  ErrorResponse,
-  PercolateRequest,
-  SearchRequest,
-  SearchResponse,
-} from '../models/index';
-
-export interface PercolateOperationRequest {
-  index: string;
-  percolateRequest: PercolateRequest;
-}
-
-export interface SearchOperationRequest {
-  searchRequest: SearchRequest;
-}
-
-/**
- * 
- */
-export class SearchApi extends runtime.BaseAPI {
-
-  /**
-   * Performs a percolate search.  This method must be used only on percolate indexes.  Expects two parameters: the index name and an object with array of documents to be tested. An example of the documents object:    ```   {     \"query\":     {       \"percolate\":       {         \"document\":         {           \"content\":\"sample content\"         }       }     }   }   ```  Responds with an object with matched stored queries:     ```   {     \'timed_out\':false,     \'hits\':     {       \'total\':2,       \'max_score\':1,       \'hits\':       [         {           \'_index\':\'idx_pq_1\',           \'_type\':\'doc\',           \'_id\':\'2\',           \'_score\':\'1\',           \'_source\':           {             \'query\':             {               \'match\':{\'title\':\'some\'}             }           }         },         {           \'_index\':\'idx_pq_1\',           \'_type\':\'doc\',           \'_id\':\'5\',           \'_score\':\'1\',           \'_source\':           {             \'query\':             {               \'ql\':\'some | none\'             }           }         }       ]     }   }   ``` 
-   * Perform reverse search on a percolate index
-   */
-  async percolateRaw(requestParameters: PercolateOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SearchResponse>> {
-    if (requestParameters.index === null || requestParameters.index === undefined) {
-      throw new runtime.RequiredError('index','Required parameter requestParameters.index was null or undefined when calling percolate.');
-    }
-
-    if (requestParameters.percolateRequest === null || requestParameters.percolateRequest === undefined) {
-      throw new runtime.RequiredError('percolateRequest','Required parameter requestParameters.percolateRequest was null or undefined when calling percolate.');
-    }
-
-    const queryParameters: any = {};
-
-    const headerParameters: runtime.HTTPHeaders = {};
-
-    headerParameters['Content-Type'] = 'application/json';
-
-    const response = await this.request({
-      path: `/pq/{index}/search`.replace(`{${"index"}}`, encodeURIComponent(String(requestParameters.index))),
-      method: 'POST',
-      headers: headerParameters,
-      query: queryParameters,
-      body: requestParameters.percolateRequest,
-    }, initOverrides);
-
-    return new runtime.JSONApiResponse(response);
-  }
-
-  /**
-   * Performs a percolate search.  This method must be used only on percolate indexes.  Expects two parameters: the index name and an object with array of documents to be tested. An example of the documents object:    ```   {     \"query\":     {       \"percolate\":       {         \"document\":         {           \"content\":\"sample content\"         }       }     }   }   ```  Responds with an object with matched stored queries:     ```   {     \'timed_out\':false,     \'hits\':     {       \'total\':2,       \'max_score\':1,       \'hits\':       [         {           \'_index\':\'idx_pq_1\',           \'_type\':\'doc\',           \'_id\':\'2\',           \'_score\':\'1\',           \'_source\':           {             \'query\':             {               \'match\':{\'title\':\'some\'}             }           }         },         {           \'_index\':\'idx_pq_1\',           \'_type\':\'doc\',           \'_id\':\'5\',           \'_score\':\'1\',           \'_source\':           {             \'query\':             {               \'ql\':\'some | none\'             }           }         }       ]     }   }   ``` 
-   * Perform reverse search on a percolate index
-   */
-  async percolate(index: string, percolateRequest: PercolateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SearchResponse> {
-    const response = await this.percolateRaw({ index: index, percolateRequest: percolateRequest }, initOverrides);
-    return await response.value();
-  }
-
-  /**
-   *  The method expects an object with the following mandatory properties: * the name of the index to search * the match query object For details, see the documentation on [**SearchRequest**](SearchRequest.md) The method returns an object with the following properties: - took: the time taken to execute the search query. - timed_out: a boolean indicating whether the query timed out. - hits: an object with the following properties:    - total: the total number of hits found.    - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:      - _id: the ID of the matched document.      - _score: the score of the matched document.      - _source: the source data of the matched document.  In addition, if profiling is enabled, the response will include an additional array with profiling information attached. Here is an example search response:    ```   {     \'took\':10,     \'timed_out\':false,     \'hits\':     {       \'total\':2,       \'hits\':       [         {\'_id\':\'1\',\'_score\':1,\'_source\':{\'gid\':11}},         {\'_id\':\'2\',\'_score\':1,\'_source\':{\'gid\':12}}       ]     }   }   ```  For more information about the match query syntax and additional parameters that can be added to request and response, please see the documentation [here](https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON). 
-   * Performs a search on an index
-   */
-  async searchRaw(requestParameters: SearchOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SearchResponse>> {
-    if (requestParameters.searchRequest === null || requestParameters.searchRequest === undefined) {
-      throw new runtime.RequiredError('searchRequest','Required parameter requestParameters.searchRequest was null or undefined when calling search.');
-    }
-
-    const queryParameters: any = {};
-
-    const headerParameters: runtime.HTTPHeaders = {};
-
-    headerParameters['Content-Type'] = 'application/json';
-
-    const response = await this.request({
-      path: `/search`,
-      method: 'POST',
-      headers: headerParameters,
-      query: queryParameters,
-      body: requestParameters.searchRequest,
-    }, initOverrides);
-
-    return new runtime.JSONApiResponse(response);
-  }
-
-  /**
-   *  The method expects an object with the following mandatory properties: * the name of the index to search * the match query object For details, see the documentation on [**SearchRequest**](SearchRequest.md) The method returns an object with the following properties: - took: the time taken to execute the search query. - timed_out: a boolean indicating whether the query timed out. - hits: an object with the following properties:    - total: the total number of hits found.    - hits: an array of hit objects, where each hit object represents a matched document. Each hit object has the following properties:      - _id: the ID of the matched document.      - _score: the score of the matched document.      - _source: the source data of the matched document.  In addition, if profiling is enabled, the response will include an additional array with profiling information attached. Here is an example search response:    ```   {     \'took\':10,     \'timed_out\':false,     \'hits\':     {       \'total\':2,       \'hits\':       [         {\'_id\':\'1\',\'_score\':1,\'_source\':{\'gid\':11}},         {\'_id\':\'2\',\'_score\':1,\'_source\':{\'gid\':12}}       ]     }   }   ```  For more information about the match query syntax and additional parameters that can be added to request and response, please see the documentation [here](https://manual.manticoresearch.com/Searching/Full_text_matching/Basic_usage#HTTP-JSON). 
-   * Performs a search on an index
-   */
-  async search(searchRequest: SearchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SearchResponse> {
-    const response = await this.searchRaw({ searchRequest: searchRequest }, initOverrides);
-    return await response.value();
-  }
-
-}
diff --git a/out/manticoresearch-typescript-actual/src/apis/UtilsApi.ts b/out/manticoresearch-typescript-actual/src/apis/UtilsApi.ts
deleted file mode 100644
index 0c16819..0000000
--- a/out/manticoresearch-typescript-actual/src/apis/UtilsApi.ts
+++ /dev/null
@@ -1,65 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-
-import * as runtime from '../runtime';
-import type {
-  ErrorResponse,
-} from '../models/index';
-
-export interface SqlRequest {
-  body: string;
-  rawResponse?: boolean;
-}
-
-/**
- * 
- */
-export class UtilsApi extends runtime.BaseAPI {
-
-  /**
-   * Run a query in SQL format. Expects a query string passed through `body` parameter and optional `raw_response` parameter that defines a format of response. `raw_response` can be set to `False` for Select queries only, e.g., `SELECT * FROM myindex` The query string must stay as it is, no URL encoding is needed. The response object depends on the query executed. In select mode the response has same format as `/search` operation. 
-   * Perform SQL requests
-   */
-  async sqlRaw(requestParameters: SqlRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<object>>> {
-    if (requestParameters.body === null || requestParameters.body === undefined) {
-      throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling sql.');
-    }
-
-    const queryParameters: any = {};
-
-    if (requestParameters.rawResponse !== false) {
-      queryParameters['mode'] = 'raw'
-    }
-
-    const headerParameters: runtime.HTTPHeaders = {};
-
-    headerParameters['Content-Type'] = 'text/plain';
-
-    const response = await this.request({
-      path: `/sql`,
-      method: 'POST',
-      headers: headerParameters,
-      query: queryParameters,
-      body: 'query=' + encodeURIComponent(requestParameters.body)
-    }, initOverrides);
-
-    return new runtime.JSONApiResponse<any>(response);
-  }
-
-  /**
-   * Run a query in SQL format. Expects a query string passed through `body` parameter and optional `raw_response` parameter that defines a format of response. `raw_response` can be set to `False` for Select queries only, e.g., `SELECT * FROM myindex` The query string must stay as it is, no URL encoding is needed. The response object depends on the query executed. In select mode the response has same format as `/search` operation. 
-   * Perform SQL requests
-   */
-  async sql(body: string, rawResponse?: boolean, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<object>> {
-    const response = await this.sqlRaw({ body: body, rawResponse: rawResponse }, initOverrides);
-    return await response.value();
-  }
-
-}
diff --git a/out/manticoresearch-typescript-actual/src/apis/index.ts b/out/manticoresearch-typescript-actual/src/apis/index.ts
deleted file mode 100644
index af8e4cc..0000000
--- a/out/manticoresearch-typescript-actual/src/apis/index.ts
+++ /dev/null
@@ -1,5 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-export * from './IndexApi';
-export * from './SearchApi';
-export * from './UtilsApi';
diff --git a/out/manticoresearch-typescript-actual/src/index.ts b/out/manticoresearch-typescript-actual/src/index.ts
deleted file mode 100644
index bebe8bb..0000000
--- a/out/manticoresearch-typescript-actual/src/index.ts
+++ /dev/null
@@ -1,5 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-export * from './runtime';
-export * from './apis/index';
-export * from './models/index';
diff --git a/out/manticoresearch-typescript-actual/src/models/index.ts b/out/manticoresearch-typescript-actual/src/models/index.ts
deleted file mode 100644
index a173c6f..0000000
--- a/out/manticoresearch-typescript-actual/src/models/index.ts
+++ /dev/null
@@ -1,1245 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Aggregation Alias
- * @export
- * @interface Aggregation
- */
-export interface Aggregation {
-    /**
-     * 
-     * @type {AggregationTerms}
-     * @memberof Aggregation
-     */
-    terms?: AggregationTerms;
-    /**
-     * 
-     * @type {Array<{ [key: string]: AggregationSortInnerValue; }>}
-     * @memberof Aggregation
-     */
-    sort?: Array<{ [key: string]: AggregationSortInnerValue; }>;
-}
-/**
- * 
- * @export
- * @interface AggregationSortInnerValue
- */
-export interface AggregationSortInnerValue {
-    /**
-     * 
-     * @type {string}
-     * @memberof AggregationSortInnerValue
-     */
-    order?: string;
-}
-/**
- * 
- * @export
- * @interface AggregationTerms
- */
-export interface AggregationTerms {
-    /**
-     * Attribute Name to Aggregate
-     * @type {string}
-     * @memberof AggregationTerms
-     */
-    field?: string;
-    /**
-     * Maximum Number of Buckets in the Result
-     * @type {number}
-     * @memberof AggregationTerms
-     */
-    size?: number;
-}
-/**
- * Boolean attribute filter
- * @export
- * @interface BoolFilter
- */
-export interface BoolFilter {
-    /**
-     * 
-     * @type {Array<object>}
-     * @memberof BoolFilter
-     */
-    should?: Array<object>;
-    /**
-     * 
-     * @type {Array<object>}
-     * @memberof BoolFilter
-     */
-    must?: Array<object>;
-    /**
-     * 
-     * @type {Array<object>}
-     * @memberof BoolFilter
-     */
-    must_not?: Array<object>;
-}
-/**
- * Success bulk response
- * @export
- * @interface BulkResponse
- */
-export interface BulkResponse {
-    [key: string]: any | any;
-    /**
-     * 
-     * @type {object}
-     * @memberof BulkResponse
-     */
-    items?: object;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof BulkResponse
-     */
-    errors?: boolean;
-    /**
-     * 
-     * @type {string}
-     * @memberof BulkResponse
-     */
-    error?: string;
-}
-/**
- * Payload for delete request.
- * Documents can be deleted either one by one by specifying the document id or by providing a query object.
- * For more information see  [Delete API](https://manual.manticoresearch.com/Deleting_documents)
- * 
- * @export
- * @interface DeleteDocumentRequest
- */
-export interface DeleteDocumentRequest {
-    /**
-     * Index name
-     * @type {string}
-     * @memberof DeleteDocumentRequest
-     */
-    index: string;
-    /**
-     * cluster name
-     * @type {string}
-     * @memberof DeleteDocumentRequest
-     */
-    cluster?: string;
-    /**
-     * Document ID
-     * @type {number}
-     * @memberof DeleteDocumentRequest
-     */
-    id?: number;
-    /**
-     * Query tree object
-     * @type {object}
-     * @memberof DeleteDocumentRequest
-     */
-    query?: object;
-}
-/**
- * Success response
- * @export
- * @interface DeleteResponse
- */
-export interface DeleteResponse {
-    /**
-     * 
-     * @type {string}
-     * @memberof DeleteResponse
-     */
-    _index?: string;
-    /**
-     * 
-     * @type {number}
-     * @memberof DeleteResponse
-     */
-    deleted?: number;
-    /**
-     * 
-     * @type {number}
-     * @memberof DeleteResponse
-     */
-    _id?: number;
-    /**
-     * 
-     * @type {string}
-     * @memberof DeleteResponse
-     */
-    result?: string;
-}
-/**
- * Equals attribute filter
- * @export
- * @interface EqualsFilter
- */
-export interface EqualsFilter {
-    /**
-     * 
-     * @type {string}
-     * @memberof EqualsFilter
-     */
-    field: string;
-    /**
-     * 
-     * @type {object}
-     * @memberof EqualsFilter
-     */
-    value: object;
-}
-/**
- * Error response
- * @export
- * @interface ErrorResponse
- */
-export interface ErrorResponse {
-    /**
-     * 
-     * @type {{ [key: string]: any; }}
-     * @memberof ErrorResponse
-     */
-    error: { [key: string]: any; };
-    /**
-     * 
-     * @type {number}
-     * @memberof ErrorResponse
-     */
-    status: number;
-}
-/**
- * Query FACET expression
- * @export
- * @interface Facet
- */
-export interface Facet {
-    /**
-     * The name of an attribute to facet
-     * @type {string}
-     * @memberof Facet
-     */
-    attr: string;
-    /**
-     * Facet alias
-     * @type {string}
-     * @memberof Facet
-     */
-    alias?: string;
-    /**
-     * The number of facet values to return
-     * @type {number}
-     * @memberof Facet
-     */
-    limit?: number;
-}
-/**
- * Query filter
- * @export
- * @interface FilterBoolean
- */
-export interface FilterBoolean {
-    /**
-     * 
-     * @type {string}
-     * @memberof FilterBoolean
-     */
-    filter_field: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof FilterBoolean
-     */
-    operation: string;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof FilterBoolean
-     */
-    filter_value: boolean;
-}
-/**
- * Query filter
- * @export
- * @interface FilterNumber
- */
-export interface FilterNumber {
-    /**
-     * 
-     * @type {string}
-     * @memberof FilterNumber
-     */
-    filter_field: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof FilterNumber
-     */
-    operation: string;
-    /**
-     * 
-     * @type {number}
-     * @memberof FilterNumber
-     */
-    filter_value: number;
-}
-/**
- * Query filter
- * @export
- * @interface FilterString
- */
-export interface FilterString {
-    /**
-     * 
-     * @type {string}
-     * @memberof FilterString
-     */
-    filter_field: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof FilterString
-     */
-    operation: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof FilterString
-     */
-    filter_value: string;
-}
-/**
- * Geo distance attribute filter
- * @export
- * @interface GeoDistanceFilter
- */
-export interface GeoDistanceFilter {
-    /**
-     * 
-     * @type {GeoDistanceFilterLocationAnchor}
-     * @memberof GeoDistanceFilter
-     */
-    location_anchor?: GeoDistanceFilterLocationAnchor;
-    /**
-     * Attribute containing latitude and longitude data
-     * @type {string}
-     * @memberof GeoDistanceFilter
-     */
-    location_source?: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof GeoDistanceFilter
-     */
-    distance_type?: GeoDistanceFilterDistanceTypeEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof GeoDistanceFilter
-     */
-    distance?: string;
-}
-
-/**
-* @export
-* @enum {string}
-*/
-export enum GeoDistanceFilterDistanceTypeEnum {
-    adaptive = 'adaptive',
-    haversine = 'haversine'
-}
-
-/**
- * Geo pin point object
- * @export
- * @interface GeoDistanceFilterLocationAnchor
- */
-export interface GeoDistanceFilterLocationAnchor {
-    /**
-     * Geo latitude of pin point in degrees
-     * @type {number}
-     * @memberof GeoDistanceFilterLocationAnchor
-     */
-    lat?: number;
-    /**
-     * Geo longitude pf pin point in degrees
-     * @type {number}
-     * @memberof GeoDistanceFilterLocationAnchor
-     */
-    lon?: number;
-}
-/**
- * Query HIGHLIGHT expression
- * @export
- * @interface Highlight
- */
-export interface Highlight {
-    /**
-     * 
-     * @type {Array<string>}
-     * @memberof Highlight
-     */
-    fieldnames?: Array<string>;
-    /**
-     * 
-     * @type {Array<HighlightField>}
-     * @memberof Highlight
-     */
-    fields?: Array<HighlightField>;
-    /**
-     * 
-     * @type {string}
-     * @memberof Highlight
-     */
-    encoder?: HighlightEncoderEnum;
-    /**
-     * 
-     * @type {{ [key: string]: any; }}
-     * @memberof Highlight
-     */
-    highlight_query?: { [key: string]: any; } | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof Highlight
-     */
-    pre_tags?: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof Highlight
-     */
-    post_tags?: string;
-    /**
-     * 
-     * @type {number}
-     * @memberof Highlight
-     */
-    no_match_size?: HighlightNoMatchSizeEnum;
-    /**
-     * 
-     * @type {number}
-     * @memberof Highlight
-     */
-    fragment_size?: number;
-    /**
-     * 
-     * @type {number}
-     * @memberof Highlight
-     */
-    number_of_fragments?: number;
-    /**
-     * 
-     * @type {number}
-     * @memberof Highlight
-     */
-    limit?: number;
-    /**
-     * 
-     * @type {number}
-     * @memberof Highlight
-     */
-    limit_words?: number;
-    /**
-     * 
-     * @type {number}
-     * @memberof Highlight
-     */
-    limit_snippets?: number;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof Highlight
-     */
-    limits_per_field?: boolean;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof Highlight
-     */
-    use_boundaries?: boolean;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof Highlight
-     */
-    force_all_words?: boolean;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof Highlight
-     */
-    allow_empty?: boolean;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof Highlight
-     */
-    emit_zones?: boolean;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof Highlight
-     */
-    force_snippets?: boolean;
-    /**
-     * 
-     * @type {number}
-     * @memberof Highlight
-     */
-    around?: number;
-    /**
-     * 
-     * @type {number}
-     * @memberof Highlight
-     */
-    start_snippet_id?: number;
-    /**
-     * 
-     * @type {string}
-     * @memberof Highlight
-     */
-    html_strip_mode?: HighlightHtmlStripModeEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof Highlight
-     */
-    snippet_boundary?: HighlightSnippetBoundaryEnum;
-}
-
-/**
-* @export
-* @enum {string}
-*/
-export enum HighlightEncoderEnum {
-    default = 'default',
-    html = 'html'
-}
-/**
-* @export
-* @enum {string}
-*/
-export enum HighlightNoMatchSizeEnum {
-    NUMBER_0 = 0,
-    NUMBER_1 = 1
-}
-/**
-* @export
-* @enum {string}
-*/
-export enum HighlightHtmlStripModeEnum {
-    none = 'none',
-    strip = 'strip',
-    index = 'index',
-    retain = 'retain'
-}
-/**
-* @export
-* @enum {string}
-*/
-export enum HighlightSnippetBoundaryEnum {
-    sentence = 'sentence',
-    paragraph = 'paragraph',
-    zone = 'zone'
-}
-
-/**
- * Query Highlight field with options set
- * @export
- * @interface HighlightField
- */
-export interface HighlightField {
-    /**
-     * 
-     * @type {string}
-     * @memberof HighlightField
-     */
-    name: string;
-    /**
-     * 
-     * @type {number}
-     * @memberof HighlightField
-     */
-    limit?: number;
-    /**
-     * 
-     * @type {number}
-     * @memberof HighlightField
-     */
-    limit_words?: number;
-    /**
-     * 
-     * @type {number}
-     * @memberof HighlightField
-     */
-    limit_snippets?: number;
-}
-/**
- * In attribute filter
- * @export
- * @interface InFilter
- */
-export interface InFilter {
-    /**
-     * 
-     * @type {string}
-     * @memberof InFilter
-     */
-    field: string;
-    /**
-     * 
-     * @type {Array<object>}
-     * @memberof InFilter
-     */
-    values: Array<object>;
-}
-/**
- * Object with document data.
- * 
- * @export
- * @interface InsertDocumentRequest
- */
-export interface InsertDocumentRequest {
-    /**
-     * Name of the index
-     * @type {string}
-     * @memberof InsertDocumentRequest
-     */
-    index: string;
-    /**
-     * cluster name
-     * @type {string}
-     * @memberof InsertDocumentRequest
-     */
-    cluster?: string;
-    /**
-     * Document ID.
-     * 
-     * @type {number}
-     * @memberof InsertDocumentRequest
-     */
-    id?: number;
-    /**
-     * Object with document data
-     * 
-     * @type {{ [key: string]: any; }}
-     * @memberof InsertDocumentRequest
-     */
-    doc: { [key: string]: any; };
-}
-/**
- * Query match filter
- * @export
- * @interface MatchFilter
- */
-export interface MatchFilter {
-    /**
-     * 
-     * @type {string}
-     * @memberof MatchFilter
-     */
-    query_string: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof MatchFilter
-     */
-    query_fields: string;
-}
-/**
- * Query match expression with logical operator
- * @export
- * @interface MatchOp
- */
-export interface MatchOp {
-    /**
-     * 
-     * @type {object}
-     * @memberof MatchOp
-     */
-    query_info: object;
-}
-/**
- * Query match expression
- * @export
- * @interface MatchOpFilter
- */
-export interface MatchOpFilter {
-    /**
-     * 
-     * @type {string}
-     * @memberof MatchOpFilter
-     */
-    query_string: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof MatchOpFilter
-     */
-    query_fields: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof MatchOpFilter
-     */
-    operator: MatchOpFilterOperatorEnum;
-}
-
-/**
-* @export
-* @enum {string}
-*/
-export enum MatchOpFilterOperatorEnum {
-    or = 'or',
-    and = 'and'
-}
-
-/**
- * Query match expression
- * @export
- * @interface MatchPhraseFilter
- */
-export interface MatchPhraseFilter {
-    /**
-     * 
-     * @type {string}
-     * @memberof MatchPhraseFilter
-     */
-    query_phrase: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof MatchPhraseFilter
-     */
-    query_fields: string;
-}
-/**
- * Query filter
- * @export
- * @interface NotFilterBoolean
- */
-export interface NotFilterBoolean {
-    /**
-     * 
-     * @type {string}
-     * @memberof NotFilterBoolean
-     */
-    filter_field: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof NotFilterBoolean
-     */
-    operation: string;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof NotFilterBoolean
-     */
-    filter_value: boolean;
-}
-/**
- * Query filter
- * @export
- * @interface NotFilterNumber
- */
-export interface NotFilterNumber {
-    /**
-     * 
-     * @type {string}
-     * @memberof NotFilterNumber
-     */
-    filter_field: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof NotFilterNumber
-     */
-    operation: string;
-    /**
-     * 
-     * @type {number}
-     * @memberof NotFilterNumber
-     */
-    filter_value: number;
-}
-/**
- * Query filter
- * @export
- * @interface NotFilterString
- */
-export interface NotFilterString {
-    /**
-     * 
-     * @type {string}
-     * @memberof NotFilterString
-     */
-    filter_field: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof NotFilterString
-     */
-    operation: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof NotFilterString
-     */
-    filter_value: string;
-}
-/**
- * Object with documents to percolate
- * @export
- * @interface PercolateRequest
- */
-export interface PercolateRequest {
-    /**
-     * 
-     * @type {PercolateRequestQuery}
-     * @memberof PercolateRequest
-     */
-    query: PercolateRequestQuery;
-}
-/**
- * 
- * @export
- * @interface PercolateRequestQuery
- */
-export interface PercolateRequestQuery {
-    [key: string]: any | any;
-    /**
-     * 
-     * @type {object}
-     * @memberof PercolateRequestQuery
-     */
-    percolate: object;
-}
-/**
- * Query string filter
- * @export
- * @interface QueryFilter
- */
-export interface QueryFilter {
-    /**
-     * 
-     * @type {string}
-     * @memberof QueryFilter
-     */
-    query_string: string;
-}
-/**
- * Range attribute filter
- * @export
- * @interface RangeFilter
- */
-export interface RangeFilter {
-    /**
-     * 
-     * @type {string}
-     * @memberof RangeFilter
-     */
-    field: string;
-    /**
-     * 
-     * @type {number}
-     * @memberof RangeFilter
-     */
-    lte?: number | null;
-    /**
-     * 
-     * @type {number}
-     * @memberof RangeFilter
-     */
-    gte?: number | null;
-    /**
-     * 
-     * @type {number}
-     * @memberof RangeFilter
-     */
-    lt?: number | null;
-    /**
-     * 
-     * @type {number}
-     * @memberof RangeFilter
-     */
-    gt?: number | null;
-}
-/**
- * Request object for search operation
- * @export
- * @interface SearchRequest
- */
-export interface SearchRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof SearchRequest
-     */
-    index: string;
-    /**
-     * 
-     * @type {object}
-     * @memberof SearchRequest
-     */
-    query?: object;
-    /**
-     * 
-     * @type {object}
-     * @memberof SearchRequest
-     */
-    fulltext_filter?: object;
-    /**
-     * 
-     * @type {object}
-     * @memberof SearchRequest
-     */
-    attr_filter?: object;
-    /**
-     * 
-     * @type {number}
-     * @memberof SearchRequest
-     */
-    limit?: number;
-    /**
-     * 
-     * @type {number}
-     * @memberof SearchRequest
-     */
-    offset?: number;
-    /**
-     * 
-     * @type {number}
-     * @memberof SearchRequest
-     */
-    max_matches?: number;
-    /**
-     * 
-     * @type {Array<object>}
-     * @memberof SearchRequest
-     */
-    sort?: Array<object>;
-    /**
-     * 
-     * @type {{ [key: string]: Aggregation; }}
-     * @memberof SearchRequest
-     */
-    aggs?: { [key: string]: Aggregation; };
-    /**
-     * 
-     * @type {{ [key: string]: string; }}
-     * @memberof SearchRequest
-     */
-    expressions?: { [key: string]: string; };
-    /**
-     * 
-     * @type {Highlight}
-     * @memberof SearchRequest
-     */
-    highlight?: Highlight;
-    /**
-     * 
-     * @type {object}
-     * @memberof SearchRequest
-     */
-    source?: object;
-    /**
-     * 
-     * @type {{ [key: string]: any; }}
-     * @memberof SearchRequest
-     */
-    options?: { [key: string]: any; };
-    /**
-     * 
-     * @type {boolean}
-     * @memberof SearchRequest
-     */
-    profile?: boolean;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof SearchRequest
-     */
-    track_scores?: boolean;
-}
-/**
- * Response object of a search request
- * @export
- * @interface SearchResponse
- */
-export interface SearchResponse {
-    /**
-     * 
-     * @type {number}
-     * @memberof SearchResponse
-     */
-    took?: number;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof SearchResponse
-     */
-    timed_out?: boolean;
-    /**
-     * 
-     * @type {{ [key: string]: any; }}
-     * @memberof SearchResponse
-     */
-    aggregations?: { [key: string]: any; };
-    /**
-     * 
-     * @type {SearchResponseHits}
-     * @memberof SearchResponse
-     */
-    hits?: SearchResponseHits;
-    /**
-     * 
-     * @type {object}
-     * @memberof SearchResponse
-     */
-    profile?: object;
-    /**
-     * 
-     * @type {{ [key: string]: any; }}
-     * @memberof SearchResponse
-     */
-    warning?: { [key: string]: any; };
-}
-/**
- * 
- * @export
- * @interface SearchResponseHits
- */
-export interface SearchResponseHits {
-    /**
-     * 
-     * @type {number}
-     * @memberof SearchResponseHits
-     */
-    max_score?: number;
-    /**
-     * 
-     * @type {number}
-     * @memberof SearchResponseHits
-     */
-    total?: number;
-    /**
-     * 
-     * @type {string}
-     * @memberof SearchResponseHits
-     */
-    total_relation?: string;
-    /**
-     * 
-     * @type {Array<object>}
-     * @memberof SearchResponseHits
-     */
-    hits?: Array<object>;
-}
-/**
- * Query sort expression for MVA attributes
- * @export
- * @interface SortMVA
- */
-export interface SortMVA {
-    /**
-     * 
-     * @type {string}
-     * @memberof SortMVA
-     */
-    attr: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof SortMVA
-     */
-    order: SortMVAOrderEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof SortMVA
-     */
-    mode: SortMVAModeEnum;
-}
-
-/**
-* @export
-* @enum {string}
-*/
-export enum SortMVAOrderEnum {
-    asc = 'asc',
-    desc = 'desc'
-}
-/**
-* @export
-* @enum {string}
-*/
-export enum SortMVAModeEnum {
-    min = 'min',
-    max = 'max'
-}
-
-/**
- * Query sort expression for multiple attributes
- * @export
- * @interface SortMultiple
- */
-export interface SortMultiple {
-    /**
-     * 
-     * @type {{ [key: string]: any; }}
-     * @memberof SortMultiple
-     */
-    attrs: { [key: string]: any; };
-    /**
-     * 
-     * @type {boolean}
-     * @memberof SortMultiple
-     */
-    replace: boolean;
-}
-/**
- * Query sort expression
- * @export
- * @interface SortOrder
- */
-export interface SortOrder {
-    /**
-     * 
-     * @type {string}
-     * @memberof SortOrder
-     */
-    attr: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof SortOrder
-     */
-    order: SortOrderOrderEnum;
-}
-
-/**
-* @export
-* @enum {string}
-*/
-export enum SortOrderOrderEnum {
-    asc = 'asc',
-    desc = 'desc'
-}
-
-/**
- * Query fields to be included/excluded to/from response
- * @export
- * @interface SourceByRules
- */
-export interface SourceByRules {
-    /**
-     * 
-     * @type {Array<string>}
-     * @memberof SourceByRules
-     */
-    includes: Array<string>;
-    /**
-     * 
-     * @type {Array<string>}
-     * @memberof SourceByRules
-     */
-    excludes: Array<string>;
-}
-/**
- * Success response
- * @export
- * @interface SuccessResponse
- */
-export interface SuccessResponse {
-    /**
-     * 
-     * @type {string}
-     * @memberof SuccessResponse
-     */
-    _index?: string;
-    /**
-     * 
-     * @type {number}
-     * @memberof SuccessResponse
-     */
-    _id?: number;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof SuccessResponse
-     */
-    created?: boolean;
-    /**
-     * 
-     * @type {string}
-     * @memberof SuccessResponse
-     */
-    result?: string;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof SuccessResponse
-     */
-    found?: boolean;
-}
-/**
- * Payload for update document
- * @export
- * @interface UpdateDocumentRequest
- */
-export interface UpdateDocumentRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdateDocumentRequest
-     */
-    index: string;
-    /**
-     * Index name
-     * @type {{ [key: string]: any; }}
-     * @memberof UpdateDocumentRequest
-     */
-    doc: { [key: string]: any; };
-    /**
-     * Document ID
-     * @type {number}
-     * @memberof UpdateDocumentRequest
-     */
-    id?: number;
-    /**
-     * Query tree object
-     * @type {{ [key: string]: any; }}
-     * @memberof UpdateDocumentRequest
-     */
-    query?: { [key: string]: any; } | null;
-}
-/**
- * Success response
- * @export
- * @interface UpdateResponse
- */
-export interface UpdateResponse {
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdateResponse
-     */
-    _index?: string;
-    /**
-     * 
-     * @type {number}
-     * @memberof UpdateResponse
-     */
-    updated?: number;
-    /**
-     * 
-     * @type {number}
-     * @memberof UpdateResponse
-     */
-    _id?: number;
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdateResponse
-     */
-    result?: string;
-}
diff --git a/out/manticoresearch-typescript-actual/src/runtime.ts b/out/manticoresearch-typescript-actual/src/runtime.ts
deleted file mode 100644
index c075c14..0000000
--- a/out/manticoresearch-typescript-actual/src/runtime.ts
+++ /dev/null
@@ -1,416 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/*
- * Manticore Search Client
- * Copyright (c) 2020-2021, Manticore Software LTD (https://manticoresearch.com)
- *
- * All rights reserved
- */
-
-
-export const BASE_PATH = "http://127.0.0.1:9308".replace(/\/+$/, "");
-
-export interface ConfigurationParameters {
-    basePath?: string; // override base path
-    fetchApi?: FetchAPI; // override for fetch implementation
-    middleware?: Middleware[]; // middleware to apply before/after fetch requests
-    queryParamsStringify?: (params: HTTPQuery) => string; // stringify function for query strings
-    username?: string; // parameter for basic security
-    password?: string; // parameter for basic security
-    apiKey?: string | ((name: string) => string); // parameter for apiKey security
-    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string | Promise<string>); // parameter for oauth2 security
-    headers?: HTTPHeaders; //header params we want to use on every request
-    credentials?: RequestCredentials; //value for the credentials param we want to use on each request
-}
-
-export class Configuration {
-    constructor(private configuration: ConfigurationParameters = {}) {}
-
-    set config(configuration: Configuration) {
-        this.configuration = configuration;
-    }
-
-    get basePath(): string {
-        return this.configuration.basePath != null ? this.configuration.basePath : BASE_PATH;
-    }
-
-    get fetchApi(): FetchAPI | undefined {
-        return this.configuration.fetchApi;
-    }
-
-    get middleware(): Middleware[] {
-        return this.configuration.middleware || [];
-    }
-
-    get queryParamsStringify(): (params: HTTPQuery) => string {
-        return this.configuration.queryParamsStringify || querystring;
-    }
-
-    get username(): string | undefined {
-        return this.configuration.username;
-    }
-
-    get password(): string | undefined {
-        return this.configuration.password;
-    }
-
-    get apiKey(): ((name: string) => string) | undefined {
-        const apiKey = this.configuration.apiKey;
-        if (apiKey) {
-            return typeof apiKey === 'function' ? apiKey : () => apiKey;
-        }
-        return undefined;
-    }
-
-    get accessToken(): ((name?: string, scopes?: string[]) => string | Promise<string>) | undefined {
-        const accessToken = this.configuration.accessToken;
-        if (accessToken) {
-            return typeof accessToken === 'function' ? accessToken : async () => accessToken;
-        }
-        return undefined;
-    }
-
-    get headers(): HTTPHeaders | undefined {
-        return this.configuration.headers;
-    }
-
-    get credentials(): RequestCredentials | undefined {
-        return this.configuration.credentials;
-    }
-}
-
-export const DefaultConfig = new Configuration();
-
-/**
- * This is the base class for all generated API classes.
- */
-export class BaseAPI {
-
-    private static readonly jsonRegex = new RegExp('^(:?application\/json|[^;/ \t]+\/[^;/ \t]+[+]json)[ \t]*(:?;.*)?$', 'i');
-    private middleware: Middleware[];
-
-    constructor(protected configuration = DefaultConfig) {
-        this.middleware = configuration.middleware;
-    }
-
-    withMiddleware<T extends BaseAPI>(this: T, ...middlewares: Middleware[]) {
-        const next = this.clone<T>();
-        next.middleware = next.middleware.concat(...middlewares);
-        return next;
-    }
-
-    withPreMiddleware<T extends BaseAPI>(this: T, ...preMiddlewares: Array<Middleware['pre']>) {
-        const middlewares = preMiddlewares.map((pre) => ({ pre }));
-        return this.withMiddleware<T>(...middlewares);
-    }
-
-    withPostMiddleware<T extends BaseAPI>(this: T, ...postMiddlewares: Array<Middleware['post']>) {
-        const middlewares = postMiddlewares.map((post) => ({ post }));
-        return this.withMiddleware<T>(...middlewares);
-    }
-
-    /**
-     * Check if the given MIME is a JSON MIME.
-     * JSON MIME examples:
-     *   application/json
-     *   application/json; charset=UTF8
-     *   APPLICATION/JSON
-     *   application/vnd.company+json
-     * @param mime - MIME (Multipurpose Internet Mail Extensions)
-     * @return True if the given MIME is JSON, false otherwise.
-     */
-    protected isJsonMime(mime: string | null | undefined): boolean {
-        if (!mime) {
-            return false;
-        }
-        return BaseAPI.jsonRegex.test(mime);
-    }
-
-    protected async request(context: RequestOpts, initOverrides?: RequestInit | InitOverrideFunction): Promise<Response> {
-        const { url, init } = await this.createFetchParams(context, initOverrides);
-        const response = await this.fetchApi(url, init);
-        if (response && (response.status >= 200 && response.status < 300)) {
-            return response;
-        }
-        throw new ResponseError(response, 'Response returned an error code');
-    }
-
-    private async createFetchParams(context: RequestOpts, initOverrides?: RequestInit | InitOverrideFunction) {
-        let url = this.configuration.basePath + context.path;
-        if (context.query !== undefined && Object.keys(context.query).length !== 0) {
-            // only add the querystring to the URL if there are query parameters.
-            // this is done to avoid urls ending with a "?" character which buggy webservers
-            // do not handle correctly sometimes.
-            url += '?' + this.configuration.queryParamsStringify(context.query);
-        }
-
-        const headers = Object.assign({}, this.configuration.headers, context.headers);
-        Object.keys(headers).forEach(key => headers[key] === undefined ? delete headers[key] : {});
-
-        const initOverrideFn =
-            typeof initOverrides === "function"
-                ? initOverrides
-                : async () => initOverrides;
-
-        const initParams = {
-            method: context.method,
-            headers,
-            body: context.body,
-            credentials: this.configuration.credentials,
-        };
-
-        const overriddenInit: RequestInit = {
-            ...initParams,
-            ...(await initOverrideFn({
-                init: initParams,
-                context,
-            }))
-        };
-
-        let body: any;
-        if (isFormData(overriddenInit.body)
-            || (overriddenInit.body instanceof URLSearchParams)
-            || isBlob(overriddenInit.body)) {
-          body = overriddenInit.body;
-        } else if (this.isJsonMime(headers['Content-Type'])) {
-          body = JSON.stringify(overriddenInit.body);
-        } else {
-          body = overriddenInit.body;
-        }
-
-        const init: RequestInit = {
-            ...overriddenInit,
-            body
-        };
-
-        return { url, init };
-    }
-
-    private fetchApi = async (url: string, init: RequestInit) => {
-        let fetchParams = { url, init };
-        for (const middleware of this.middleware) {
-            if (middleware.pre) {
-                fetchParams = await middleware.pre({
-                    fetch: this.fetchApi,
-                    ...fetchParams,
-                }) || fetchParams;
-            }
-        }
-        let response: Response | undefined = undefined;
-        try {
-            response = await (this.configuration.fetchApi || fetch)(fetchParams.url, fetchParams.init);
-        } catch (e) {
-            for (const middleware of this.middleware) {
-                if (middleware.onError) {
-                    response = await middleware.onError({
-                        fetch: this.fetchApi,
-                        url: fetchParams.url,
-                        init: fetchParams.init,
-                        error: e,
-                        response: response ? response.clone() : undefined,
-                    }) || response;
-                }
-            }
-            if (response === undefined) {
-              if (e instanceof Error) {
-                throw new FetchError(e, 'The request failed and the interceptors did not return an alternative response');
-              } else {
-                throw e;
-              }
-            }
-        }
-        for (const middleware of this.middleware) {
-            if (middleware.post) {
-                response = await middleware.post({
-                    fetch: this.fetchApi,
-                    url: fetchParams.url,
-                    init: fetchParams.init,
-                    response: response.clone(),
-                }) || response;
-            }
-        }
-        return response;
-    }
-
-    /**
-     * Create a shallow clone of `this` by constructing a new instance
-     * and then shallow cloning data members.
-     */
-    private clone<T extends BaseAPI>(this: T): T {
-        const constructor = this.constructor as any;
-        const next = new constructor(this.configuration);
-        next.middleware = this.middleware.slice();
-        return next;
-    }
-};
-
-function isBlob(value: any): value is Blob {
-    return typeof Blob !== 'undefined' && value instanceof Blob;
-}
-
-function isFormData(value: any): value is FormData {
-    return typeof FormData !== "undefined" && value instanceof FormData;
-}
-
-export class ResponseError extends Error {
-    override name: "ResponseError" = "ResponseError";
-    constructor(public response: Response, msg?: string) {
-        super(msg);
-    }
-}
-
-export class FetchError extends Error {
-    override name: "FetchError" = "FetchError";
-    constructor(public cause: Error, msg?: string) {
-        super(msg);
-    }
-}
-
-export class RequiredError extends Error {
-    override name: "RequiredError" = "RequiredError";
-    constructor(public field: string, msg?: string) {
-        super(msg);
-    }
-}
-
-export const COLLECTION_FORMATS = {
-    csv: ",",
-    ssv: " ",
-    tsv: "\t",
-    pipes: "|",
-};
-
-export type FetchAPI = WindowOrWorkerGlobalScope['fetch'];
-
-export type Json = any;
-export type HTTPMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS' | 'HEAD';
-export type HTTPHeaders = { [key: string]: string };
-export type HTTPQuery = { [key: string]: string | number | null | boolean | Array<string | number | null | boolean> | Set<string | number | null | boolean> | HTTPQuery };
-export type HTTPBody = Json | FormData | URLSearchParams;
-export type HTTPRequestInit = { headers?: HTTPHeaders; method: HTTPMethod; credentials?: RequestCredentials; body?: HTTPBody };
-export type ModelPropertyNaming = 'camelCase' | 'snake_case' | 'PascalCase' | 'original';
-
-export type InitOverrideFunction = (requestContext: { init: HTTPRequestInit, context: RequestOpts }) => Promise<RequestInit>
-
-export interface FetchParams {
-    url: string;
-    init: RequestInit;
-}
-
-export interface RequestOpts {
-    path: string;
-    method: HTTPMethod;
-    headers: HTTPHeaders;
-    query?: HTTPQuery;
-    body?: HTTPBody;
-}
-
-
-export function querystring(params: HTTPQuery, prefix: string = ''): string {
-    return Object.keys(params)
-        .map(key => querystringSingleKey(key, params[key], prefix))
-        .filter(part => part.length > 0)
-        .join('&');
-}
-
-function querystringSingleKey(key: string, value: string | number | null | undefined | boolean | Array<string | number | null | boolean> | Set<string | number | null | boolean> | HTTPQuery, keyPrefix: string = ''): string {
-    const fullKey = keyPrefix + (keyPrefix.length ? `[${key}]` : key);
-    if (value instanceof Array) {
-        const multiValue = value.map(singleValue => encodeURIComponent(String(singleValue)))
-            .join(`&${encodeURIComponent(fullKey)}=`);
-        return `${encodeURIComponent(fullKey)}=${multiValue}`;
-    }
-    if (value instanceof Set) {
-        const valueAsArray = Array.from(value);
-        return querystringSingleKey(key, valueAsArray, keyPrefix);
-    }
-    if (value instanceof Date) {
-        return `${encodeURIComponent(fullKey)}=${encodeURIComponent(value.toISOString())}`;
-    }
-    if (value instanceof Object) {
-        return querystring(value as HTTPQuery, fullKey);
-    }
-    return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;
-}
-
-
-export function canConsumeForm(consumes: Consume[]): boolean {
-    for (const consume of consumes) {
-        if ('multipart/form-data' === consume.contentType) {
-            return true;
-        }
-    }
-    return false;
-}
-
-export interface Consume {
-    contentType: string;
-}
-
-export interface RequestContext {
-    fetch: FetchAPI;
-    url: string;
-    init: RequestInit;
-}
-
-export interface ResponseContext {
-    fetch: FetchAPI;
-    url: string;
-    init: RequestInit;
-    response: Response;
-}
-
-export interface ErrorContext {
-    fetch: FetchAPI;
-    url: string;
-    init: RequestInit;
-    error: unknown;
-    response?: Response;
-}
-
-export interface Middleware {
-    pre?(context: RequestContext): Promise<FetchParams | void>;
-    post?(context: ResponseContext): Promise<Response | void>;
-    onError?(context: ErrorContext): Promise<Response | void>;
-}
-
-export interface ApiResponse<T> {
-    raw: Response;
-    value(): Promise<T>;
-}
-
-export interface ResponseTransformer<T> {
-    (json: any): T;
-}
-
-export class JSONApiResponse<T> {
-    constructor(public raw: Response, private transformer: ResponseTransformer<T> = (jsonValue: any) => jsonValue) {}
-
-    async value(): Promise<T> {
-        return this.transformer(await this.raw.json());
-    }
-}
-
-export class VoidApiResponse {
-    constructor(public raw: Response) {}
-
-    async value(): Promise<void> {
-        return undefined;
-    }
-}
-
-export class BlobApiResponse {
-    constructor(public raw: Response) {}
-
-    async value(): Promise<Blob> {
-        return await this.raw.blob();
-    };
-}
-
-export class TextApiResponse {
-    constructor(public raw: Response) {}
-
-    async value(): Promise<string> {
-        return await this.raw.text();
-    };
-}
diff --git a/out/manticoresearch-typescript-actual/test/manual.test.ts b/out/manticoresearch-typescript-actual/test/manual.test.ts
deleted file mode 100644
index 26faa37..0000000
--- a/out/manticoresearch-typescript-actual/test/manual.test.ts
+++ /dev/null
@@ -1,282 +0,0 @@
-import { assert, expect } from 'chai';
-import * as Manticoresearch from '../src';
-
-var indexApi: Manticoresearch.IndexApi;
-var searchApi: Manticoresearch.SearchApi;
-var utilsApi: Manticoresearch.UtilsApi;
-
-beforeEach(function () {
-  const config = new Manticoresearch.Configuration({
-    basePath: "http://localhost:9408",
-  });
-  indexApi = new Manticoresearch.IndexApi(config);
-  searchApi = new Manticoresearch.SearchApi(config);
-  utilsApi = new Manticoresearch.UtilsApi(config);
-});
-
-describe('Utils Api Tests', () => {
-  it('Testing utils api operations', async function () {
-    try {
-      let expected: object = [{ total: 0, error: '', warning: '' }];
-      let res = await utilsApi.sql('DROP TABLE IF EXISTS test');
-      expect(res).to.deep.equal(expected);
-      res = await utilsApi.sql(
-        'CREATE TABLE IF NOT EXISTS test (content text, name string, cat int)'
-      );
-      expect(res).to.deep.equal(expected);
-
-      res = await utilsApi.sql('SHOW TABLES', true);
-      expect(res[0]).to.include({ total: 1 });
-      res = await utilsApi.sql('SELECT * FROM test', false);
-      expect(res).to.deep.nested.property('hits.total', 0);
-    } catch (e) {
-      const errorResponse = e instanceof Manticoresearch.ResponseError ? await e.response.json() : e;
-      console.error('Error response:', JSON.stringify(errorResponse, null, 2));
-      expect(e).to.be.null;
-    }
-  });
-});
-
-describe('Index API Tests', () => {
-  it('Testing index api operations', async function () {
-    try {
-      await utilsApi.sql('TRUNCATE TABLE test');
-
-      let res = await indexApi.insert({
-        index: 'test',
-        id: 1,
-        doc: { content: 'Text 1', name: 'Doc 1', cat: 1 },
-      });
-      expect(res).to.include({ _id: 1, result: 'created' });
-
-      res = await indexApi.insert({
-        index: 'test',
-        id: 2,
-        doc: { content: 'Text 2', name: 'Doc 2', cat: 2 },
-      });
-      res = await indexApi.insert({
-        index: 'test',
-        id: 3,
-        doc: { content: 'Text 3', name: 'Doc 3', cat: 7 },
-      });
-
-      res = await indexApi.replace({
-        index: 'test',
-        id: 2,
-        doc: { content: 'Text21', cat: 3 },
-      });
-      expect(res).to.include({ _id: 2, result: 'updated' });
-      let testRes = await utilsApi.sql('SELECT * FROM test WHERE id=2', false);
-      expect(testRes).to.deep.nested.property('hits.hits[0]._source', {
-        content: 'Text21',
-        cat: 3,
-        name: '',
-      });
-
-      let insertDocs = [
-        {
-          insert: {
-            index: 'test',
-            id: 4,
-            doc: { content: 'Text 4', cat: 1, name: 'Doc 4' },
-          },
-        },
-        {
-          insert: {
-            index: 'test',
-            id: 5,
-            doc: { content: 'Text 5', cat: 9, name: 'Doc 5' },
-          },
-        },
-        {
-          insert: {
-            index: 'test',
-            id: 6,
-            doc: { content: 'Text 6', cat: 7, name: 'Doc 6' },
-          },
-        },
-      ];
-
-      let bulkRes = await indexApi.bulk(
-        insertDocs.map((e) => JSON.stringify(e)).join("\n")
-      );
-      expect(bulkRes).to.property("errors", false);
-
-      res = await indexApi.update({ index: "test", id: 1, doc: { cat: 10 } });
-      expect(res).to.include({ _id: 1, result: "updated" });
-
-      let updateDocs = [
-        {
-          update: {
-            index: "test",
-            doc: { cat: 10 },
-            query: { equals: { cat: 7 } },
-          },
-        },
-        {
-          update: {
-            index: "test",
-            doc: { cat: 10 },
-            query: { equals: { cat: 9 } },
-          },
-        },
-      ];
-
-      bulkRes = await indexApi.bulk(
-        updateDocs.map((e) => JSON.stringify(e)).join('\n')
-      );
-
-      testRes = await utilsApi.sql(
-        'SELECT COUNT(*) FROM test WHERE cat=10',
-        false
-      );
-      expect(testRes).to.deep.nested.property('hits.hits[0]._source', {
-        'count(*)': 4,
-      });
-
-      res = await indexApi.delete({ index: 'test', id: 1 });
-      expect(res).to.include({ _id: 1, result: 'deleted' });
-
-      res = await indexApi.delete({
-        index: 'test',
-        query: { match: { '*': 'Text21' } },
-      });
-      expect(res).to.property('deleted', 1);
-    } catch (e) {
-      const errorResponse = e instanceof Manticoresearch.ResponseError ? await e.response.json() : e;
-      console.error('Error response:', JSON.stringify(errorResponse, null, 2));
-      expect(e).to.be.null;
-    }
-  });
-});
-
-describe('Search Api Tests', () => {
-  it('Testing search api operations', async function () {
-    try {
-      await utilsApi.sql('TRUNCATE TABLE test');
-      let insertDocs = [
-        {
-          insert: {
-            index: 'test',
-            id: 1,
-            doc: { content: 'Text 1', cat: 1, name: 'Doc 1' },
-          },
-        },
-        {
-          insert: {
-            index: 'test',
-            id: 2,
-            doc: { content: 'Text 2', cat: 5, name: 'Doc 2' },
-          },
-        },
-        {
-          insert: {
-            index: 'test',
-            id: 3,
-            doc: { content: 'Text 3', cat: 10, name: 'Doc 3' },
-          },
-        },
-        {
-          insert: {
-            index: 'test',
-            id: 4,
-            doc: { content: 'Text 4', cat: 7, name: 'Doc 4' },
-          },
-        },
-        {
-          insert: {
-            index: 'test',
-            id: 5,
-            doc: { content: 'Text 5', cat: 8, name: 'Doc 5' },
-          },
-        },
-      ];
-      await indexApi.bulk(insertDocs.map((e) => JSON.stringify(e)).join('\n'));
-
-      let res = await searchApi.search({
-        index: 'test',
-        query: { match_all: {} },
-      });
-      expect(res).to.deep.nested.property('hits.total', 5);
-
-      res = await searchApi.search({
-        index: 'test',
-        query: { match_all: {} },
-        options: { cutoff: 1 },
-      });
-      expect(res).to.deep.nested.property('hits.total', 1);
-
-      res = await searchApi.search({
-        index: 'test',
-        query: {
-          match_all: {},
-          bool: { should: [{ equals: { cat: 1 } }, { in: { cat: [5, 10] } }] },
-        },
-        sort: [{ cat: 'desc' }],
-      });
-      expect(res).to.deep.nested.property('hits.total', 3);
-
-      res = await searchApi.search({
-        index: 'test',
-        query: {
-          match_all: {},
-          bool: { should: [{ equals: { cat: 2 } }, { in: { cat: [3, 4] } }] },
-        },
-        sort: [{ cat: 'desc' }],
-      });
-      expect(res).to.deep.nested.property('hits.total', 0);
-    } catch (e) {
-      const errorResponse = e instanceof Manticoresearch.ResponseError ? await e.response.json() : e;
-      console.error('Error response:', JSON.stringify(errorResponse, null, 2));
-      expect(e).to.be.null;
-    }
-  });
-  it('Testing search aggregation', async function () {
-    try {
-      const query: Manticoresearch.SearchRequest = {
-        index: 'test',
-        query: {
-          match_all: {},
-        },
-        aggs: {
-          categories: {
-            terms: {
-              field: 'cat',
-              size: 3
-            }
-          }
-        }
-      };
-
-      const result = await searchApi.search(query);
-      expect(result).to.have.nested.property('aggregations.categories.buckets');
-      expect(result.aggregations!.categories.buckets).to.have.lengthOf(3)
-    } catch (err) {
-      const errorResponse = err instanceof Manticoresearch.ResponseError ? await err.response.json() : err;
-      console.error('Error response:', JSON.stringify(errorResponse, null, 2));
-      expect(err).to.be.null;
-    }
-  });
-  it('Testing search expressions', async function () {
-    try {
-      const query: Manticoresearch.SearchRequest = {
-        index: 'test',
-        query: {
-          match_all: {},
-        },
-        expressions: {
-          title_len: 'crc32(name)'
-        }
-      };
-
-      const result = await searchApi.search(query);
-      expect(result).to.have.nested.property('hits.hits[0]._source.title_len')
-      expect((result.hits!.hits?.at(0) as any)._source!.name).to.equal('Doc 1')
-      expect((result.hits!.hits?.at(0) as any)._source!.title_len).to.equal(2262810400) // === crc32("Doc 1")
-    } catch (err) {
-      const errorResponse = err instanceof Manticoresearch.ResponseError ? await err.response.json() : err;
-      console.error('Error response:', JSON.stringify(errorResponse, null, 2));
-      expect(err).to.be.null;
-    }
-  });
-});
diff --git a/out/manticoresearch-typescript-actual/tsconfig.json b/out/manticoresearch-typescript-actual/tsconfig.json
deleted file mode 100644
index d266ab3..0000000
--- a/out/manticoresearch-typescript-actual/tsconfig.json
+++ /dev/null
@@ -1,30 +0,0 @@
-{
-  "compilerOptions": {
-    "declaration": true,
-    "target": "ES2020",
-    "strict": true,
-    "module": "Node16",
-    "moduleResolution": "nodenext",
-    "outDir": "dist",
-    "lib": [
-      "DOM",
-      "DOM.Iterable",
-      "ES2020"
-    ],
-    "noEmit": true, // TSUP takes care of emitting js for us, in a MUCH faster way
-    "allowSyntheticDefaultImports": true,
-    "esModuleInterop": true,
-    "forceConsistentCasingInFileNames": true,
-    "skipLibCheck": true,
-    "useDefineForClassFields": true
-  },
-  "include": [
-    "src",
-    "tsup.config.ts",
-    "test"
-  ],
-  "exclude": [
-    "dist",
-    "node_modules"
-  ]
-}
diff --git a/out/manticoresearch-typescript-actual/tsup.config.ts b/out/manticoresearch-typescript-actual/tsup.config.ts
deleted file mode 100644
index 689d511..0000000
--- a/out/manticoresearch-typescript-actual/tsup.config.ts
+++ /dev/null
@@ -1,13 +0,0 @@
-import { defineConfig } from 'tsup';
-
-export default defineConfig((opts) => ({
-  entryPoints: ['src/index.ts'],
-  splitting: true,
-  format: ['esm', 'cjs'],
-  dts: true,
-  clean: !opts.watch,
-  sourcemap: true,
-  minify: true,
-  outDir: 'dist',
-  target: 'es2020',
-}));
\ No newline at end of file
diff --git a/patches/python_bulk.patch b/patches/python_bulk.patch
index ec2312b..7e8dce2 100755
--- a/patches/python_bulk.patch
+++ b/patches/python_bulk.patch
@@ -2,12 +2,9 @@ diff --git a/out/manticoresearch-python/manticoresearch/rest.py b/out/manticores
 index a470462..325cb83 100644
 --- a/out/manticoresearch-python/manticoresearch/rest.py
 +++ b/out/manticoresearch-python/manticoresearch/rest.py
-@@ -157,7 +157,7 @@ class RESTClientObject(object):
-             if method in ['POST', 'PUT', 'PATCH', 'OPTIONS', 'DELETE']:
-                 if query_params:
-                     url += '?' + urlencode(query_params)
--                if re.search('json', headers['Content-Type'], re.IGNORECASE):
-+                if headers['Content-Type'] == 'application/json':
-                     request_body = None
-                     if body is not None:
-                         request_body = json.dumps(body)
+@@ -178,5 +178,5 @@ class RESTClientObject:
+                content_type = headers.get('Content-Type')
+                if (
+                    not content_type
+-                   or re.search('json', content_type, re.IGNORECASE)
++                   or headers['Content-Type'] == 'application/json'
diff --git a/templates/Javascript/package.mustache b/templates/Javascript/package.mustache
index 55c33f6..2e8feef 100755
--- a/templates/Javascript/package.mustache
+++ b/templates/Javascript/package.mustache
@@ -3,7 +3,7 @@
   "name": "{{{projectName}}}-dev",
   "version": "{{{projectVersion}}}-dev",
 {{/devBranch}}
-{{^#devBranch}}
+{{^devBranch}}
   "name": "{{{projectName}}}",
   "version": "{{{projectVersion}}}",
 {{/devBranch}}  
