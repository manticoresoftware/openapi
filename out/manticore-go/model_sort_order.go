/*
Manticore Search Client

Ð¡lient for Manticore Search. 

API version: 3.3.1
Contact: info@manticoresearch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SortOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SortOrder{}

// SortOrder Query sort expression
type SortOrder struct {
	Attr string `json:"attr"`
	Order string `json:"order"`
}

type _SortOrder SortOrder

// NewSortOrder instantiates a new SortOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSortOrder(attr string, order string) *SortOrder {
	this := SortOrder{}
	this.Attr = attr
	this.Order = order
	return &this
}

// NewSortOrderWithDefaults instantiates a new SortOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSortOrderWithDefaults() *SortOrder {
	this := SortOrder{}
	return &this
}

// GetAttr returns the Attr field value
func (o *SortOrder) GetAttr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Attr
}

// GetAttrOk returns a tuple with the Attr field value
// and a boolean to check if the value has been set.
func (o *SortOrder) GetAttrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attr, true
}

// SetAttr sets field value
func (o *SortOrder) SetAttr(v string) {
	o.Attr = v
}

// GetOrder returns the Order field value
func (o *SortOrder) GetOrder() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Order
}

// GetOrderOk returns a tuple with the Order field value
// and a boolean to check if the value has been set.
func (o *SortOrder) GetOrderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Order, true
}

// SetOrder sets field value
func (o *SortOrder) SetOrder(v string) {
	o.Order = v
}

func (o SortOrder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SortOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attr"] = o.Attr
	toSerialize["order"] = o.Order
	return toSerialize, nil
}

func (o *SortOrder) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attr",
		"order",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSortOrder := _SortOrder{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSortOrder)

	if err != nil {
		return err
	}

	*o = SortOrder(varSortOrder)

	return err
}

type NullableSortOrder struct {
	value *SortOrder
	isSet bool
}

func (v NullableSortOrder) Get() *SortOrder {
	return v.value
}

func (v *NullableSortOrder) Set(val *SortOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableSortOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableSortOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSortOrder(val *SortOrder) *NullableSortOrder {
	return &NullableSortOrder{value: val, isSet: true}
}

func (v NullableSortOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSortOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


