/*
 * Manticore Search Client
 *
 * Ð¡lient for Manticore Search. 
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: info@manticoresearch.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Aggregation {
    #[serde(rename = "terms", skip_serializing_if = "Option::is_none")]
    pub terms: Option<Box<crate::models::AggTerms>>,
    #[serde(rename = "sort", skip_serializing_if = "Option::is_none")]
    pub sort: Option<Vec<serde_json::Value>>,
    #[serde(rename = "composite", skip_serializing_if = "Option::is_none")]
    pub composite: Option<Box<crate::models::AggComposite>>,
}

impl Aggregation {
    pub fn new() -> Aggregation {
        Aggregation {
            terms: None,
            sort: None,
            composite: None,
        }
    }
}

