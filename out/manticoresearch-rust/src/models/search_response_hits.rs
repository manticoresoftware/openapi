/*
 * Manticore Search Client
 *
 * Ð¡lient for Manticore Search. 
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: info@manticoresearch.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SearchResponseHits : Object containing the search hits, which represent the documents that matched the query.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SearchResponseHits {
    /// Maximum score among the matched documents
    #[serde(rename = "max_score", skip_serializing_if = "Option::is_none")]
    pub max_score: Option<i32>,
    /// Total number of matched documents
    #[serde(rename = "total", skip_serializing_if = "Option::is_none")]
    pub total: Option<i32>,
    /// Indicates whether the total number of hits is accurate or an estimate
    #[serde(rename = "total_relation", skip_serializing_if = "Option::is_none")]
    pub total_relation: Option<String>,
    /// Array of hit objects, each representing a matched document
    #[serde(rename = "hits", skip_serializing_if = "Option::is_none")]
    pub hits: Option<Vec<crate::models::HitsHits>>,
}

impl SearchResponseHits {
    /// Object containing the search hits, which represent the documents that matched the query.
    pub fn new() -> SearchResponseHits {
        SearchResponseHits {
            max_score: None,
            total: None,
            total_relation: None,
            hits: None,
        }
    }
}

