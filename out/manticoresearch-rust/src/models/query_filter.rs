/*
 * Manticore Search Client
 *
 * Ð¡lient for Manticore Search. 
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: info@manticoresearch.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// QueryFilter : Object used to apply various conditions, such as full-text matching or attribute filtering, to a search query
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct QueryFilter {
    /// Filter object defining a query string
    #[serde(rename = "query_string", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub query_string: Option<Option<serde_json::Value>>,
    /// Filter object defining a match keyword passed as a string or in a Match object
    #[serde(rename = "match", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub r#match: Option<Option<serde_json::Value>>,
    /// Filter object defining a match phrase
    #[serde(rename = "match_phrase", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub match_phrase: Option<Option<serde_json::Value>>,
    /// Filter object to select all documents
    #[serde(rename = "match_all", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub match_all: Option<Option<serde_json::Value>>,
    #[serde(rename = "bool", skip_serializing_if = "Option::is_none")]
    pub bool: Option<Box<crate::models::BoolFilter>>,
    #[serde(rename = "equals", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub equals: Option<Option<serde_json::Value>>,
    /// Filter to match a given set of attribute values.
    #[serde(rename = "in", skip_serializing_if = "Option::is_none")]
    pub r#in: Option<serde_json::Value>,
    /// Filter to match a given range of attribute values passed in Range objects
    #[serde(rename = "range", skip_serializing_if = "Option::is_none")]
    pub range: Option<serde_json::Value>,
    #[serde(rename = "geo_distance", skip_serializing_if = "Option::is_none")]
    pub geo_distance: Option<Box<crate::models::GeoDistance>>,
}

impl QueryFilter {
    /// Object used to apply various conditions, such as full-text matching or attribute filtering, to a search query
    pub fn new() -> QueryFilter {
        QueryFilter {
            query_string: None,
            r#match: None,
            match_phrase: None,
            match_all: None,
            bool: None,
            equals: None,
            r#in: None,
            range: None,
            geo_distance: None,
        }
    }
}

