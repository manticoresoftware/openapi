/*
 * Manticore Search Client
 *
 * Ð¡lient for Manticore Search. 
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: info@manticoresearch.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AggComposite : Object to perform composite aggregation, i.e., grouping search results by multiple fields
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AggComposite {
    /// Maximum number of composite buckets in the result
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i32>,
    #[serde(rename = "sources", skip_serializing_if = "Option::is_none")]
    pub sources: Option<Vec<::std::collections::HashMap<String, crate::models::AggCompositeSource>>>,
}

impl AggComposite {
    /// Object to perform composite aggregation, i.e., grouping search results by multiple fields
    pub fn new() -> AggComposite {
        AggComposite {
            size: None,
            sources: None,
        }
    }
}

