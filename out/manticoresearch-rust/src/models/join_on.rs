/*
 * Manticore Search Client
 *
 * Ð¡lient for Manticore Search. 
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: info@manticoresearch.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct JoinOn {
    #[serde(rename = "right", skip_serializing_if = "Option::is_none")]
    pub right: Option<Box<crate::models::JoinCond>>,
    #[serde(rename = "left", skip_serializing_if = "Option::is_none")]
    pub left: Option<Box<crate::models::JoinCond>>,
    #[serde(rename = "operator", skip_serializing_if = "Option::is_none")]
    pub operator: Option<Operator>,
}

impl JoinOn {
    pub fn new() -> JoinOn {
        JoinOn {
            right: None,
            left: None,
            operator: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Operator {
    #[serde(rename = "eq")]
    Eq,
}

impl Default for Operator {
    fn default() -> Operator {
        Self::Eq
    }
}

