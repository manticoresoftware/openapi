/*
 * Manticore Search Client
 *
 * Ð¡lient for Manticore Search. 
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: info@manticoresearch.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FulltextFilter : Defines a type of filter for full-text search queries
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FulltextFilter {
    /// Filter object defining a query string
    #[serde(rename = "query_string", skip_serializing_if = "Option::is_none")]
    pub query_string: Option<String>,
    /// Filter object defining a match keyword passed as a string or in a Match object
    #[serde(rename = "match", skip_serializing_if = "Option::is_none")]
    pub r#match: Option<serde_json::Value>,
    /// Filter object defining a match phrase
    #[serde(rename = "match_phrase", skip_serializing_if = "Option::is_none")]
    pub match_phrase: Option<serde_json::Value>,
    /// Filter object to select all documents
    #[serde(rename = "match_all", skip_serializing_if = "Option::is_none")]
    pub match_all: Option<serde_json::Value>,
}

impl FulltextFilter {
    /// Defines a type of filter for full-text search queries
    pub fn new() -> FulltextFilter {
        FulltextFilter {
            query_string: None,
            r#match: None,
            match_phrase: None,
            match_all: None,
        }
    }
}

