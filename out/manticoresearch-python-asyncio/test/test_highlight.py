# coding: utf-8

"""
    Manticore Search Client

    Ð¡lient for Manticore Search. 

    The version of the OpenAPI document: 5.0.0
    Contact: info@manticoresearch.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from manticoresearch.models.highlight import Highlight

class TestHighlight(unittest.TestCase):
    """Highlight unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Highlight:
        """Test Highlight
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Highlight`
        """
        model = Highlight()
        if include_optional:
            return Highlight(
                fragment_size = None,
                limit = None,
                limit_snippets = None,
                limit_words = None,
                number_of_fragments = None,
                after_match = '</strong>',
                allow_empty = True,
                around = 56,
                before_match = '<strong>',
                emit_zones = True,
                encoder = 'default',
                fields = None,
                force_all_words = True,
                force_snippets = True,
                highlight_query = None,
                html_strip_mode = 'none',
                limits_per_field = True,
                no_match_size = 0,
                order = 'asc',
                pre_tags = '<strong>',
                post_tags = '</strong>',
                start_snippet_id = 56,
                use_boundaries = True
            )
        else:
            return Highlight(
        )
        """

    def testHighlight(self):
        """Test Highlight"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
