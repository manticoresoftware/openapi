# coding: utf-8

"""
    Manticore Search Client

    Ð¡lient for Manticore Search. 

    The version of the OpenAPI document: 5.0.0
    Contact: info@manticoresearch.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from manticoresearch.models.aggregation import Aggregation

class TestAggregation(unittest.TestCase):
    """Aggregation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Aggregation:
        """Test Aggregation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Aggregation`
        """
        model = Aggregation()
        if include_optional:
            return Aggregation(
                terms = manticoresearch.models.agg_terms.aggTerms(
                    field = 'field1', 
                    size = 1000, ),
                sort = [
                    null
                    ],
                composite = manticoresearch.models.agg_composite.aggComposite(
                    size = 1000, 
                    sources = [
                        {
                            'key' : manticoresearch.models.agg_composite_source.aggCompositeSource(
                                terms = manticoresearch.models.agg_composite_term.aggCompositeTerm(
                                    field = 'field1', ), )
                            }
                        ], )
            )
        else:
            return Aggregation(
        )
        """

    def testAggregation(self):
        """Test Aggregation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
