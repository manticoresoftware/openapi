/*
Manticore Search Client

Ð¡lient for Manticore Search. 

API version: 3.3.1
Contact: info@manticoresearch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FilterBoolean type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilterBoolean{}

// FilterBoolean Query filter
type FilterBoolean struct {
	FilterField string `json:"filter_field"`
	Operation string `json:"operation"`
	FilterValue bool `json:"filter_value"`
}

type _FilterBoolean FilterBoolean

// NewFilterBoolean instantiates a new FilterBoolean object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilterBoolean(filterField string, operation string, filterValue bool) *FilterBoolean {
	this := FilterBoolean{}
	this.FilterField = filterField
	this.Operation = operation
	this.FilterValue = filterValue
	return &this
}

// NewFilterBooleanWithDefaults instantiates a new FilterBoolean object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilterBooleanWithDefaults() *FilterBoolean {
	this := FilterBoolean{}
	return &this
}

// GetFilterField returns the FilterField field value
func (o *FilterBoolean) GetFilterField() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FilterField
}

// GetFilterFieldOk returns a tuple with the FilterField field value
// and a boolean to check if the value has been set.
func (o *FilterBoolean) GetFilterFieldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FilterField, true
}

// SetFilterField sets field value
func (o *FilterBoolean) SetFilterField(v string) {
	o.FilterField = v
}

// GetOperation returns the Operation field value
func (o *FilterBoolean) GetOperation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
func (o *FilterBoolean) GetOperationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operation, true
}

// SetOperation sets field value
func (o *FilterBoolean) SetOperation(v string) {
	o.Operation = v
}

// GetFilterValue returns the FilterValue field value
func (o *FilterBoolean) GetFilterValue() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.FilterValue
}

// GetFilterValueOk returns a tuple with the FilterValue field value
// and a boolean to check if the value has been set.
func (o *FilterBoolean) GetFilterValueOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FilterValue, true
}

// SetFilterValue sets field value
func (o *FilterBoolean) SetFilterValue(v bool) {
	o.FilterValue = v
}

func (o FilterBoolean) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilterBoolean) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["filter_field"] = o.FilterField
	toSerialize["operation"] = o.Operation
	toSerialize["filter_value"] = o.FilterValue
	return toSerialize, nil
}

func (o *FilterBoolean) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"filter_field",
		"operation",
		"filter_value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFilterBoolean := _FilterBoolean{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFilterBoolean)

	if err != nil {
		return err
	}

	*o = FilterBoolean(varFilterBoolean)

	return err
}

type NullableFilterBoolean struct {
	value *FilterBoolean
	isSet bool
}

func (v NullableFilterBoolean) Get() *FilterBoolean {
	return v.value
}

func (v *NullableFilterBoolean) Set(val *FilterBoolean) {
	v.value = val
	v.isSet = true
}

func (v NullableFilterBoolean) IsSet() bool {
	return v.isSet
}

func (v *NullableFilterBoolean) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilterBoolean(val *FilterBoolean) *NullableFilterBoolean {
	return &NullableFilterBoolean{value: val, isSet: true}
}

func (v NullableFilterBoolean) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilterBoolean) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


