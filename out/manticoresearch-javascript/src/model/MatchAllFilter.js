/**
 * Manticore Search Client
 * Ð¡lient for Manticore Search. 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: info@manticoresearch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MatchAllFilter model module.
 * @module model/MatchAllFilter
 * @version 4.0.0
 */
class MatchAllFilter {
    /**
     * Constructs a new <code>MatchAllFilter</code>.
     * @alias module:model/MatchAllFilter
     */
    constructor() { 
        
        MatchAllFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MatchAllFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MatchAllFilter} obj Optional instance to populate.
     * @return {module:model/MatchAllFilter} The populated <code>MatchAllFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MatchAllFilter();

            if (data.hasOwnProperty('match_all')) {
                obj['match_all'] = ApiClient.convertToType(data['match_all'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MatchAllFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MatchAllFilter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['match_all'] && !(typeof data['match_all'] === 'string' || data['match_all'] instanceof String)) {
            throw new Error("Expected the field `match_all` to be a primitive type in the JSON string but got " + data['match_all']);
        }

        return true;
    }


}



/**
 * @member {module:model/MatchAllFilter.MatchAllEnum} match_all
 */
MatchAllFilter.prototype['match_all'] = undefined;





/**
 * Allowed values for the <code>match_all</code> property.
 * @enum {String}
 * @readonly
 */
MatchAllFilter['MatchAllEnum'] = {

    /**
     * value: "{}"
     * @const
     */
    "{}": "{}"
};



export default MatchAllFilter;

