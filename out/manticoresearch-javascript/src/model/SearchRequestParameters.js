/**
 * Manticore Search Client
 * Ð¡lient for Manticore Search. 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: info@manticoresearch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Aggregation from './Aggregation';
import Highlight from './Highlight';
import JoinInner from './JoinInner';
import SearchRequestParametersSortInner from './SearchRequestParametersSortInner';
import SearchRequestParametersSource from './SearchRequestParametersSource';

/**
 * The SearchRequestParameters model module.
 * @module model/SearchRequestParameters
 * @version 4.0.0
 */
class SearchRequestParameters {
    /**
     * Constructs a new <code>SearchRequestParameters</code>.
     * @alias module:model/SearchRequestParameters
     * @param index {String} 
     */
    constructor(index) { 
        
        SearchRequestParameters.initialize(this, index);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, index) { 
        obj['index'] = index;
    }

    /**
     * Constructs a <code>SearchRequestParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchRequestParameters} obj Optional instance to populate.
     * @return {module:model/SearchRequestParameters} The populated <code>SearchRequestParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchRequestParameters();

            if (data.hasOwnProperty('aggs')) {
                obj['aggs'] = Aggregation.constructFromObject(data['aggs']);
            }
            if (data.hasOwnProperty('expressions')) {
                obj['expressions'] = ApiClient.convertToType(data['expressions'], {'String': 'String'});
            }
            if (data.hasOwnProperty('join')) {
                obj['join'] = ApiClient.convertToType(data['join'], [JoinInner]);
            }
            if (data.hasOwnProperty('highlight')) {
                obj['highlight'] = Highlight.constructFromObject(data['highlight']);
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'String');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('max_matches')) {
                obj['max_matches'] = ApiClient.convertToType(data['max_matches'], 'Number');
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = ApiClient.convertToType(data['options'], Object);
            }
            if (data.hasOwnProperty('profile')) {
                obj['profile'] = ApiClient.convertToType(data['profile'], 'Boolean');
            }
            if (data.hasOwnProperty('sort')) {
                obj['sort'] = ApiClient.convertToType(data['sort'], [SearchRequestParametersSortInner]);
            }
            if (data.hasOwnProperty('_source')) {
                obj['_source'] = SearchRequestParametersSource.constructFromObject(data['_source']);
            }
            if (data.hasOwnProperty('track_scores')) {
                obj['track_scores'] = ApiClient.convertToType(data['track_scores'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchRequestParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchRequestParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SearchRequestParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `aggs`
        if (data['aggs']) { // data not null
          Aggregation.validateJSON(data['aggs']);
        }
        if (data['join']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['join'])) {
                throw new Error("Expected the field `join` to be an array in the JSON data but got " + data['join']);
            }
            // validate the optional field `join` (array)
            for (const item of data['join']) {
                JoinInner.validateJSON(item);
            };
        }
        // validate the optional field `highlight`
        if (data['highlight']) { // data not null
          Highlight.validateJSON(data['highlight']);
        }
        // ensure the json data is a string
        if (data['index'] && !(typeof data['index'] === 'string' || data['index'] instanceof String)) {
            throw new Error("Expected the field `index` to be a primitive type in the JSON string but got " + data['index']);
        }
        if (data['sort']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sort'])) {
                throw new Error("Expected the field `sort` to be an array in the JSON data but got " + data['sort']);
            }
            // validate the optional field `sort` (array)
            for (const item of data['sort']) {
                SearchRequestParametersSortInner.validateJSON(item);
            };
        }
        // validate the optional field `_source`
        if (data['_source']) { // data not null
          SearchRequestParametersSource.validateJSON(data['_source']);
        }

        return true;
    }


}

SearchRequestParameters.RequiredProperties = ["index"];

/**
 * @member {module:model/Aggregation} aggs
 */
SearchRequestParameters.prototype['aggs'] = undefined;

/**
 * @member {Object.<String, String>} expressions
 */
SearchRequestParameters.prototype['expressions'] = undefined;

/**
 * @member {Array.<module:model/JoinInner>} join
 */
SearchRequestParameters.prototype['join'] = undefined;

/**
 * @member {module:model/Highlight} highlight
 */
SearchRequestParameters.prototype['highlight'] = undefined;

/**
 * @member {String} index
 */
SearchRequestParameters.prototype['index'] = undefined;

/**
 * @member {Number} limit
 */
SearchRequestParameters.prototype['limit'] = undefined;

/**
 * @member {Number} max_matches
 */
SearchRequestParameters.prototype['max_matches'] = undefined;

/**
 * @member {Number} offset
 */
SearchRequestParameters.prototype['offset'] = undefined;

/**
 * @member {Object} options
 */
SearchRequestParameters.prototype['options'] = undefined;

/**
 * @member {Boolean} profile
 */
SearchRequestParameters.prototype['profile'] = undefined;

/**
 * @member {Array.<module:model/SearchRequestParametersSortInner>} sort
 */
SearchRequestParameters.prototype['sort'] = undefined;

/**
 * @member {module:model/SearchRequestParametersSource} _source
 */
SearchRequestParameters.prototype['_source'] = undefined;

/**
 * @member {Boolean} track_scores
 */
SearchRequestParameters.prototype['track_scores'] = undefined;






export default SearchRequestParameters;

