/*
Manticore Search Client

Ð¡lient for Manticore Search. 

API version: 5.0.0
Contact: info@manticoresearch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RangeFilterRangeValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RangeFilterRangeValue{}

// RangeFilterRangeValue struct for RangeFilterRangeValue
type RangeFilterRangeValue struct {
	Lt *EqualsFilterEquals `json:"lt,omitempty"`
	Gt *EqualsFilterEquals `json:"gt,omitempty"`
	Lte *EqualsFilterEquals `json:"lte,omitempty"`
	Gte *EqualsFilterEquals `json:"gte,omitempty"`
}

// NewRangeFilterRangeValue instantiates a new RangeFilterRangeValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRangeFilterRangeValue() *RangeFilterRangeValue {
	this := RangeFilterRangeValue{}
	return &this
}

// NewRangeFilterRangeValueWithDefaults instantiates a new RangeFilterRangeValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRangeFilterRangeValueWithDefaults() *RangeFilterRangeValue {
	this := RangeFilterRangeValue{}
	return &this
}

// GetLt returns the Lt field value if set, zero value otherwise.
func (o *RangeFilterRangeValue) GetLt() EqualsFilterEquals {
	if o == nil || IsNil(o.Lt) {
		var ret EqualsFilterEquals
		return ret
	}
	return *o.Lt
}

// GetLtOk returns a tuple with the Lt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangeFilterRangeValue) GetLtOk() (*EqualsFilterEquals, bool) {
	if o == nil || IsNil(o.Lt) {
		return nil, false
	}
	return o.Lt, true
}

// HasLt returns a boolean if a field has been set.
func (o *RangeFilterRangeValue) HasLt() bool {
	if o != nil && !IsNil(o.Lt) {
		return true
	}

	return false
}

// SetLt gets a reference to the given EqualsFilterEquals and assigns it to the Lt field.
func (o *RangeFilterRangeValue) SetLt(v EqualsFilterEquals) {
	o.Lt = &v
}

// GetGt returns the Gt field value if set, zero value otherwise.
func (o *RangeFilterRangeValue) GetGt() EqualsFilterEquals {
	if o == nil || IsNil(o.Gt) {
		var ret EqualsFilterEquals
		return ret
	}
	return *o.Gt
}

// GetGtOk returns a tuple with the Gt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangeFilterRangeValue) GetGtOk() (*EqualsFilterEquals, bool) {
	if o == nil || IsNil(o.Gt) {
		return nil, false
	}
	return o.Gt, true
}

// HasGt returns a boolean if a field has been set.
func (o *RangeFilterRangeValue) HasGt() bool {
	if o != nil && !IsNil(o.Gt) {
		return true
	}

	return false
}

// SetGt gets a reference to the given EqualsFilterEquals and assigns it to the Gt field.
func (o *RangeFilterRangeValue) SetGt(v EqualsFilterEquals) {
	o.Gt = &v
}

// GetLte returns the Lte field value if set, zero value otherwise.
func (o *RangeFilterRangeValue) GetLte() EqualsFilterEquals {
	if o == nil || IsNil(o.Lte) {
		var ret EqualsFilterEquals
		return ret
	}
	return *o.Lte
}

// GetLteOk returns a tuple with the Lte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangeFilterRangeValue) GetLteOk() (*EqualsFilterEquals, bool) {
	if o == nil || IsNil(o.Lte) {
		return nil, false
	}
	return o.Lte, true
}

// HasLte returns a boolean if a field has been set.
func (o *RangeFilterRangeValue) HasLte() bool {
	if o != nil && !IsNil(o.Lte) {
		return true
	}

	return false
}

// SetLte gets a reference to the given EqualsFilterEquals and assigns it to the Lte field.
func (o *RangeFilterRangeValue) SetLte(v EqualsFilterEquals) {
	o.Lte = &v
}

// GetGte returns the Gte field value if set, zero value otherwise.
func (o *RangeFilterRangeValue) GetGte() EqualsFilterEquals {
	if o == nil || IsNil(o.Gte) {
		var ret EqualsFilterEquals
		return ret
	}
	return *o.Gte
}

// GetGteOk returns a tuple with the Gte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangeFilterRangeValue) GetGteOk() (*EqualsFilterEquals, bool) {
	if o == nil || IsNil(o.Gte) {
		return nil, false
	}
	return o.Gte, true
}

// HasGte returns a boolean if a field has been set.
func (o *RangeFilterRangeValue) HasGte() bool {
	if o != nil && !IsNil(o.Gte) {
		return true
	}

	return false
}

// SetGte gets a reference to the given EqualsFilterEquals and assigns it to the Gte field.
func (o *RangeFilterRangeValue) SetGte(v EqualsFilterEquals) {
	o.Gte = &v
}

func (o RangeFilterRangeValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RangeFilterRangeValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Lt) {
		toSerialize["lt"] = o.Lt
	}
	if !IsNil(o.Gt) {
		toSerialize["gt"] = o.Gt
	}
	if !IsNil(o.Lte) {
		toSerialize["lte"] = o.Lte
	}
	if !IsNil(o.Gte) {
		toSerialize["gte"] = o.Gte
	}
	return toSerialize, nil
}

type NullableRangeFilterRangeValue struct {
	value *RangeFilterRangeValue
	isSet bool
}

func (v NullableRangeFilterRangeValue) Get() *RangeFilterRangeValue {
	return v.value
}

func (v *NullableRangeFilterRangeValue) Set(val *RangeFilterRangeValue) {
	v.value = val
	v.isSet = true
}

func (v NullableRangeFilterRangeValue) IsSet() bool {
	return v.isSet
}

func (v *NullableRangeFilterRangeValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRangeFilterRangeValue(val *RangeFilterRangeValue) *NullableRangeFilterRangeValue {
	return &NullableRangeFilterRangeValue{value: val, isSet: true}
}

func (v NullableRangeFilterRangeValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRangeFilterRangeValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


