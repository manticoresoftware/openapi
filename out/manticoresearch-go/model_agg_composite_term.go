/*
Manticore Search Client

Ð¡lient for Manticore Search. 

API version: 5.0.0
Contact: info@manticoresearch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	_"bytes"
	_"fmt"
)

// checks if the AggCompositeTerm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AggCompositeTerm{}

// AggCompositeTerm Object representing a term to be used in composite aggregation.
type AggCompositeTerm struct {
	// Name of field to operate with
	Field string
}

type _AggCompositeTerm AggCompositeTerm

// NewAggCompositeTerm instantiates a new AggCompositeTerm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAggCompositeTerm(field string) *AggCompositeTerm {
	this := AggCompositeTerm{}
	this.Field = field
	return &this
}

// NewAggCompositeTermWithDefaults instantiates a new AggCompositeTerm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAggCompositeTermWithDefaults() *AggCompositeTerm {
	this := AggCompositeTerm{}
	return &this
}

// GetField returns the Field field value
func (o *AggCompositeTerm) GetField() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Field
}

// GetFieldOk returns a tuple with the Field field value
// and a boolean to check if the value has been set.
func (o *AggCompositeTerm) GetFieldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Field, true
}

// SetField sets field value
func (o *AggCompositeTerm) SetField(v string) {
	o.Field = v
}

func (o AggCompositeTerm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AggCompositeTerm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["field"] = o.Field
	return toSerialize, nil
}

type NullableAggCompositeTerm struct {
	value *AggCompositeTerm
	isSet bool
}

func (v NullableAggCompositeTerm) Get() *AggCompositeTerm {
	return v.value
}

func (v *NullableAggCompositeTerm) Set(val *AggCompositeTerm) {
	v.value = val
	v.isSet = true
}

func (v NullableAggCompositeTerm) IsSet() bool {
	return v.isSet
}

func (v *NullableAggCompositeTerm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAggCompositeTerm(val *AggCompositeTerm) *NullableAggCompositeTerm {
	return &NullableAggCompositeTerm{value: val, isSet: true}
}

func (v NullableAggCompositeTerm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAggCompositeTerm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


