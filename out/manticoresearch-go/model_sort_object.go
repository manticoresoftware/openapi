/*
Manticore Search Client

Ð¡lient for Manticore Search. 

API version: 5.0.0
Contact: info@manticoresearch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SortObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SortObject{}

// SortObject Request object with defined properties used for sorting
type SortObject struct {
	Order *string `json:"order,omitempty"`
	Mode *string `json:"mode,omitempty"`
}

// NewSortObject instantiates a new SortObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSortObject() *SortObject {
	this := SortObject{}
	return &this
}

// NewSortObjectWithDefaults instantiates a new SortObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSortObjectWithDefaults() *SortObject {
	this := SortObject{}
	return &this
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *SortObject) GetOrder() string {
	if o == nil || IsNil(o.Order) {
		var ret string
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SortObject) GetOrderOk() (*string, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *SortObject) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given string and assigns it to the Order field.
func (o *SortObject) SetOrder(v string) {
	o.Order = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *SortObject) GetMode() string {
	if o == nil || IsNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SortObject) GetModeOk() (*string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *SortObject) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *SortObject) SetMode(v string) {
	o.Mode = &v
}

func (o SortObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SortObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	return toSerialize, nil
}

type NullableSortObject struct {
	value *SortObject
	isSet bool
}

func (v NullableSortObject) Get() *SortObject {
	return v.value
}

func (v *NullableSortObject) Set(val *SortObject) {
	v.value = val
	v.isSet = true
}

func (v NullableSortObject) IsSet() bool {
	return v.isSet
}

func (v *NullableSortObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSortObject(val *SortObject) *NullableSortObject {
	return &NullableSortObject{value: val, isSet: true}
}

func (v NullableSortObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSortObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


