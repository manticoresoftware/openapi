/*
Manticore Search Client

Ð¡lient for Manticore Search. 

API version: 5.0.0
Contact: info@manticoresearch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EqualsFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EqualsFilter{}

// EqualsFilter struct for EqualsFilter
type EqualsFilter struct {
	Equals *EqualsFilterEquals `json:"equals,omitempty"`
}

// NewEqualsFilter instantiates a new EqualsFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEqualsFilter() *EqualsFilter {
	this := EqualsFilter{}
	return &this
}

// NewEqualsFilterWithDefaults instantiates a new EqualsFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEqualsFilterWithDefaults() *EqualsFilter {
	this := EqualsFilter{}
	return &this
}

// GetEquals returns the Equals field value if set, zero value otherwise.
func (o *EqualsFilter) GetEquals() EqualsFilterEquals {
	if o == nil || IsNil(o.Equals) {
		var ret EqualsFilterEquals
		return ret
	}
	return *o.Equals
}

// GetEqualsOk returns a tuple with the Equals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EqualsFilter) GetEqualsOk() (*EqualsFilterEquals, bool) {
	if o == nil || IsNil(o.Equals) {
		return nil, false
	}
	return o.Equals, true
}

// HasEquals returns a boolean if a field has been set.
func (o *EqualsFilter) HasEquals() bool {
	if o != nil && !IsNil(o.Equals) {
		return true
	}

	return false
}

// SetEquals gets a reference to the given EqualsFilterEquals and assigns it to the Equals field.
func (o *EqualsFilter) SetEquals(v EqualsFilterEquals) {
	o.Equals = &v
}

func (o EqualsFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EqualsFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Equals) {
		toSerialize["equals"] = o.Equals
	}
	return toSerialize, nil
}

type NullableEqualsFilter struct {
	value *EqualsFilter
	isSet bool
}

func (v NullableEqualsFilter) Get() *EqualsFilter {
	return v.value
}

func (v *NullableEqualsFilter) Set(val *EqualsFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableEqualsFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableEqualsFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEqualsFilter(val *EqualsFilter) *NullableEqualsFilter {
	return &NullableEqualsFilter{value: val, isSet: true}
}

func (v NullableEqualsFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEqualsFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


