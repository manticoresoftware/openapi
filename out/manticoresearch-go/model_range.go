/*
Manticore Search Client

Ð¡lient for Manticore Search. 

API version: 5.0.0
Contact: info@manticoresearch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelRange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelRange{}

// ModelRange Filter helper object defining the 'range' condition
type ModelRange struct {
	Lt interface{}
	Lte interface{}
	Gt interface{}
	Gte interface{}
}

// NewModelRange instantiates a new ModelRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelRange() *ModelRange {
	this := ModelRange{}
	return &this
}

// NewModelRangeWithDefaults instantiates a new ModelRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelRangeWithDefaults() *ModelRange {
	this := ModelRange{}
	return &this
}

// GetLt returns the Lt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelRange) GetLt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Lt
}

// GetLtOk returns a tuple with the Lt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelRange) GetLtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Lt) {
		return nil, false
	}
	return &o.Lt, true
}

// HasLt returns a boolean if a field has been set.
func (o *ModelRange) HasLt() bool {
	if o != nil && !IsNil(o.Lt) {
		return true
	}

	return false
}

// SetLt gets a reference to the given interface{} and assigns it to the Lt field.
func (o *ModelRange) SetLt(v interface{}) {
	o.Lt = v
}

// GetLte returns the Lte field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelRange) GetLte() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Lte
}

// GetLteOk returns a tuple with the Lte field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelRange) GetLteOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Lte) {
		return nil, false
	}
	return &o.Lte, true
}

// HasLte returns a boolean if a field has been set.
func (o *ModelRange) HasLte() bool {
	if o != nil && !IsNil(o.Lte) {
		return true
	}

	return false
}

// SetLte gets a reference to the given interface{} and assigns it to the Lte field.
func (o *ModelRange) SetLte(v interface{}) {
	o.Lte = v
}

// GetGt returns the Gt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelRange) GetGt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Gt
}

// GetGtOk returns a tuple with the Gt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelRange) GetGtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Gt) {
		return nil, false
	}
	return &o.Gt, true
}

// HasGt returns a boolean if a field has been set.
func (o *ModelRange) HasGt() bool {
	if o != nil && !IsNil(o.Gt) {
		return true
	}

	return false
}

// SetGt gets a reference to the given interface{} and assigns it to the Gt field.
func (o *ModelRange) SetGt(v interface{}) {
	o.Gt = v
}

// GetGte returns the Gte field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelRange) GetGte() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Gte
}

// GetGteOk returns a tuple with the Gte field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelRange) GetGteOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Gte) {
		return nil, false
	}
	return &o.Gte, true
}

// HasGte returns a boolean if a field has been set.
func (o *ModelRange) HasGte() bool {
	if o != nil && !IsNil(o.Gte) {
		return true
	}

	return false
}

// SetGte gets a reference to the given interface{} and assigns it to the Gte field.
func (o *ModelRange) SetGte(v interface{}) {
	o.Gte = v
}

func (o ModelRange) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelRange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Lt != nil {
		toSerialize["lt"] = o.Lt
	}
	if o.Lte != nil {
		toSerialize["lte"] = o.Lte
	}
	if o.Gt != nil {
		toSerialize["gt"] = o.Gt
	}
	if o.Gte != nil {
		toSerialize["gte"] = o.Gte
	}
	return toSerialize, nil
}

type NullableModelRange struct {
	value *ModelRange
	isSet bool
}

func (v NullableModelRange) Get() *ModelRange {
	return v.value
}

func (v *NullableModelRange) Set(val *ModelRange) {
	v.value = val
	v.isSet = true
}

func (v NullableModelRange) IsSet() bool {
	return v.isSet
}

func (v *NullableModelRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelRange(val *ModelRange) *NullableModelRange {
	return &NullableModelRange{value: val, isSet: true}
}

func (v NullableModelRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


