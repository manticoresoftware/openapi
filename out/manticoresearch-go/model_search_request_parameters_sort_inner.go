/*
Manticore Search Client

Ð¡lient for Manticore Search. 

API version: 5.0.0
Contact: info@manticoresearch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"gopkg.in/validator.v2"
	"fmt"
)

// SearchRequestParametersSortInner - struct for SearchRequestParametersSortInner
type SearchRequestParametersSortInner struct {
	SortObject *SortObject
	MapmapOfStringstring *map[string]string
	String *string
}

// SortObjectAsSearchRequestParametersSortInner is a convenience function that returns SortObject wrapped in SearchRequestParametersSortInner
func SortObjectAsSearchRequestParametersSortInner(v *SortObject) SearchRequestParametersSortInner {
	return SearchRequestParametersSortInner{
		SortObject: v,
	}
}

// map[string]stringAsSearchRequestParametersSortInner is a convenience function that returns map[string]string wrapped in SearchRequestParametersSortInner
func MapmapOfStringstringAsSearchRequestParametersSortInner(v *map[string]string) SearchRequestParametersSortInner {
	return SearchRequestParametersSortInner{
		MapmapOfStringstring: v,
	}
}

// stringAsSearchRequestParametersSortInner is a convenience function that returns string wrapped in SearchRequestParametersSortInner
func StringAsSearchRequestParametersSortInner(v *string) SearchRequestParametersSortInner {
	return SearchRequestParametersSortInner{
		String: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *SearchRequestParametersSortInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into SortObject
	err = newStrictDecoder(data).Decode(&dst.SortObject)
	if err == nil {
		jsonSortObject, _ := json.Marshal(dst.SortObject)
		if string(jsonSortObject) == "{}" { // empty struct
			dst.SortObject = nil
		} else {
			if err = validator.Validate(dst.SortObject); err != nil {
				dst.SortObject = nil
			} else {
				match++
			}
		}
	} else {
		dst.SortObject = nil
	}

	// try to unmarshal data into MapmapOfStringstring
	err = newStrictDecoder(data).Decode(&dst.MapmapOfStringstring)
	if err == nil {
		jsonMapmapOfStringstring, _ := json.Marshal(dst.MapmapOfStringstring)
		if string(jsonMapmapOfStringstring) == "{}" { // empty struct
			dst.MapmapOfStringstring = nil
		} else {
			if err = validator.Validate(dst.MapmapOfStringstring); err != nil {
				dst.MapmapOfStringstring = nil
			} else {
				match++
			}
		}
	} else {
		dst.MapmapOfStringstring = nil
	}

	// try to unmarshal data into String
	err = newStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			if err = validator.Validate(dst.String); err != nil {
				dst.String = nil
			} else {
				match++
			}
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.SortObject = nil
		dst.MapmapOfStringstring = nil
		dst.String = nil

		return fmt.Errorf("data matches more than one schema in oneOf(SearchRequestParametersSortInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(SearchRequestParametersSortInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src SearchRequestParametersSortInner) MarshalJSON() ([]byte, error) {
	if src.SortObject != nil {
		return json.Marshal(&src.SortObject)
	}

	if src.MapmapOfStringstring != nil {
		return json.Marshal(&src.MapmapOfStringstring)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *SearchRequestParametersSortInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.SortObject != nil {
		return obj.SortObject
	}

	if obj.MapmapOfStringstring != nil {
		return obj.MapmapOfStringstring
	}

	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

type NullableSearchRequestParametersSortInner struct {
	value *SearchRequestParametersSortInner
	isSet bool
}

func (v NullableSearchRequestParametersSortInner) Get() *SearchRequestParametersSortInner {
	return v.value
}

func (v *NullableSearchRequestParametersSortInner) Set(val *SearchRequestParametersSortInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchRequestParametersSortInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchRequestParametersSortInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchRequestParametersSortInner(val *SearchRequestParametersSortInner) *NullableSearchRequestParametersSortInner {
	return &NullableSearchRequestParametersSortInner{value: val, isSet: true}
}

func (v NullableSearchRequestParametersSortInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchRequestParametersSortInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


